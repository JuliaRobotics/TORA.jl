/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x10000049 generated on 2017-01-02 18:31:17.817376
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x10000049);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((0.433012903784321)*x3);
x13=((0.866025201892125)*x7);
x14=((0.161858921054852)*x2);
x15=((0.749999650312296)*x2);
x16=((0.343510078378994)*x2);
x17=((0.749999650312296)*x3);
x18=((0.500000349687582)*x5);
x19=((0.343510078378994)*x3);
x20=((0.866025201892125)*x3);
x21=((1.0)*x7);
x22=((1.0)*x5);
x23=((0.161858921054852)*x3);
x24=((0.0877970775544225)*x5);
x25=((1.0)*x8);
x26=((0.250000349687704)*x3);
x27=((1.0)*x3);
x28=((0.866025201892125)*x5);
x29=((0.152068857276033)*x3);
x30=((0.500000349687582)*x3);
x31=((0.17559403230274)*x7);
x32=((0.433012903784321)*x2);
x33=((0.500000349687582)*x2);
x34=((0.500000349687582)*x7);
x35=((0.17559403230274)*x5);
x36=((1.0)*x9);
x37=((1.0)*x2);
x38=(x0*x4);
x39=(x1*x6);
x40=(x1*x2);
x41=((-1.0)*x8);
x42=(x5*x9);
x43=((-1.0)*x5);
x44=((-0.500000349687582)*x7);
x45=(x0*x1);
x46=(x4*x6);
x47=(x3*x4);
x48=(x2*x4);
x49=((-1.0)*x9);
x50=((-1.0)*x7);
x51=(x5*x6);
x52=(x0*x5);
x53=((0.433012903784321)*x51);
x54=(x0*x21);
x55=((0.433012903784321)*x52);
x56=(x30*x4);
x57=(x1*x33);
x58=(x32*x4);
x59=(x1*x12);
x60=(x1*x20);
x61=((0.866025201892125)*x48);
x62=((0.749999650312296)*x45);
x63=(x12*x38);
x64=(x32*x45);
x65=(x32*x39);
x66=(x12*x46);
x67=(x56+(((-1.0)*x57)));
x68=(x57+(((-1.0)*x56)));
x69=(((x1*x15))+(((-1.0)*x17*x4)));
x70=(x59+x58);
x71=(x60+x61);
x72=(x67*x7);
x73=(x5*x8*(((((-1.0)*x1*x37))+x47)));
x74=(x42*x68);
x75=((((-1.0)*x27*x45))+(((-1.0)*x37*x38)));
x76=(((x30*x45))+((x33*x38)));
x77=((((-1.0)*x17*x45))+(((-1.0)*x15*x38)));
x78=((((-1.0)*x27*x39))+(((-1.0)*x37*x46)));
x79=(((x30*x39))+((x33*x46)));
x80=((((-1.0)*x15*x46))+(((-1.0)*x17*x39)));
x81=(x7*x79);
x82=(x5*x75);
x83=(x18*x78);
x84=(((x34*x6))+((x18*x75)));
x85=((((-1.0)*x34*x76))+(((-0.250000349687704)*x51))+x64+(((-1.0)*x63)));
x86=((((-1.0)*x20*x46))+((x0*x18))+(((0.866025201892125)*x2*x39))+(((-1.0)*x21*x79)));
x87=((((-1.0)*x34*x79))+(((0.250000349687704)*x52))+x65+(((-1.0)*x66)));
x88=(x9*(((((-1.0)*x20*x38))+(((-1.0)*x18*x6))+(((-1.0)*x21*x76))+(((0.866025201892125)*x0*x40)))));
eerot[0]=(((x10*((((x8*(((((-1.0)*x21*x6))+(((-1.0)*x22*x75))))))+x88))))+((x11*(((((-0.749999650312296)*x51))+((x84*x9))+x63+((x7*x77))+(((-0.433012903784321)*x0*x40))+((x8*x85)))))));
eerot[1]=(((x10*(((((-1.0)*x36*x84))+(((-1.0)*x21*x77))+x64+(((-1.0)*x25*x85))+(((0.749999650312296)*x51))+(((-1.0)*x63))))))+((x11*((((x8*((((x43*x75))+((x50*x6))))))+x88)))));
IkReal x89=((1.0)*x38);
eerot[2]=(((x7*((((x12*x45))+((x32*x38))))))+((x8*(((((-1.0)*x17*x89))+((x15*x45))+(((-1.0)*x13*x76))+(((-1.0)*x53))))))+x53+((x9*((((x28*x75))+((x13*x6))))))+(((0.250000349687704)*x0*x40))+(((-1.0)*x26*x89)));
IkReal x90=((1.0)*x38);
eetrans[0]=(((x7*((((x23*x45))+((x14*x38))))))+((x16*x45))+(((-0.0098)*x6))+(((0.41)*x38))+((x9*((((x31*x6))+((x35*x75))))))+(((-1.0)*x19*x90))+(((0.161858921054852)*x51))+((x8*(((((-1.0)*x29*x90))+(((0.152068857276033)*x0*x40))+(((-1.0)*x24*x6))+(((-1.0)*x31*x76)))))));
eerot[3]=((((-1.0)*x10*((((x36*x86))+((x25*((x54+(((-1.0)*x22*x78))))))))))+((x11*(((((-0.749999650312296)*x52))+((x50*x80))+((x41*x87))+((x49*((x83+((x0*x44))))))+(((-0.433012903784321)*x3*x46))+x65)))));
eerot[4]=(((x10*((x66+((x9*(((((-1.0)*x0*x34))+x83))))+((x8*x87))+(((0.749999650312296)*x52))+((x7*x80))+(((-1.0)*x65))))))+((x11*((((x49*x86))+((x41*((((x43*x78))+x54)))))))));
IkReal x91=((1.0)*x39);
eerot[5]=(((x26*x46))+((x7*(((((-1.0)*x32*x46))+(((-1.0)*x12*x91))))))+(((-0.250000349687704)*x2*x39))+((x9*((((x0*x13))+(((-1.0)*x28*x78))))))+x55+((x8*((((x17*x46))+((x13*x79))+(((-1.0)*x15*x91))+(((-1.0)*x55)))))));
IkReal x92=((1.0)*x39);
eetrans[1]=(((x8*((((x29*x46))+(((-1.0)*x0*x24))+(((-0.152068857276033)*x2*x39))+((x31*x79))))))+(((-0.41)*x46))+((x19*x46))+(((-0.0098)*x0))+((x9*(((((-1.0)*x35*x78))+((x0*x31))))))+(((0.161858921054852)*x52))+((x7*(((((-1.0)*x14*x46))+(((-1.0)*x23*x92))))))+(((-1.0)*x16*x92)));
eerot[6]=(((x11*((((x69*x7))+((x8*(((((-1.0)*x34*x67))+x70))))+x74+(((-1.0)*x70))))))+((x10*((((x9*((((x50*x67))+x71))))+x73)))));
eerot[7]=(((x11*((((x9*((x71+(((-1.0)*x21*x67))))))+x73))))+((x10*((((x41*((((x44*x67))+x70))))+((x50*x69))+x70+(((-1.0)*x74)))))));
eerot[8]=(((x8*((((x1*x17))+(((-1.0)*x13*x67))+((x15*x4))))))+((x7*(((((-1.0)*x1*x32))+((x12*x4))))))+((x1*x26))+(((0.250000349687704)*x48))+((x42*(((((0.866025201892125)*x40))+(((-1.0)*x20*x4)))))));
eetrans[2]=((0.2755)+((x8*((((x1*x29))+(((0.152068857276033)*x48))+(((-1.0)*x31*x67))))))+((x1*x19))+((x7*(((((-1.0)*x1*x14))+((x23*x4))))))+((x42*(((((-0.17559403230274)*x47))+(((0.17559403230274)*x40))))))+(((-0.41)*x1))+((x16*x4)));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j2,cj2,sj2,htj2,j2mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=((-1.0)*r01);
new_r02=r02;
new_px=((((0.224138935655027)*r02))+(((-1.0)*px)));
new_r10=((-1.0)*r10);
new_r11=r11;
new_r12=((-1.0)*r12);
new_py=(py+(((-0.224138935655027)*r12)));
new_r20=r20;
new_r21=((-1.0)*r21);
new_r22=r22;
new_pz=((0.2755)+(((0.224138935655027)*r22))+(((-1.0)*pz)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x93=((1.0)*px);
IkReal x94=((1.0)*pz);
IkReal x95=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x95))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x94)));
rxp0_2=((((-1.0)*r10*x93))+((py*r00)));
rxp1_0=((((-1.0)*r21*x95))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x94)));
rxp1_2=((((-1.0)*r11*x93))+((py*r01)));
rxp2_0=((((-1.0)*r22*x95))+((pz*r12)));
rxp2_1=(((px*r22))+(((-1.0)*r02*x94)));
rxp2_2=((((-1.0)*r12*x93))+((py*r02)));
IkReal op[72], zeror[48];
int numroots;;
IkReal x96=((0.121461423340705)*npx);
IkReal x97=((0.2225808)*npz);
IkReal x98=((0.41)*pp);
IkReal x99=((0.0607307116703524)*npy);
IkReal x100=((0.0740618435004298)*r20);
IkReal x101=((0.0098)*r02);
IkReal x102=((1.0)*rxp2_2);
IkReal x103=((0.14812368700086)*r21);
IkReal x104=((0.710313086556749)*npy);
IkReal x105=((0.355156543278374)*npx);
IkReal x106=((0.0169740939570857)*r00);
IkReal x107=((1.73205040378425)*rxp0_2);
IkReal x108=((0.128278845939925)*r22);
IkReal x109=((0.0370300258978623)*r21);
IkReal x110=((0.0339481879141713)*r11);
IkReal x111=((3.4641008075685)*rxp1_2);
IkReal x112=((0.0740600517957246)*r20);
IkReal x113=((0.0339481879141713)*r01);
IkReal x114=((0.0169740939570857)*r10);
IkReal x115=((0.476618215006745)*npx);
IkReal x116=((0.0849937170959635)*npz);
IkReal x117=((0.238309107503372)*npy);
IkReal x118=((0.499999300624592)*rxp2_2);
IkReal x119=((0.00489999314612101)*r02);
IkReal x120=((0.00848705291417269)*r01);
IkReal x121=((0.0555458958510542)*r20);
IkReal x122=((0.866025807568642)*rxp1_2);
IkReal x123=((0.00489999314612101)*r12);
IkReal x124=((0.00848705291417269)*r11);
IkReal x125=((0.0169741058283454)*r10);
IkReal x126=((1.73205161513728)*rxp0_2);
IkReal x127=((0.111091791702108)*r21);
IkReal x128=((0.0169741058283454)*r00);
IkReal x129=((-0.0098)*r12);
IkReal x130=((-0.355156543278374)*npx);
IkReal x131=((-0.0169740939570857)*r10);
IkReal x132=((((-1.0)*x124))+x123);
IkReal x133=((0.0299267406287546)+x116);
IkReal x134=(x124+x123);
IkReal x135=(x112+x111);
IkReal x136=(x122+x121);
IkReal x137=(x106+x107);
IkReal x138=(x101+x102);
IkReal x139=(x109+x106);
IkReal x140=(x120+x118);
IkReal x141=(x98+x97);
IkReal x142=((0.0365027959923003)+(((-1.0)*x141))+x99);
IkReal x143=((0.0365027959923003)+(((-1.0)*x141))+(((-1.0)*x99)));
IkReal x144=(x133+x117+(((-1.0)*x98)));
IkReal x145=((((-1.0)*x117))+x133+(((-1.0)*x98)));
op[0]=x142;
op[1]=x142;
op[2]=x96;
op[3]=x96;
op[4]=x143;
op[5]=x143;
op[6]=((((-1.0)*x100))+(((-1.0)*x138)));
op[7]=x129;
op[8]=x103;
op[9]=0;
op[10]=(x100+(((-1.0)*x138)));
op[11]=x129;
op[12]=x129;
op[13]=((((-1.0)*x100))+(((-1.0)*x102))+x101);
op[14]=0;
op[15]=x103;
op[16]=x129;
op[17]=((((-1.0)*x102))+x100+x101);
op[18]=0;
op[19]=x142;
op[20]=0;
op[21]=x96;
op[22]=0;
op[23]=x143;
op[24]=x130;
op[25]=x130;
op[26]=x104;
op[27]=x104;
op[28]=x105;
op[29]=x105;
op[30]=(x108+x109+(((-1.0)*x137)));
op[31]=x131;
op[32]=(x135+x113);
op[33]=x110;
op[34]=((((-1.0)*x109))+x137+x108);
op[35]=x114;
op[36]=x131;
op[37]=((((-1.0)*x107))+x139+x108);
op[38]=x110;
op[39]=((((-1.0)*x113))+x135);
op[40]=x114;
op[41]=(x108+x107+(((-1.0)*x139)));
op[42]=0;
op[43]=x130;
op[44]=0;
op[45]=x104;
op[46]=0;
op[47]=x105;
op[48]=x144;
op[49]=x144;
op[50]=x115;
op[51]=x115;
op[52]=x145;
op[53]=x145;
op[54]=(x140+x136+x119);
op[55]=x134;
op[56]=((((-1.0)*x127))+x126+x128);
op[57]=x125;
op[58]=((((-1.0)*x120))+x119+x118+(((-1.0)*x136)));
op[59]=x132;
op[60]=x134;
op[61]=((((-1.0)*x119))+(((-1.0)*x120))+x136+x118);
op[62]=x125;
op[63]=((((-1.0)*x128))+(((-1.0)*x127))+x126);
op[64]=x132;
op[65]=((((-1.0)*x119))+x140+(((-1.0)*x136)));
op[66]=0;
op[67]=x144;
op[68]=0;
op[69]=x115;
op[70]=0;
op[71]=x145;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j0array[16], cj0array[16], sj0array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj0 = zeror[ij4+2];
if(isnan(htj4)||isnan(htj5)||isnan(htj0)){
continue;
}
j4array[numsolutions]=((2.0)*(atan(htj4)));
j5array[numsolutions]=((2.0)*(atan(htj5)));
j0array[numsolutions]=((2.0)*(atan(htj0)));
if(isinf(htj4)){
cj4array[numsolutions] = IKcos(j4array[numsolutions]);
sj4array[numsolutions] = IKsin(j4array[numsolutions]);
}
else{
IkReal x146=htj4*htj4;
CheckValue<IkReal> x147=IKPowWithIntegerCheck(((1.0)+x146),-1);
if(!x147.valid){
continue;
}
cj4array[numsolutions]=((x147.value)*(((1.0)+(((-1.0)*x146)))));
CheckValue<IkReal> x148=IKPowWithIntegerCheck(((1.0)+(htj4*htj4)),-1);
if(!x148.valid){
continue;
}
sj4array[numsolutions]=((2.0)*htj4*(x148.value));
}
if(isinf(htj5)){
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
}
else{
IkReal x149=htj5*htj5;
CheckValue<IkReal> x150=IKPowWithIntegerCheck(((1.0)+x149),-1);
if(!x150.valid){
continue;
}
cj5array[numsolutions]=((x150.value)*(((1.0)+(((-1.0)*x149)))));
CheckValue<IkReal> x151=IKPowWithIntegerCheck(((1.0)+(htj5*htj5)),-1);
if(!x151.valid){
continue;
}
sj5array[numsolutions]=((2.0)*htj5*(x151.value));
}
if(isinf(htj0)){
cj0array[numsolutions] = IKcos(j0array[numsolutions]);
sj0array[numsolutions] = IKsin(j0array[numsolutions]);
}
else{
IkReal x152=htj0*htj0;
CheckValue<IkReal> x153=IKPowWithIntegerCheck(((1.0)+x152),-1);
if(!x153.valid){
continue;
}
cj0array[numsolutions]=((x153.value)*(((1.0)+(((-1.0)*x152)))));
CheckValue<IkReal> x154=IKPowWithIntegerCheck(((1.0)+(htj0*htj0)),-1);
if(!x154.valid){
continue;
}
sj0array[numsolutions]=((2.0)*htj0*(x154.value));
}
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj0 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij0[0] = 0; _ij0[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj0array[ij4]-cj0array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij4]-sj0array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij0[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j0 = j0array[ij4]; cj0 = cj0array[ij4]; sj0 = sj0array[ij4];

innerfn(solutions);
    }
}
return solutions.GetNumSolutions()>0;
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
{
IkReal j3eval[4];
IkReal x155=(sj4*sj5);
IkReal x156=(cj5*r01);
IkReal x157=(cj4*r02);
IkReal x158=(r00*sj5);
IkReal x159=(cj0*r21);
IkReal x160=((1.99999860125065)*cj4);
IkReal x161=((0.433012903784321)*cj4);
IkReal x162=((1.73204919243206)*cj4);
IkReal x163=(cj0*r20);
IkReal x164=(cj5*sj4);
j3eval[0]=((((-2.99999440500457)*x157))+(((-1.0)*x158*x162))+(((-1.0)*r02))+(((1.73204919243206)*x156))+(((1.73204919243206)*x158))+(((-3.46409596216145)*r00*x164))+(((3.46409596216145)*r01*x155))+(((-1.0)*x156*x162)));
j3eval[1]=1.87500043710948e-9;
j3eval[2]=((((-1.0)*x155*x163))+(((-1.0)*sj5*x159*x160))+((cj5*x160*x163))+(((-1.0)*x159*x164))+(((-1.73204919243206)*cj0*r22*sj4)));
j3eval[3]=IKsign(((((-0.250000349687704)*r02))+(((-1.0)*x158*x161))+(((0.433012903784321)*x158))+(((0.433012903784321)*x156))+(((-0.749999650312296)*x157))+(((-0.866025201892125)*r00*x164))+(((0.866025201892125)*r01*x155))+(((-1.0)*x156*x161))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[4];
IkReal x165=(cj4*cj5);
IkReal x166=(r20*sj0);
IkReal x167=(cj4*r12);
IkReal x168=(r10*sj5);
IkReal x169=((0.433012903784321)*r11);
IkReal x170=(sj0*sj4);
IkReal x171=(sj4*sj5);
IkReal x172=((1.73204919243206)*r11);
IkReal x173=(cj5*r10*sj4);
j3eval[0]=(((cj5*x172))+(((-1.73204919243206)*cj4*x168))+(((-2.99999440500457)*x167))+(((-1.0)*r12))+(((3.46409596216145)*r11*x171))+(((-3.46409596216145)*x173))+(((1.73204919243206)*x168))+(((-1.0)*x165*x172)));
j3eval[1]=IKsign(((((-0.250000349687704)*r12))+(((0.866025201892125)*r11*x171))+((cj5*x169))+(((-0.866025201892125)*x173))+(((0.433012903784321)*x168))+(((-0.749999650312296)*x167))+(((-0.433012903784321)*cj4*x168))+(((-1.0)*x165*x169))));
j3eval[2]=1.87500043710948e-9;
j3eval[3]=((((-1.99999860125065)*cj4*r21*sj0*sj5))+(((-1.0)*x166*x171))+(((-1.0)*cj5*r21*x170))+(((-1.73204919243206)*r22*x170))+(((1.99999860125065)*x165*x166)));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x174=(cj4*r22);
IkReal x175=(cj5*r21);
IkReal x176=((0.866025201892125)*sj4);
IkReal x177=(cj5*r20);
IkReal x178=(r21*sj5);
IkReal x179=((3.46409596216145)*sj4);
IkReal x180=(r20*sj5);
IkReal x181=(cj4*x180);
j3eval[0]=((((2.99999440500457)*x174))+(((-1.73204919243206)*x180))+(((-1.73204919243206)*x175))+(((1.73204919243206)*cj4*x175))+r22+(((-1.0)*x178*x179))+(((1.73204919243206)*x181))+((x177*x179)));
j3eval[1]=IKsign(((((-0.433012903784321)*x175))+(((-0.433012903784321)*x180))+((x176*x177))+(((0.749999650312296)*x174))+(((0.250000349687704)*r22))+(((-1.0)*x176*x178))+(((0.433012903784321)*x181))+(((0.433012903784321)*cj4*x175))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x182=(cj5*r01);
IkReal x183=(cj4*r02);
IkReal x184=(r00*sj5);
IkReal x185=((0.433012903784321)*cj4);
IkReal x186=((1.73204919243206)*cj4);
IkReal x187=(r01*sj4*sj5);
IkReal x188=(cj5*r00*sj4);
j3eval[0]=((((3.46409596216145)*x187))+(((-2.99999440500457)*x183))+(((-1.0)*r02))+(((-1.0)*x184*x186))+(((-3.46409596216145)*x188))+(((1.73204919243206)*x184))+(((1.73204919243206)*x182))+(((-1.0)*x182*x186)));
j3eval[1]=IKsign(((((-0.250000349687704)*r02))+(((0.866025201892125)*x187))+(((-1.0)*x184*x185))+(((-0.866025201892125)*x188))+(((0.433012903784321)*x182))+(((0.433012903784321)*x184))+(((-0.749999650312296)*x183))+(((-1.0)*x182*x185))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x189=(cj4*r22);
IkReal x190=(cj5*r21);
IkReal x191=((0.866025201892125)*sj4);
IkReal x192=(cj5*r20);
IkReal x193=(r21*sj5);
IkReal x194=((3.46409596216145)*sj4);
IkReal x195=(r20*sj5);
IkReal x196=(cj4*x195);
j3eval[0]=((((-1.73204919243206)*x195))+(((-1.73204919243206)*x190))+(((2.99999440500457)*x189))+((x192*x194))+r22+(((1.73204919243206)*cj4*x190))+(((-1.0)*x193*x194))+(((1.73204919243206)*x196)));
j3eval[1]=IKsign(((((-1.0)*x191*x193))+(((-0.433012903784321)*x195))+(((-0.433012903784321)*x190))+(((0.749999650312296)*x189))+(((0.250000349687704)*r22))+(((0.433012903784321)*x196))+((x191*x192))+(((0.433012903784321)*cj4*x190))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x197=cj4*cj4;
IkReal x198=r11*r11;
IkReal x199=cj5*cj5;
IkReal x200=r10*r10;
IkReal x201=r12*r12;
IkReal x202=(r12*sj5);
IkReal x203=(cj5*r11);
IkReal x204=(r11*sj4);
IkReal x205=(r10*sj5);
IkReal x206=(cj4*r10);
IkReal x207=(cj5*sj4);
IkReal x208=((3.9999972025013)*sj5);
IkReal x209=((0.375000349687459)*cj4);
IkReal x210=((2.0)*cj4);
IkReal x211=(cj4*r12);
IkReal x212=((0.750000174843424)*sj5);
IkReal x213=(r10*r12);
IkReal x214=((3.46409838486413)*x197);
IkReal x215=((4.99999440500457)*x199);
IkReal x216=(r10*x199);
IkReal x217=(cj4*x200);
IkReal x218=((0.649519052837905)*x197);
IkReal x219=(x197*x198);
IkReal x220=(x198*x199);
IkReal x221=(x199*x200);
IkReal x222=(x197*x200);
IkReal x223=(x197*x201);
IkReal x224=(cj4*sj5*x198*x207);
j3eval[0]=((((-1.15470161513813)*r10*x202))+(((-2.309396769726)*x202*x206))+((x210*x221))+(((-1.0)*x215*x222))+(((2.30940161513813)*x207*x213))+(((7.99999440500261)*x199*x204*x206))+((x198*x207*x208))+((r12*x203*x214))+(((-1.0)*cj4*x198*x207*x208))+(((-1.15470161513813)*r12*x203))+(((9.99998881000913)*x197*x203*x205))+(((-4.0)*cj4*x203*x205))+(((-2.309396769726)*x203*x211))+(((-6.9281919243229)*cj4*x202*x204))+((x215*x219))+((x207*x208*x217))+(((-1.33333395500065)*x198))+(((6.9281919243229)*r12*x206*x207))+(((-3.9999972025013)*x204*x206))+x222+(((3.9999972025013)*r10*x204))+(((-3.99999440500457)*x219))+(((-2.99999440500457)*x220))+(((-1.0)*x200*x210))+(((2.99999440500457)*x221))+(((2.99999440500457)*x223))+(((-4.99999440500457)*x201))+(((-1.0)*x200*x207*x208))+(((-7.99999440500261)*x204*x216))+((r10*x202*x214))+(((-5.99998881000913)*x203*x205))+(((-4.33332836000522)*x200))+((x201*x210))+(((-2.30940161513813)*x202*x204))+(((-1.0)*x210*x220)));
j3eval[1]=IKsign(((((-1.0)*x200*x209))+((x207*x212*x217))+(((0.562499475468567)*x221))+(((0.562499475468567)*x223))+(((-1.0)*x200*x207*x212))+(((-1.12499895093713)*x203*x205))+(((-0.749999650312296)*x219))+((r12*x203*x218))+(((-0.216506754730737)*r12*x203))+((x209*x221))+(((-0.562499475468567)*x220))+(((-0.433012298107169)*x203*x211))+((x201*x209))+(((-1.0)*cj4*x198*x207*x212))+(((1.87499965031205)*x197*x203*x205))+(((-1.50000034968685)*x204*x216))+(((0.433013206622791)*x207*x213))+(((0.937499825156026)*x199*x219))+(((-1.29903719716146)*cj4*x202*x204))+(((-0.937499825156026)*x201))+(((-0.216506754730737)*r10*x202))+(((-0.750000174843424)*x204*x206))+(((-0.750000699374918)*cj4*x203*x205))+(((1.29903719716146)*r12*x206*x207))+(((-1.0)*x209*x220))+(((-0.250000349687704)*x198))+(((1.50000034968685)*x199*x204*x206))+(((0.18750017484373)*x222))+(((0.750000174843424)*r10*x204))+(((-0.81249982515627)*x200))+(((-0.433013206622791)*x202*x204))+((r10*x202*x218))+(((-0.433012298107169)*x202*x206))+((x198*x207*x212))+(((-0.937499825156026)*x197*x221))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x225=cj4*cj4;
IkReal x226=cj5*cj5;
IkReal x227=r10*r10;
IkReal x228=r12*r12;
IkReal x229=r11*r11;
IkReal x230=(r12*sj5);
IkReal x231=(r11*sj4);
IkReal x232=(r12*sj4);
IkReal x233=((0.750000174843424)*cj4);
IkReal x234=(cj5*sj5);
IkReal x235=((0.433012903784321)*r12);
IkReal x236=(r10*sj5);
IkReal x237=((1.50000034968685)*r10);
IkReal x238=((0.433012298107169)*cj4);
IkReal x239=(r10*r11);
IkReal x240=(cj5*r11);
IkReal x241=(cj5*r10);
IkReal x242=((0.375000349687459)*cj4);
IkReal x243=((1.29903719716146)*cj4);
IkReal x244=((0.250000349687704)*cj4);
IkReal x245=((0.500000349687582)*sj4);
IkReal x246=((0.562499475468567)*x226);
IkReal x247=(r12*x240);
IkReal x248=(sj4*x229);
IkReal x249=(cj4*x226);
IkReal x250=((0.937499825156026)*x226);
IkReal x251=(r10*x225);
IkReal x252=(sj4*x227);
IkReal x253=(x225*x229);
IkReal x254=(x225*x227);
CheckValue<IkReal> x255=IKPowWithIntegerCheck(IKsign(((((1.87499965031205)*x225*x234*x239))+(((-0.750000174843424)*x234*x252))+(((-1.0)*x226*x229*x242))+(((-1.12499895093713)*x234*x239))+(((-1.0)*x250*x254))+(((-1.0)*x226*x231*x237))+(((-1.0)*x229*x246))+((x231*x237*x249))+(((-1.0)*r10*x231*x233))+(((-0.937499825156026)*x228))+(((0.562499475468567)*x225*x228))+(((-0.250000349687704)*x229))+((x228*x242))+((x227*x246))+(((-0.216506754730737)*x247))+(((-0.216506754730737)*r10*x230))+(((-1.0)*x230*x231*x243))+((x233*x234*x252))+((x250*x253))+((x226*x227*x242))+(((0.750000174843424)*x234*x248))+(((0.649519052837905)*x230*x251))+((x232*x241*x243))+(((-0.433013206622791)*x230*x231))+(((-1.0)*x238*x247))+(((-1.0)*x233*x234*x248))+(((0.18750017484373)*x254))+(((0.750000174843424)*r10*x231))+(((-1.0)*x227*x242))+(((-0.749999650312296)*x253))+(((-1.0)*r10*x230*x238))+(((-0.81249982515627)*x227))+(((0.649519052837905)*x225*x247))+(((-0.750000699374918)*cj4*x234*x239))+(((0.433013206622791)*x232*x241)))),-1);
if(!x255.valid){
continue;
}
CheckValue<IkReal> x256 = IKatan2WithCheck(IkReal(((((-1.0)*cj4*x241))+((x236*x245))+(((0.866025201892125)*x232))+(((0.500000349687582)*cj5*x231))+((cj4*r11*sj5)))),IkReal(((((0.500000349687582)*sj5*x231))+(((-1.0)*cj4*x235))+(((-1.0)*x236*x244))+(((-1.0)*x241*x245))+x235+(((-0.749999650312296)*x240))+(((-1.0)*x240*x244))+(((-0.749999650312296)*x236)))),IKFAST_ATAN2_MAGTHRESH);
if(!x256.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x255.value)))+(x256.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x257=IKsin(j3);
IkReal x258=IKcos(j3);
IkReal x259=(r11*sj5);
IkReal x260=(r10*sj5);
IkReal x261=(cj5*r20);
IkReal x262=(cj5*r11);
IkReal x263=(r00*sj5);
IkReal x264=(cj4*cj5);
IkReal x265=((0.500000349687582)*cj5);
IkReal x266=(r21*sj5);
IkReal x267=(r20*sj5);
IkReal x268=(r01*sj5);
IkReal x269=(sj4*x257);
IkReal x270=((1.0)*x257);
IkReal x271=((0.250000349687704)*x258);
IkReal x272=((0.749999650312296)*x258);
IkReal x273=((0.433012903784321)*cj4*r12);
IkReal x274=((0.749999650312296)*x257);
IkReal x275=(r12*x258);
IkReal x276=(cj4*x257);
IkReal x277=((0.500000349687582)*sj4*x258);
IkReal x278=((0.250000349687704)*x276);
IkReal x279=((0.433012903784321)*r02*x258);
IkReal x280=((0.433012903784321)*r22*x258);
evalcond[0]=((((0.866025201892125)*r22*x269))+((x266*x276))+((x266*x277))+(((-1.0)*r21*x264*x271))+(((-1.0)*cj5*r21*x272))+(((0.500000349687582)*x267*x269))+(((-1.0)*cj4*x267*x271))+x280+(((-1.0)*x261*x277))+((r21*x265*x269))+(((-1.0)*cj4*x261*x270))+(((-1.0)*cj4*x280))+(((-1.0)*x267*x272)));
evalcond[1]=((((-1.0)*cj4*x279))+(((-1.0)*x263*x272))+(((-1.0)*cj4*x263*x271))+(((-1.0)*r00*x264*x270))+(((-1.0)*cj5*r01*x272))+x279+(((0.500000349687582)*x263*x269))+(((0.866025201892125)*r02*x269))+(((-1.0)*r01*x264*x271))+(((-1.0)*r00*sj4*x258*x265))+((x268*x277))+((x268*x276))+((r01*x265*x269)));
evalcond[2]=((((-1.0)*r10*x258*x264))+((cj4*x258*x259))+((r10*x265*x269))+((x260*x278))+((x260*x274))+((x260*x277))+((x262*x277))+((x262*x274))+((x262*x278))+(((0.866025201892125)*sj4*x275))+(((-0.433012903784321)*r12*x257))+((x257*x273))+(((-0.500000349687582)*x259*x269)));
evalcond[3]=((1.0)+(((-1.0)*x262*x272))+((x259*x277))+((x259*x276))+(((-1.0)*x258*x273))+(((0.500000349687582)*x260*x269))+(((-1.0)*r10*x264*x270))+(((0.433012903784321)*x275))+(((0.866025201892125)*r12*x269))+(((0.500000349687582)*x262*x269))+(((-1.0)*cj4*x260*x271))+(((-1.0)*cj4*x262*x271))+(((-1.0)*x260*x272))+(((-1.0)*r10*sj4*x258*x265)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x281=((0.26409636501044)*cj4);
IkReal x282=(r20*sj5);
IkReal x283=(cj5*r21);
IkReal x284=((0.457427895740576)*cj4);
IkReal x285=(r00*sj5);
IkReal x286=((0.528192360616262)*sj4);
IkReal x287=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x284))+(((-1.0)*x281*x285))+(((-1.0)*x281*x287))+(((-1.0)*cj5*r00*x286))+((r01*sj5*x286))+(((0.444735007694415)*x287))+(((0.444735007694415)*x285)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((r22*x284))+((cj5*r20*x286))+(((-1.0)*r21*sj5*x286))+((x281*x282))+((x281*x283))+(((-0.444735007694415)*x283))+(((-0.444735007694415)*x282))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x284))+(((-1.0)*x281*x285))+(((-1.0)*x281*x287))+(((-1.0)*cj5*r00*x286))+((r01*sj5*x286))+(((0.444735007694415)*x287))+(((0.444735007694415)*x285))))+IKsqr(((((0.204620884747229)*r22))+((r22*x284))+((cj5*r20*x286))+(((-1.0)*r21*sj5*x286))+((x281*x282))+((x281*x283))+(((-0.444735007694415)*x283))+(((-0.444735007694415)*x282))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x284))+(((-1.0)*x281*x285))+(((-1.0)*x281*x287))+(((-1.0)*cj5*r00*x286))+((r01*sj5*x286))+(((0.444735007694415)*x287))+(((0.444735007694415)*x285))), ((((0.204620884747229)*r22))+((r22*x284))+((cj5*r20*x286))+(((-1.0)*r21*sj5*x286))+((x281*x282))+((x281*x283))+(((-0.444735007694415)*x283))+(((-0.444735007694415)*x282))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x288=((1.0)*px);
IkReal x289=((0.187545437253636)*cj4);
IkReal x290=(r20*sj5);
IkReal x291=(r01*sj3);
IkReal x292=(cj5*r21);
IkReal x293=(cj3*r00);
IkReal x294=((0.0185150129489311)*sj4);
IkReal x295=(r21*sj5);
IkReal x296=((0.20357990508077)*sj3);
IkReal x297=(cj5*sj4);
IkReal x298=((0.135720094919197)*sj3);
IkReal x299=(cj4*cj5);
IkReal x300=(r00*sj5);
IkReal x301=((0.00925751294893567)*cj4);
IkReal x302=((0.10827950965428)*cj4);
IkReal x303=(cj4*r22);
IkReal x304=((0.117537022603216)*sj3);
IkReal x305=(cj5*r01);
IkReal x306=((0.135720094919197)*cj3);
IkReal x307=(r01*sj5);
IkReal x308=((0.216558867852667)*sj4);
IkReal x309=(cj4*r02);
IkReal x310=((0.27144)*cj3);
IkReal x311=((0.41)*(IKsin(j1)));
IkReal x312=((0.41)*(IKcos(j1)));
IkReal x313=((0.135720094919197)*sj4*sj5);
IkReal x314=((0.0678600949192303)*cj4*sj3);
IkReal x315=((0.235073880801598)*cj3*sj4);
IkReal x316=(x311+x288);
evalcond[0]=((((-0.18234135315471)*x290))+(((-0.18234135315471)*x292))+((x290*x302))+((x292*x302))+(((-1.0)*x295*x308))+((r22*x289))+(((-1.0)*x312))+pz+(((0.216558867852667)*r20*x297))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*r02*x289))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x297))+(((-1.0)*x316))+(((0.18234135315471)*x305))+(((0.18234135315471)*x300))+(((-1.0)*x300*x302))+((x307*x308))+(((-0.10827950965428)*r01*x299)));
evalcond[2]=((((-1.0)*cj4*x295*x310))+((sj4*x295*x298))+((r22*x304))+(((-1.0)*x290*x314))+(((0.0160344678271334)*x309))+(((-1.0)*x290*x296))+(((-1.0)*sj4*x292*x306))+(((-0.0160344678271334)*r02))+(((-1.0)*x303*x304))+(((-1.0)*x294*x307))+(((-1.0)*x292*x314))+(((0.0648043305514941)*x300))+(((0.0648043305514941)*x305))+(((0.00925751294893567)*r01*x299))+(((-1.0)*r20*x297*x298))+(((-1.0)*x316))+(((-1.0)*sj4*x290*x306))+((x300*x301))+(((-1.0)*r22*x315))+((r20*x299*x310))+(((-1.0)*x292*x296))+((cj5*r00*x294)));
evalcond[3]=(((x293*x313))+(((0.0678600949192303)*x291*x299))+((cj5*r20*x294))+(((-1.0)*x291*x313))+(((0.0160344678271334)*x303))+((x290*x301))+((x300*x314))+((r02*x315))+(((0.20357990508077)*cj5*x291))+((x292*x301))+((r00*x297*x298))+(((-0.0160344678271334)*r22))+((cj4*x307*x310))+(((-1.0)*r02*x304))+x312+(((-1.0)*pz))+((x296*x300))+((x304*x309))+(((-0.27144)*x293*x299))+(((0.0648043305514941)*x290))+(((0.0648043305514941)*x292))+((r01*x297*x306))+(((-1.0)*x294*x295)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x317=((0.250000349687704)*sj1);
IkReal x318=(cj1*cj4);
IkReal x319=((0.749999650312296)*r22);
IkReal x320=(cj4*sj1);
IkReal x321=((0.749999650312296)*r02);
IkReal x322=((0.250000349687704)*cj1);
IkReal x323=((0.433012903784321)*r00*sj5);
IkReal x324=((0.433012903784321)*r20*sj5);
IkReal x325=((0.433012903784321)*cj5*r01);
IkReal x326=((0.433012903784321)*cj5*r21);
IkReal x327=((0.866025201892125)*cj5*sj1*sj4);
IkReal x328=((0.866025201892125)*cj1*cj5*sj4);
IkReal x329=((0.866025201892125)*r01*sj4*sj5);
IkReal x330=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x318*x321))+((x318*x323))+((x318*x325))+((r02*x322))+(((-1.0)*sj1*x326))+(((-1.0)*sj1*x324))+((r20*x327))+((r00*x328))+((x320*x324))+((x320*x326))+(((-1.0)*cj1*x325))+(((-1.0)*cj1*x323))+(((-1.0)*cj1*x329))+((r22*x317))+((x319*x320))+(((-1.0)*sj1*x330)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x318*x326))+((x318*x324))+(((-1.0)*r02*x317))+((r20*x328))+(((-1.0)*cj1*x326))+(((-1.0)*cj1*x324))+(((-1.0)*x320*x323))+(((-1.0)*x320*x321))+(((-1.0)*x320*x325))+((r22*x322))+((sj1*x329))+((sj1*x323))+((sj1*x325))+(((-1.0)*r00*x327))+(((-1.0)*cj1*x330))+((x318*x319)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x318*x321))+((x318*x323))+((x318*x325))+((r02*x322))+(((-1.0)*sj1*x326))+(((-1.0)*sj1*x324))+((r20*x327))+((r00*x328))+((x320*x324))+((x320*x326))+(((-1.0)*cj1*x325))+(((-1.0)*cj1*x323))+(((-1.0)*cj1*x329))+((r22*x317))+((x319*x320))+(((-1.0)*sj1*x330))))+IKsqr((((x318*x326))+((x318*x324))+(((-1.0)*r02*x317))+((r20*x328))+(((-1.0)*cj1*x326))+(((-1.0)*cj1*x324))+(((-1.0)*x320*x323))+(((-1.0)*x320*x321))+(((-1.0)*x320*x325))+((r22*x322))+((sj1*x329))+((sj1*x323))+((sj1*x325))+(((-1.0)*r00*x327))+(((-1.0)*cj1*x330))+((x318*x319))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x318*x321))+((x318*x323))+((x318*x325))+((r02*x322))+(((-1.0)*sj1*x326))+(((-1.0)*sj1*x324))+((r20*x327))+((r00*x328))+((x320*x324))+((x320*x326))+(((-1.0)*cj1*x325))+(((-1.0)*cj1*x323))+(((-1.0)*cj1*x329))+((r22*x317))+((x319*x320))+(((-1.0)*sj1*x330))), (((x318*x326))+((x318*x324))+(((-1.0)*r02*x317))+((r20*x328))+(((-1.0)*cj1*x326))+(((-1.0)*cj1*x324))+(((-1.0)*x320*x323))+(((-1.0)*x320*x321))+(((-1.0)*x320*x325))+((r22*x322))+((sj1*x329))+((sj1*x323))+((sj1*x325))+(((-1.0)*r00*x327))+(((-1.0)*cj1*x330))+((x318*x319))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x331=IKsin(j2);
IkReal x332=IKcos(j2);
IkReal x333=((0.749999650312296)*sj3);
IkReal x334=(cj5*r01);
IkReal x335=(r00*sj5);
IkReal x336=(cj4*cj5);
IkReal x337=((1.0)*cj3);
IkReal x338=(r21*sj3);
IkReal x339=(cj4*sj5);
IkReal x340=(cj3*r21);
IkReal x341=((0.500000349687582)*sj4);
IkReal x342=((0.433012903784321)*r20);
IkReal x343=(cj4*r22);
IkReal x344=((0.433012903784321)*sj3);
IkReal x345=((0.433012903784321)*cj4);
IkReal x346=(r01*sj5);
IkReal x347=(r20*sj5);
IkReal x348=((0.0160344678271334)*r02);
IkReal x349=(cj4*r02);
IkReal x350=((0.00925751294893567)*cj4);
IkReal x351=((0.0185150129489311)*sj4);
IkReal x352=(r21*sj5);
IkReal x353=(cj5*r21);
IkReal x354=((0.866025201892125)*sj4);
IkReal x355=(cj5*r20);
IkReal x356=(cj5*r00);
IkReal x357=((0.250000349687704)*sj3);
IkReal x358=(cj1*x332);
IkReal x359=(sj1*x331);
IkReal x360=(cj1*x331);
IkReal x361=(sj1*x332);
IkReal x362=(x359+x358);
evalcond[0]=((((-0.250000349687704)*r22))+(((0.433012903784321)*x353))+((sj5*x342))+((x352*x354))+x362+(((-0.749999650312296)*x343))+(((-1.0)*x354*x355))+(((-1.0)*x339*x342))+(((-0.433012903784321)*r21*x336)));
evalcond[1]=((((-1.0)*x335*x345))+(((-0.250000349687704)*r02))+(((-1.0)*x334*x345))+(((-1.0)*x361))+((x346*x354))+x360+(((0.433012903784321)*x335))+(((0.433012903784321)*x334))+(((-0.749999650312296)*x349))+(((-1.0)*x354*x356)));
evalcond[2]=((((-0.27144)*x358))+(((-0.27144)*x359))+(((0.00925751294893567)*r21*x336))+(((0.0160344678271334)*x343))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x351*x355))+(((-1.0)*pz))+(((0.0648043305514941)*x353))+(((-1.0)*x351*x352))+(((0.0648043305514941)*x347))+(((0.00925751294893567)*r20*x339)));
evalcond[3]=((((0.27144)*x361))+(((0.0648043305514941)*x335))+(((0.0648043305514941)*x334))+((x334*x350))+((x335*x350))+(((-0.41)*sj1))+(((-1.0)*x346*x351))+((x351*x356))+(((-0.27144)*x360))+(((-1.0)*px))+((cj4*x348))+(((-1.0)*x348)));
evalcond[4]=(((cj4*x335*x357))+(((-1.0)*r00*x336*x337))+(((-1.0)*r02*x344))+(((-1.0)*sj3*x341*x346))+((sj3*x341*x356))+((cj3*x335*x341))+x362+((x344*x349))+((x333*x335))+((x333*x334))+((cj3*r01*x339))+((cj3*r02*x354))+((cj4*x334*x357))+((cj3*x334*x341)));
evalcond[5]=((((-1.0)*r22*x344))+((cj3*x341*x347))+(((-1.0)*x360))+((sj3*x341*x355))+(((-1.0)*r20*x336*x337))+(((0.250000349687704)*x336*x338))+x361+((x333*x347))+((cj3*r22*x354))+(((-1.0)*sj5*x338*x341))+((cj5*x340*x341))+((x333*x353))+((r20*x339*x357))+((x343*x344))+((x339*x340)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x363=((0.433012903784321)*cj5);
IkReal x364=((0.433012903784321)*cj4);
IkReal x365=(cj5*r01);
IkReal x366=((0.866025201892125)*sj4);
IkReal x367=((0.250000349687704)*cj4);
IkReal x368=(cj5*r00);
IkReal x369=((0.500000349687582)*sj4);
IkReal x370=(r00*sj5);
IkReal x371=(r01*sj5);
CheckValue<IkReal> x372 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x364))+((x369*x371))+(((-0.749999650312296)*x365))+(((0.433012903784321)*r02))+(((-0.749999650312296)*x370))+(((-1.0)*x367*x370))+(((-1.0)*x365*x367))+(((-1.0)*x368*x369)))),IkReal(((((-1.0)*r02*x366))+((cj4*x368))+(((-1.0)*x369*x370))+(((-1.0)*cj4*x371))+(((-1.0)*x365*x369)))),IKFAST_ATAN2_MAGTHRESH);
if(!x372.valid){
continue;
}
CheckValue<IkReal> x373=IKPowWithIntegerCheck(IKsign((((r20*((((sj5*x364))+((cj5*x366))+(((-0.433012903784321)*sj5))))))+((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r21*(((((-1.0)*sj5*x366))+(((-1.0)*x363))+((cj4*x363)))))))),-1);
if(!x373.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x372.value)+(((1.5707963267949)*(x373.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x374=IKsin(j3);
IkReal x375=IKcos(j3);
IkReal x376=(r11*sj5);
IkReal x377=(r10*sj5);
IkReal x378=(cj5*r20);
IkReal x379=(cj5*r11);
IkReal x380=(r00*sj5);
IkReal x381=(cj4*cj5);
IkReal x382=((0.500000349687582)*cj5);
IkReal x383=(r21*sj5);
IkReal x384=(r20*sj5);
IkReal x385=(r01*sj5);
IkReal x386=(sj4*x374);
IkReal x387=((1.0)*x374);
IkReal x388=((0.250000349687704)*x375);
IkReal x389=((0.749999650312296)*x375);
IkReal x390=((0.433012903784321)*cj4*r12);
IkReal x391=((0.749999650312296)*x374);
IkReal x392=(r12*x375);
IkReal x393=(cj4*x374);
IkReal x394=((0.500000349687582)*sj4*x375);
IkReal x395=((0.250000349687704)*x393);
IkReal x396=((0.433012903784321)*r02*x375);
IkReal x397=((0.433012903784321)*r22*x375);
evalcond[0]=((((0.866025201892125)*r22*x386))+(((-1.0)*cj4*x397))+(((-1.0)*x378*x394))+(((-1.0)*x384*x389))+x397+(((-1.0)*cj5*r21*x389))+(((-1.0)*cj4*x384*x388))+((r21*x382*x386))+(((-1.0)*r21*x381*x388))+(((-1.0)*cj4*x378*x387))+((x383*x394))+((x383*x393))+(((0.500000349687582)*x384*x386)));
evalcond[1]=((((-1.0)*r00*x381*x387))+(((0.500000349687582)*x380*x386))+(((-1.0)*r00*sj4*x375*x382))+(((-1.0)*cj4*x396))+((x385*x393))+((x385*x394))+((r01*x382*x386))+(((-1.0)*x380*x389))+(((-1.0)*cj5*r01*x389))+(((-1.0)*cj4*x380*x388))+(((-1.0)*r01*x381*x388))+x396+(((0.866025201892125)*r02*x386)));
evalcond[2]=((((0.866025201892125)*sj4*x392))+((x379*x395))+((x379*x394))+((x379*x391))+((cj4*x375*x376))+((x377*x395))+((x377*x394))+((x377*x391))+(((-1.0)*r10*x375*x381))+((r10*x382*x386))+(((-0.433012903784321)*r12*x374))+(((-0.500000349687582)*x376*x386))+((x374*x390)));
evalcond[3]=((1.0)+(((0.500000349687582)*x377*x386))+(((-1.0)*r10*x381*x387))+(((-1.0)*r10*sj4*x375*x382))+(((-1.0)*x379*x389))+(((0.866025201892125)*r12*x386))+((x376*x393))+((x376*x394))+(((-1.0)*cj4*x379*x388))+(((0.433012903784321)*x392))+(((-1.0)*cj4*x377*x388))+(((-1.0)*x377*x389))+(((0.500000349687582)*x379*x386))+(((-1.0)*x375*x390)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x398=((0.26409636501044)*cj4);
IkReal x399=(r20*sj5);
IkReal x400=(cj5*r21);
IkReal x401=((0.457427895740576)*cj4);
IkReal x402=(r00*sj5);
IkReal x403=((0.528192360616262)*sj4);
IkReal x404=(cj5*r01);
if( IKabs(((((0.444735007694415)*x402))+(((0.444735007694415)*x404))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x403))+(((-1.0)*r02*x401))+(((-1.0)*x398*x402))+(((-1.0)*x398*x404))+((r01*sj5*x403)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x403))+(((0.204620884747229)*r22))+((r22*x401))+((x398*x399))+(((-0.444735007694415)*x400))+((x398*x400))+(((-0.444735007694415)*x399))+((cj5*r20*x403))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((0.444735007694415)*x402))+(((0.444735007694415)*x404))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x403))+(((-1.0)*r02*x401))+(((-1.0)*x398*x402))+(((-1.0)*x398*x404))+((r01*sj5*x403))))+IKsqr(((((-1.0)*r21*sj5*x403))+(((0.204620884747229)*r22))+((r22*x401))+((x398*x399))+(((-0.444735007694415)*x400))+((x398*x400))+(((-0.444735007694415)*x399))+((cj5*r20*x403))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((0.444735007694415)*x402))+(((0.444735007694415)*x404))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x403))+(((-1.0)*r02*x401))+(((-1.0)*x398*x402))+(((-1.0)*x398*x404))+((r01*sj5*x403))), ((((-1.0)*r21*sj5*x403))+(((0.204620884747229)*r22))+((r22*x401))+((x398*x399))+(((-0.444735007694415)*x400))+((x398*x400))+(((-0.444735007694415)*x399))+((cj5*r20*x403))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x405=((1.0)*px);
IkReal x406=((0.187545437253636)*cj4);
IkReal x407=(r20*sj5);
IkReal x408=(r01*sj3);
IkReal x409=(cj5*r21);
IkReal x410=(cj3*r00);
IkReal x411=((0.0185150129489311)*sj4);
IkReal x412=(r21*sj5);
IkReal x413=((0.20357990508077)*sj3);
IkReal x414=(cj5*sj4);
IkReal x415=((0.135720094919197)*sj3);
IkReal x416=(cj4*cj5);
IkReal x417=(r00*sj5);
IkReal x418=((0.00925751294893567)*cj4);
IkReal x419=((0.10827950965428)*cj4);
IkReal x420=(cj4*r22);
IkReal x421=((0.117537022603216)*sj3);
IkReal x422=(cj5*r01);
IkReal x423=((0.135720094919197)*cj3);
IkReal x424=(r01*sj5);
IkReal x425=((0.216558867852667)*sj4);
IkReal x426=(cj4*r02);
IkReal x427=((0.27144)*cj3);
IkReal x428=((0.41)*(IKsin(j1)));
IkReal x429=((0.41)*(IKcos(j1)));
IkReal x430=((0.135720094919197)*sj4*sj5);
IkReal x431=((0.0678600949192303)*cj4*sj3);
IkReal x432=((0.235073880801598)*cj3*sj4);
IkReal x433=(x405+x428);
evalcond[0]=(((x407*x419))+(((-1.0)*x412*x425))+((r22*x406))+(((-1.0)*x429))+(((-0.18234135315471)*x409))+(((-0.18234135315471)*x407))+((x409*x419))+(((0.216558867852667)*r20*x414))+pz+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x417*x419))+(((-1.0)*x433))+((x424*x425))+(((0.18234135315471)*x422))+(((-1.0)*r02*x406))+(((-0.0838945627463637)*r02))+(((0.18234135315471)*x417))+(((-0.10827950965428)*r01*x416))+(((-0.216558867852667)*r00*x414)));
evalcond[2]=((((-1.0)*r20*x414*x415))+(((-1.0)*sj4*x407*x423))+(((-1.0)*sj4*x409*x423))+(((-1.0)*x433))+(((-1.0)*x420*x421))+(((-0.0160344678271334)*r02))+((r20*x416*x427))+((sj4*x412*x415))+((cj5*r00*x411))+(((0.0648043305514941)*x422))+(((0.0160344678271334)*x426))+((x417*x418))+(((0.0648043305514941)*x417))+((r22*x421))+(((0.00925751294893567)*r01*x416))+(((-1.0)*x407*x413))+(((-1.0)*x407*x431))+(((-1.0)*x409*x431))+(((-1.0)*r22*x432))+(((-1.0)*x411*x424))+(((-1.0)*cj4*x412*x427))+(((-1.0)*x409*x413)));
evalcond[3]=(((r01*x414*x423))+((x407*x418))+((r00*x414*x415))+(((0.0678600949192303)*x408*x416))+((r02*x432))+((x413*x417))+(((-0.0160344678271334)*r22))+((x410*x430))+(((-0.27144)*x410*x416))+((x409*x418))+(((0.20357990508077)*cj5*x408))+(((-1.0)*pz))+(((0.0160344678271334)*x420))+(((-1.0)*r02*x421))+(((0.0648043305514941)*x409))+(((0.0648043305514941)*x407))+x429+(((-1.0)*x411*x412))+((cj4*x424*x427))+((x417*x431))+(((-1.0)*x408*x430))+((cj5*r20*x411))+((x421*x426)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x434=((0.250000349687704)*sj1);
IkReal x435=(cj1*cj4);
IkReal x436=((0.749999650312296)*r22);
IkReal x437=(cj4*sj1);
IkReal x438=((0.749999650312296)*r02);
IkReal x439=((0.250000349687704)*cj1);
IkReal x440=((0.433012903784321)*r00*sj5);
IkReal x441=((0.433012903784321)*r20*sj5);
IkReal x442=((0.433012903784321)*cj5*r01);
IkReal x443=((0.433012903784321)*cj5*r21);
IkReal x444=((0.866025201892125)*cj5*sj1*sj4);
IkReal x445=((0.866025201892125)*cj1*cj5*sj4);
IkReal x446=((0.866025201892125)*r01*sj4*sj5);
IkReal x447=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x435*x442))+((x435*x440))+((x436*x437))+((r02*x439))+(((-1.0)*cj1*x446))+(((-1.0)*cj1*x440))+(((-1.0)*cj1*x442))+((r22*x434))+((r00*x445))+((r20*x444))+((x437*x443))+((x437*x441))+(((-1.0)*sj1*x443))+(((-1.0)*sj1*x441))+(((-1.0)*sj1*x447))+((x435*x438)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x435*x443))+((x435*x441))+(((-1.0)*x437*x438))+(((-1.0)*x437*x440))+(((-1.0)*x437*x442))+((sj1*x442))+((sj1*x440))+((sj1*x446))+(((-1.0)*cj1*x447))+(((-1.0)*cj1*x441))+(((-1.0)*cj1*x443))+((r22*x439))+(((-1.0)*r02*x434))+(((-1.0)*r00*x444))+((r20*x445))+((x435*x436)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x435*x442))+((x435*x440))+((x436*x437))+((r02*x439))+(((-1.0)*cj1*x446))+(((-1.0)*cj1*x440))+(((-1.0)*cj1*x442))+((r22*x434))+((r00*x445))+((r20*x444))+((x437*x443))+((x437*x441))+(((-1.0)*sj1*x443))+(((-1.0)*sj1*x441))+(((-1.0)*sj1*x447))+((x435*x438))))+IKsqr((((x435*x443))+((x435*x441))+(((-1.0)*x437*x438))+(((-1.0)*x437*x440))+(((-1.0)*x437*x442))+((sj1*x442))+((sj1*x440))+((sj1*x446))+(((-1.0)*cj1*x447))+(((-1.0)*cj1*x441))+(((-1.0)*cj1*x443))+((r22*x439))+(((-1.0)*r02*x434))+(((-1.0)*r00*x444))+((r20*x445))+((x435*x436))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x435*x442))+((x435*x440))+((x436*x437))+((r02*x439))+(((-1.0)*cj1*x446))+(((-1.0)*cj1*x440))+(((-1.0)*cj1*x442))+((r22*x434))+((r00*x445))+((r20*x444))+((x437*x443))+((x437*x441))+(((-1.0)*sj1*x443))+(((-1.0)*sj1*x441))+(((-1.0)*sj1*x447))+((x435*x438))), (((x435*x443))+((x435*x441))+(((-1.0)*x437*x438))+(((-1.0)*x437*x440))+(((-1.0)*x437*x442))+((sj1*x442))+((sj1*x440))+((sj1*x446))+(((-1.0)*cj1*x447))+(((-1.0)*cj1*x441))+(((-1.0)*cj1*x443))+((r22*x439))+(((-1.0)*r02*x434))+(((-1.0)*r00*x444))+((r20*x445))+((x435*x436))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x448=IKsin(j2);
IkReal x449=IKcos(j2);
IkReal x450=((0.749999650312296)*sj3);
IkReal x451=(cj5*r01);
IkReal x452=(r00*sj5);
IkReal x453=(cj4*cj5);
IkReal x454=((1.0)*cj3);
IkReal x455=(r21*sj3);
IkReal x456=(cj4*sj5);
IkReal x457=(cj3*r21);
IkReal x458=((0.500000349687582)*sj4);
IkReal x459=((0.433012903784321)*r20);
IkReal x460=(cj4*r22);
IkReal x461=((0.433012903784321)*sj3);
IkReal x462=((0.433012903784321)*cj4);
IkReal x463=(r01*sj5);
IkReal x464=(r20*sj5);
IkReal x465=((0.0160344678271334)*r02);
IkReal x466=(cj4*r02);
IkReal x467=((0.00925751294893567)*cj4);
IkReal x468=((0.0185150129489311)*sj4);
IkReal x469=(r21*sj5);
IkReal x470=(cj5*r21);
IkReal x471=((0.866025201892125)*sj4);
IkReal x472=(cj5*r20);
IkReal x473=(cj5*r00);
IkReal x474=((0.250000349687704)*sj3);
IkReal x475=(cj1*x449);
IkReal x476=(sj1*x448);
IkReal x477=(cj1*x448);
IkReal x478=(sj1*x449);
IkReal x479=(x475+x476);
evalcond[0]=(((x469*x471))+(((-0.250000349687704)*r22))+(((-1.0)*x456*x459))+(((0.433012903784321)*x470))+(((-0.749999650312296)*x460))+x479+(((-1.0)*x471*x472))+((sj5*x459))+(((-0.433012903784321)*r21*x453)));
evalcond[1]=((((-0.250000349687704)*r02))+((x463*x471))+(((-1.0)*x478))+(((-0.749999650312296)*x466))+x477+(((0.433012903784321)*x452))+(((0.433012903784321)*x451))+(((-1.0)*x451*x462))+(((-1.0)*x471*x473))+(((-1.0)*x452*x462)));
evalcond[2]=((((0.0648043305514941)*x470))+(((0.41)*cj1))+(((0.0648043305514941)*x464))+(((0.00925751294893567)*r21*x453))+(((-0.0160344678271334)*r22))+(((-1.0)*x468*x469))+(((0.00925751294893567)*r20*x456))+(((-0.27144)*x475))+(((-0.27144)*x476))+(((-1.0)*pz))+(((0.0160344678271334)*x460))+((x468*x472)));
evalcond[3]=(((x452*x467))+((cj4*x465))+(((-1.0)*x463*x468))+(((0.0648043305514941)*x451))+(((0.0648043305514941)*x452))+(((-0.27144)*x477))+(((0.27144)*x478))+(((-1.0)*x465))+(((-0.41)*sj1))+(((-1.0)*px))+((x451*x467))+((x468*x473)));
evalcond[4]=(((cj3*x452*x458))+((cj3*r02*x471))+((x461*x466))+((cj4*x451*x474))+((sj3*x458*x473))+x479+((cj3*r01*x456))+(((-1.0)*r02*x461))+((x450*x451))+((x450*x452))+((cj3*x451*x458))+((cj4*x452*x474))+(((-1.0)*sj3*x458*x463))+(((-1.0)*r00*x453*x454)));
evalcond[5]=(((cj3*x458*x464))+((cj5*x457*x458))+(((-1.0)*r20*x453*x454))+(((-1.0)*sj5*x455*x458))+((sj3*x458*x472))+((r20*x456*x474))+(((-1.0)*x477))+x478+((x460*x461))+(((-1.0)*r22*x461))+((x450*x464))+((cj3*r22*x471))+(((0.250000349687704)*x453*x455))+((x450*x470))+((x456*x457)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x480=((0.433012903784321)*cj5);
IkReal x481=((0.866025201892125)*sj4);
IkReal x482=((0.433012903784321)*r22);
IkReal x483=(cj4*sj5);
IkReal x484=(cj5*r21);
IkReal x485=(r20*sj5);
IkReal x486=((0.500000349687582)*sj4);
IkReal x487=(cj5*x486);
CheckValue<IkReal> x488=IKPowWithIntegerCheck(IKsign((((r01*((x480+((sj5*x481))+(((-1.0)*cj4*x480))))))+((r02*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r00*(((((-0.433012903784321)*x483))+(((-1.0)*cj5*x481))+(((0.433012903784321)*sj5)))))))),-1);
if(!x488.valid){
continue;
}
CheckValue<IkReal> x489 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x484))+(((-0.749999650312296)*x485))+(((-0.250000349687704)*r20*x483))+x482+(((-0.250000349687704)*cj4*x484))+(((-1.0)*cj4*x482))+(((-1.0)*r20*x487))+((r21*sj5*x486)))),IkReal(((((-1.0)*x484*x486))+(((-1.0)*r21*x483))+((cj4*cj5*r20))+(((-1.0)*r22*x481))+(((-1.0)*x485*x486)))),IKFAST_ATAN2_MAGTHRESH);
if(!x489.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x488.value)))+(x489.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x490=IKsin(j3);
IkReal x491=IKcos(j3);
IkReal x492=(r11*sj5);
IkReal x493=(r10*sj5);
IkReal x494=(cj5*r20);
IkReal x495=(cj5*r11);
IkReal x496=(r00*sj5);
IkReal x497=(cj4*cj5);
IkReal x498=((0.500000349687582)*cj5);
IkReal x499=(r21*sj5);
IkReal x500=(r20*sj5);
IkReal x501=(r01*sj5);
IkReal x502=(sj4*x490);
IkReal x503=((1.0)*x490);
IkReal x504=((0.250000349687704)*x491);
IkReal x505=((0.749999650312296)*x491);
IkReal x506=((0.433012903784321)*cj4*r12);
IkReal x507=((0.749999650312296)*x490);
IkReal x508=(r12*x491);
IkReal x509=(cj4*x490);
IkReal x510=((0.500000349687582)*sj4*x491);
IkReal x511=((0.250000349687704)*x509);
IkReal x512=((0.433012903784321)*r02*x491);
IkReal x513=((0.433012903784321)*r22*x491);
evalcond[0]=((((-1.0)*r21*x497*x504))+(((-1.0)*cj4*x500*x504))+(((0.500000349687582)*x500*x502))+((r21*x498*x502))+((x499*x510))+(((0.866025201892125)*r22*x502))+(((-1.0)*cj5*r21*x505))+x513+(((-1.0)*cj4*x494*x503))+(((-1.0)*cj4*x513))+(((-1.0)*x494*x510))+((x499*x509))+(((-1.0)*x500*x505)));
evalcond[1]=((((-1.0)*r00*sj4*x491*x498))+((x501*x510))+(((-1.0)*r00*x497*x503))+(((-1.0)*x496*x505))+((r01*x498*x502))+((x501*x509))+x512+(((-1.0)*cj4*x512))+(((-1.0)*cj5*r01*x505))+(((-1.0)*r01*x497*x504))+(((0.866025201892125)*r02*x502))+(((0.500000349687582)*x496*x502))+(((-1.0)*cj4*x496*x504)));
evalcond[2]=(((r10*x498*x502))+((cj4*x491*x492))+(((-0.500000349687582)*x492*x502))+(((0.866025201892125)*sj4*x508))+(((-1.0)*r10*x491*x497))+((x495*x507))+((x490*x506))+((x493*x507))+(((-0.433012903784321)*r12*x490))+((x495*x510))+((x495*x511))+((x493*x510))+((x493*x511)));
evalcond[3]=((1.0)+(((-1.0)*cj4*x493*x504))+(((0.433012903784321)*x508))+((x492*x510))+(((-1.0)*x495*x505))+(((-1.0)*x491*x506))+(((-1.0)*cj4*x495*x504))+((x492*x509))+(((0.500000349687582)*x495*x502))+(((-1.0)*x493*x505))+(((0.866025201892125)*r12*x502))+(((-1.0)*r10*x497*x503))+(((-1.0)*r10*sj4*x491*x498))+(((0.500000349687582)*x493*x502)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x514=((0.26409636501044)*cj4);
IkReal x515=(r20*sj5);
IkReal x516=(cj5*r21);
IkReal x517=((0.457427895740576)*cj4);
IkReal x518=(r00*sj5);
IkReal x519=((0.528192360616262)*sj4);
IkReal x520=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x519))+(((-1.0)*x514*x518))+(((-1.0)*cj5*r00*x519))+(((0.444735007694415)*x520))+(((0.444735007694415)*x518))+(((-1.0)*r02*x517))+(((-1.0)*x514*x520)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((x514*x516))+((x514*x515))+((cj5*r20*x519))+(((-1.0)*r21*sj5*x519))+(((-0.444735007694415)*x516))+(((-0.444735007694415)*x515))+((r22*x517))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x519))+(((-1.0)*x514*x518))+(((-1.0)*cj5*r00*x519))+(((0.444735007694415)*x520))+(((0.444735007694415)*x518))+(((-1.0)*r02*x517))+(((-1.0)*x514*x520))))+IKsqr(((((0.204620884747229)*r22))+((x514*x516))+((x514*x515))+((cj5*r20*x519))+(((-1.0)*r21*sj5*x519))+(((-0.444735007694415)*x516))+(((-0.444735007694415)*x515))+((r22*x517))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x519))+(((-1.0)*x514*x518))+(((-1.0)*cj5*r00*x519))+(((0.444735007694415)*x520))+(((0.444735007694415)*x518))+(((-1.0)*r02*x517))+(((-1.0)*x514*x520))), ((((0.204620884747229)*r22))+((x514*x516))+((x514*x515))+((cj5*r20*x519))+(((-1.0)*r21*sj5*x519))+(((-0.444735007694415)*x516))+(((-0.444735007694415)*x515))+((r22*x517))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x521=((1.0)*px);
IkReal x522=((0.187545437253636)*cj4);
IkReal x523=(r20*sj5);
IkReal x524=(r01*sj3);
IkReal x525=(cj5*r21);
IkReal x526=(cj3*r00);
IkReal x527=((0.0185150129489311)*sj4);
IkReal x528=(r21*sj5);
IkReal x529=((0.20357990508077)*sj3);
IkReal x530=(cj5*sj4);
IkReal x531=((0.135720094919197)*sj3);
IkReal x532=(cj4*cj5);
IkReal x533=(r00*sj5);
IkReal x534=((0.00925751294893567)*cj4);
IkReal x535=((0.10827950965428)*cj4);
IkReal x536=(cj4*r22);
IkReal x537=((0.117537022603216)*sj3);
IkReal x538=(cj5*r01);
IkReal x539=((0.135720094919197)*cj3);
IkReal x540=(r01*sj5);
IkReal x541=((0.216558867852667)*sj4);
IkReal x542=(cj4*r02);
IkReal x543=((0.27144)*cj3);
IkReal x544=((0.41)*(IKsin(j1)));
IkReal x545=((0.41)*(IKcos(j1)));
IkReal x546=((0.135720094919197)*sj4*sj5);
IkReal x547=((0.0678600949192303)*cj4*sj3);
IkReal x548=((0.235073880801598)*cj3*sj4);
IkReal x549=(x544+x521);
evalcond[0]=((((-0.18234135315471)*x525))+(((-0.18234135315471)*x523))+(((-1.0)*x545))+((r22*x522))+(((-1.0)*x528*x541))+pz+((x525*x535))+((x523*x535))+(((0.216558867852667)*r20*x530))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x533*x535))+(((-0.216558867852667)*r00*x530))+(((-0.10827950965428)*r01*x532))+(((-0.0838945627463637)*r02))+((x540*x541))+(((-1.0)*x549))+(((-1.0)*r02*x522))+(((0.18234135315471)*x538))+(((0.18234135315471)*x533)));
evalcond[2]=((((-1.0)*x525*x547))+(((-1.0)*r22*x548))+((sj4*x528*x531))+(((-1.0)*x525*x529))+(((-1.0)*x527*x540))+(((-1.0)*r20*x530*x531))+(((-1.0)*sj4*x525*x539))+(((-0.0160344678271334)*r02))+(((-1.0)*x523*x547))+(((-1.0)*x523*x529))+(((-1.0)*cj4*x528*x543))+(((0.0160344678271334)*x542))+(((-1.0)*x549))+(((0.0648043305514941)*x538))+(((0.0648043305514941)*x533))+((r22*x537))+(((-1.0)*sj4*x523*x539))+(((0.00925751294893567)*r01*x532))+((x533*x534))+((r20*x532*x543))+(((-1.0)*x536*x537))+((cj5*r00*x527)));
evalcond[3]=((((-1.0)*x524*x546))+((r02*x548))+((r01*x530*x539))+((x526*x546))+(((-1.0)*x527*x528))+((cj5*r20*x527))+(((-0.0160344678271334)*r22))+(((-1.0)*r02*x537))+(((0.0160344678271334)*x536))+((r00*x530*x531))+(((0.0648043305514941)*x525))+(((0.0648043305514941)*x523))+(((-1.0)*pz))+(((-0.27144)*x526*x532))+((x537*x542))+((x525*x534))+(((0.20357990508077)*cj5*x524))+x545+((cj4*x540*x543))+((x523*x534))+(((0.0678600949192303)*x524*x532))+((x533*x547))+((x529*x533)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x550=((0.250000349687704)*sj1);
IkReal x551=(cj1*cj4);
IkReal x552=((0.749999650312296)*r22);
IkReal x553=(cj4*sj1);
IkReal x554=((0.749999650312296)*r02);
IkReal x555=((0.250000349687704)*cj1);
IkReal x556=((0.433012903784321)*r00*sj5);
IkReal x557=((0.433012903784321)*r20*sj5);
IkReal x558=((0.433012903784321)*cj5*r01);
IkReal x559=((0.433012903784321)*cj5*r21);
IkReal x560=((0.866025201892125)*cj5*sj1*sj4);
IkReal x561=((0.866025201892125)*cj1*cj5*sj4);
IkReal x562=((0.866025201892125)*r01*sj4*sj5);
IkReal x563=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x558))+(((-1.0)*cj1*x556))+((r02*x555))+((r00*x561))+(((-1.0)*sj1*x559))+(((-1.0)*sj1*x557))+(((-1.0)*cj1*x562))+((r22*x550))+((x551*x558))+((x551*x554))+((x551*x556))+((r20*x560))+(((-1.0)*sj1*x563))+((x552*x553))+((x553*x559))+((x553*x557)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x556))+((sj1*x558))+(((-1.0)*cj1*x559))+(((-1.0)*cj1*x557))+(((-1.0)*r02*x550))+(((-1.0)*x553*x558))+(((-1.0)*x553*x554))+(((-1.0)*x553*x556))+(((-1.0)*cj1*x563))+((sj1*x562))+((r22*x555))+((x551*x559))+((x551*x557))+((x551*x552))+((r20*x561))+(((-1.0)*r00*x560)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x558))+(((-1.0)*cj1*x556))+((r02*x555))+((r00*x561))+(((-1.0)*sj1*x559))+(((-1.0)*sj1*x557))+(((-1.0)*cj1*x562))+((r22*x550))+((x551*x558))+((x551*x554))+((x551*x556))+((r20*x560))+(((-1.0)*sj1*x563))+((x552*x553))+((x553*x559))+((x553*x557))))+IKsqr((((sj1*x556))+((sj1*x558))+(((-1.0)*cj1*x559))+(((-1.0)*cj1*x557))+(((-1.0)*r02*x550))+(((-1.0)*x553*x558))+(((-1.0)*x553*x554))+(((-1.0)*x553*x556))+(((-1.0)*cj1*x563))+((sj1*x562))+((r22*x555))+((x551*x559))+((x551*x557))+((x551*x552))+((r20*x561))+(((-1.0)*r00*x560))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x558))+(((-1.0)*cj1*x556))+((r02*x555))+((r00*x561))+(((-1.0)*sj1*x559))+(((-1.0)*sj1*x557))+(((-1.0)*cj1*x562))+((r22*x550))+((x551*x558))+((x551*x554))+((x551*x556))+((r20*x560))+(((-1.0)*sj1*x563))+((x552*x553))+((x553*x559))+((x553*x557))), (((sj1*x556))+((sj1*x558))+(((-1.0)*cj1*x559))+(((-1.0)*cj1*x557))+(((-1.0)*r02*x550))+(((-1.0)*x553*x558))+(((-1.0)*x553*x554))+(((-1.0)*x553*x556))+(((-1.0)*cj1*x563))+((sj1*x562))+((r22*x555))+((x551*x559))+((x551*x557))+((x551*x552))+((r20*x561))+(((-1.0)*r00*x560))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x564=IKsin(j2);
IkReal x565=IKcos(j2);
IkReal x566=((0.749999650312296)*sj3);
IkReal x567=(cj5*r01);
IkReal x568=(r00*sj5);
IkReal x569=(cj4*cj5);
IkReal x570=((1.0)*cj3);
IkReal x571=(r21*sj3);
IkReal x572=(cj4*sj5);
IkReal x573=(cj3*r21);
IkReal x574=((0.500000349687582)*sj4);
IkReal x575=((0.433012903784321)*r20);
IkReal x576=(cj4*r22);
IkReal x577=((0.433012903784321)*sj3);
IkReal x578=((0.433012903784321)*cj4);
IkReal x579=(r01*sj5);
IkReal x580=(r20*sj5);
IkReal x581=((0.0160344678271334)*r02);
IkReal x582=(cj4*r02);
IkReal x583=((0.00925751294893567)*cj4);
IkReal x584=((0.0185150129489311)*sj4);
IkReal x585=(r21*sj5);
IkReal x586=(cj5*r21);
IkReal x587=((0.866025201892125)*sj4);
IkReal x588=(cj5*r20);
IkReal x589=(cj5*r00);
IkReal x590=((0.250000349687704)*sj3);
IkReal x591=(cj1*x565);
IkReal x592=(sj1*x564);
IkReal x593=(cj1*x564);
IkReal x594=(sj1*x565);
IkReal x595=(x592+x591);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x576))+(((-1.0)*x587*x588))+((x585*x587))+(((0.433012903784321)*x586))+x595+(((-0.433012903784321)*r21*x569))+((sj5*x575))+(((-1.0)*x572*x575)));
evalcond[1]=((((-0.250000349687704)*r02))+((x579*x587))+(((0.433012903784321)*x567))+(((0.433012903784321)*x568))+(((-1.0)*x594))+(((-1.0)*x587*x589))+(((-0.749999650312296)*x582))+x593+(((-1.0)*x567*x578))+(((-1.0)*x568*x578)));
evalcond[2]=(((x584*x588))+(((0.00925751294893567)*r21*x569))+(((0.0648043305514941)*x586))+(((0.0648043305514941)*x580))+(((-1.0)*x584*x585))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x572))+(((0.0160344678271334)*x576))+(((-0.27144)*x591))+(((-0.27144)*x592)));
evalcond[3]=(((x584*x589))+((x567*x583))+(((0.0648043305514941)*x567))+(((0.0648043305514941)*x568))+(((-1.0)*x579*x584))+(((-0.41)*sj1))+(((0.27144)*x594))+((cj4*x581))+(((-1.0)*px))+((x568*x583))+(((-1.0)*x581))+(((-0.27144)*x593)));
evalcond[4]=(((cj3*r02*x587))+((x566*x567))+((x566*x568))+((cj4*x568*x590))+((cj3*x567*x574))+((x577*x582))+((cj4*x567*x590))+(((-1.0)*sj3*x574*x579))+((cj3*r01*x572))+(((-1.0)*r00*x569*x570))+x595+((cj3*x568*x574))+(((-1.0)*r02*x577))+((sj3*x574*x589)));
evalcond[5]=(((cj5*x573*x574))+((r20*x572*x590))+(((0.250000349687704)*x569*x571))+(((-1.0)*sj5*x571*x574))+((x576*x577))+((cj3*x574*x580))+(((-1.0)*x593))+((cj3*r22*x587))+x594+((x566*x580))+((x566*x586))+(((-1.0)*r20*x569*x570))+((sj3*x574*x588))+((x572*x573))+(((-1.0)*r22*x577)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x596=(cj5*r01);
IkReal x597=(cj4*r02);
IkReal x598=(r00*sj5);
IkReal x599=((0.433012903784321)*cj4);
IkReal x600=((1.73204919243206)*cj4);
IkReal x601=(r01*sj4*sj5);
IkReal x602=(cj5*r00*sj4);
j3eval[0]=((((3.46409596216145)*x602))+(((-1.73204919243206)*x596))+(((-1.73204919243206)*x598))+((x596*x600))+(((2.99999440500457)*x597))+r02+(((-3.46409596216145)*x601))+((x598*x600)));
j3eval[1]=IKsign(((((0.250000349687704)*r02))+(((-0.433012903784321)*x596))+(((-0.433012903784321)*x598))+(((-0.866025201892125)*x601))+((x598*x599))+(((0.866025201892125)*x602))+(((0.749999650312296)*x597))+((x596*x599))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x603=(cj4*r22);
IkReal x604=(cj5*r21);
IkReal x605=((0.866025201892125)*sj4);
IkReal x606=(cj5*r20);
IkReal x607=(r21*sj5);
IkReal x608=((3.46409596216145)*sj4);
IkReal x609=(r20*sj5);
IkReal x610=(cj4*x609);
j3eval[0]=((((-2.99999440500457)*x603))+(((-1.73204919243206)*cj4*x604))+(((-1.73204919243206)*x610))+((x607*x608))+(((1.73204919243206)*x604))+(((1.73204919243206)*x609))+(((-1.0)*r22))+(((-1.0)*x606*x608)));
j3eval[1]=IKsign((((x605*x607))+(((-0.250000349687704)*r22))+(((-1.0)*x605*x606))+(((-0.433012903784321)*cj4*x604))+(((-0.749999650312296)*x603))+(((-0.433012903784321)*x610))+(((0.433012903784321)*x609))+(((0.433012903784321)*x604))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x611=cj5*cj5;
IkReal x612=r11*r11;
IkReal x613=cj4*cj4;
IkReal x614=r10*r10;
IkReal x615=r12*r12;
IkReal x616=(r10*sj5);
IkReal x617=((0.216506754730737)*r12);
IkReal x618=(cj5*r11);
IkReal x619=((1.15470161513813)*r12);
IkReal x620=(r11*sj4);
IkReal x621=(cj4*r12);
IkReal x622=(cj5*sj4);
IkReal x623=((3.9999972025013)*sj5);
IkReal x624=((0.375000349687459)*cj4);
IkReal x625=((2.0)*cj4);
IkReal x626=(cj4*r10);
IkReal x627=((0.433013206622791)*r12);
IkReal x628=((0.750000174843424)*sj5);
IkReal x629=((2.30940161513813)*r12);
IkReal x630=((4.99999440500457)*x611);
IkReal x631=(r10*x611);
IkReal x632=(cj4*x614);
IkReal x633=(x612*x613);
IkReal x634=(x611*x612);
IkReal x635=((3.46409838486413)*r12*x613);
IkReal x636=(x611*x614);
IkReal x637=(x613*x614);
IkReal x638=((0.649519052837905)*r12*x613);
IkReal x639=(x613*x615);
IkReal x640=(cj4*sj5*x612*x622);
j3eval[0]=((((-1.0)*r10*x622*x629))+(((7.99999440500261)*x620*x631))+((x614*x625))+(((-1.0)*x630*x633))+(((-9.99998881000913)*x613*x616*x618))+(((-1.0)*x612*x622*x623))+(((2.309396769726)*x616*x621))+((x625*x634))+(((-3.9999972025013)*r10*x620))+(((2.99999440500457)*x634))+(((-2.99999440500457)*x639))+(((-2.99999440500457)*x636))+(((4.99999440500457)*x615))+(((5.99998881000913)*x616*x618))+((cj4*x612*x622*x623))+((sj5*x620*x629))+((x616*x619))+(((-1.0)*x622*x623*x632))+(((3.99999440500457)*x633))+(((4.33332836000522)*x614))+((x614*x622*x623))+(((4.0)*cj4*x616*x618))+(((3.9999972025013)*x620*x626))+(((-1.0)*x625*x636))+(((-1.0)*x618*x635))+(((-1.0)*x616*x635))+(((6.9281919243229)*sj5*x620*x621))+(((-1.0)*x637))+(((1.33333395500065)*x612))+((x630*x637))+(((2.309396769726)*x618*x621))+((x618*x619))+(((-1.0)*x615*x625))+(((-6.9281919243229)*r10*x621*x622))+(((-7.99999440500261)*x611*x620*x626)));
j3eval[1]=IKsign(((((-1.0)*r10*x622*x627))+(((0.433012298107169)*x616*x621))+(((-1.0)*x622*x628*x632))+(((1.29903719716146)*sj5*x620*x621))+((x614*x624))+(((-0.18750017484373)*x637))+(((0.562499475468567)*x634))+(((0.750000174843424)*x620*x626))+(((0.937499825156026)*x613*x636))+(((-1.0)*x612*x622*x628))+(((-0.937499825156026)*x611*x633))+(((1.12499895093713)*x616*x618))+((cj4*x612*x622*x628))+((sj5*x620*x627))+((x616*x617))+(((0.750000699374918)*cj4*x616*x618))+(((-1.50000034968685)*x611*x620*x626))+(((0.749999650312296)*x633))+(((-1.0)*x624*x636))+((x617*x618))+(((-0.750000174843424)*r10*x620))+(((0.937499825156026)*x615))+((x614*x622*x628))+((x624*x634))+(((-1.0)*x618*x638))+(((-0.562499475468567)*x636))+(((-0.562499475468567)*x639))+(((-1.0)*x616*x638))+(((-1.87499965031205)*x613*x616*x618))+(((0.250000349687704)*x612))+(((0.81249982515627)*x614))+(((-1.0)*x615*x624))+(((1.50000034968685)*x620*x631))+(((-1.29903719716146)*r10*x621*x622))+(((0.433012298107169)*x618*x621))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x641=r11*r11;
IkReal x642=cj5*cj5;
IkReal x643=r10*r10;
IkReal x644=cj4*cj4;
IkReal x645=r12*r12;
IkReal x646=(r10*sj5);
IkReal x647=((0.216506754730737)*r12);
IkReal x648=(cj5*r11);
IkReal x649=(r12*sj4);
IkReal x650=(r11*sj4);
IkReal x651=((0.375000349687459)*cj4);
IkReal x652=(cj4*r10);
IkReal x653=((0.433012903784321)*r12);
IkReal x654=(r11*sj5);
IkReal x655=(cj5*r10);
IkReal x656=((0.250000349687704)*cj4);
IkReal x657=((0.500000349687582)*sj4);
IkReal x658=((0.562499475468567)*x642);
IkReal x659=((1.50000034968685)*x642);
IkReal x660=((0.433012298107169)*cj4*r12);
IkReal x661=((0.937499825156026)*x642);
IkReal x662=(x641*x644);
IkReal x663=((0.649519052837905)*r12*x644);
IkReal x664=((0.750000174843424)*cj5*sj4*sj5);
IkReal x665=(x643*x644);
IkReal x666=(cj4*x664);
CheckValue<IkReal> x667=IKPowWithIntegerCheck(IKsign(((((-1.0)*x648*x663))+(((-1.0)*x641*x664))+(((-0.562499475468567)*x644*x645))+((x648*x660))+(((-1.0)*x650*x652*x659))+(((0.750000174843424)*x650*x652))+(((-0.18750017484373)*x665))+((x643*x651))+(((-1.0)*x661*x662))+(((-1.87499965031205)*x644*x646*x648))+(((0.750000699374918)*cj4*x646*x648))+(((1.12499895093713)*x646*x648))+((x643*x664))+((x641*x666))+(((1.29903719716146)*cj4*x649*x654))+((x641*x658))+(((-1.0)*x643*x658))+(((-1.29903719716146)*cj5*x649*x652))+((x661*x665))+(((0.433013206622791)*x649*x654))+(((-1.0)*x643*x666))+(((-0.433013206622791)*x649*x655))+(((-1.0)*x645*x651))+(((0.937499825156026)*x645))+(((0.250000349687704)*x641))+((x646*x660))+((r10*x650*x659))+(((-1.0)*x642*x643*x651))+(((0.81249982515627)*x643))+(((0.749999650312296)*x662))+((x646*x647))+(((-0.750000174843424)*r10*x650))+((x647*x648))+(((-1.0)*x646*x663))+((x641*x642*x651)))),-1);
if(!x667.valid){
continue;
}
CheckValue<IkReal> x668 = IKatan2WithCheck(IkReal((((cj4*x654))+((x646*x657))+(((-1.0)*cj5*x652))+(((0.866025201892125)*x649))+((x648*x657)))),IkReal(((((-0.749999650312296)*x646))+(((-0.749999650312296)*x648))+(((0.500000349687582)*sj5*x650))+(((-1.0)*x646*x656))+(((-1.0)*x655*x657))+x653+(((-1.0)*x648*x656))+(((-1.0)*cj4*x653)))),IKFAST_ATAN2_MAGTHRESH);
if(!x668.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x667.value)))+(x668.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x669=IKsin(j3);
IkReal x670=IKcos(j3);
IkReal x671=(r11*sj5);
IkReal x672=(r10*sj5);
IkReal x673=(cj5*r20);
IkReal x674=(cj5*r11);
IkReal x675=(r00*sj5);
IkReal x676=(cj4*cj5);
IkReal x677=((0.500000349687582)*cj5);
IkReal x678=(r21*sj5);
IkReal x679=(r20*sj5);
IkReal x680=(r01*sj5);
IkReal x681=(sj4*x669);
IkReal x682=((1.0)*x669);
IkReal x683=((0.250000349687704)*x670);
IkReal x684=((0.749999650312296)*x670);
IkReal x685=((0.433012903784321)*cj4*r12);
IkReal x686=((0.749999650312296)*x669);
IkReal x687=(r12*x670);
IkReal x688=(cj4*x669);
IkReal x689=((0.500000349687582)*sj4*x670);
IkReal x690=((0.250000349687704)*x688);
IkReal x691=((0.433012903784321)*r02*x670);
IkReal x692=((0.433012903784321)*r22*x670);
evalcond[0]=((((-1.0)*r21*x676*x683))+((x678*x688))+((x678*x689))+(((-1.0)*cj4*x679*x683))+(((0.866025201892125)*r22*x681))+(((-1.0)*cj4*x692))+(((-1.0)*cj5*r21*x684))+(((-1.0)*cj4*x673*x682))+(((-1.0)*x679*x684))+((r21*x677*x681))+(((-1.0)*x673*x689))+x692+(((0.500000349687582)*x679*x681)));
evalcond[1]=((((-1.0)*r00*sj4*x670*x677))+(((-1.0)*cj4*x675*x683))+(((-1.0)*cj4*x691))+(((-1.0)*cj5*r01*x684))+(((-1.0)*x675*x684))+(((-1.0)*r01*x676*x683))+((r01*x677*x681))+(((0.866025201892125)*r02*x681))+(((0.500000349687582)*x675*x681))+(((-1.0)*r00*x676*x682))+((x680*x689))+((x680*x688))+x691);
evalcond[2]=(((x669*x685))+(((-0.500000349687582)*x671*x681))+((r10*x677*x681))+((x674*x686))+((x674*x689))+((cj4*x670*x671))+((x672*x690))+(((-1.0)*r10*x670*x676))+(((-0.433012903784321)*r12*x669))+((x672*x689))+((x672*x686))+((x674*x690))+(((0.866025201892125)*sj4*x687)));
evalcond[3]=((-1.0)+(((-1.0)*cj4*x672*x683))+(((-1.0)*x670*x685))+(((-1.0)*cj4*x674*x683))+(((0.866025201892125)*r12*x681))+(((0.500000349687582)*x674*x681))+(((0.500000349687582)*x672*x681))+(((0.433012903784321)*x687))+(((-1.0)*r10*sj4*x670*x677))+((x671*x689))+((x671*x688))+(((-1.0)*r10*x676*x682))+(((-1.0)*x674*x684))+(((-1.0)*x672*x684)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x693=(cj5*r21);
IkReal x694=((0.26409636501044)*cj4);
IkReal x695=((0.457427895740576)*cj4);
IkReal x696=((0.528192360616262)*sj4);
IkReal x697=(cj5*r01);
IkReal x698=((0.444735007694415)*sj5);
if( IKabs(((((-1.0)*r00*x698))+(((-1.0)*r01*sj5*x696))+(((-0.444735007694415)*x697))+((x694*x697))+((r02*x695))+((r00*sj5*x694))+(((0.204620884747229)*r02))+((cj5*r00*x696))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.444735007694415)*x693))+(((0.204620884747229)*r22))+((r22*x695))+((x693*x694))+((r20*sj5*x694))+(((-1.0)*r20*x698))+(((-1.0)*r21*sj5*x696))+((cj5*r20*x696))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x698))+(((-1.0)*r01*sj5*x696))+(((-0.444735007694415)*x697))+((x694*x697))+((r02*x695))+((r00*sj5*x694))+(((0.204620884747229)*r02))+((cj5*r00*x696))+(((2.4390243902439)*px))))+IKsqr(((((-0.444735007694415)*x693))+(((0.204620884747229)*r22))+((r22*x695))+((x693*x694))+((r20*sj5*x694))+(((-1.0)*r20*x698))+(((-1.0)*r21*sj5*x696))+((cj5*r20*x696))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r00*x698))+(((-1.0)*r01*sj5*x696))+(((-0.444735007694415)*x697))+((x694*x697))+((r02*x695))+((r00*sj5*x694))+(((0.204620884747229)*r02))+((cj5*r00*x696))+(((2.4390243902439)*px))), ((((-0.444735007694415)*x693))+(((0.204620884747229)*r22))+((r22*x695))+((x693*x694))+((r20*sj5*x694))+(((-1.0)*r20*x698))+(((-1.0)*r21*sj5*x696))+((cj5*r20*x696))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x699=((0.187545437253636)*cj4);
IkReal x700=(cj5*r20);
IkReal x701=(r01*sj5);
IkReal x702=(cj5*r21);
IkReal x703=(cj3*r00);
IkReal x704=(sj4*sj5);
IkReal x705=((0.20357990508077)*sj3);
IkReal x706=(r20*sj5);
IkReal x707=(cj4*cj5);
IkReal x708=((0.00925751294893567)*cj4);
IkReal x709=((0.117537022603216)*sj3);
IkReal x710=((0.10827950965428)*cj4);
IkReal x711=(r00*sj5);
IkReal x712=(cj4*r22);
IkReal x713=(r21*sj5);
IkReal x714=((0.216558867852667)*sj4);
IkReal x715=((0.0185150129489311)*sj4);
IkReal x716=(cj3*sj4);
IkReal x717=(cj4*r02);
IkReal x718=(cj5*r01);
IkReal x719=((0.41)*(IKcos(j1)));
IkReal x720=((0.41)*(IKsin(j1)));
IkReal x721=((0.135720094919197)*sj3*sj4);
IkReal x722=((0.0678600949192303)*cj4*sj3);
IkReal x723=(cj5*r00*sj4);
IkReal x724=((0.27144)*cj3*cj4);
evalcond[0]=(((r02*x699))+(((-1.0)*x720))+((x710*x711))+(((-0.18234135315471)*x718))+(((-0.18234135315471)*x711))+px+(((0.10827950965428)*r01*x707))+(((-1.0)*x701*x714))+((cj5*r00*x714))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x700*x714))+((x702*x710))+(((-0.216558867852667)*r21*x704))+((x706*x710))+((r22*x699))+(((-1.0)*x719))+pz+(((-0.18234135315471)*x702))+(((-0.18234135315471)*x706))+(((0.0838945627463637)*r22)));
evalcond[2]=(((x701*x724))+(((-1.0)*x701*x721))+(((-0.27144)*x703*x707))+(((-1.0)*x706*x708))+(((-1.0)*r02*x709))+(((0.0678600949192303)*r01*sj3*x707))+(((-1.0)*x702*x708))+(((0.135720094919197)*x716*x718))+(((-0.0648043305514941)*x702))+(((-0.0648043305514941)*x706))+(((0.0185150129489311)*r21*x704))+(((0.135720094919197)*x703*x704))+((x709*x717))+((x711*x722))+(((-1.0)*x719))+pz+(((-0.0160344678271334)*x712))+(((0.0160344678271334)*r22))+((cj5*r00*x721))+(((0.235073880801598)*r02*x716))+(((-1.0)*x700*x715))+((x705*x711))+((x705*x718)));
evalcond[3]=(((x702*x722))+(((0.0648043305514941)*x718))+(((0.0648043305514941)*x711))+((x700*x721))+(((0.235073880801598)*r22*x716))+((x713*x724))+(((-1.0)*x700*x724))+((x702*x705))+(((-0.0160344678271334)*r02))+(((0.0160344678271334)*x717))+((x706*x722))+((x709*x712))+(((0.135720094919197)*x702*x716))+(((-1.0)*px))+(((-0.135720094919197)*r21*sj3*x704))+(((0.135720094919197)*cj3*r20*x704))+(((0.00925751294893567)*r01*x707))+x720+(((-1.0)*x701*x715))+((x708*x711))+((x705*x706))+((cj5*r00*x715))+(((-1.0)*r22*x709)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x725=(r02*sj1);
IkReal x726=(cj1*cj4);
IkReal x727=((0.749999650312296)*r22);
IkReal x728=(cj4*sj1);
IkReal x729=((0.250000349687704)*r22);
IkReal x730=((0.433012903784321)*r00*sj5);
IkReal x731=((0.433012903784321)*r20*sj5);
IkReal x732=((0.433012903784321)*cj5*r01);
IkReal x733=((0.433012903784321)*cj5*r21);
IkReal x734=((0.866025201892125)*cj5*sj1*sj4);
IkReal x735=((0.866025201892125)*cj1*cj5*sj4);
IkReal x736=((0.866025201892125)*r01*sj4*sj5);
IkReal x737=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-0.749999650312296)*r02*x726))+((x728*x733))+((x728*x731))+((x727*x728))+((r20*x734))+(((-1.0)*sj1*x733))+(((-1.0)*sj1*x737))+(((-1.0)*sj1*x731))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x726*x732))+(((-1.0)*x726*x730))+((sj1*x729))+((cj1*x732))+((cj1*x730))+((cj1*x736))+(((-1.0)*r00*x735)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x729))+((x728*x732))+((x728*x730))+((x726*x727))+((x726*x733))+((x726*x731))+((r00*x734))+((r20*x735))+(((-1.0)*cj1*x733))+(((-1.0)*cj1*x737))+(((-1.0)*cj1*x731))+(((-1.0)*sj1*x736))+(((-1.0)*sj1*x730))+(((-1.0)*sj1*x732))+(((0.749999650312296)*cj4*x725))+(((0.250000349687704)*x725)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.749999650312296)*r02*x726))+((x728*x733))+((x728*x731))+((x727*x728))+((r20*x734))+(((-1.0)*sj1*x733))+(((-1.0)*sj1*x737))+(((-1.0)*sj1*x731))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x726*x732))+(((-1.0)*x726*x730))+((sj1*x729))+((cj1*x732))+((cj1*x730))+((cj1*x736))+(((-1.0)*r00*x735))))+IKsqr((((cj1*x729))+((x728*x732))+((x728*x730))+((x726*x727))+((x726*x733))+((x726*x731))+((r00*x734))+((r20*x735))+(((-1.0)*cj1*x733))+(((-1.0)*cj1*x737))+(((-1.0)*cj1*x731))+(((-1.0)*sj1*x736))+(((-1.0)*sj1*x730))+(((-1.0)*sj1*x732))+(((0.749999650312296)*cj4*x725))+(((0.250000349687704)*x725))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.749999650312296)*r02*x726))+((x728*x733))+((x728*x731))+((x727*x728))+((r20*x734))+(((-1.0)*sj1*x733))+(((-1.0)*sj1*x737))+(((-1.0)*sj1*x731))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x726*x732))+(((-1.0)*x726*x730))+((sj1*x729))+((cj1*x732))+((cj1*x730))+((cj1*x736))+(((-1.0)*r00*x735))), (((cj1*x729))+((x728*x732))+((x728*x730))+((x726*x727))+((x726*x733))+((x726*x731))+((r00*x734))+((r20*x735))+(((-1.0)*cj1*x733))+(((-1.0)*cj1*x737))+(((-1.0)*cj1*x731))+(((-1.0)*sj1*x736))+(((-1.0)*sj1*x730))+(((-1.0)*sj1*x732))+(((0.749999650312296)*cj4*x725))+(((0.250000349687704)*x725))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x738=IKcos(j2);
IkReal x739=IKsin(j2);
IkReal x740=((0.433012903784321)*sj3);
IkReal x741=((0.749999650312296)*sj3);
IkReal x742=(r00*sj5);
IkReal x743=(cj4*cj5);
IkReal x744=((1.0)*cj3);
IkReal x745=(cj5*r01);
IkReal x746=(r21*sj3);
IkReal x747=(cj4*sj5);
IkReal x748=(cj3*r21);
IkReal x749=((0.500000349687582)*sj4);
IkReal x750=((0.433012903784321)*r20);
IkReal x751=(cj4*r22);
IkReal x752=(r20*sj5);
IkReal x753=((0.0160344678271334)*r02);
IkReal x754=(cj4*r02);
IkReal x755=(r01*sj5);
IkReal x756=(cj5*r00);
IkReal x757=((0.0185150129489311)*sj4);
IkReal x758=(r21*sj5);
IkReal x759=(cj5*r21);
IkReal x760=((0.866025201892125)*sj4);
IkReal x761=(cj5*r20);
IkReal x762=((0.250000349687704)*sj3);
IkReal x763=(sj1*x738);
IkReal x764=(cj1*x738);
IkReal x765=(sj1*x739);
IkReal x766=(cj1*x739);
IkReal x767=((1.0)*x766);
evalcond[0]=((((-0.250000349687704)*r22))+(((0.433012903784321)*x759))+((x758*x760))+((sj5*x750))+(((-1.0)*x747*x750))+x764+x765+(((-0.749999650312296)*x751))+(((-1.0)*x760*x761))+(((-0.433012903784321)*r21*x743)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x745))+(((0.433012903784321)*x742))+(((-1.0)*x756*x760))+(((-0.433012903784321)*r01*x743))+(((-1.0)*x767))+(((-0.433012903784321)*cj4*x742))+x763+(((-0.749999650312296)*x754))+((x755*x760)));
evalcond[2]=(((x757*x761))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r21*x743))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x747))+(((0.0160344678271334)*x751))+(((-0.27144)*x764))+(((-0.27144)*x765))+(((0.0648043305514941)*x759))+(((0.0648043305514941)*x752))+(((-1.0)*x757*x758)));
evalcond[3]=(((x756*x757))+(((0.00925751294893567)*cj4*x742))+(((0.41)*sj1))+(((-1.0)*x755*x757))+(((-1.0)*px))+(((0.27144)*x766))+(((0.00925751294893567)*r01*x743))+(((0.0648043305514941)*x745))+(((0.0648043305514941)*x742))+(((-0.27144)*x763))+(((-1.0)*x753))+((cj4*x753)));
evalcond[4]=(((cj3*x749*x752))+((sj3*x749*x761))+((cj3*r22*x760))+((x747*x748))+(((-1.0)*x767))+(((0.250000349687704)*x743*x746))+(((-1.0)*r20*x743*x744))+(((-1.0)*r22*x740))+((x741*x759))+((x741*x752))+(((-1.0)*sj5*x746*x749))+((cj5*x748*x749))+((x740*x751))+((r20*x747*x762))+x763);
evalcond[5]=(((r01*x743*x762))+((cj3*x745*x749))+((sj3*x749*x756))+(((-1.0)*sj3*x749*x755))+((cj4*x742*x762))+((cj3*r01*x747))+((x741*x745))+((x741*x742))+((cj3*r02*x760))+(((-1.0)*r02*x740))+(((-1.0)*x765))+(((-1.0)*x764))+((x740*x754))+((cj3*x742*x749))+(((-1.0)*r00*x743*x744)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x768=((0.433012903784321)*cj5);
IkReal x769=((0.433012903784321)*cj4);
IkReal x770=(cj5*r01);
IkReal x771=((0.866025201892125)*sj4);
IkReal x772=((0.250000349687704)*cj4);
IkReal x773=(cj5*r00);
IkReal x774=((0.500000349687582)*sj4);
IkReal x775=(r00*sj5);
IkReal x776=(r01*sj5);
CheckValue<IkReal> x777=IKPowWithIntegerCheck(IKsign((((r22*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r20*(((((-1.0)*cj5*x771))+(((-1.0)*sj5*x769))+(((0.433012903784321)*sj5))))))+((r21*((x768+((sj5*x771))+(((-1.0)*cj4*x768)))))))),-1);
if(!x777.valid){
continue;
}
CheckValue<IkReal> x778 = IKatan2WithCheck(IkReal((((x774*x776))+(((0.433012903784321)*r02))+(((-1.0)*x772*x775))+(((-0.749999650312296)*x775))+(((-0.749999650312296)*x770))+(((-1.0)*r02*x769))+(((-1.0)*x773*x774))+(((-1.0)*x770*x772)))),IkReal(((((-1.0)*x774*x775))+(((-1.0)*r02*x771))+(((-1.0)*cj4*x776))+((cj4*x773))+(((-1.0)*x770*x774)))),IKFAST_ATAN2_MAGTHRESH);
if(!x778.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x777.value)))+(x778.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x779=IKsin(j3);
IkReal x780=IKcos(j3);
IkReal x781=(r11*sj5);
IkReal x782=(r10*sj5);
IkReal x783=(cj5*r20);
IkReal x784=(cj5*r11);
IkReal x785=(r00*sj5);
IkReal x786=(cj4*cj5);
IkReal x787=((0.500000349687582)*cj5);
IkReal x788=(r21*sj5);
IkReal x789=(r20*sj5);
IkReal x790=(r01*sj5);
IkReal x791=(sj4*x779);
IkReal x792=((1.0)*x779);
IkReal x793=((0.250000349687704)*x780);
IkReal x794=((0.749999650312296)*x780);
IkReal x795=((0.433012903784321)*cj4*r12);
IkReal x796=((0.749999650312296)*x779);
IkReal x797=(r12*x780);
IkReal x798=(cj4*x779);
IkReal x799=((0.500000349687582)*sj4*x780);
IkReal x800=((0.250000349687704)*x798);
IkReal x801=((0.433012903784321)*r02*x780);
IkReal x802=((0.433012903784321)*r22*x780);
evalcond[0]=((((-1.0)*cj4*x783*x792))+(((-1.0)*cj4*x802))+(((-1.0)*x783*x799))+(((-1.0)*r21*x786*x793))+(((-1.0)*cj4*x789*x793))+((x788*x799))+((x788*x798))+(((0.500000349687582)*x789*x791))+(((-1.0)*x789*x794))+((r21*x787*x791))+x802+(((0.866025201892125)*r22*x791))+(((-1.0)*cj5*r21*x794)));
evalcond[1]=((((-1.0)*cj4*x801))+((r01*x787*x791))+((x790*x798))+((x790*x799))+(((-1.0)*r01*x786*x793))+(((-1.0)*cj4*x785*x793))+(((-1.0)*r00*sj4*x780*x787))+(((-1.0)*r00*x786*x792))+(((0.866025201892125)*r02*x791))+(((-1.0)*x785*x794))+(((-1.0)*cj5*r01*x794))+x801+(((0.500000349687582)*x785*x791)));
evalcond[2]=(((x782*x800))+(((-0.500000349687582)*x781*x791))+(((0.866025201892125)*sj4*x797))+((x782*x799))+((x782*x796))+((r10*x787*x791))+((x779*x795))+((x784*x799))+((x784*x796))+(((-1.0)*r10*x780*x786))+((cj4*x780*x781))+((x784*x800))+(((-0.433012903784321)*r12*x779)));
evalcond[3]=((-1.0)+((x781*x799))+((x781*x798))+(((0.500000349687582)*x784*x791))+(((0.866025201892125)*r12*x791))+(((-1.0)*r10*x786*x792))+(((-1.0)*r10*sj4*x780*x787))+(((0.500000349687582)*x782*x791))+(((-1.0)*cj4*x782*x793))+(((0.433012903784321)*x797))+(((-1.0)*x784*x794))+(((-1.0)*x782*x794))+(((-1.0)*cj4*x784*x793))+(((-1.0)*x780*x795)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x803=(cj5*r21);
IkReal x804=((0.26409636501044)*cj4);
IkReal x805=((0.457427895740576)*cj4);
IkReal x806=((0.528192360616262)*sj4);
IkReal x807=(cj5*r01);
IkReal x808=((0.444735007694415)*sj5);
if( IKabs((((x804*x807))+((r00*sj5*x804))+(((-1.0)*r00*x808))+((r02*x805))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x807))+((cj5*r00*x806))+(((-1.0)*r01*sj5*x806))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x806))+(((0.204620884747229)*r22))+((r22*x805))+((r20*sj5*x804))+((x803*x804))+(((-1.0)*r20*x808))+(((-0.444735007694415)*x803))+(((-1.0)*r21*sj5*x806))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x804*x807))+((r00*sj5*x804))+(((-1.0)*r00*x808))+((r02*x805))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x807))+((cj5*r00*x806))+(((-1.0)*r01*sj5*x806))+(((2.4390243902439)*px))))+IKsqr((((cj5*r20*x806))+(((0.204620884747229)*r22))+((r22*x805))+((r20*sj5*x804))+((x803*x804))+(((-1.0)*r20*x808))+(((-0.444735007694415)*x803))+(((-1.0)*r21*sj5*x806))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((x804*x807))+((r00*sj5*x804))+(((-1.0)*r00*x808))+((r02*x805))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x807))+((cj5*r00*x806))+(((-1.0)*r01*sj5*x806))+(((2.4390243902439)*px))), (((cj5*r20*x806))+(((0.204620884747229)*r22))+((r22*x805))+((r20*sj5*x804))+((x803*x804))+(((-1.0)*r20*x808))+(((-0.444735007694415)*x803))+(((-1.0)*r21*sj5*x806))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x809=((0.187545437253636)*cj4);
IkReal x810=(cj5*r20);
IkReal x811=(r01*sj5);
IkReal x812=(cj5*r21);
IkReal x813=(cj3*r00);
IkReal x814=(sj4*sj5);
IkReal x815=((0.20357990508077)*sj3);
IkReal x816=(r20*sj5);
IkReal x817=(cj4*cj5);
IkReal x818=((0.00925751294893567)*cj4);
IkReal x819=((0.117537022603216)*sj3);
IkReal x820=((0.10827950965428)*cj4);
IkReal x821=(r00*sj5);
IkReal x822=(cj4*r22);
IkReal x823=(r21*sj5);
IkReal x824=((0.216558867852667)*sj4);
IkReal x825=((0.0185150129489311)*sj4);
IkReal x826=(cj3*sj4);
IkReal x827=(cj4*r02);
IkReal x828=(cj5*r01);
IkReal x829=((0.41)*(IKcos(j1)));
IkReal x830=((0.41)*(IKsin(j1)));
IkReal x831=((0.135720094919197)*sj3*sj4);
IkReal x832=((0.0678600949192303)*cj4*sj3);
IkReal x833=(cj5*r00*sj4);
IkReal x834=((0.27144)*cj3*cj4);
evalcond[0]=(((x820*x821))+((cj5*r00*x824))+(((-0.18234135315471)*x828))+(((-0.18234135315471)*x821))+(((-1.0)*x811*x824))+((r02*x809))+px+(((-1.0)*x830))+(((0.10827950965428)*r01*x817))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x812*x820))+(((-1.0)*x829))+((r22*x809))+((x816*x820))+(((-0.18234135315471)*x816))+(((-0.18234135315471)*x812))+(((-0.216558867852667)*r21*x814))+((x810*x824))+pz+(((0.0838945627463637)*r22)));
evalcond[2]=((((-1.0)*x812*x818))+(((-0.0160344678271334)*x822))+(((0.135720094919197)*x813*x814))+(((-0.27144)*x813*x817))+(((-1.0)*x816*x818))+((x821*x832))+((x815*x828))+((x815*x821))+(((-1.0)*x829))+(((0.235073880801598)*r02*x826))+((x819*x827))+(((-1.0)*x810*x825))+((cj5*r00*x831))+(((-1.0)*x811*x831))+(((-0.0648043305514941)*x816))+(((-0.0648043305514941)*x812))+pz+(((0.0160344678271334)*r22))+((x811*x834))+(((-1.0)*r02*x819))+(((0.135720094919197)*x826*x828))+(((0.0678600949192303)*r01*sj3*x817))+(((0.0185150129489311)*r21*x814)));
evalcond[3]=(((x812*x832))+(((0.0160344678271334)*x827))+((x815*x816))+(((0.135720094919197)*cj3*r20*x814))+(((0.135720094919197)*x812*x826))+(((-0.135720094919197)*r21*sj3*x814))+((cj5*r00*x825))+(((-0.0160344678271334)*r02))+((x816*x832))+(((-1.0)*x810*x834))+((x812*x815))+((x819*x822))+(((-1.0)*x811*x825))+(((0.00925751294893567)*r01*x817))+(((-1.0)*px))+(((0.0648043305514941)*x828))+(((0.0648043305514941)*x821))+((x823*x834))+((x818*x821))+((x810*x831))+(((-1.0)*r22*x819))+(((0.235073880801598)*r22*x826))+x830);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x835=(r02*sj1);
IkReal x836=(cj1*cj4);
IkReal x837=((0.749999650312296)*r22);
IkReal x838=(cj4*sj1);
IkReal x839=((0.250000349687704)*r22);
IkReal x840=((0.433012903784321)*r00*sj5);
IkReal x841=((0.433012903784321)*r20*sj5);
IkReal x842=((0.433012903784321)*cj5*r01);
IkReal x843=((0.433012903784321)*cj5*r21);
IkReal x844=((0.866025201892125)*cj5*sj1*sj4);
IkReal x845=((0.866025201892125)*cj1*cj5*sj4);
IkReal x846=((0.866025201892125)*r01*sj4*sj5);
IkReal x847=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x838*x841))+((x838*x843))+((cj1*x842))+((cj1*x840))+((cj1*x846))+(((-0.749999650312296)*r02*x836))+(((-1.0)*x836*x840))+(((-1.0)*x836*x842))+((r20*x844))+((x837*x838))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x845))+((sj1*x839))+(((-1.0)*sj1*x847))+(((-1.0)*sj1*x843))+(((-1.0)*sj1*x841)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x838*x840))+((x838*x842))+((r20*x845))+((x836*x837))+((r00*x844))+((x836*x841))+((x836*x843))+(((0.749999650312296)*cj4*x835))+(((-1.0)*sj1*x842))+(((-1.0)*sj1*x840))+(((-1.0)*sj1*x846))+(((0.250000349687704)*x835))+(((-1.0)*cj1*x847))+(((-1.0)*cj1*x841))+(((-1.0)*cj1*x843))+((cj1*x839)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x838*x841))+((x838*x843))+((cj1*x842))+((cj1*x840))+((cj1*x846))+(((-0.749999650312296)*r02*x836))+(((-1.0)*x836*x840))+(((-1.0)*x836*x842))+((r20*x844))+((x837*x838))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x845))+((sj1*x839))+(((-1.0)*sj1*x847))+(((-1.0)*sj1*x843))+(((-1.0)*sj1*x841))))+IKsqr((((x838*x840))+((x838*x842))+((r20*x845))+((x836*x837))+((r00*x844))+((x836*x841))+((x836*x843))+(((0.749999650312296)*cj4*x835))+(((-1.0)*sj1*x842))+(((-1.0)*sj1*x840))+(((-1.0)*sj1*x846))+(((0.250000349687704)*x835))+(((-1.0)*cj1*x847))+(((-1.0)*cj1*x841))+(((-1.0)*cj1*x843))+((cj1*x839))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x838*x841))+((x838*x843))+((cj1*x842))+((cj1*x840))+((cj1*x846))+(((-0.749999650312296)*r02*x836))+(((-1.0)*x836*x840))+(((-1.0)*x836*x842))+((r20*x844))+((x837*x838))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x845))+((sj1*x839))+(((-1.0)*sj1*x847))+(((-1.0)*sj1*x843))+(((-1.0)*sj1*x841))), (((x838*x840))+((x838*x842))+((r20*x845))+((x836*x837))+((r00*x844))+((x836*x841))+((x836*x843))+(((0.749999650312296)*cj4*x835))+(((-1.0)*sj1*x842))+(((-1.0)*sj1*x840))+(((-1.0)*sj1*x846))+(((0.250000349687704)*x835))+(((-1.0)*cj1*x847))+(((-1.0)*cj1*x841))+(((-1.0)*cj1*x843))+((cj1*x839))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x848=IKcos(j2);
IkReal x849=IKsin(j2);
IkReal x850=((0.433012903784321)*sj3);
IkReal x851=((0.749999650312296)*sj3);
IkReal x852=(r00*sj5);
IkReal x853=(cj4*cj5);
IkReal x854=((1.0)*cj3);
IkReal x855=(cj5*r01);
IkReal x856=(r21*sj3);
IkReal x857=(cj4*sj5);
IkReal x858=(cj3*r21);
IkReal x859=((0.500000349687582)*sj4);
IkReal x860=((0.433012903784321)*r20);
IkReal x861=(cj4*r22);
IkReal x862=(r20*sj5);
IkReal x863=((0.0160344678271334)*r02);
IkReal x864=(cj4*r02);
IkReal x865=(r01*sj5);
IkReal x866=(cj5*r00);
IkReal x867=((0.0185150129489311)*sj4);
IkReal x868=(r21*sj5);
IkReal x869=(cj5*r21);
IkReal x870=((0.866025201892125)*sj4);
IkReal x871=(cj5*r20);
IkReal x872=((0.250000349687704)*sj3);
IkReal x873=(sj1*x848);
IkReal x874=(cj1*x848);
IkReal x875=(sj1*x849);
IkReal x876=(cj1*x849);
IkReal x877=((1.0)*x876);
evalcond[0]=((((-0.250000349687704)*r22))+((x868*x870))+((sj5*x860))+(((0.433012903784321)*x869))+(((-0.749999650312296)*x861))+(((-1.0)*x870*x871))+x874+x875+(((-0.433012903784321)*r21*x853))+(((-1.0)*x857*x860)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x866*x870))+(((-0.433012903784321)*cj4*x852))+(((-0.749999650312296)*x864))+(((0.433012903784321)*x852))+(((0.433012903784321)*x855))+x873+(((-0.433012903784321)*r01*x853))+((x865*x870))+(((-1.0)*x877)));
evalcond[2]=((((0.00925751294893567)*r20*x857))+((x867*x871))+(((0.00925751294893567)*r21*x853))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x874))+(((-0.27144)*x875))+(((-1.0)*pz))+(((0.0160344678271334)*x861))+(((-1.0)*x867*x868))+(((0.0648043305514941)*x862))+(((0.0648043305514941)*x869)));
evalcond[3]=((((-1.0)*x863))+(((0.0648043305514941)*x855))+(((0.0648043305514941)*x852))+(((-1.0)*x865*x867))+(((0.41)*sj1))+(((-0.27144)*x873))+((x866*x867))+(((0.00925751294893567)*cj4*x852))+(((-1.0)*px))+(((0.27144)*x876))+((cj4*x863))+(((0.00925751294893567)*r01*x853)));
evalcond[4]=((((-1.0)*r22*x850))+((cj5*x858*x859))+((x850*x861))+((x851*x869))+((x851*x862))+(((-1.0)*sj5*x856*x859))+((sj3*x859*x871))+((cj3*r22*x870))+((x857*x858))+(((0.250000349687704)*x853*x856))+x873+(((-1.0)*r20*x853*x854))+((cj3*x859*x862))+((r20*x857*x872))+(((-1.0)*x877)));
evalcond[5]=(((x850*x864))+((cj3*r02*x870))+(((-1.0)*r00*x853*x854))+(((-1.0)*x874))+(((-1.0)*x875))+(((-1.0)*r02*x850))+((cj3*x852*x859))+((cj3*r01*x857))+((r01*x853*x872))+((x851*x852))+((x851*x855))+((sj3*x859*x866))+((cj3*x855*x859))+(((-1.0)*sj3*x859*x865))+((cj4*x852*x872)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x878=((0.433012903784321)*cj5);
IkReal x879=((0.866025201892125)*sj4);
IkReal x880=((0.433012903784321)*r22);
IkReal x881=(cj4*sj5);
IkReal x882=(cj5*r21);
IkReal x883=(r20*sj5);
IkReal x884=((0.500000349687582)*sj4);
IkReal x885=(cj5*x884);
CheckValue<IkReal> x886 = IKatan2WithCheck(IkReal(((((-0.250000349687704)*cj4*x882))+((r21*sj5*x884))+(((-0.749999650312296)*x883))+(((-0.749999650312296)*x882))+(((-0.250000349687704)*r20*x881))+(((-1.0)*cj4*x880))+x880+(((-1.0)*r20*x885)))),IkReal(((((-1.0)*x883*x884))+(((-1.0)*x882*x884))+(((-1.0)*r21*x881))+((cj4*cj5*r20))+(((-1.0)*r22*x879)))),IKFAST_ATAN2_MAGTHRESH);
if(!x886.valid){
continue;
}
CheckValue<IkReal> x887=IKPowWithIntegerCheck(IKsign((((r02*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r00*(((((0.433012903784321)*x881))+(((-0.433012903784321)*sj5))+((cj5*x879))))))+((r01*(((((-1.0)*sj5*x879))+((cj4*x878))+(((-1.0)*x878)))))))),-1);
if(!x887.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x886.value)+(((1.5707963267949)*(x887.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x888=IKsin(j3);
IkReal x889=IKcos(j3);
IkReal x890=(r11*sj5);
IkReal x891=(r10*sj5);
IkReal x892=(cj5*r20);
IkReal x893=(cj5*r11);
IkReal x894=(r00*sj5);
IkReal x895=(cj4*cj5);
IkReal x896=((0.500000349687582)*cj5);
IkReal x897=(r21*sj5);
IkReal x898=(r20*sj5);
IkReal x899=(r01*sj5);
IkReal x900=(sj4*x888);
IkReal x901=((1.0)*x888);
IkReal x902=((0.250000349687704)*x889);
IkReal x903=((0.749999650312296)*x889);
IkReal x904=((0.433012903784321)*cj4*r12);
IkReal x905=((0.749999650312296)*x888);
IkReal x906=(r12*x889);
IkReal x907=(cj4*x888);
IkReal x908=((0.500000349687582)*sj4*x889);
IkReal x909=((0.250000349687704)*x907);
IkReal x910=((0.433012903784321)*r02*x889);
IkReal x911=((0.433012903784321)*r22*x889);
evalcond[0]=((((-1.0)*cj4*x892*x901))+((r21*x896*x900))+(((0.866025201892125)*r22*x900))+((x897*x907))+((x897*x908))+(((-1.0)*cj5*r21*x903))+(((-1.0)*x898*x903))+(((-1.0)*x892*x908))+(((-1.0)*cj4*x911))+(((-1.0)*cj4*x898*x902))+(((-1.0)*r21*x895*x902))+x911+(((0.500000349687582)*x898*x900)));
evalcond[1]=((((-1.0)*x894*x903))+(((0.866025201892125)*r02*x900))+(((-1.0)*cj5*r01*x903))+((r01*x896*x900))+(((-1.0)*r00*x895*x901))+(((-1.0)*r01*x895*x902))+((x899*x907))+((x899*x908))+(((-1.0)*cj4*x910))+(((0.500000349687582)*x894*x900))+(((-1.0)*cj4*x894*x902))+x910+(((-1.0)*r00*sj4*x889*x896)));
evalcond[2]=(((r10*x896*x900))+((x891*x905))+((x891*x909))+((x891*x908))+((x893*x905))+((x893*x908))+((x893*x909))+(((0.866025201892125)*sj4*x906))+((cj4*x889*x890))+(((-0.500000349687582)*x890*x900))+(((-0.433012903784321)*r12*x888))+((x888*x904))+(((-1.0)*r10*x889*x895)));
evalcond[3]=((-1.0)+(((-1.0)*x891*x903))+(((-1.0)*cj4*x893*x902))+(((-1.0)*x893*x903))+((x890*x908))+((x890*x907))+(((-1.0)*r10*sj4*x889*x896))+(((-1.0)*x889*x904))+(((0.866025201892125)*r12*x900))+(((0.500000349687582)*x893*x900))+(((0.433012903784321)*x906))+(((0.500000349687582)*x891*x900))+(((-1.0)*r10*x895*x901))+(((-1.0)*cj4*x891*x902)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x912=(cj5*r21);
IkReal x913=((0.26409636501044)*cj4);
IkReal x914=((0.457427895740576)*cj4);
IkReal x915=((0.528192360616262)*sj4);
IkReal x916=(cj5*r01);
IkReal x917=((0.444735007694415)*sj5);
if( IKabs((((r02*x914))+(((-1.0)*r00*x917))+(((-1.0)*r01*sj5*x915))+(((0.204620884747229)*r02))+((r00*sj5*x913))+((cj5*r00*x915))+((x913*x916))+(((-0.444735007694415)*x916))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x915))+(((0.204620884747229)*r22))+((r20*sj5*x913))+(((-1.0)*r20*x917))+(((-1.0)*r21*sj5*x915))+((r22*x914))+((x912*x913))+(((-0.444735007694415)*x912))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r02*x914))+(((-1.0)*r00*x917))+(((-1.0)*r01*sj5*x915))+(((0.204620884747229)*r02))+((r00*sj5*x913))+((cj5*r00*x915))+((x913*x916))+(((-0.444735007694415)*x916))+(((2.4390243902439)*px))))+IKsqr((((cj5*r20*x915))+(((0.204620884747229)*r22))+((r20*sj5*x913))+(((-1.0)*r20*x917))+(((-1.0)*r21*sj5*x915))+((r22*x914))+((x912*x913))+(((-0.444735007694415)*x912))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r02*x914))+(((-1.0)*r00*x917))+(((-1.0)*r01*sj5*x915))+(((0.204620884747229)*r02))+((r00*sj5*x913))+((cj5*r00*x915))+((x913*x916))+(((-0.444735007694415)*x916))+(((2.4390243902439)*px))), (((cj5*r20*x915))+(((0.204620884747229)*r22))+((r20*sj5*x913))+(((-1.0)*r20*x917))+(((-1.0)*r21*sj5*x915))+((r22*x914))+((x912*x913))+(((-0.444735007694415)*x912))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x918=((0.187545437253636)*cj4);
IkReal x919=(cj5*r20);
IkReal x920=(r01*sj5);
IkReal x921=(cj5*r21);
IkReal x922=(cj3*r00);
IkReal x923=(sj4*sj5);
IkReal x924=((0.20357990508077)*sj3);
IkReal x925=(r20*sj5);
IkReal x926=(cj4*cj5);
IkReal x927=((0.00925751294893567)*cj4);
IkReal x928=((0.117537022603216)*sj3);
IkReal x929=((0.10827950965428)*cj4);
IkReal x930=(r00*sj5);
IkReal x931=(cj4*r22);
IkReal x932=(r21*sj5);
IkReal x933=((0.216558867852667)*sj4);
IkReal x934=((0.0185150129489311)*sj4);
IkReal x935=(cj3*sj4);
IkReal x936=(cj4*r02);
IkReal x937=(cj5*r01);
IkReal x938=((0.41)*(IKcos(j1)));
IkReal x939=((0.41)*(IKsin(j1)));
IkReal x940=((0.135720094919197)*sj3*sj4);
IkReal x941=((0.0678600949192303)*cj4*sj3);
IkReal x942=(cj5*r00*sj4);
IkReal x943=((0.27144)*cj3*cj4);
evalcond[0]=((((-0.18234135315471)*x937))+(((-0.18234135315471)*x930))+((cj5*r00*x933))+((r02*x918))+(((-1.0)*x920*x933))+(((0.10827950965428)*r01*x926))+px+((x929*x930))+(((0.0838945627463637)*r02))+(((-1.0)*x939)));
evalcond[1]=(((x919*x933))+(((-0.18234135315471)*x921))+(((-0.18234135315471)*x925))+((x921*x929))+(((-0.216558867852667)*r21*x923))+pz+((r22*x918))+((x925*x929))+(((0.0838945627463637)*r22))+(((-1.0)*x938)));
evalcond[2]=((((-0.0648043305514941)*x925))+(((-0.0648043305514941)*x921))+(((0.0185150129489311)*r21*x923))+(((0.0678600949192303)*r01*sj3*x926))+(((-1.0)*x925*x927))+((x924*x937))+((x924*x930))+((x928*x936))+(((-1.0)*r02*x928))+((x930*x941))+(((-0.0160344678271334)*x931))+(((0.135720094919197)*x935*x937))+pz+(((0.235073880801598)*r02*x935))+((cj5*r00*x940))+(((0.0160344678271334)*r22))+(((-1.0)*x921*x927))+(((-1.0)*x919*x934))+((x920*x943))+(((0.135720094919197)*x922*x923))+(((-1.0)*x920*x940))+(((-0.27144)*x922*x926))+(((-1.0)*x938)));
evalcond[3]=((((0.0648043305514941)*x937))+(((0.0648043305514941)*x930))+((x919*x940))+(((0.135720094919197)*x921*x935))+((x932*x943))+((x924*x925))+(((-0.0160344678271334)*r02))+(((-1.0)*r22*x928))+((x927*x930))+((x928*x931))+((cj5*r00*x934))+(((0.235073880801598)*r22*x935))+(((0.135720094919197)*cj3*r20*x923))+((x921*x924))+(((-1.0)*x920*x934))+((x921*x941))+((x925*x941))+(((-1.0)*px))+(((-0.135720094919197)*r21*sj3*x923))+(((-1.0)*x919*x943))+(((0.00925751294893567)*r01*x926))+x939+(((0.0160344678271334)*x936)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x944=(r02*sj1);
IkReal x945=(cj1*cj4);
IkReal x946=((0.749999650312296)*r22);
IkReal x947=(cj4*sj1);
IkReal x948=((0.250000349687704)*r22);
IkReal x949=((0.433012903784321)*r00*sj5);
IkReal x950=((0.433012903784321)*r20*sj5);
IkReal x951=((0.433012903784321)*cj5*r01);
IkReal x952=((0.433012903784321)*cj5*r21);
IkReal x953=((0.866025201892125)*cj5*sj1*sj4);
IkReal x954=((0.866025201892125)*cj1*cj5*sj4);
IkReal x955=((0.866025201892125)*r01*sj4*sj5);
IkReal x956=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x946*x947))+(((-1.0)*x945*x949))+((sj1*x948))+(((-1.0)*r00*x954))+((cj1*x955))+((cj1*x951))+((cj1*x949))+((x947*x950))+((x947*x952))+(((-1.0)*sj1*x950))+(((-1.0)*sj1*x952))+(((-1.0)*sj1*x956))+(((-0.749999650312296)*r02*x945))+((r20*x953))+(((-1.0)*x945*x951))+(((-0.250000349687704)*cj1*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x956))+(((-1.0)*cj1*x952))+(((-1.0)*cj1*x950))+((x945*x946))+((x947*x949))+(((0.749999650312296)*cj4*x944))+((cj1*x948))+((r00*x953))+((x947*x951))+(((-1.0)*sj1*x951))+(((-1.0)*sj1*x955))+((r20*x954))+((x945*x950))+((x945*x952))+(((0.250000349687704)*x944))+(((-1.0)*sj1*x949)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x946*x947))+(((-1.0)*x945*x949))+((sj1*x948))+(((-1.0)*r00*x954))+((cj1*x955))+((cj1*x951))+((cj1*x949))+((x947*x950))+((x947*x952))+(((-1.0)*sj1*x950))+(((-1.0)*sj1*x952))+(((-1.0)*sj1*x956))+(((-0.749999650312296)*r02*x945))+((r20*x953))+(((-1.0)*x945*x951))+(((-0.250000349687704)*cj1*r02))))+IKsqr(((((-1.0)*cj1*x956))+(((-1.0)*cj1*x952))+(((-1.0)*cj1*x950))+((x945*x946))+((x947*x949))+(((0.749999650312296)*cj4*x944))+((cj1*x948))+((r00*x953))+((x947*x951))+(((-1.0)*sj1*x951))+(((-1.0)*sj1*x955))+((r20*x954))+((x945*x950))+((x945*x952))+(((0.250000349687704)*x944))+(((-1.0)*sj1*x949))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x946*x947))+(((-1.0)*x945*x949))+((sj1*x948))+(((-1.0)*r00*x954))+((cj1*x955))+((cj1*x951))+((cj1*x949))+((x947*x950))+((x947*x952))+(((-1.0)*sj1*x950))+(((-1.0)*sj1*x952))+(((-1.0)*sj1*x956))+(((-0.749999650312296)*r02*x945))+((r20*x953))+(((-1.0)*x945*x951))+(((-0.250000349687704)*cj1*r02))), ((((-1.0)*cj1*x956))+(((-1.0)*cj1*x952))+(((-1.0)*cj1*x950))+((x945*x946))+((x947*x949))+(((0.749999650312296)*cj4*x944))+((cj1*x948))+((r00*x953))+((x947*x951))+(((-1.0)*sj1*x951))+(((-1.0)*sj1*x955))+((r20*x954))+((x945*x950))+((x945*x952))+(((0.250000349687704)*x944))+(((-1.0)*sj1*x949))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x957=IKcos(j2);
IkReal x958=IKsin(j2);
IkReal x959=((0.433012903784321)*sj3);
IkReal x960=((0.749999650312296)*sj3);
IkReal x961=(r00*sj5);
IkReal x962=(cj4*cj5);
IkReal x963=((1.0)*cj3);
IkReal x964=(cj5*r01);
IkReal x965=(r21*sj3);
IkReal x966=(cj4*sj5);
IkReal x967=(cj3*r21);
IkReal x968=((0.500000349687582)*sj4);
IkReal x969=((0.433012903784321)*r20);
IkReal x970=(cj4*r22);
IkReal x971=(r20*sj5);
IkReal x972=((0.0160344678271334)*r02);
IkReal x973=(cj4*r02);
IkReal x974=(r01*sj5);
IkReal x975=(cj5*r00);
IkReal x976=((0.0185150129489311)*sj4);
IkReal x977=(r21*sj5);
IkReal x978=(cj5*r21);
IkReal x979=((0.866025201892125)*sj4);
IkReal x980=(cj5*r20);
IkReal x981=((0.250000349687704)*sj3);
IkReal x982=(sj1*x957);
IkReal x983=(cj1*x957);
IkReal x984=(sj1*x958);
IkReal x985=(cj1*x958);
IkReal x986=((1.0)*x985);
evalcond[0]=((((-0.250000349687704)*r22))+((x977*x979))+(((0.433012903784321)*x978))+(((-1.0)*x966*x969))+(((-0.749999650312296)*x970))+(((-1.0)*x979*x980))+x984+x983+((sj5*x969))+(((-0.433012903784321)*r21*x962)));
evalcond[1]=((((-1.0)*x986))+(((-0.250000349687704)*r02))+(((0.433012903784321)*x964))+(((0.433012903784321)*x961))+(((-0.749999650312296)*x973))+(((-0.433012903784321)*r01*x962))+((x974*x979))+(((-0.433012903784321)*cj4*x961))+x982+(((-1.0)*x975*x979)));
evalcond[2]=((((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x976*x980))+(((-1.0)*pz))+(((0.0648043305514941)*x978))+(((0.0648043305514941)*x971))+(((0.00925751294893567)*r21*x962))+(((0.00925751294893567)*r20*x966))+(((-1.0)*x976*x977))+(((0.0160344678271334)*x970))+(((-0.27144)*x984))+(((-0.27144)*x983)));
evalcond[3]=(((x975*x976))+((cj4*x972))+(((0.41)*sj1))+(((0.0648043305514941)*x964))+(((0.0648043305514941)*x961))+(((0.00925751294893567)*cj4*x961))+(((-1.0)*x974*x976))+(((-1.0)*px))+(((0.00925751294893567)*r01*x962))+(((-0.27144)*x982))+(((0.27144)*x985))+(((-1.0)*x972)));
evalcond[4]=((((-1.0)*x986))+((cj3*x968*x971))+(((-1.0)*sj5*x965*x968))+((r20*x966*x981))+(((0.250000349687704)*x962*x965))+(((-1.0)*r20*x962*x963))+((x960*x971))+((x960*x978))+((cj5*x967*x968))+((x959*x970))+(((-1.0)*r22*x959))+((x966*x967))+((cj3*r22*x979))+x982+((sj3*x968*x980)));
evalcond[5]=(((cj3*r02*x979))+((cj3*x961*x968))+(((-1.0)*x983))+(((-1.0)*x984))+((cj3*x964*x968))+((cj3*r01*x966))+((x960*x964))+((x960*x961))+((x959*x973))+(((-1.0)*sj3*x968*x974))+((r01*x962*x981))+((cj4*x961*x981))+(((-1.0)*r00*x962*x963))+(((-1.0)*r02*x959))+((sj3*x968*x975)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x987=(cj4*r12);
IkReal x988=(r10*sj5);
IkReal x989=((0.433012903784321)*cj5*r11);
IkReal x990=(cj5*r10*sj4);
IkReal x991=(r11*sj4*sj5);
IkReal x992=((1.73204919243206)*cj5*r11);
j3eval[0]=((((-1.0)*cj4*x992))+(((1.73204919243206)*x988))+(((-1.73204919243206)*cj4*x988))+(((-1.0)*r12))+(((-2.99999440500457)*x987))+x992+(((-3.46409596216145)*x990))+(((3.46409596216145)*x991)));
j3eval[1]=IKsign(((((-0.250000349687704)*r12))+(((0.433012903784321)*x988))+(((0.866025201892125)*x991))+(((-0.749999650312296)*x987))+x989+(((-0.433012903784321)*cj4*x988))+(((-1.0)*cj4*x989))+(((-0.866025201892125)*x990))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x993=(cj4*r22);
IkReal x994=(cj5*r21);
IkReal x995=((0.866025201892125)*sj4);
IkReal x996=(cj5*r20);
IkReal x997=(r21*sj5);
IkReal x998=((3.46409596216145)*sj4);
IkReal x999=(r20*sj5);
IkReal x1000=(cj4*x999);
j3eval[0]=((((1.73204919243206)*cj4*x994))+(((2.99999440500457)*x993))+(((-1.73204919243206)*x994))+(((-1.73204919243206)*x999))+(((-1.0)*x997*x998))+(((1.73204919243206)*x1000))+r22+((x996*x998)));
j3eval[1]=IKsign(((((-0.433012903784321)*x994))+(((-0.433012903784321)*x999))+(((-1.0)*x995*x997))+(((0.433012903784321)*cj4*x994))+(((0.250000349687704)*r22))+(((0.433012903784321)*x1000))+(((0.749999650312296)*x993))+((x995*x996))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x1001=cj5*cj5;
IkReal x1002=r01*r01;
IkReal x1003=r00*r00;
IkReal x1004=cj4*cj4;
IkReal x1005=r02*r02;
IkReal x1006=((3.9999972025013)*sj4);
IkReal x1007=(r00*r01);
IkReal x1008=(cj5*sj4);
IkReal x1009=(r00*r02);
IkReal x1010=(cj4*sj4);
IkReal x1011=(r01*r02);
IkReal x1012=(cj5*sj5);
IkReal x1013=((0.375000349687459)*cj4);
IkReal x1014=((2.309396769726)*cj4);
IkReal x1015=((0.433012298107169)*cj4);
IkReal x1016=(sj4*sj5);
IkReal x1017=((2.0)*cj4);
IkReal x1018=(cj4*x1012);
IkReal x1019=((0.750000174843424)*x1002);
IkReal x1020=((1.50000034968685)*x1001);
IkReal x1021=((0.649519052837905)*x1004);
IkReal x1022=((0.937499825156026)*x1004);
IkReal x1023=((3.46409838486413)*x1004);
IkReal x1024=((4.99999440500457)*x1004);
IkReal x1025=((0.750000174843424)*x1003);
IkReal x1026=((7.99999440500261)*x1001);
IkReal x1027=(x1004*x1005);
IkReal x1028=(x1001*x1003);
IkReal x1029=(x1001*x1002);
IkReal x1030=(x1003*x1004);
IkReal x1031=(x1002*x1004);
j3eval[0]=((((-1.0)*sj5*x1009*x1023))+(((-1.0)*cj5*x1011*x1023))+((x1017*x1029))+(((3.99999440500457)*x1031))+((x1003*x1006*x1012))+((sj5*x1009*x1014))+(((6.9281919243229)*sj5*x1010*x1011))+(((-1.0)*x1030))+(((-2.30940161513813)*x1008*x1009))+((x1003*x1017))+((sj4*x1007*x1026))+(((-1.0)*x1005*x1017))+(((-6.9281919243229)*cj4*x1008*x1009))+(((-1.0)*x1002*x1006*x1012))+(((-1.0)*x1006*x1007))+((x1002*x1006*x1018))+(((4.99999440500457)*x1005))+((cj5*x1011*x1014))+(((1.15470161513813)*cj5*x1011))+(((-1.0)*x1007*x1010*x1026))+(((1.15470161513813)*sj5*x1009))+(((4.33332836000522)*x1003))+(((-9.99998881000913)*x1004*x1007*x1012))+(((5.99998881000913)*x1007*x1012))+(((-1.0)*x1017*x1028))+((x1024*x1028))+(((4.0)*x1007*x1018))+(((-2.99999440500457)*x1028))+(((-2.99999440500457)*x1027))+(((2.30940161513813)*x1011*x1016))+(((-1.0)*x1024*x1029))+(((1.33333395500065)*x1002))+(((2.99999440500457)*x1029))+((cj4*x1006*x1007))+(((-1.0)*x1003*x1006*x1018)));
j3eval[1]=IKsign(((((-1.0)*sj5*x1009*x1021))+(((-1.0)*cj5*x1011*x1021))+(((-0.18750017484373)*x1030))+(((-0.562499475468567)*x1027))+(((-0.562499475468567)*x1028))+((sj5*x1009*x1015))+((x1003*x1013))+(((0.749999650312296)*x1031))+((sj4*x1007*x1020))+(((-1.0)*x1022*x1029))+(((-1.0)*x1005*x1013))+(((0.750000699374918)*x1007*x1018))+(((-1.29903719716146)*cj4*x1008*x1009))+(((-0.433013206622791)*x1008*x1009))+(((-0.750000174843424)*sj4*x1007))+(((-1.0)*sj5*x1008*x1019))+(((0.750000174843424)*x1007*x1010))+(((0.250000349687704)*x1002))+(((0.937499825156026)*x1005))+(((1.12499895093713)*x1007*x1012))+((sj5*x1008*x1025))+(((0.433013206622791)*x1011*x1016))+((cj5*x1011*x1015))+(((1.29903719716146)*sj5*x1010*x1011))+((x1022*x1028))+(((0.216506754730737)*sj5*x1009))+(((0.562499475468567)*x1029))+(((-1.0)*x1007*x1010*x1020))+(((0.81249982515627)*x1003))+((cj4*sj5*x1008*x1019))+((x1013*x1029))+(((-1.87499965031205)*x1004*x1007*x1012))+(((-1.0)*x1013*x1028))+(((-1.0)*cj4*sj5*x1008*x1025))+(((0.216506754730737)*cj5*x1011))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1032=r00*r00;
IkReal x1033=cj5*cj5;
IkReal x1034=r01*r01;
IkReal x1035=cj4*cj4;
IkReal x1036=r02*r02;
IkReal x1037=(sj4*sj5);
IkReal x1038=((0.500000349687582)*r01);
IkReal x1039=(r00*r02);
IkReal x1040=(cj4*r02);
IkReal x1041=(cj5*sj4);
IkReal x1042=(cj5*r01);
IkReal x1043=(cj4*r00);
IkReal x1044=(r00*sj5);
IkReal x1045=(r01*sj4);
IkReal x1046=((0.500000349687582)*r00);
IkReal x1047=((0.375000349687459)*cj4);
IkReal x1048=(cj4*sj5);
IkReal x1049=((0.937499825156026)*x1035);
IkReal x1050=((0.649519052837905)*x1035);
IkReal x1051=((1.50000034968685)*x1033);
IkReal x1052=((0.750000174843424)*cj5*x1034);
IkReal x1053=(x1032*x1033);
IkReal x1054=(x1033*x1034);
IkReal x1055=((0.750000174843424)*cj5*x1032);
CheckValue<IkReal> x1056=IKPowWithIntegerCheck(IKsign(((((0.562499475468567)*x1054))+(((1.29903719716146)*r01*x1037*x1040))+(((0.750000174843424)*x1043*x1045))+(((0.433013206622791)*r01*r02*x1037))+((x1037*x1055))+(((-1.0)*x1043*x1045*x1051))+(((-0.18750017484373)*x1032*x1035))+(((-0.562499475468567)*x1035*x1036))+(((1.12499895093713)*x1042*x1044))+(((-1.29903719716146)*cj4*x1039*x1041))+(((0.250000349687704)*x1034))+(((-1.0)*cj4*x1037*x1055))+(((-0.750000174843424)*r00*x1045))+(((-0.433013206622791)*x1039*x1041))+(((0.937499825156026)*x1036))+(((-1.0)*r02*x1042*x1050))+(((-0.562499475468567)*x1053))+((cj4*x1037*x1052))+(((-1.0)*x1037*x1052))+(((-1.87499965031205)*x1035*x1042*x1044))+(((0.216506754730737)*sj5*x1039))+((x1049*x1053))+(((0.81249982515627)*x1032))+((x1032*x1047))+(((0.216506754730737)*r02*x1042))+(((-1.0)*sj5*x1039*x1050))+((x1047*x1054))+(((0.433012298107169)*x1040*x1042))+(((0.750000699374918)*sj5*x1042*x1043))+(((-1.0)*x1036*x1047))+((r00*x1045*x1051))+(((-1.0)*x1049*x1054))+(((0.749999650312296)*x1034*x1035))+(((-1.0)*x1047*x1053))+(((0.433012298107169)*x1039*x1048)))),-1);
if(!x1056.valid){
continue;
}
CheckValue<IkReal> x1057 = IKatan2WithCheck(IkReal((((x1038*x1041))+(((0.866025201892125)*r02*sj4))+((x1037*x1046))+(((-1.0)*cj5*x1043))+((r01*x1048)))),IkReal(((((-0.250000349687704)*sj5*x1043))+(((-0.749999650312296)*x1044))+(((-0.749999650312296)*x1042))+(((-0.433012903784321)*x1040))+(((-1.0)*x1041*x1046))+(((0.433012903784321)*r02))+((x1037*x1038))+(((-0.250000349687704)*cj4*x1042)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1057.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1056.value)))+(x1057.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1058=IKsin(j3);
IkReal x1059=IKcos(j3);
IkReal x1060=((0.749999650312296)*r00);
IkReal x1061=(cj5*r20);
IkReal x1062=(cj4*cj5);
IkReal x1063=(cj5*r01);
IkReal x1064=(cj4*r00);
IkReal x1065=(cj4*sj5);
IkReal x1066=((0.500000349687582)*sj4);
IkReal x1067=((0.433012903784321)*r02);
IkReal x1068=((0.866025201892125)*sj4);
IkReal x1069=((0.433012903784321)*r22);
IkReal x1070=(sj5*x1058);
IkReal x1071=(r01*x1066);
IkReal x1072=((1.0)*x1058);
IkReal x1073=((0.250000349687704)*x1059);
IkReal x1074=(cj5*x1058);
IkReal x1075=(cj4*x1059);
IkReal x1076=(x1059*x1066);
IkReal x1077=((0.433012903784321)*r12*x1059);
IkReal x1078=((0.749999650312296)*sj5*x1059);
IkReal x1079=((0.749999650312296)*cj5*x1059);
evalcond[0]=((((-1.0)*r20*x1078))+(((-1.0)*r21*x1079))+((r22*x1058*x1068))+((r21*x1066*x1074))+(((-1.0)*r21*x1062*x1073))+((r21*x1058*x1065))+(((-1.0)*x1061*x1076))+(((-1.0)*r20*x1065*x1073))+(((-1.0)*cj4*x1061*x1072))+((r21*sj5*x1076))+((x1059*x1069))+(((-1.0)*x1069*x1075))+((r20*x1066*x1070)));
evalcond[1]=((((-1.0)*r10*x1062*x1072))+((r11*x1058*x1065))+((r10*x1066*x1070))+x1077+(((-1.0)*r11*x1079))+(((-1.0)*r10*x1078))+(((-1.0)*r11*x1062*x1073))+(((-0.433012903784321)*r12*x1075))+((r12*x1058*x1068))+((r11*x1066*x1074))+(((-1.0)*r10*x1065*x1073))+((r11*sj5*x1076))+(((-1.0)*cj5*r10*x1076)));
evalcond[2]=((((-1.0)*x1070*x1071))+((x1060*x1070))+((r01*x1059*x1065))+((r00*x1066*x1074))+(((-1.0)*x1058*x1067))+((x1063*x1076))+(((0.250000349687704)*r01*x1058*x1062))+((r00*sj5*x1076))+(((0.250000349687704)*x1064*x1070))+(((0.749999650312296)*x1058*x1063))+((cj4*x1058*x1067))+(((-1.0)*r00*x1059*x1062))+((r02*x1059*x1068)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x1062*x1072))+((r02*x1058*x1068))+((sj5*x1059*x1071))+((r01*x1058*x1065))+((r00*x1066*x1070))+((x1058*x1063*x1066))+(((-1.0)*sj5*x1064*x1073))+(((-1.0)*x1067*x1075))+(((-1.0)*cj5*r00*x1076))+(((-0.749999650312296)*x1059*x1063))+(((-1.0)*r01*x1062*x1073))+((x1059*x1067))+(((-1.0)*sj5*x1059*x1060)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1080=((0.528192360616262)*sj4);
IkReal x1081=(r20*sj5);
IkReal x1082=((0.26409636501044)*cj4);
IkReal x1083=((0.444735007694415)*cj5);
IkReal x1084=((0.457427895740576)*cj4);
IkReal x1085=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x1085))+((r11*x1083))+(((-1.0)*cj5*r11*x1082))+(((-1.0)*x1082*x1085))+((r11*sj5*x1080))+(((-1.0)*cj5*r10*x1080))+(((-1.0)*r12*x1084)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1083))+((cj5*r21*x1082))+(((0.204620884747229)*r22))+((x1081*x1082))+(((-1.0)*r21*sj5*x1080))+((r22*x1084))+(((-0.444735007694415)*x1081))+(((2.4390243902439)*pz))+((cj5*r20*x1080)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x1085))+((r11*x1083))+(((-1.0)*cj5*r11*x1082))+(((-1.0)*x1082*x1085))+((r11*sj5*x1080))+(((-1.0)*cj5*r10*x1080))+(((-1.0)*r12*x1084))))+IKsqr(((((-1.0)*r21*x1083))+((cj5*r21*x1082))+(((0.204620884747229)*r22))+((x1081*x1082))+(((-1.0)*r21*sj5*x1080))+((r22*x1084))+(((-0.444735007694415)*x1081))+(((2.4390243902439)*pz))+((cj5*r20*x1080))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x1085))+((r11*x1083))+(((-1.0)*cj5*r11*x1082))+(((-1.0)*x1082*x1085))+((r11*sj5*x1080))+(((-1.0)*cj5*r10*x1080))+(((-1.0)*r12*x1084))), ((((-1.0)*r21*x1083))+((cj5*r21*x1082))+(((0.204620884747229)*r22))+((x1081*x1082))+(((-1.0)*r21*sj5*x1080))+((r22*x1084))+(((-0.444735007694415)*x1081))+(((2.4390243902439)*pz))+((cj5*r20*x1080))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1086=((1.0)*py);
IkReal x1087=(cj5*r11);
IkReal x1088=(cj5*sj3);
IkReal x1089=(r20*sj5);
IkReal x1090=((0.135720094919197)*sj4);
IkReal x1091=(r21*sj5);
IkReal x1092=((0.0185150129489311)*sj4);
IkReal x1093=((0.135720094919197)*sj3);
IkReal x1094=((0.00925751294893567)*cj4);
IkReal x1095=(cj4*cj5);
IkReal x1096=(cj3*r10);
IkReal x1097=((0.0678600949192303)*cj4);
IkReal x1098=(r10*sj5);
IkReal x1099=((0.10827950965428)*cj4);
IkReal x1100=(cj4*r22);
IkReal x1101=((0.0160344678271334)*r12);
IkReal x1102=((0.20357990508077)*sj3);
IkReal x1103=(cj5*r20);
IkReal x1104=((0.216558867852667)*sj4);
IkReal x1105=((0.117537022603216)*sj3);
IkReal x1106=((0.27144)*cj3);
IkReal x1107=(cj5*r21);
IkReal x1108=(cj4*r12);
IkReal x1109=((0.41)*(IKsin(j1)));
IkReal x1110=((0.41)*(IKcos(j1)));
IkReal x1111=(cj5*r10*sj4);
IkReal x1112=(r11*sj4*sj5);
IkReal x1113=((0.235073880801598)*cj3*sj4);
IkReal x1114=(x1109+x1086);
evalcond[0]=((((-1.0)*x1091*x1104))+(((-0.18234135315471)*x1089))+((x1089*x1099))+(((0.187545437253636)*x1100))+(((-0.18234135315471)*x1107))+pz+(((0.10827950965428)*r21*x1095))+((x1103*x1104))+(((-1.0)*x1110))+(((0.0838945627463637)*r22)));
evalcond[1]=((((0.18234135315471)*x1087))+(((-1.0)*cj5*r10*x1104))+(((-0.187545437253636)*x1108))+(((0.18234135315471)*x1098))+((r11*sj5*x1104))+(((-0.0838945627463637)*r12))+(((-1.0)*x1087*x1099))+(((-1.0)*x1114))+(((-1.0)*x1098*x1099)));
evalcond[2]=(((x1087*x1094))+(((-1.0)*r21*x1088*x1097))+(((-1.0)*r22*x1113))+((cj4*x1101))+(((-1.0)*r20*x1088*x1090))+((cj5*r10*x1092))+((x1094*x1098))+(((-1.0)*r11*sj5*x1092))+(((-1.0)*cj3*x1090*x1107))+(((-1.0)*cj3*x1089*x1090))+(((-1.0)*x1089*x1102))+(((-1.0)*cj4*x1091*x1106))+(((-1.0)*x1100*x1105))+((r22*x1105))+((r20*x1095*x1106))+(((0.0648043305514941)*x1087))+((sj3*x1090*x1091))+(((-1.0)*x1101))+(((-0.20357990508077)*r21*x1088))+(((-1.0)*x1114))+(((-1.0)*sj3*x1089*x1097))+(((0.0648043305514941)*x1098)));
evalcond[3]=((((-0.27144)*x1095*x1096))+(((-1.0)*r12*x1105))+x1110+((x1094*x1107))+((x1092*x1103))+((x1098*x1102))+(((-1.0)*x1091*x1092))+(((0.0160344678271334)*x1100))+((x1105*x1108))+((cj3*x1087*x1090))+((x1089*x1094))+(((-0.0160344678271334)*r22))+(((-1.0)*r11*sj3*sj5*x1090))+((x1087*x1102))+((sj3*x1097*x1098))+(((-1.0)*pz))+((r10*x1088*x1090))+((r12*x1113))+((sj5*x1090*x1096))+(((0.0648043305514941)*x1089))+((cj4*r11*sj5*x1106))+(((0.0648043305514941)*x1107))+((sj3*x1087*x1097)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1115=((0.250000349687704)*r12);
IkReal x1116=((0.749999650312296)*cj4);
IkReal x1117=((0.433012903784321)*sj5);
IkReal x1118=(cj1*r10);
IkReal x1119=(cj1*r22);
IkReal x1120=(cj1*r20);
IkReal x1121=((0.866025201892125)*sj4);
IkReal x1122=(r20*sj1);
IkReal x1123=(r22*sj1);
IkReal x1124=(r10*sj1);
IkReal x1125=(r11*sj1);
IkReal x1126=((0.433012903784321)*cj5);
IkReal x1127=(r21*sj1);
IkReal x1128=(cj1*r21);
IkReal x1129=(cj1*r11);
IkReal x1130=(cj5*sj1*x1121);
IkReal x1131=(cj4*r21*x1126);
if( IKabs(((((-1.0)*x1117*x1122))+((cj4*x1126*x1129))+((cj4*x1126*x1127))+((cj4*x1117*x1122))+(((0.250000349687704)*x1123))+(((-1.0)*x1126*x1127))+(((-1.0)*x1126*x1129))+((cj5*x1118*x1121))+(((-1.0)*sj5*x1121*x1129))+(((-1.0)*sj5*x1121*x1127))+((cj1*x1115))+((cj5*x1121*x1122))+((cj1*r12*x1116))+((x1116*x1123))+((cj4*x1117*x1118))+(((-1.0)*x1117*x1118)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1117*x1120))+((cj4*x1126*x1128))+((cj4*x1117*x1120))+(((-1.0)*x1126*x1128))+(((-1.0)*sj1*x1115))+(((-1.0)*sj5*x1121*x1128))+(((-1.0)*cj5*x1121*x1124))+((x1125*x1126))+((sj5*x1121*x1125))+(((-1.0)*cj4*x1125*x1126))+((x1116*x1119))+((x1117*x1124))+((cj5*x1120*x1121))+(((-1.0)*cj4*x1117*x1124))+(((-1.0)*r12*sj1*x1116))+(((0.250000349687704)*x1119)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1117*x1122))+((cj4*x1126*x1129))+((cj4*x1126*x1127))+((cj4*x1117*x1122))+(((0.250000349687704)*x1123))+(((-1.0)*x1126*x1127))+(((-1.0)*x1126*x1129))+((cj5*x1118*x1121))+(((-1.0)*sj5*x1121*x1129))+(((-1.0)*sj5*x1121*x1127))+((cj1*x1115))+((cj5*x1121*x1122))+((cj1*r12*x1116))+((x1116*x1123))+((cj4*x1117*x1118))+(((-1.0)*x1117*x1118))))+IKsqr(((((-1.0)*x1117*x1120))+((cj4*x1126*x1128))+((cj4*x1117*x1120))+(((-1.0)*x1126*x1128))+(((-1.0)*sj1*x1115))+(((-1.0)*sj5*x1121*x1128))+(((-1.0)*cj5*x1121*x1124))+((x1125*x1126))+((sj5*x1121*x1125))+(((-1.0)*cj4*x1125*x1126))+((x1116*x1119))+((x1117*x1124))+((cj5*x1120*x1121))+(((-1.0)*cj4*x1117*x1124))+(((-1.0)*r12*sj1*x1116))+(((0.250000349687704)*x1119))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1117*x1122))+((cj4*x1126*x1129))+((cj4*x1126*x1127))+((cj4*x1117*x1122))+(((0.250000349687704)*x1123))+(((-1.0)*x1126*x1127))+(((-1.0)*x1126*x1129))+((cj5*x1118*x1121))+(((-1.0)*sj5*x1121*x1129))+(((-1.0)*sj5*x1121*x1127))+((cj1*x1115))+((cj5*x1121*x1122))+((cj1*r12*x1116))+((x1116*x1123))+((cj4*x1117*x1118))+(((-1.0)*x1117*x1118))), ((((-1.0)*x1117*x1120))+((cj4*x1126*x1128))+((cj4*x1117*x1120))+(((-1.0)*x1126*x1128))+(((-1.0)*sj1*x1115))+(((-1.0)*sj5*x1121*x1128))+(((-1.0)*cj5*x1121*x1124))+((x1125*x1126))+((sj5*x1121*x1125))+(((-1.0)*cj4*x1125*x1126))+((x1116*x1119))+((x1117*x1124))+((cj5*x1120*x1121))+(((-1.0)*cj4*x1117*x1124))+(((-1.0)*r12*sj1*x1116))+(((0.250000349687704)*x1119))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1132=IKsin(j2);
IkReal x1133=IKcos(j2);
IkReal x1134=(cj5*r11);
IkReal x1135=((0.433012903784321)*cj4);
IkReal x1136=(r21*sj5);
IkReal x1137=((0.500000349687582)*sj4);
IkReal x1138=((0.749999650312296)*sj3);
IkReal x1139=(cj3*cj4);
IkReal x1140=(cj5*r10);
IkReal x1141=((0.0185150129489311)*sj4);
IkReal x1142=(r20*sj5);
IkReal x1143=(cj4*r22);
IkReal x1144=(r10*sj5);
IkReal x1145=(r22*sj3);
IkReal x1146=(r11*sj5);
IkReal x1147=((0.00925751294893567)*cj4);
IkReal x1148=(cj5*r21);
IkReal x1149=(r12*sj3);
IkReal x1150=(cj4*r12);
IkReal x1151=(cj5*r20);
IkReal x1152=((0.866025201892125)*sj4);
IkReal x1153=(cj1*x1133);
IkReal x1154=(sj1*x1132);
IkReal x1155=(cj1*x1132);
IkReal x1156=((0.250000349687704)*cj4*sj3);
IkReal x1157=(sj1*x1133);
IkReal x1158=(cj3*x1152);
IkReal x1159=(x1154+x1153);
evalcond[0]=((((-1.0)*x1135*x1148))+(((-1.0)*x1135*x1142))+x1159+(((-0.250000349687704)*r22))+((x1136*x1152))+(((0.433012903784321)*x1148))+(((0.433012903784321)*x1142))+(((-0.749999650312296)*x1143))+(((-1.0)*x1151*x1152)));
evalcond[1]=((((-1.0)*x1135*x1144))+x1155+((x1146*x1152))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x1134))+(((-1.0)*x1140*x1152))+(((0.433012903784321)*x1144))+(((-0.749999650312296)*x1150))+(((-1.0)*x1134*x1135))+(((-1.0)*x1157)));
evalcond[2]=((((-1.0)*x1136*x1141))+(((-0.27144)*x1154))+(((-0.27144)*x1153))+((x1141*x1151))+(((0.0648043305514941)*x1142))+(((0.0648043305514941)*x1148))+((x1142*x1147))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.0160344678271334)*x1143))+((x1147*x1148)));
evalcond[3]=((((-0.27144)*x1155))+((x1140*x1141))+((x1134*x1147))+(((0.0648043305514941)*x1144))+(((-1.0)*x1141*x1146))+(((-0.0160344678271334)*r12))+(((0.0160344678271334)*x1150))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.27144)*x1157))+((x1144*x1147))+(((0.0648043305514941)*x1134)));
evalcond[4]=(x1159+((cj3*x1134*x1137))+((r12*x1158))+(((-0.433012903784321)*x1149))+((sj3*x1137*x1140))+(((-1.0)*x1139*x1140))+((x1134*x1138))+(((-1.0)*sj3*x1137*x1146))+((x1139*x1146))+((cj3*x1137*x1144))+((x1144*x1156))+((x1138*x1144))+((x1134*x1156))+((x1135*x1149)));
evalcond[5]=(x1157+((sj3*x1137*x1151))+((r22*x1158))+((x1142*x1156))+(((-0.433012903784321)*x1145))+((x1136*x1139))+(((-1.0)*sj3*x1136*x1137))+(((-1.0)*x1139*x1151))+(((-1.0)*x1155))+((x1148*x1156))+((cj3*x1137*x1142))+((cj3*x1137*x1148))+((x1138*x1142))+((x1138*x1148))+((x1135*x1145)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1160=(cj4*cj5);
IkReal x1161=((0.866025201892125)*sj4);
IkReal x1162=(r11*sj5);
IkReal x1163=((0.500000349687582)*sj4);
IkReal x1164=((0.433012903784321)*r12);
IkReal x1165=(r10*sj5);
IkReal x1166=((0.433012903784321)*sj5);
IkReal x1167=(cj5*r11);
CheckValue<IkReal> x1168 = IKatan2WithCheck(IkReal(((((-1.0)*cj4*x1164))+(((-0.749999650312296)*x1167))+(((-0.749999650312296)*x1165))+x1164+(((-0.250000349687704)*r11*x1160))+((x1162*x1163))+(((-1.0)*cj5*r10*x1163))+(((-0.250000349687704)*cj4*x1165)))),IkReal(((((-1.0)*x1163*x1167))+(((-1.0)*x1163*x1165))+((r10*x1160))+(((-1.0)*r12*x1161))+(((-1.0)*cj4*x1162)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1168.valid){
continue;
}
CheckValue<IkReal> x1169=IKPowWithIntegerCheck(IKsign((((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r21*(((((-1.0)*sj5*x1161))+(((-0.433012903784321)*cj5))+(((0.433012903784321)*x1160))))))+((r20*((((cj5*x1161))+((cj4*x1166))+(((-1.0)*x1166)))))))),-1);
if(!x1169.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1168.value)+(((1.5707963267949)*(x1169.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1170=IKsin(j3);
IkReal x1171=IKcos(j3);
IkReal x1172=((0.749999650312296)*r00);
IkReal x1173=(cj5*r20);
IkReal x1174=(cj4*cj5);
IkReal x1175=(cj5*r01);
IkReal x1176=(cj4*r00);
IkReal x1177=(cj4*sj5);
IkReal x1178=((0.500000349687582)*sj4);
IkReal x1179=((0.433012903784321)*r02);
IkReal x1180=((0.866025201892125)*sj4);
IkReal x1181=((0.433012903784321)*r22);
IkReal x1182=(sj5*x1170);
IkReal x1183=(r01*x1178);
IkReal x1184=((1.0)*x1170);
IkReal x1185=((0.250000349687704)*x1171);
IkReal x1186=(cj5*x1170);
IkReal x1187=(cj4*x1171);
IkReal x1188=(x1171*x1178);
IkReal x1189=((0.433012903784321)*r12*x1171);
IkReal x1190=((0.749999650312296)*sj5*x1171);
IkReal x1191=((0.749999650312296)*cj5*x1171);
evalcond[0]=((((-1.0)*x1181*x1187))+((r20*x1178*x1182))+((r22*x1170*x1180))+((r21*x1178*x1186))+((r21*sj5*x1188))+((x1171*x1181))+(((-1.0)*cj4*x1173*x1184))+(((-1.0)*x1173*x1188))+(((-1.0)*r20*x1177*x1185))+(((-1.0)*r21*x1174*x1185))+((r21*x1170*x1177))+(((-1.0)*r21*x1191))+(((-1.0)*r20*x1190)));
evalcond[1]=((((-0.433012903784321)*r12*x1187))+((r12*x1170*x1180))+x1189+(((-1.0)*r11*x1174*x1185))+((r10*x1178*x1182))+(((-1.0)*r10*x1177*x1185))+(((-1.0)*cj5*r10*x1188))+(((-1.0)*r10*x1190))+((r11*sj5*x1188))+((r11*x1170*x1177))+(((-1.0)*r10*x1174*x1184))+(((-1.0)*r11*x1191))+((r11*x1178*x1186)));
evalcond[2]=(((r00*sj5*x1188))+((r01*x1171*x1177))+((r00*x1178*x1186))+((x1175*x1188))+(((-1.0)*r00*x1171*x1174))+((cj4*x1170*x1179))+((x1172*x1182))+(((0.749999650312296)*x1170*x1175))+(((0.250000349687704)*x1176*x1182))+((r02*x1171*x1180))+(((0.250000349687704)*r01*x1170*x1174))+(((-1.0)*x1170*x1179))+(((-1.0)*x1182*x1183)));
evalcond[3]=((-1.0)+(((-1.0)*sj5*x1176*x1185))+((r01*x1170*x1177))+((sj5*x1171*x1183))+(((-1.0)*r00*x1174*x1184))+((r00*x1178*x1182))+(((-0.749999650312296)*x1171*x1175))+(((-1.0)*x1179*x1187))+((x1170*x1175*x1178))+(((-1.0)*r01*x1174*x1185))+(((-1.0)*sj5*x1171*x1172))+((r02*x1170*x1180))+(((-1.0)*cj5*r00*x1188))+((x1171*x1179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1192=((0.528192360616262)*sj4);
IkReal x1193=(r20*sj5);
IkReal x1194=((0.26409636501044)*cj4);
IkReal x1195=((0.444735007694415)*cj5);
IkReal x1196=((0.457427895740576)*cj4);
IkReal x1197=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1194*x1197))+(((-1.0)*cj5*r10*x1192))+((r11*sj5*x1192))+((r11*x1195))+(((0.444735007694415)*x1197))+(((-1.0)*cj5*r11*x1194))+(((-1.0)*r12*x1196)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((cj5*r20*x1192))+((r22*x1196))+((cj5*r21*x1194))+(((-0.444735007694415)*x1193))+((x1193*x1194))+(((-1.0)*r21*x1195))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1192)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1194*x1197))+(((-1.0)*cj5*r10*x1192))+((r11*sj5*x1192))+((r11*x1195))+(((0.444735007694415)*x1197))+(((-1.0)*cj5*r11*x1194))+(((-1.0)*r12*x1196))))+IKsqr(((((0.204620884747229)*r22))+((cj5*r20*x1192))+((r22*x1196))+((cj5*r21*x1194))+(((-0.444735007694415)*x1193))+((x1193*x1194))+(((-1.0)*r21*x1195))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1192))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1194*x1197))+(((-1.0)*cj5*r10*x1192))+((r11*sj5*x1192))+((r11*x1195))+(((0.444735007694415)*x1197))+(((-1.0)*cj5*r11*x1194))+(((-1.0)*r12*x1196))), ((((0.204620884747229)*r22))+((cj5*r20*x1192))+((r22*x1196))+((cj5*r21*x1194))+(((-0.444735007694415)*x1193))+((x1193*x1194))+(((-1.0)*r21*x1195))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1192))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1198=((1.0)*py);
IkReal x1199=(cj5*r11);
IkReal x1200=(cj5*sj3);
IkReal x1201=(r20*sj5);
IkReal x1202=((0.135720094919197)*sj4);
IkReal x1203=(r21*sj5);
IkReal x1204=((0.0185150129489311)*sj4);
IkReal x1205=((0.135720094919197)*sj3);
IkReal x1206=((0.00925751294893567)*cj4);
IkReal x1207=(cj4*cj5);
IkReal x1208=(cj3*r10);
IkReal x1209=((0.0678600949192303)*cj4);
IkReal x1210=(r10*sj5);
IkReal x1211=((0.10827950965428)*cj4);
IkReal x1212=(cj4*r22);
IkReal x1213=((0.0160344678271334)*r12);
IkReal x1214=((0.20357990508077)*sj3);
IkReal x1215=(cj5*r20);
IkReal x1216=((0.216558867852667)*sj4);
IkReal x1217=((0.117537022603216)*sj3);
IkReal x1218=((0.27144)*cj3);
IkReal x1219=(cj5*r21);
IkReal x1220=(cj4*r12);
IkReal x1221=((0.41)*(IKsin(j1)));
IkReal x1222=((0.41)*(IKcos(j1)));
IkReal x1223=(cj5*r10*sj4);
IkReal x1224=(r11*sj4*sj5);
IkReal x1225=((0.235073880801598)*cj3*sj4);
IkReal x1226=(x1198+x1221);
evalcond[0]=((((-1.0)*x1222))+(((-1.0)*x1203*x1216))+(((-0.18234135315471)*x1219))+(((0.10827950965428)*r21*x1207))+((x1201*x1211))+pz+(((-0.18234135315471)*x1201))+(((0.0838945627463637)*r22))+((x1215*x1216))+(((0.187545437253636)*x1212)));
evalcond[1]=((((0.18234135315471)*x1199))+(((-1.0)*x1226))+(((-1.0)*cj5*r10*x1216))+(((0.18234135315471)*x1210))+(((-0.0838945627463637)*r12))+(((-1.0)*x1210*x1211))+(((-0.187545437253636)*x1220))+(((-1.0)*x1199*x1211))+((r11*sj5*x1216)));
evalcond[2]=((((-1.0)*sj3*x1201*x1209))+(((0.0648043305514941)*x1210))+((r22*x1217))+(((-1.0)*x1226))+(((-1.0)*cj4*x1203*x1218))+(((-0.20357990508077)*r21*x1200))+(((-1.0)*x1201*x1214))+(((-1.0)*cj3*x1201*x1202))+((cj4*x1213))+((r20*x1207*x1218))+((x1206*x1210))+((x1199*x1206))+((sj3*x1202*x1203))+(((-1.0)*x1212*x1217))+((cj5*r10*x1204))+(((-1.0)*r21*x1200*x1209))+(((-1.0)*x1213))+(((-1.0)*r11*sj5*x1204))+(((-1.0)*cj3*x1202*x1219))+(((0.0648043305514941)*x1199))+(((-1.0)*r22*x1225))+(((-1.0)*r20*x1200*x1202)));
evalcond[3]=(((cj4*r11*sj5*x1218))+(((0.0648043305514941)*x1201))+x1222+((x1199*x1214))+(((0.0648043305514941)*x1219))+((x1210*x1214))+((x1217*x1220))+((r10*x1200*x1202))+((x1204*x1215))+(((-0.0160344678271334)*r22))+(((-1.0)*r11*sj3*sj5*x1202))+((x1206*x1219))+(((-1.0)*pz))+(((-1.0)*x1203*x1204))+((sj3*x1209*x1210))+(((0.0160344678271334)*x1212))+((sj5*x1202*x1208))+((x1201*x1206))+((cj3*x1199*x1202))+(((-1.0)*r12*x1217))+(((-0.27144)*x1207*x1208))+((sj3*x1199*x1209))+((r12*x1225)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1227=((0.250000349687704)*r12);
IkReal x1228=((0.749999650312296)*cj4);
IkReal x1229=((0.433012903784321)*sj5);
IkReal x1230=(cj1*r10);
IkReal x1231=(cj1*r22);
IkReal x1232=(cj1*r20);
IkReal x1233=((0.866025201892125)*sj4);
IkReal x1234=(r20*sj1);
IkReal x1235=(r22*sj1);
IkReal x1236=(r10*sj1);
IkReal x1237=(r11*sj1);
IkReal x1238=((0.433012903784321)*cj5);
IkReal x1239=(r21*sj1);
IkReal x1240=(cj1*r21);
IkReal x1241=(cj1*r11);
IkReal x1242=(cj5*sj1*x1233);
IkReal x1243=(cj4*r21*x1238);
if( IKabs((((cj4*x1238*x1239))+(((-1.0)*x1238*x1239))+((cj4*x1229*x1230))+((cj4*x1229*x1234))+((cj5*x1233*x1234))+((cj1*r12*x1228))+(((-1.0)*x1238*x1241))+(((-1.0)*x1229*x1234))+(((-1.0)*x1229*x1230))+(((0.250000349687704)*x1235))+((x1228*x1235))+(((-1.0)*sj5*x1233*x1241))+(((-1.0)*sj5*x1233*x1239))+((cj5*x1230*x1233))+((cj4*x1238*x1241))+((cj1*x1227)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj4*x1237*x1238))+((cj5*x1232*x1233))+((cj4*x1229*x1232))+((sj5*x1233*x1237))+(((-1.0)*x1238*x1240))+(((-1.0)*x1229*x1232))+(((-1.0)*sj1*x1227))+(((-1.0)*cj4*x1229*x1236))+(((0.250000349687704)*x1231))+((x1228*x1231))+((x1237*x1238))+(((-1.0)*sj5*x1233*x1240))+(((-1.0)*r12*sj1*x1228))+((cj4*x1238*x1240))+((x1229*x1236))+(((-1.0)*cj5*x1233*x1236)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x1238*x1239))+(((-1.0)*x1238*x1239))+((cj4*x1229*x1230))+((cj4*x1229*x1234))+((cj5*x1233*x1234))+((cj1*r12*x1228))+(((-1.0)*x1238*x1241))+(((-1.0)*x1229*x1234))+(((-1.0)*x1229*x1230))+(((0.250000349687704)*x1235))+((x1228*x1235))+(((-1.0)*sj5*x1233*x1241))+(((-1.0)*sj5*x1233*x1239))+((cj5*x1230*x1233))+((cj4*x1238*x1241))+((cj1*x1227))))+IKsqr(((((-1.0)*cj4*x1237*x1238))+((cj5*x1232*x1233))+((cj4*x1229*x1232))+((sj5*x1233*x1237))+(((-1.0)*x1238*x1240))+(((-1.0)*x1229*x1232))+(((-1.0)*sj1*x1227))+(((-1.0)*cj4*x1229*x1236))+(((0.250000349687704)*x1231))+((x1228*x1231))+((x1237*x1238))+(((-1.0)*sj5*x1233*x1240))+(((-1.0)*r12*sj1*x1228))+((cj4*x1238*x1240))+((x1229*x1236))+(((-1.0)*cj5*x1233*x1236))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x1238*x1239))+(((-1.0)*x1238*x1239))+((cj4*x1229*x1230))+((cj4*x1229*x1234))+((cj5*x1233*x1234))+((cj1*r12*x1228))+(((-1.0)*x1238*x1241))+(((-1.0)*x1229*x1234))+(((-1.0)*x1229*x1230))+(((0.250000349687704)*x1235))+((x1228*x1235))+(((-1.0)*sj5*x1233*x1241))+(((-1.0)*sj5*x1233*x1239))+((cj5*x1230*x1233))+((cj4*x1238*x1241))+((cj1*x1227))), ((((-1.0)*cj4*x1237*x1238))+((cj5*x1232*x1233))+((cj4*x1229*x1232))+((sj5*x1233*x1237))+(((-1.0)*x1238*x1240))+(((-1.0)*x1229*x1232))+(((-1.0)*sj1*x1227))+(((-1.0)*cj4*x1229*x1236))+(((0.250000349687704)*x1231))+((x1228*x1231))+((x1237*x1238))+(((-1.0)*sj5*x1233*x1240))+(((-1.0)*r12*sj1*x1228))+((cj4*x1238*x1240))+((x1229*x1236))+(((-1.0)*cj5*x1233*x1236))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1244=IKsin(j2);
IkReal x1245=IKcos(j2);
IkReal x1246=(cj5*r11);
IkReal x1247=((0.433012903784321)*cj4);
IkReal x1248=(r21*sj5);
IkReal x1249=((0.500000349687582)*sj4);
IkReal x1250=((0.749999650312296)*sj3);
IkReal x1251=(cj3*cj4);
IkReal x1252=(cj5*r10);
IkReal x1253=((0.0185150129489311)*sj4);
IkReal x1254=(r20*sj5);
IkReal x1255=(cj4*r22);
IkReal x1256=(r10*sj5);
IkReal x1257=(r22*sj3);
IkReal x1258=(r11*sj5);
IkReal x1259=((0.00925751294893567)*cj4);
IkReal x1260=(cj5*r21);
IkReal x1261=(r12*sj3);
IkReal x1262=(cj4*r12);
IkReal x1263=(cj5*r20);
IkReal x1264=((0.866025201892125)*sj4);
IkReal x1265=(cj1*x1245);
IkReal x1266=(sj1*x1244);
IkReal x1267=(cj1*x1244);
IkReal x1268=((0.250000349687704)*cj4*sj3);
IkReal x1269=(sj1*x1245);
IkReal x1270=(cj3*x1264);
IkReal x1271=(x1266+x1265);
evalcond[0]=(x1271+(((-0.250000349687704)*r22))+(((-1.0)*x1263*x1264))+(((0.433012903784321)*x1260))+(((0.433012903784321)*x1254))+(((-1.0)*x1247*x1260))+(((-1.0)*x1247*x1254))+((x1248*x1264))+(((-0.749999650312296)*x1255)));
evalcond[1]=((((-0.749999650312296)*x1262))+x1267+(((-0.250000349687704)*r12))+((x1258*x1264))+(((0.433012903784321)*x1256))+(((-1.0)*x1252*x1264))+(((-1.0)*x1247*x1256))+(((-1.0)*x1269))+(((-1.0)*x1246*x1247))+(((0.433012903784321)*x1246)));
evalcond[2]=((((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x1248*x1253))+((x1253*x1263))+((x1259*x1260))+(((-1.0)*pz))+((x1254*x1259))+(((-0.27144)*x1266))+(((-0.27144)*x1265))+(((0.0648043305514941)*x1254))+(((0.0160344678271334)*x1255))+(((0.0648043305514941)*x1260)));
evalcond[3]=(((x1246*x1259))+(((-1.0)*x1253*x1258))+(((0.27144)*x1269))+(((-0.0160344678271334)*r12))+((x1256*x1259))+(((0.0648043305514941)*x1246))+(((-0.41)*sj1))+(((-1.0)*py))+((x1252*x1253))+(((-0.27144)*x1267))+(((0.0648043305514941)*x1256))+(((0.0160344678271334)*x1262)));
evalcond[4]=(((cj3*x1249*x1256))+((x1246*x1250))+(((-0.433012903784321)*x1261))+x1271+((x1247*x1261))+((x1246*x1268))+((r12*x1270))+(((-1.0)*x1251*x1252))+((x1256*x1268))+((x1250*x1256))+((x1251*x1258))+(((-1.0)*sj3*x1249*x1258))+((sj3*x1249*x1252))+((cj3*x1246*x1249)));
evalcond[5]=(((cj3*x1249*x1254))+((x1247*x1257))+((cj3*x1249*x1260))+x1269+((r22*x1270))+(((-1.0)*x1251*x1263))+((x1250*x1260))+((x1250*x1254))+((x1260*x1268))+((x1254*x1268))+(((-1.0)*x1267))+((sj3*x1249*x1263))+((x1248*x1251))+(((-1.0)*sj3*x1248*x1249))+(((-0.433012903784321)*x1257)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1272=((0.433012903784321)*cj5);
IkReal x1273=((0.866025201892125)*sj4);
IkReal x1274=((0.433012903784321)*r22);
IkReal x1275=(cj4*sj5);
IkReal x1276=(cj5*r21);
IkReal x1277=(r20*sj5);
IkReal x1278=((0.500000349687582)*sj4);
IkReal x1279=(cj5*x1278);
CheckValue<IkReal> x1280=IKPowWithIntegerCheck(IKsign((((r11*((x1272+(((-1.0)*cj4*x1272))+((sj5*x1273))))))+((r10*(((((-0.433012903784321)*x1275))+(((-1.0)*cj5*x1273))+(((0.433012903784321)*sj5))))))+((r12*(((-0.250000349687704)+(((-0.749999650312296)*cj4)))))))),-1);
if(!x1280.valid){
continue;
}
CheckValue<IkReal> x1281 = IKatan2WithCheck(IkReal((x1274+(((-0.749999650312296)*x1277))+(((-0.749999650312296)*x1276))+((r21*sj5*x1278))+(((-0.250000349687704)*cj4*x1276))+(((-0.250000349687704)*r20*x1275))+(((-1.0)*cj4*x1274))+(((-1.0)*r20*x1279)))),IkReal(((((-1.0)*r22*x1273))+(((-1.0)*x1276*x1278))+(((-1.0)*x1277*x1278))+(((-1.0)*r21*x1275))+((cj4*cj5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1281.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1280.value)))+(x1281.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1282=IKsin(j3);
IkReal x1283=IKcos(j3);
IkReal x1284=((0.749999650312296)*r00);
IkReal x1285=(cj5*r20);
IkReal x1286=(cj4*cj5);
IkReal x1287=(cj5*r01);
IkReal x1288=(cj4*r00);
IkReal x1289=(cj4*sj5);
IkReal x1290=((0.500000349687582)*sj4);
IkReal x1291=((0.433012903784321)*r02);
IkReal x1292=((0.866025201892125)*sj4);
IkReal x1293=((0.433012903784321)*r22);
IkReal x1294=(sj5*x1282);
IkReal x1295=(r01*x1290);
IkReal x1296=((1.0)*x1282);
IkReal x1297=((0.250000349687704)*x1283);
IkReal x1298=(cj5*x1282);
IkReal x1299=(cj4*x1283);
IkReal x1300=(x1283*x1290);
IkReal x1301=((0.433012903784321)*r12*x1283);
IkReal x1302=((0.749999650312296)*sj5*x1283);
IkReal x1303=((0.749999650312296)*cj5*x1283);
evalcond[0]=((((-1.0)*r21*x1286*x1297))+((r22*x1282*x1292))+((r21*sj5*x1300))+(((-1.0)*r21*x1303))+(((-1.0)*r20*x1302))+((r21*x1282*x1289))+(((-1.0)*x1293*x1299))+(((-1.0)*cj4*x1285*x1296))+(((-1.0)*r20*x1289*x1297))+((r21*x1290*x1298))+((r20*x1290*x1294))+((x1283*x1293))+(((-1.0)*x1285*x1300)));
evalcond[1]=(((r11*sj5*x1300))+x1301+(((-1.0)*r10*x1289*x1297))+(((-1.0)*cj5*r10*x1300))+((r11*x1282*x1289))+((r11*x1290*x1298))+(((-1.0)*r11*x1286*x1297))+(((-1.0)*r10*x1302))+(((-1.0)*r11*x1303))+((r12*x1282*x1292))+((r10*x1290*x1294))+(((-0.433012903784321)*r12*x1299))+(((-1.0)*r10*x1286*x1296)));
evalcond[2]=(((r00*sj5*x1300))+((r02*x1283*x1292))+(((-1.0)*x1282*x1291))+((r01*x1283*x1289))+((x1287*x1300))+(((-1.0)*r00*x1283*x1286))+(((0.749999650312296)*x1282*x1287))+((r00*x1290*x1298))+((x1284*x1294))+(((0.250000349687704)*r01*x1282*x1286))+((cj4*x1282*x1291))+(((-1.0)*x1294*x1295))+(((0.250000349687704)*x1288*x1294)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x1286*x1296))+((x1282*x1287*x1290))+((r01*x1282*x1289))+((r02*x1282*x1292))+(((-1.0)*r01*x1286*x1297))+(((-0.749999650312296)*x1283*x1287))+((sj5*x1283*x1295))+((r00*x1290*x1294))+(((-1.0)*sj5*x1283*x1284))+(((-1.0)*x1291*x1299))+(((-1.0)*cj5*r00*x1300))+((x1283*x1291))+(((-1.0)*sj5*x1288*x1297)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1304=((0.528192360616262)*sj4);
IkReal x1305=(r20*sj5);
IkReal x1306=((0.26409636501044)*cj4);
IkReal x1307=((0.444735007694415)*cj5);
IkReal x1308=((0.457427895740576)*cj4);
IkReal x1309=(r10*sj5);
if( IKabs((((r11*sj5*x1304))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1306*x1309))+(((-1.0)*cj5*r10*x1304))+(((-1.0)*cj5*r11*x1306))+(((0.444735007694415)*x1309))+((r11*x1307))+(((-1.0)*r12*x1308)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x1304))+(((0.204620884747229)*r22))+((x1305*x1306))+(((-1.0)*r21*x1307))+((cj5*r21*x1306))+(((-0.444735007694415)*x1305))+((r22*x1308))+(((-1.0)*r21*sj5*x1304))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*sj5*x1304))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1306*x1309))+(((-1.0)*cj5*r10*x1304))+(((-1.0)*cj5*r11*x1306))+(((0.444735007694415)*x1309))+((r11*x1307))+(((-1.0)*r12*x1308))))+IKsqr((((cj5*r20*x1304))+(((0.204620884747229)*r22))+((x1305*x1306))+(((-1.0)*r21*x1307))+((cj5*r21*x1306))+(((-0.444735007694415)*x1305))+((r22*x1308))+(((-1.0)*r21*sj5*x1304))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r11*sj5*x1304))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1306*x1309))+(((-1.0)*cj5*r10*x1304))+(((-1.0)*cj5*r11*x1306))+(((0.444735007694415)*x1309))+((r11*x1307))+(((-1.0)*r12*x1308))), (((cj5*r20*x1304))+(((0.204620884747229)*r22))+((x1305*x1306))+(((-1.0)*r21*x1307))+((cj5*r21*x1306))+(((-0.444735007694415)*x1305))+((r22*x1308))+(((-1.0)*r21*sj5*x1304))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1310=((1.0)*py);
IkReal x1311=(cj5*r11);
IkReal x1312=(cj5*sj3);
IkReal x1313=(r20*sj5);
IkReal x1314=((0.135720094919197)*sj4);
IkReal x1315=(r21*sj5);
IkReal x1316=((0.0185150129489311)*sj4);
IkReal x1317=((0.135720094919197)*sj3);
IkReal x1318=((0.00925751294893567)*cj4);
IkReal x1319=(cj4*cj5);
IkReal x1320=(cj3*r10);
IkReal x1321=((0.0678600949192303)*cj4);
IkReal x1322=(r10*sj5);
IkReal x1323=((0.10827950965428)*cj4);
IkReal x1324=(cj4*r22);
IkReal x1325=((0.0160344678271334)*r12);
IkReal x1326=((0.20357990508077)*sj3);
IkReal x1327=(cj5*r20);
IkReal x1328=((0.216558867852667)*sj4);
IkReal x1329=((0.117537022603216)*sj3);
IkReal x1330=((0.27144)*cj3);
IkReal x1331=(cj5*r21);
IkReal x1332=(cj4*r12);
IkReal x1333=((0.41)*(IKsin(j1)));
IkReal x1334=((0.41)*(IKcos(j1)));
IkReal x1335=(cj5*r10*sj4);
IkReal x1336=(r11*sj4*sj5);
IkReal x1337=((0.235073880801598)*cj3*sj4);
IkReal x1338=(x1310+x1333);
evalcond[0]=(((x1313*x1323))+(((-1.0)*x1315*x1328))+(((0.187545437253636)*x1324))+(((-0.18234135315471)*x1331))+(((0.10827950965428)*r21*x1319))+((x1327*x1328))+pz+(((-1.0)*x1334))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x1313)));
evalcond[1]=((((-1.0)*cj5*r10*x1328))+((r11*sj5*x1328))+(((-1.0)*x1322*x1323))+(((-0.0838945627463637)*r12))+(((-0.187545437253636)*x1332))+(((-1.0)*x1338))+(((0.18234135315471)*x1311))+(((-1.0)*x1311*x1323))+(((0.18234135315471)*x1322)));
evalcond[2]=((((0.0648043305514941)*x1322))+((x1311*x1318))+(((-1.0)*x1324*x1329))+((cj4*x1325))+(((-1.0)*cj3*x1313*x1314))+(((-1.0)*x1313*x1326))+(((-1.0)*x1325))+(((-1.0)*r22*x1337))+((r20*x1319*x1330))+(((-1.0)*cj4*x1315*x1330))+(((-1.0)*r11*sj5*x1316))+((r22*x1329))+(((-1.0)*r21*x1312*x1321))+((sj3*x1314*x1315))+(((-1.0)*r20*x1312*x1314))+(((-1.0)*cj3*x1314*x1331))+((cj5*r10*x1316))+(((-1.0)*x1338))+((x1318*x1322))+(((0.0648043305514941)*x1311))+(((-0.20357990508077)*r21*x1312))+(((-1.0)*sj3*x1313*x1321)));
evalcond[3]=(x1334+(((-1.0)*x1315*x1316))+((x1316*x1327))+((cj4*r11*sj5*x1330))+((x1329*x1332))+((r12*x1337))+(((-0.27144)*x1319*x1320))+((x1318*x1331))+((x1313*x1318))+((r10*x1312*x1314))+((cj3*x1311*x1314))+((sj5*x1314*x1320))+((sj3*x1321*x1322))+(((-0.0160344678271334)*r22))+((x1322*x1326))+(((-1.0)*r12*x1329))+(((-1.0)*pz))+(((-1.0)*r11*sj3*sj5*x1314))+(((0.0160344678271334)*x1324))+((sj3*x1311*x1321))+(((0.0648043305514941)*x1331))+(((0.0648043305514941)*x1313))+((x1311*x1326)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1339=((0.250000349687704)*r12);
IkReal x1340=((0.749999650312296)*cj4);
IkReal x1341=((0.433012903784321)*sj5);
IkReal x1342=(cj1*r10);
IkReal x1343=(cj1*r22);
IkReal x1344=(cj1*r20);
IkReal x1345=((0.866025201892125)*sj4);
IkReal x1346=(r20*sj1);
IkReal x1347=(r22*sj1);
IkReal x1348=(r10*sj1);
IkReal x1349=(r11*sj1);
IkReal x1350=((0.433012903784321)*cj5);
IkReal x1351=(r21*sj1);
IkReal x1352=(cj1*r21);
IkReal x1353=(cj1*r11);
IkReal x1354=(cj5*sj1*x1345);
IkReal x1355=(cj4*r21*x1350);
if( IKabs(((((-1.0)*x1341*x1342))+(((-1.0)*x1341*x1346))+(((-1.0)*x1350*x1351))+(((-1.0)*x1350*x1353))+((x1340*x1347))+((cj1*r12*x1340))+((cj1*x1339))+((cj4*x1350*x1351))+((cj4*x1350*x1353))+((cj5*x1342*x1345))+(((0.250000349687704)*x1347))+((cj5*x1345*x1346))+((cj4*x1341*x1346))+((cj4*x1341*x1342))+(((-1.0)*sj5*x1345*x1351))+(((-1.0)*sj5*x1345*x1353)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r12*sj1*x1340))+(((-1.0)*x1341*x1344))+(((-1.0)*x1350*x1352))+((x1340*x1343))+((x1341*x1348))+(((-1.0)*cj4*x1341*x1348))+(((-1.0)*cj4*x1349*x1350))+((x1349*x1350))+((cj4*x1350*x1352))+(((-1.0)*cj5*x1345*x1348))+((cj5*x1344*x1345))+(((0.250000349687704)*x1343))+(((-1.0)*sj1*x1339))+((cj4*x1341*x1344))+(((-1.0)*sj5*x1345*x1352))+((sj5*x1345*x1349)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1341*x1342))+(((-1.0)*x1341*x1346))+(((-1.0)*x1350*x1351))+(((-1.0)*x1350*x1353))+((x1340*x1347))+((cj1*r12*x1340))+((cj1*x1339))+((cj4*x1350*x1351))+((cj4*x1350*x1353))+((cj5*x1342*x1345))+(((0.250000349687704)*x1347))+((cj5*x1345*x1346))+((cj4*x1341*x1346))+((cj4*x1341*x1342))+(((-1.0)*sj5*x1345*x1351))+(((-1.0)*sj5*x1345*x1353))))+IKsqr(((((-1.0)*r12*sj1*x1340))+(((-1.0)*x1341*x1344))+(((-1.0)*x1350*x1352))+((x1340*x1343))+((x1341*x1348))+(((-1.0)*cj4*x1341*x1348))+(((-1.0)*cj4*x1349*x1350))+((x1349*x1350))+((cj4*x1350*x1352))+(((-1.0)*cj5*x1345*x1348))+((cj5*x1344*x1345))+(((0.250000349687704)*x1343))+(((-1.0)*sj1*x1339))+((cj4*x1341*x1344))+(((-1.0)*sj5*x1345*x1352))+((sj5*x1345*x1349))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1341*x1342))+(((-1.0)*x1341*x1346))+(((-1.0)*x1350*x1351))+(((-1.0)*x1350*x1353))+((x1340*x1347))+((cj1*r12*x1340))+((cj1*x1339))+((cj4*x1350*x1351))+((cj4*x1350*x1353))+((cj5*x1342*x1345))+(((0.250000349687704)*x1347))+((cj5*x1345*x1346))+((cj4*x1341*x1346))+((cj4*x1341*x1342))+(((-1.0)*sj5*x1345*x1351))+(((-1.0)*sj5*x1345*x1353))), ((((-1.0)*r12*sj1*x1340))+(((-1.0)*x1341*x1344))+(((-1.0)*x1350*x1352))+((x1340*x1343))+((x1341*x1348))+(((-1.0)*cj4*x1341*x1348))+(((-1.0)*cj4*x1349*x1350))+((x1349*x1350))+((cj4*x1350*x1352))+(((-1.0)*cj5*x1345*x1348))+((cj5*x1344*x1345))+(((0.250000349687704)*x1343))+(((-1.0)*sj1*x1339))+((cj4*x1341*x1344))+(((-1.0)*sj5*x1345*x1352))+((sj5*x1345*x1349))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1356=IKsin(j2);
IkReal x1357=IKcos(j2);
IkReal x1358=(cj5*r11);
IkReal x1359=((0.433012903784321)*cj4);
IkReal x1360=(r21*sj5);
IkReal x1361=((0.500000349687582)*sj4);
IkReal x1362=((0.749999650312296)*sj3);
IkReal x1363=(cj3*cj4);
IkReal x1364=(cj5*r10);
IkReal x1365=((0.0185150129489311)*sj4);
IkReal x1366=(r20*sj5);
IkReal x1367=(cj4*r22);
IkReal x1368=(r10*sj5);
IkReal x1369=(r22*sj3);
IkReal x1370=(r11*sj5);
IkReal x1371=((0.00925751294893567)*cj4);
IkReal x1372=(cj5*r21);
IkReal x1373=(r12*sj3);
IkReal x1374=(cj4*r12);
IkReal x1375=(cj5*r20);
IkReal x1376=((0.866025201892125)*sj4);
IkReal x1377=(cj1*x1357);
IkReal x1378=(sj1*x1356);
IkReal x1379=(cj1*x1356);
IkReal x1380=((0.250000349687704)*cj4*sj3);
IkReal x1381=(sj1*x1357);
IkReal x1382=(cj3*x1376);
IkReal x1383=(x1377+x1378);
evalcond[0]=(x1383+(((0.433012903784321)*x1366))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x1367))+(((-1.0)*x1359*x1366))+(((-1.0)*x1375*x1376))+(((-1.0)*x1359*x1372))+((x1360*x1376))+(((0.433012903784321)*x1372)));
evalcond[1]=(x1379+(((0.433012903784321)*x1358))+(((0.433012903784321)*x1368))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x1374))+(((-1.0)*x1359*x1368))+((x1370*x1376))+(((-1.0)*x1364*x1376))+(((-1.0)*x1381))+(((-1.0)*x1358*x1359)));
evalcond[2]=(((x1365*x1375))+(((0.0648043305514941)*x1372))+(((-0.27144)*x1378))+(((-0.27144)*x1377))+((x1366*x1371))+(((0.0648043305514941)*x1366))+(((0.0160344678271334)*x1367))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x1371*x1372))+(((-1.0)*x1360*x1365)));
evalcond[3]=((((-1.0)*x1365*x1370))+(((-0.27144)*x1379))+(((0.0648043305514941)*x1358))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x1368))+(((-0.41)*sj1))+(((-1.0)*py))+((x1364*x1365))+(((0.27144)*x1381))+((x1368*x1371))+(((0.0160344678271334)*x1374))+((x1358*x1371)));
evalcond[4]=(x1383+((x1358*x1362))+((x1358*x1380))+((sj3*x1361*x1364))+((cj3*x1361*x1368))+(((-0.433012903784321)*x1373))+((cj3*x1358*x1361))+((x1359*x1373))+((x1368*x1380))+((r12*x1382))+((x1363*x1370))+(((-1.0)*sj3*x1361*x1370))+((x1362*x1368))+(((-1.0)*x1363*x1364)));
evalcond[5]=((((-1.0)*x1363*x1375))+x1381+((x1366*x1380))+((sj3*x1361*x1375))+((x1360*x1363))+(((-1.0)*sj3*x1360*x1361))+(((-1.0)*x1379))+((x1359*x1369))+((x1362*x1372))+((cj3*x1361*x1366))+((x1372*x1380))+(((-0.433012903784321)*x1369))+((r22*x1382))+((cj3*x1361*x1372))+((x1362*x1366)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1384=(cj4*r12);
IkReal x1385=(r10*sj5);
IkReal x1386=((0.433012903784321)*cj4);
IkReal x1387=(cj5*r11);
IkReal x1388=((1.73204919243206)*cj4);
IkReal x1389=(cj5*r10*sj4);
IkReal x1390=(r11*sj4*sj5);
j3eval[0]=((((3.46409596216145)*x1389))+(((-3.46409596216145)*x1390))+((x1387*x1388))+r12+(((-1.73204919243206)*x1385))+(((-1.73204919243206)*x1387))+((x1385*x1388))+(((2.99999440500457)*x1384)));
j3eval[1]=IKsign(((((-0.866025201892125)*x1390))+((x1386*x1387))+((x1385*x1386))+(((0.749999650312296)*x1384))+(((0.250000349687704)*r12))+(((0.866025201892125)*x1389))+(((-0.433012903784321)*x1387))+(((-0.433012903784321)*x1385))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1391=(cj4*r22);
IkReal x1392=(cj5*r21);
IkReal x1393=((0.866025201892125)*sj4);
IkReal x1394=(cj5*r20);
IkReal x1395=(r21*sj5);
IkReal x1396=((3.46409596216145)*sj4);
IkReal x1397=(r20*sj5);
IkReal x1398=(cj4*x1397);
j3eval[0]=((((-1.73204919243206)*cj4*x1392))+(((-1.0)*x1394*x1396))+((x1395*x1396))+(((-2.99999440500457)*x1391))+(((-1.0)*r22))+(((-1.73204919243206)*x1398))+(((1.73204919243206)*x1397))+(((1.73204919243206)*x1392)));
j3eval[1]=IKsign(((((-0.250000349687704)*r22))+((x1393*x1395))+(((-1.0)*x1393*x1394))+(((0.433012903784321)*x1392))+(((0.433012903784321)*x1397))+(((-0.433012903784321)*cj4*x1392))+(((-0.749999650312296)*x1391))+(((-0.433012903784321)*x1398))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1399=cj5*cj5;
IkReal x1400=cj4*cj4;
IkReal x1401=r00*r00;
IkReal x1402=r01*r01;
IkReal x1403=r02*r02;
IkReal x1404=((3.9999972025013)*sj4);
IkReal x1405=(r00*r01);
IkReal x1406=(cj5*sj5);
IkReal x1407=(r00*r02);
IkReal x1408=(cj5*sj4);
IkReal x1409=((1.29903719716146)*cj4);
IkReal x1410=(r01*r02);
IkReal x1411=((0.375000349687459)*cj4);
IkReal x1412=(sj4*sj5);
IkReal x1413=(cj4*sj4);
IkReal x1414=((2.309396769726)*cj4);
IkReal x1415=((2.0)*cj4);
IkReal x1416=((0.433012298107169)*cj4);
IkReal x1417=((6.9281919243229)*cj4);
IkReal x1418=((0.750000174843424)*sj4);
IkReal x1419=(cj4*x1406);
IkReal x1420=((0.649519052837905)*x1400);
IkReal x1421=((3.46409838486413)*x1400);
IkReal x1422=((1.50000034968685)*x1399);
IkReal x1423=((4.99999440500457)*x1400);
IkReal x1424=((7.99999440500261)*x1399);
IkReal x1425=((0.937499825156026)*x1400);
IkReal x1426=(x1402*x1418);
IkReal x1427=(x1400*x1403);
IkReal x1428=(x1399*x1401);
IkReal x1429=(x1399*x1402);
IkReal x1430=(x1400*x1401);
IkReal x1431=(x1400*x1402);
j3eval[0]=((((9.99998881000913)*x1400*x1405*x1406))+(((-1.0)*x1415*x1429))+((sj5*x1407*x1421))+(((-1.0)*sj4*x1405*x1424))+(((-2.30940161513813)*x1410*x1412))+(((-1.15470161513813)*sj5*x1407))+(((-1.0)*sj5*x1407*x1414))+((x1415*x1428))+(((-4.33332836000522)*x1401))+(((2.99999440500457)*x1428))+(((2.99999440500457)*x1427))+((x1423*x1429))+(((-4.99999440500457)*x1403))+(((-5.99998881000913)*x1405*x1406))+(((-1.0)*cj5*x1410*x1414))+(((-1.0)*cj4*x1404*x1405))+(((-1.15470161513813)*cj5*x1410))+(((-1.0)*x1423*x1428))+(((-1.0)*x1402*x1404*x1419))+(((-1.0)*x1410*x1412*x1417))+(((-1.0)*x1401*x1415))+(((-1.0)*x1401*x1404*x1406))+((cj5*x1410*x1421))+(((2.30940161513813)*x1407*x1408))+((x1407*x1408*x1417))+((x1405*x1413*x1424))+(((-1.33333395500065)*x1402))+((x1404*x1405))+x1430+(((-4.0)*x1405*x1419))+((x1401*x1404*x1419))+(((-2.99999440500457)*x1429))+(((-3.99999440500457)*x1431))+((x1402*x1404*x1406))+((x1403*x1415)));
j3eval[1]=IKsign((((x1406*x1426))+((x1425*x1429))+((sj5*x1407*x1420))+(((-1.0)*sj4*x1405*x1422))+(((-1.0)*sj5*x1407*x1416))+(((1.87499965031205)*x1400*x1405*x1406))+(((-0.81249982515627)*x1401))+(((-0.433013206622791)*x1410*x1412))+(((-0.750000174843424)*x1405*x1413))+((x1411*x1428))+(((-1.0)*x1425*x1428))+(((-1.12499895093713)*x1405*x1406))+(((-0.749999650312296)*x1431))+(((-1.0)*cj5*x1410*x1416))+(((0.18750017484373)*x1430))+(((-0.250000349687704)*x1402))+(((-0.216506754730737)*cj5*x1410))+(((-0.562499475468567)*x1429))+(((0.750000174843424)*x1401*x1406*x1413))+(((-1.0)*x1401*x1411))+((cj5*x1410*x1420))+((x1405*x1418))+(((0.562499475468567)*x1427))+(((0.562499475468567)*x1428))+(((-0.750000174843424)*x1402*x1406*x1413))+(((-1.0)*x1401*x1406*x1418))+((x1405*x1413*x1422))+(((-0.937499825156026)*x1403))+((x1407*x1408*x1409))+(((-0.750000699374918)*x1405*x1419))+(((-1.0)*x1409*x1410*x1412))+(((-0.216506754730737)*sj5*x1407))+(((0.433013206622791)*x1407*x1408))+((x1403*x1411))+(((-1.0)*x1411*x1429))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1432=cj4*cj4;
IkReal x1433=r02*r02;
IkReal x1434=r00*r00;
IkReal x1435=cj5*cj5;
IkReal x1436=r01*r01;
IkReal x1437=(cj5*sj4);
IkReal x1438=(r00*r02);
IkReal x1439=(cj4*r02);
IkReal x1440=(cj5*r01);
IkReal x1441=(r02*sj4);
IkReal x1442=(cj4*r00);
IkReal x1443=(r00*sj5);
IkReal x1444=(r01*sj4);
IkReal x1445=(r01*sj5);
IkReal x1446=((0.375000349687459)*cj4);
IkReal x1447=(cj4*sj5);
IkReal x1448=((0.562499475468567)*x1435);
IkReal x1449=((0.937499825156026)*x1432);
IkReal x1450=((0.649519052837905)*x1432);
IkReal x1451=((1.50000034968685)*x1435);
IkReal x1452=((0.750000174843424)*x1434);
IkReal x1453=((0.750000174843424)*sj5*x1436);
IkReal x1454=(x1435*x1436);
IkReal x1455=(x1434*x1435);
CheckValue<IkReal> x1456 = IKatan2WithCheck(IkReal((((cj4*x1445))+(((0.500000349687582)*r01*x1437))+(((0.500000349687582)*sj4*x1443))+(((0.866025201892125)*x1441))+(((-1.0)*cj5*x1442)))),IkReal(((((-0.433012903784321)*x1439))+(((-0.749999650312296)*x1440))+(((-0.749999650312296)*x1443))+(((-0.500000349687582)*r00*x1437))+(((0.500000349687582)*sj5*x1444))+(((0.433012903784321)*r02))+(((-0.250000349687704)*cj4*x1440))+(((-0.250000349687704)*sj5*x1442)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1456.valid){
continue;
}
CheckValue<IkReal> x1457=IKPowWithIntegerCheck(IKsign(((((0.18750017484373)*x1432*x1434))+((x1434*x1448))+(((-0.433012298107169)*x1439*x1440))+((x1446*x1455))+(((-0.81249982515627)*x1434))+(((-0.433012298107169)*x1438*x1447))+((sj5*x1438*x1450))+(((-0.433013206622791)*x1441*x1445))+((x1437*x1453))+(((0.750000174843424)*r00*x1444))+(((-0.749999650312296)*x1432*x1436))+((x1442*x1444*x1451))+(((-1.0)*x1434*x1446))+(((-0.250000349687704)*x1436))+((x1433*x1446))+(((-0.750000174843424)*x1436*x1437*x1447))+(((-0.937499825156026)*x1433))+(((1.87499965031205)*x1432*x1440*x1443))+(((-1.12499895093713)*x1440*x1443))+((x1437*x1447*x1452))+(((-1.29903719716146)*sj5*x1439*x1444))+(((-1.0)*x1446*x1454))+(((-1.0)*r00*x1444*x1451))+(((1.29903719716146)*cj4*x1437*x1438))+(((0.562499475468567)*x1432*x1433))+(((-0.216506754730737)*r02*x1440))+(((-1.0)*sj5*x1437*x1452))+(((0.433013206622791)*x1437*x1438))+(((-0.216506754730737)*sj5*x1438))+((r02*x1440*x1450))+(((-1.0)*x1436*x1448))+((x1449*x1454))+(((-1.0)*x1449*x1455))+(((-0.750000699374918)*sj5*x1440*x1442))+(((-0.750000174843424)*x1442*x1444)))),-1);
if(!x1457.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1456.value)+(((1.5707963267949)*(x1457.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1458=IKsin(j3);
IkReal x1459=IKcos(j3);
IkReal x1460=((0.749999650312296)*r00);
IkReal x1461=(cj5*r20);
IkReal x1462=(cj4*cj5);
IkReal x1463=(cj5*r01);
IkReal x1464=(cj4*r00);
IkReal x1465=(cj4*sj5);
IkReal x1466=((0.500000349687582)*sj4);
IkReal x1467=((0.433012903784321)*r02);
IkReal x1468=((0.866025201892125)*sj4);
IkReal x1469=((0.433012903784321)*r22);
IkReal x1470=(sj5*x1458);
IkReal x1471=(r01*x1466);
IkReal x1472=((1.0)*x1458);
IkReal x1473=((0.250000349687704)*x1459);
IkReal x1474=(cj5*x1458);
IkReal x1475=(cj4*x1459);
IkReal x1476=(x1459*x1466);
IkReal x1477=((0.433012903784321)*r12*x1459);
IkReal x1478=((0.749999650312296)*sj5*x1459);
IkReal x1479=((0.749999650312296)*cj5*x1459);
evalcond[0]=(((r21*x1466*x1474))+(((-1.0)*r21*x1479))+((r20*x1466*x1470))+(((-1.0)*r20*x1478))+((r21*x1458*x1465))+((r22*x1458*x1468))+((x1459*x1469))+(((-1.0)*cj4*x1461*x1472))+((r21*sj5*x1476))+(((-1.0)*x1461*x1476))+(((-1.0)*r20*x1465*x1473))+(((-1.0)*x1469*x1475))+(((-1.0)*r21*x1462*x1473)));
evalcond[1]=((((-1.0)*r11*x1462*x1473))+(((-1.0)*r10*x1465*x1473))+(((-1.0)*r10*x1462*x1472))+((r11*x1458*x1465))+((r12*x1458*x1468))+(((-0.433012903784321)*r12*x1475))+(((-1.0)*cj5*r10*x1476))+((r11*sj5*x1476))+(((-1.0)*r10*x1478))+(((-1.0)*r11*x1479))+x1477+((r11*x1466*x1474))+((r10*x1466*x1470)));
evalcond[2]=((((0.250000349687704)*x1464*x1470))+(((-1.0)*x1458*x1467))+(((-1.0)*x1470*x1471))+((r02*x1459*x1468))+((x1460*x1470))+((r01*x1459*x1465))+(((0.250000349687704)*r01*x1458*x1462))+((cj4*x1458*x1467))+(((0.749999650312296)*x1458*x1463))+((x1463*x1476))+((r00*x1466*x1474))+(((-1.0)*r00*x1459*x1462))+((r00*sj5*x1476)));
evalcond[3]=((1.0)+((x1458*x1463*x1466))+(((-1.0)*r00*x1462*x1472))+((x1459*x1467))+(((-1.0)*cj5*r00*x1476))+((sj5*x1459*x1471))+((r02*x1458*x1468))+(((-1.0)*sj5*x1464*x1473))+((r00*x1466*x1470))+(((-1.0)*r01*x1462*x1473))+(((-1.0)*x1467*x1475))+(((-0.749999650312296)*x1459*x1463))+(((-1.0)*sj5*x1459*x1460))+((r01*x1458*x1465)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1480=((0.528192360616262)*sj4);
IkReal x1481=((0.26409636501044)*cj4);
IkReal x1482=(r20*sj5);
IkReal x1483=((0.444735007694415)*cj5);
IkReal x1484=((0.457427895740576)*cj4);
IkReal x1485=(r10*sj5);
if( IKabs(((((-1.0)*r11*sj5*x1480))+(((-1.0)*r11*x1483))+((cj5*r11*x1481))+((r12*x1484))+((x1481*x1485))+((cj5*r10*x1480))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1485)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1483))+(((0.204620884747229)*r22))+((cj5*r21*x1481))+((x1481*x1482))+(((-1.0)*r21*sj5*x1480))+((cj5*r20*x1480))+((r22*x1484))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1482)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*sj5*x1480))+(((-1.0)*r11*x1483))+((cj5*r11*x1481))+((r12*x1484))+((x1481*x1485))+((cj5*r10*x1480))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1485))))+IKsqr(((((-1.0)*r21*x1483))+(((0.204620884747229)*r22))+((cj5*r21*x1481))+((x1481*x1482))+(((-1.0)*r21*sj5*x1480))+((cj5*r20*x1480))+((r22*x1484))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1482))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r11*sj5*x1480))+(((-1.0)*r11*x1483))+((cj5*r11*x1481))+((r12*x1484))+((x1481*x1485))+((cj5*r10*x1480))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1485))), ((((-1.0)*r21*x1483))+(((0.204620884747229)*r22))+((cj5*r21*x1481))+((x1481*x1482))+(((-1.0)*r21*sj5*x1480))+((cj5*r20*x1480))+((r22*x1484))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1482))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1486=(cj5*sj4);
IkReal x1487=((0.135720094919197)*sj3);
IkReal x1488=(cj5*r11);
IkReal x1489=(cj5*r21);
IkReal x1490=((0.20357990508077)*sj3);
IkReal x1491=(r20*sj5);
IkReal x1492=((0.00925751294893567)*cj4);
IkReal x1493=(cj4*r10);
IkReal x1494=((0.27144)*cj3);
IkReal x1495=((0.10827950965428)*cj4);
IkReal x1496=((0.117537022603216)*sj3);
IkReal x1497=(cj4*r22);
IkReal x1498=(cj3*sj4);
IkReal x1499=(cj4*r12);
IkReal x1500=(r10*sj5);
IkReal x1501=(cj4*sj5);
IkReal x1502=((0.135720094919197)*cj3);
IkReal x1503=((0.41)*(IKcos(j1)));
IkReal x1504=((0.41)*(IKsin(j1)));
IkReal x1505=(r11*sj4*sj5);
IkReal x1506=((0.0678600949192303)*cj4*sj3);
IkReal x1507=(r21*sj4*sj5);
evalcond[0]=((((-1.0)*x1504))+(((-0.18234135315471)*x1500))+(((-0.18234135315471)*x1488))+(((0.216558867852667)*r10*x1486))+py+(((0.187545437253636)*x1499))+(((-0.216558867852667)*x1505))+(((0.10827950965428)*sj5*x1493))+(((0.0838945627463637)*r12))+((x1488*x1495)));
evalcond[1]=((((-1.0)*x1503))+((x1489*x1495))+(((-0.18234135315471)*x1491))+(((-0.18234135315471)*x1489))+((x1491*x1495))+pz+(((0.187545437253636)*x1497))+(((-0.216558867852667)*x1507))+(((0.216558867852667)*r20*x1486))+(((0.0838945627463637)*r22)));
evalcond[2]=((((0.0678600949192303)*sj3*sj5*x1493))+(((-1.0)*x1503))+(((-1.0)*r12*x1496))+((x1488*x1506))+(((-0.0185150129489311)*r20*x1486))+((x1490*x1500))+(((0.135720094919197)*x1498*x1500))+((r10*x1486*x1487))+(((-0.0160344678271334)*x1497))+((r11*x1486*x1502))+((x1496*x1499))+(((-1.0)*cj5*x1493*x1494))+(((-1.0)*x1487*x1505))+(((0.0185150129489311)*x1507))+pz+(((-1.0)*x1491*x1492))+(((-0.0648043305514941)*x1491))+(((0.0160344678271334)*r22))+(((0.235073880801598)*r12*x1498))+(((-0.0648043305514941)*x1489))+((r11*x1494*x1501))+((x1488*x1490))+(((-1.0)*x1489*x1492)));
evalcond[3]=(((x1492*x1500))+(((-1.0)*cj4*cj5*r20*x1494))+(((0.235073880801598)*r22*x1498))+((x1489*x1490))+(((0.0648043305514941)*x1488))+(((-0.0185150129489311)*x1505))+(((-0.0160344678271334)*r12))+(((0.0185150129489311)*r10*x1486))+((x1496*x1497))+((x1489*x1506))+(((-1.0)*py))+x1504+(((-1.0)*x1487*x1507))+((x1491*x1506))+(((0.0648043305514941)*x1500))+(((0.135720094919197)*x1491*x1498))+((r20*x1486*x1487))+(((-1.0)*r22*x1496))+((r21*x1494*x1501))+((r21*x1486*x1502))+((x1490*x1491))+((x1488*x1492))+(((0.0160344678271334)*x1499)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1508=((0.250000349687704)*r12);
IkReal x1509=((0.749999650312296)*cj4);
IkReal x1510=(cj1*r22);
IkReal x1511=((0.866025201892125)*sj4);
IkReal x1512=(cj1*r20);
IkReal x1513=(sj1*sj5);
IkReal x1514=((0.433012903784321)*r20);
IkReal x1515=((0.433012903784321)*sj5);
IkReal x1516=(cj1*r10);
IkReal x1517=(r22*sj1);
IkReal x1518=((0.433012903784321)*r10);
IkReal x1519=((0.433012903784321)*cj5);
IkReal x1520=(cj1*r21);
IkReal x1521=(cj1*r11);
IkReal x1522=(r11*sj1);
IkReal x1523=(cj1*cj4*x1515);
IkReal x1524=(cj5*sj1*x1511);
IkReal x1525=(cj4*r21*x1519);
if( IKabs((((x1509*x1517))+(((-1.0)*cj1*r12*x1509))+(((-1.0)*cj1*x1508))+(((-1.0)*cj4*x1515*x1516))+((x1519*x1521))+(((-1.0)*x1513*x1514))+((cj4*x1513*x1514))+((sj1*x1525))+(((-1.0)*cj5*x1511*x1516))+((r20*x1524))+((x1515*x1516))+(((-1.0)*r21*x1511*x1513))+(((-1.0)*cj4*x1519*x1521))+((sj5*x1511*x1521))+(((-1.0)*r21*sj1*x1519))+(((0.250000349687704)*x1517)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x1519*x1522))+((cj4*x1519*x1520))+((x1509*x1510))+((r10*x1524))+(((-1.0)*x1513*x1518))+((cj4*x1513*x1518))+(((-1.0)*x1519*x1520))+(((-1.0)*x1519*x1522))+((cj5*x1511*x1512))+(((-1.0)*sj5*x1511*x1520))+((sj1*x1508))+((cj4*x1512*x1515))+((r12*sj1*x1509))+(((-1.0)*r11*x1511*x1513))+(((-1.0)*x1512*x1515))+(((0.250000349687704)*x1510)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1509*x1517))+(((-1.0)*cj1*r12*x1509))+(((-1.0)*cj1*x1508))+(((-1.0)*cj4*x1515*x1516))+((x1519*x1521))+(((-1.0)*x1513*x1514))+((cj4*x1513*x1514))+((sj1*x1525))+(((-1.0)*cj5*x1511*x1516))+((r20*x1524))+((x1515*x1516))+(((-1.0)*r21*x1511*x1513))+(((-1.0)*cj4*x1519*x1521))+((sj5*x1511*x1521))+(((-1.0)*r21*sj1*x1519))+(((0.250000349687704)*x1517))))+IKsqr((((cj4*x1519*x1522))+((cj4*x1519*x1520))+((x1509*x1510))+((r10*x1524))+(((-1.0)*x1513*x1518))+((cj4*x1513*x1518))+(((-1.0)*x1519*x1520))+(((-1.0)*x1519*x1522))+((cj5*x1511*x1512))+(((-1.0)*sj5*x1511*x1520))+((sj1*x1508))+((cj4*x1512*x1515))+((r12*sj1*x1509))+(((-1.0)*r11*x1511*x1513))+(((-1.0)*x1512*x1515))+(((0.250000349687704)*x1510))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1509*x1517))+(((-1.0)*cj1*r12*x1509))+(((-1.0)*cj1*x1508))+(((-1.0)*cj4*x1515*x1516))+((x1519*x1521))+(((-1.0)*x1513*x1514))+((cj4*x1513*x1514))+((sj1*x1525))+(((-1.0)*cj5*x1511*x1516))+((r20*x1524))+((x1515*x1516))+(((-1.0)*r21*x1511*x1513))+(((-1.0)*cj4*x1519*x1521))+((sj5*x1511*x1521))+(((-1.0)*r21*sj1*x1519))+(((0.250000349687704)*x1517))), (((cj4*x1519*x1522))+((cj4*x1519*x1520))+((x1509*x1510))+((r10*x1524))+(((-1.0)*x1513*x1518))+((cj4*x1513*x1518))+(((-1.0)*x1519*x1520))+(((-1.0)*x1519*x1522))+((cj5*x1511*x1512))+(((-1.0)*sj5*x1511*x1520))+((sj1*x1508))+((cj4*x1512*x1515))+((r12*sj1*x1509))+(((-1.0)*r11*x1511*x1513))+(((-1.0)*x1512*x1515))+(((0.250000349687704)*x1510))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1526=IKcos(j2);
IkReal x1527=IKsin(j2);
IkReal x1528=(cj5*r11);
IkReal x1529=((0.433012903784321)*cj4);
IkReal x1530=(r21*sj5);
IkReal x1531=((0.500000349687582)*sj4);
IkReal x1532=((0.749999650312296)*sj3);
IkReal x1533=(cj3*cj4);
IkReal x1534=(cj5*r10);
IkReal x1535=((0.0185150129489311)*sj4);
IkReal x1536=(r20*sj5);
IkReal x1537=(cj4*r22);
IkReal x1538=(r10*sj5);
IkReal x1539=(r12*sj3);
IkReal x1540=(r11*sj5);
IkReal x1541=(r22*sj3);
IkReal x1542=((0.27144)*sj1);
IkReal x1543=((0.00925751294893567)*cj4);
IkReal x1544=(cj5*r20);
IkReal x1545=(cj5*r21);
IkReal x1546=(cj4*r12);
IkReal x1547=((0.866025201892125)*sj4);
IkReal x1548=(sj1*x1526);
IkReal x1549=(cj1*x1526);
IkReal x1550=(cj1*x1527);
IkReal x1551=((0.250000349687704)*cj4*sj3);
IkReal x1552=(cj3*x1547);
IkReal x1553=(sj1*x1527);
IkReal x1554=((1.0)*x1550);
evalcond[0]=((((-1.0)*x1529*x1536))+((x1530*x1547))+(((-0.749999650312296)*x1537))+(((-0.250000349687704)*r22))+(((0.433012903784321)*x1536))+(((0.433012903784321)*x1545))+(((-1.0)*x1529*x1545))+x1549+x1553+(((-1.0)*x1544*x1547)));
evalcond[1]=((((-1.0)*x1529*x1538))+(((0.433012903784321)*x1528))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x1546))+(((0.433012903784321)*x1538))+x1548+(((-1.0)*x1528*x1529))+((x1540*x1547))+(((-1.0)*x1534*x1547))+(((-1.0)*x1554)));
evalcond[2]=(((x1536*x1543))+(((-1.0)*x1530*x1535))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-0.27144)*x1549))+(((0.0160344678271334)*x1537))+((x1543*x1545))+(((-1.0)*x1527*x1542))+(((0.0648043305514941)*x1536))+((x1535*x1544))+(((0.0648043305514941)*x1545)));
evalcond[3]=(((x1528*x1543))+(((-1.0)*x1535*x1540))+((x1538*x1543))+(((0.0160344678271334)*x1546))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*py))+(((0.0648043305514941)*x1528))+(((0.0648043305514941)*x1538))+((x1534*x1535))+(((-1.0)*x1526*x1542))+(((0.27144)*x1550)));
evalcond[4]=(((x1536*x1551))+((x1532*x1545))+(((-1.0)*sj3*x1530*x1531))+((x1530*x1533))+((x1532*x1536))+((cj3*x1531*x1545))+((r22*x1552))+((x1529*x1541))+x1548+(((-1.0)*x1533*x1544))+(((-0.433012903784321)*x1541))+((sj3*x1531*x1544))+(((-1.0)*x1554))+((cj3*x1531*x1536))+((x1545*x1551)));
evalcond[5]=((((-1.0)*x1549))+(((-1.0)*x1533*x1534))+(((-1.0)*x1553))+((cj3*x1528*x1531))+((x1528*x1532))+((x1538*x1551))+((x1533*x1540))+(((-1.0)*sj3*x1531*x1540))+((x1532*x1538))+((r12*x1552))+(((-0.433012903784321)*x1539))+((x1529*x1539))+((sj3*x1531*x1534))+((cj3*x1531*x1538))+((x1528*x1551)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1555=(cj4*cj5);
IkReal x1556=((0.866025201892125)*sj4);
IkReal x1557=(r11*sj5);
IkReal x1558=((0.500000349687582)*sj4);
IkReal x1559=(r10*sj5);
IkReal x1560=((0.433012903784321)*r12);
IkReal x1561=((0.433012903784321)*sj5);
IkReal x1562=(cj5*r11);
CheckValue<IkReal> x1563=IKPowWithIntegerCheck(IKsign((((r22*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r20*(((((-1.0)*cj5*x1556))+(((-1.0)*cj4*x1561))+x1561))))+((r21*(((((0.433012903784321)*cj5))+(((-0.433012903784321)*x1555))+((sj5*x1556)))))))),-1);
if(!x1563.valid){
continue;
}
CheckValue<IkReal> x1564 = IKatan2WithCheck(IkReal(((((-0.250000349687704)*cj4*x1559))+(((-0.749999650312296)*x1559))+(((-0.749999650312296)*x1562))+(((-1.0)*cj4*x1560))+(((-0.250000349687704)*r11*x1555))+((x1557*x1558))+x1560+(((-1.0)*cj5*r10*x1558)))),IkReal(((((-1.0)*x1558*x1559))+(((-1.0)*r12*x1556))+(((-1.0)*cj4*x1557))+((r10*x1555))+(((-1.0)*x1558*x1562)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1564.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1563.value)))+(x1564.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1565=IKsin(j3);
IkReal x1566=IKcos(j3);
IkReal x1567=((0.749999650312296)*r00);
IkReal x1568=(cj5*r20);
IkReal x1569=(cj4*cj5);
IkReal x1570=(cj5*r01);
IkReal x1571=(cj4*r00);
IkReal x1572=(cj4*sj5);
IkReal x1573=((0.500000349687582)*sj4);
IkReal x1574=((0.433012903784321)*r02);
IkReal x1575=((0.866025201892125)*sj4);
IkReal x1576=((0.433012903784321)*r22);
IkReal x1577=(sj5*x1565);
IkReal x1578=(r01*x1573);
IkReal x1579=((1.0)*x1565);
IkReal x1580=((0.250000349687704)*x1566);
IkReal x1581=(cj5*x1565);
IkReal x1582=(cj4*x1566);
IkReal x1583=(x1566*x1573);
IkReal x1584=((0.433012903784321)*r12*x1566);
IkReal x1585=((0.749999650312296)*sj5*x1566);
IkReal x1586=((0.749999650312296)*cj5*x1566);
evalcond[0]=(((x1566*x1576))+((r21*sj5*x1583))+((r20*x1573*x1577))+((r22*x1565*x1575))+((r21*x1565*x1572))+(((-1.0)*cj4*x1568*x1579))+(((-1.0)*x1568*x1583))+(((-1.0)*r21*x1569*x1580))+(((-1.0)*r20*x1585))+(((-1.0)*r21*x1586))+(((-1.0)*r20*x1572*x1580))+(((-1.0)*x1576*x1582))+((r21*x1573*x1581)));
evalcond[1]=((((-0.433012903784321)*r12*x1582))+(((-1.0)*r11*x1586))+(((-1.0)*cj5*r10*x1583))+(((-1.0)*r11*x1569*x1580))+((r12*x1565*x1575))+(((-1.0)*r10*x1572*x1580))+x1584+((r11*sj5*x1583))+((r11*x1565*x1572))+(((-1.0)*r10*x1569*x1579))+((r10*x1573*x1577))+((r11*x1573*x1581))+(((-1.0)*r10*x1585)));
evalcond[2]=(((r00*sj5*x1583))+(((-1.0)*x1565*x1574))+((x1570*x1583))+((x1567*x1577))+((r01*x1566*x1572))+(((0.250000349687704)*r01*x1565*x1569))+(((0.749999650312296)*x1565*x1570))+((r00*x1573*x1581))+((cj4*x1565*x1574))+((r02*x1566*x1575))+(((0.250000349687704)*x1571*x1577))+(((-1.0)*x1577*x1578))+(((-1.0)*r00*x1566*x1569)));
evalcond[3]=((1.0)+((r00*x1573*x1577))+((sj5*x1566*x1578))+(((-1.0)*cj5*r00*x1583))+((x1566*x1574))+(((-1.0)*sj5*x1571*x1580))+(((-1.0)*r00*x1569*x1579))+(((-0.749999650312296)*x1566*x1570))+((x1565*x1570*x1573))+((r02*x1565*x1575))+(((-1.0)*sj5*x1566*x1567))+(((-1.0)*x1574*x1582))+(((-1.0)*r01*x1569*x1580))+((r01*x1565*x1572)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1587=((0.528192360616262)*sj4);
IkReal x1588=((0.26409636501044)*cj4);
IkReal x1589=(r20*sj5);
IkReal x1590=((0.444735007694415)*cj5);
IkReal x1591=((0.457427895740576)*cj4);
IkReal x1592=(r10*sj5);
if( IKabs((((cj5*r10*x1587))+((cj5*r11*x1588))+((x1588*x1592))+((r12*x1591))+(((-1.0)*r11*sj5*x1587))+(((0.204620884747229)*r12))+(((-0.444735007694415)*x1592))+(((2.4390243902439)*py))+(((-1.0)*r11*x1590)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x1587))+(((0.204620884747229)*r22))+((x1588*x1589))+(((-1.0)*r21*sj5*x1587))+((cj5*r21*x1588))+((r22*x1591))+(((-1.0)*r21*x1590))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1589)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r10*x1587))+((cj5*r11*x1588))+((x1588*x1592))+((r12*x1591))+(((-1.0)*r11*sj5*x1587))+(((0.204620884747229)*r12))+(((-0.444735007694415)*x1592))+(((2.4390243902439)*py))+(((-1.0)*r11*x1590))))+IKsqr((((cj5*r20*x1587))+(((0.204620884747229)*r22))+((x1588*x1589))+(((-1.0)*r21*sj5*x1587))+((cj5*r21*x1588))+((r22*x1591))+(((-1.0)*r21*x1590))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1589))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((cj5*r10*x1587))+((cj5*r11*x1588))+((x1588*x1592))+((r12*x1591))+(((-1.0)*r11*sj5*x1587))+(((0.204620884747229)*r12))+(((-0.444735007694415)*x1592))+(((2.4390243902439)*py))+(((-1.0)*r11*x1590))), (((cj5*r20*x1587))+(((0.204620884747229)*r22))+((x1588*x1589))+(((-1.0)*r21*sj5*x1587))+((cj5*r21*x1588))+((r22*x1591))+(((-1.0)*r21*x1590))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1589))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1593=(cj5*sj4);
IkReal x1594=((0.135720094919197)*sj3);
IkReal x1595=(cj5*r11);
IkReal x1596=(cj5*r21);
IkReal x1597=((0.20357990508077)*sj3);
IkReal x1598=(r20*sj5);
IkReal x1599=((0.00925751294893567)*cj4);
IkReal x1600=(cj4*r10);
IkReal x1601=((0.27144)*cj3);
IkReal x1602=((0.10827950965428)*cj4);
IkReal x1603=((0.117537022603216)*sj3);
IkReal x1604=(cj4*r22);
IkReal x1605=(cj3*sj4);
IkReal x1606=(cj4*r12);
IkReal x1607=(r10*sj5);
IkReal x1608=(cj4*sj5);
IkReal x1609=((0.135720094919197)*cj3);
IkReal x1610=((0.41)*(IKcos(j1)));
IkReal x1611=((0.41)*(IKsin(j1)));
IkReal x1612=(r11*sj4*sj5);
IkReal x1613=((0.0678600949192303)*cj4*sj3);
IkReal x1614=(r21*sj4*sj5);
evalcond[0]=((((-0.18234135315471)*x1595))+((x1595*x1602))+(((-1.0)*x1611))+(((0.10827950965428)*sj5*x1600))+py+(((0.216558867852667)*r10*x1593))+(((-0.216558867852667)*x1612))+(((0.187545437253636)*x1606))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x1607)));
evalcond[1]=((((-0.18234135315471)*x1596))+(((-0.18234135315471)*x1598))+(((-1.0)*x1610))+pz+((x1598*x1602))+(((-0.216558867852667)*x1614))+(((0.187545437253636)*x1604))+((x1596*x1602))+(((0.0838945627463637)*r22))+(((0.216558867852667)*r20*x1593)));
evalcond[2]=((((0.0678600949192303)*sj3*sj5*x1600))+(((0.235073880801598)*r12*x1605))+((r11*x1601*x1608))+(((-1.0)*x1610))+(((-0.0185150129489311)*r20*x1593))+(((0.0185150129489311)*x1614))+(((-0.0160344678271334)*x1604))+(((0.135720094919197)*x1605*x1607))+((r10*x1593*x1594))+pz+(((-0.0648043305514941)*x1596))+(((-0.0648043305514941)*x1598))+((r11*x1593*x1609))+(((0.0160344678271334)*r22))+(((-1.0)*x1598*x1599))+((x1603*x1606))+((x1595*x1597))+(((-1.0)*r12*x1603))+(((-1.0)*cj5*x1600*x1601))+(((-1.0)*x1596*x1599))+((x1597*x1607))+(((-1.0)*x1594*x1612))+((x1595*x1613)));
evalcond[3]=(((x1596*x1597))+((x1596*x1613))+((r21*x1601*x1608))+(((0.0648043305514941)*x1607))+(((0.235073880801598)*r22*x1605))+(((-0.0185150129489311)*x1612))+x1611+(((-0.0160344678271334)*r12))+((x1599*x1607))+(((0.0185150129489311)*r10*x1593))+(((-1.0)*r22*x1603))+(((-1.0)*cj4*cj5*r20*x1601))+(((-1.0)*py))+((r21*x1593*x1609))+((x1598*x1613))+(((0.0160344678271334)*x1606))+((x1603*x1604))+(((0.135720094919197)*x1598*x1605))+((x1595*x1599))+((x1597*x1598))+((r20*x1593*x1594))+(((0.0648043305514941)*x1595))+(((-1.0)*x1594*x1614)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1615=((0.250000349687704)*r12);
IkReal x1616=((0.749999650312296)*cj4);
IkReal x1617=(cj1*r22);
IkReal x1618=((0.866025201892125)*sj4);
IkReal x1619=(cj1*r20);
IkReal x1620=(sj1*sj5);
IkReal x1621=((0.433012903784321)*r20);
IkReal x1622=((0.433012903784321)*sj5);
IkReal x1623=(cj1*r10);
IkReal x1624=(r22*sj1);
IkReal x1625=((0.433012903784321)*r10);
IkReal x1626=((0.433012903784321)*cj5);
IkReal x1627=(cj1*r21);
IkReal x1628=(cj1*r11);
IkReal x1629=(r11*sj1);
IkReal x1630=(cj1*cj4*x1622);
IkReal x1631=(cj5*sj1*x1618);
IkReal x1632=(cj4*r21*x1626);
if( IKabs(((((-1.0)*cj1*r12*x1616))+(((-1.0)*cj5*x1618*x1623))+((r20*x1631))+((x1626*x1628))+((sj1*x1632))+((x1622*x1623))+(((-1.0)*r21*x1618*x1620))+(((-1.0)*r21*sj1*x1626))+(((-1.0)*cj4*x1626*x1628))+((sj5*x1618*x1628))+(((0.250000349687704)*x1624))+((cj4*x1620*x1621))+(((-1.0)*x1620*x1621))+((x1616*x1624))+(((-1.0)*cj4*x1622*x1623))+(((-1.0)*cj1*x1615)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1619*x1622))+(((-1.0)*sj5*x1618*x1627))+(((-1.0)*r11*x1618*x1620))+((r10*x1631))+((cj5*x1618*x1619))+((sj1*x1615))+(((0.250000349687704)*x1617))+((cj4*x1620*x1625))+((cj4*x1626*x1629))+((cj4*x1626*x1627))+(((-1.0)*x1620*x1625))+((x1616*x1617))+(((-1.0)*x1626*x1627))+(((-1.0)*x1626*x1629))+((r12*sj1*x1616))+((cj4*x1619*x1622)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r12*x1616))+(((-1.0)*cj5*x1618*x1623))+((r20*x1631))+((x1626*x1628))+((sj1*x1632))+((x1622*x1623))+(((-1.0)*r21*x1618*x1620))+(((-1.0)*r21*sj1*x1626))+(((-1.0)*cj4*x1626*x1628))+((sj5*x1618*x1628))+(((0.250000349687704)*x1624))+((cj4*x1620*x1621))+(((-1.0)*x1620*x1621))+((x1616*x1624))+(((-1.0)*cj4*x1622*x1623))+(((-1.0)*cj1*x1615))))+IKsqr(((((-1.0)*x1619*x1622))+(((-1.0)*sj5*x1618*x1627))+(((-1.0)*r11*x1618*x1620))+((r10*x1631))+((cj5*x1618*x1619))+((sj1*x1615))+(((0.250000349687704)*x1617))+((cj4*x1620*x1625))+((cj4*x1626*x1629))+((cj4*x1626*x1627))+(((-1.0)*x1620*x1625))+((x1616*x1617))+(((-1.0)*x1626*x1627))+(((-1.0)*x1626*x1629))+((r12*sj1*x1616))+((cj4*x1619*x1622))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r12*x1616))+(((-1.0)*cj5*x1618*x1623))+((r20*x1631))+((x1626*x1628))+((sj1*x1632))+((x1622*x1623))+(((-1.0)*r21*x1618*x1620))+(((-1.0)*r21*sj1*x1626))+(((-1.0)*cj4*x1626*x1628))+((sj5*x1618*x1628))+(((0.250000349687704)*x1624))+((cj4*x1620*x1621))+(((-1.0)*x1620*x1621))+((x1616*x1624))+(((-1.0)*cj4*x1622*x1623))+(((-1.0)*cj1*x1615))), ((((-1.0)*x1619*x1622))+(((-1.0)*sj5*x1618*x1627))+(((-1.0)*r11*x1618*x1620))+((r10*x1631))+((cj5*x1618*x1619))+((sj1*x1615))+(((0.250000349687704)*x1617))+((cj4*x1620*x1625))+((cj4*x1626*x1629))+((cj4*x1626*x1627))+(((-1.0)*x1620*x1625))+((x1616*x1617))+(((-1.0)*x1626*x1627))+(((-1.0)*x1626*x1629))+((r12*sj1*x1616))+((cj4*x1619*x1622))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1633=IKcos(j2);
IkReal x1634=IKsin(j2);
IkReal x1635=(cj5*r11);
IkReal x1636=((0.433012903784321)*cj4);
IkReal x1637=(r21*sj5);
IkReal x1638=((0.500000349687582)*sj4);
IkReal x1639=((0.749999650312296)*sj3);
IkReal x1640=(cj3*cj4);
IkReal x1641=(cj5*r10);
IkReal x1642=((0.0185150129489311)*sj4);
IkReal x1643=(r20*sj5);
IkReal x1644=(cj4*r22);
IkReal x1645=(r10*sj5);
IkReal x1646=(r12*sj3);
IkReal x1647=(r11*sj5);
IkReal x1648=(r22*sj3);
IkReal x1649=((0.27144)*sj1);
IkReal x1650=((0.00925751294893567)*cj4);
IkReal x1651=(cj5*r20);
IkReal x1652=(cj5*r21);
IkReal x1653=(cj4*r12);
IkReal x1654=((0.866025201892125)*sj4);
IkReal x1655=(sj1*x1633);
IkReal x1656=(cj1*x1633);
IkReal x1657=(cj1*x1634);
IkReal x1658=((0.250000349687704)*cj4*sj3);
IkReal x1659=(cj3*x1654);
IkReal x1660=(sj1*x1634);
IkReal x1661=((1.0)*x1657);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x1644))+x1660+x1656+(((0.433012903784321)*x1643))+(((0.433012903784321)*x1652))+(((-1.0)*x1636*x1643))+(((-1.0)*x1636*x1652))+(((-1.0)*x1651*x1654))+((x1637*x1654)));
evalcond[1]=((((-1.0)*x1635*x1636))+(((-0.250000349687704)*r12))+(((-1.0)*x1641*x1654))+x1655+(((-0.749999650312296)*x1653))+((x1647*x1654))+(((0.433012903784321)*x1645))+(((0.433012903784321)*x1635))+(((-1.0)*x1661))+(((-1.0)*x1636*x1645)));
evalcond[2]=(((x1650*x1652))+(((0.0648043305514941)*x1652))+(((-1.0)*x1634*x1649))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-1.0)*x1637*x1642))+(((-0.27144)*x1656))+((x1643*x1650))+((x1642*x1651))+(((0.0648043305514941)*x1643))+(((0.0160344678271334)*x1644)));
evalcond[3]=((((0.0160344678271334)*x1653))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x1645*x1650))+((x1641*x1642))+(((-1.0)*x1642*x1647))+(((-1.0)*x1633*x1649))+(((-1.0)*py))+(((0.27144)*x1657))+((x1635*x1650))+(((0.0648043305514941)*x1645))+(((0.0648043305514941)*x1635)));
evalcond[4]=(((x1636*x1648))+((r22*x1659))+((sj3*x1638*x1651))+(((-1.0)*x1640*x1651))+((x1637*x1640))+x1655+((cj3*x1638*x1652))+((cj3*x1638*x1643))+(((-0.433012903784321)*x1648))+(((-1.0)*x1661))+((x1639*x1652))+((x1639*x1643))+((x1643*x1658))+(((-1.0)*sj3*x1637*x1638))+((x1652*x1658)));
evalcond[5]=(((x1640*x1647))+((x1636*x1646))+((cj3*x1635*x1638))+(((-1.0)*sj3*x1638*x1647))+((r12*x1659))+((sj3*x1638*x1641))+(((-1.0)*x1660))+((x1645*x1658))+(((-1.0)*x1656))+((cj3*x1638*x1645))+(((-0.433012903784321)*x1646))+((x1635*x1639))+((x1639*x1645))+((x1635*x1658))+(((-1.0)*x1640*x1641)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1662=((0.433012903784321)*cj5);
IkReal x1663=((0.866025201892125)*sj4);
IkReal x1664=((0.433012903784321)*r22);
IkReal x1665=(cj4*sj5);
IkReal x1666=(cj5*r21);
IkReal x1667=(r20*sj5);
IkReal x1668=((0.500000349687582)*sj4);
IkReal x1669=(cj5*x1668);
CheckValue<IkReal> x1670 = IKatan2WithCheck(IkReal(((((-0.250000349687704)*r20*x1665))+(((-1.0)*cj4*x1664))+(((-0.250000349687704)*cj4*x1666))+x1664+(((-0.749999650312296)*x1666))+(((-0.749999650312296)*x1667))+(((-1.0)*r20*x1669))+((r21*sj5*x1668)))),IkReal(((((-1.0)*r21*x1665))+(((-1.0)*x1667*x1668))+(((-1.0)*r22*x1663))+((cj4*cj5*r20))+(((-1.0)*x1666*x1668)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1670.valid){
continue;
}
CheckValue<IkReal> x1671=IKPowWithIntegerCheck(IKsign((((r11*(((((-1.0)*sj5*x1663))+((cj4*x1662))+(((-1.0)*x1662))))))+((r12*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r10*((((cj5*x1663))+(((-0.433012903784321)*sj5))+(((0.433012903784321)*x1665)))))))),-1);
if(!x1671.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1670.value)+(((1.5707963267949)*(x1671.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1672=IKsin(j3);
IkReal x1673=IKcos(j3);
IkReal x1674=((0.749999650312296)*r00);
IkReal x1675=(cj5*r20);
IkReal x1676=(cj4*cj5);
IkReal x1677=(cj5*r01);
IkReal x1678=(cj4*r00);
IkReal x1679=(cj4*sj5);
IkReal x1680=((0.500000349687582)*sj4);
IkReal x1681=((0.433012903784321)*r02);
IkReal x1682=((0.866025201892125)*sj4);
IkReal x1683=((0.433012903784321)*r22);
IkReal x1684=(sj5*x1672);
IkReal x1685=(r01*x1680);
IkReal x1686=((1.0)*x1672);
IkReal x1687=((0.250000349687704)*x1673);
IkReal x1688=(cj5*x1672);
IkReal x1689=(cj4*x1673);
IkReal x1690=(x1673*x1680);
IkReal x1691=((0.433012903784321)*r12*x1673);
IkReal x1692=((0.749999650312296)*sj5*x1673);
IkReal x1693=((0.749999650312296)*cj5*x1673);
evalcond[0]=((((-1.0)*r20*x1679*x1687))+(((-1.0)*r21*x1676*x1687))+(((-1.0)*cj4*x1675*x1686))+((x1673*x1683))+(((-1.0)*x1675*x1690))+(((-1.0)*r21*x1693))+(((-1.0)*r20*x1692))+((r22*x1672*x1682))+(((-1.0)*x1683*x1689))+((r21*x1680*x1688))+((r21*x1672*x1679))+((r20*x1680*x1684))+((r21*sj5*x1690)));
evalcond[1]=(((r10*x1680*x1684))+(((-1.0)*r10*x1676*x1686))+((r11*sj5*x1690))+(((-1.0)*cj5*r10*x1690))+(((-1.0)*r11*x1693))+x1691+(((-1.0)*r10*x1679*x1687))+((r11*x1680*x1688))+((r12*x1672*x1682))+(((-0.433012903784321)*r12*x1689))+(((-1.0)*r11*x1676*x1687))+((r11*x1672*x1679))+(((-1.0)*r10*x1692)));
evalcond[2]=(((x1677*x1690))+((r01*x1673*x1679))+((r02*x1673*x1682))+((cj4*x1672*x1681))+(((-1.0)*x1672*x1681))+(((0.749999650312296)*x1672*x1677))+((x1674*x1684))+((r00*x1680*x1688))+(((-1.0)*r00*x1673*x1676))+(((0.250000349687704)*r01*x1672*x1676))+(((0.250000349687704)*x1678*x1684))+((r00*sj5*x1690))+(((-1.0)*x1684*x1685)));
evalcond[3]=((1.0)+((x1672*x1677*x1680))+(((-1.0)*cj5*r00*x1690))+(((-1.0)*sj5*x1673*x1674))+((x1673*x1681))+(((-1.0)*r00*x1676*x1686))+(((-1.0)*x1681*x1689))+((r02*x1672*x1682))+(((-1.0)*sj5*x1678*x1687))+(((-0.749999650312296)*x1673*x1677))+((r01*x1672*x1679))+((r00*x1680*x1684))+((sj5*x1673*x1685))+(((-1.0)*r01*x1676*x1687)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1694=((0.528192360616262)*sj4);
IkReal x1695=((0.26409636501044)*cj4);
IkReal x1696=(r20*sj5);
IkReal x1697=((0.444735007694415)*cj5);
IkReal x1698=((0.457427895740576)*cj4);
IkReal x1699=(r10*sj5);
if( IKabs((((r12*x1698))+(((-0.444735007694415)*x1699))+(((-1.0)*r11*x1697))+((x1695*x1699))+((cj5*r10*x1694))+(((-1.0)*r11*sj5*x1694))+(((0.204620884747229)*r12))+((cj5*r11*x1695))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1697))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1696))+((x1695*x1696))+((r22*x1698))+((cj5*r21*x1695))+((cj5*r20*x1694))+(((-1.0)*r21*sj5*x1694))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1698))+(((-0.444735007694415)*x1699))+(((-1.0)*r11*x1697))+((x1695*x1699))+((cj5*r10*x1694))+(((-1.0)*r11*sj5*x1694))+(((0.204620884747229)*r12))+((cj5*r11*x1695))+(((2.4390243902439)*py))))+IKsqr(((((-1.0)*r21*x1697))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1696))+((x1695*x1696))+((r22*x1698))+((cj5*r21*x1695))+((cj5*r20*x1694))+(((-1.0)*r21*sj5*x1694))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1698))+(((-0.444735007694415)*x1699))+(((-1.0)*r11*x1697))+((x1695*x1699))+((cj5*r10*x1694))+(((-1.0)*r11*sj5*x1694))+(((0.204620884747229)*r12))+((cj5*r11*x1695))+(((2.4390243902439)*py))), ((((-1.0)*r21*x1697))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1696))+((x1695*x1696))+((r22*x1698))+((cj5*r21*x1695))+((cj5*r20*x1694))+(((-1.0)*r21*sj5*x1694))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1700=(cj5*sj4);
IkReal x1701=((0.135720094919197)*sj3);
IkReal x1702=(cj5*r11);
IkReal x1703=(cj5*r21);
IkReal x1704=((0.20357990508077)*sj3);
IkReal x1705=(r20*sj5);
IkReal x1706=((0.00925751294893567)*cj4);
IkReal x1707=(cj4*r10);
IkReal x1708=((0.27144)*cj3);
IkReal x1709=((0.10827950965428)*cj4);
IkReal x1710=((0.117537022603216)*sj3);
IkReal x1711=(cj4*r22);
IkReal x1712=(cj3*sj4);
IkReal x1713=(cj4*r12);
IkReal x1714=(r10*sj5);
IkReal x1715=(cj4*sj5);
IkReal x1716=((0.135720094919197)*cj3);
IkReal x1717=((0.41)*(IKcos(j1)));
IkReal x1718=((0.41)*(IKsin(j1)));
IkReal x1719=(r11*sj4*sj5);
IkReal x1720=((0.0678600949192303)*cj4*sj3);
IkReal x1721=(r21*sj4*sj5);
evalcond[0]=((((-0.216558867852667)*x1719))+(((0.216558867852667)*r10*x1700))+(((-1.0)*x1718))+(((0.10827950965428)*sj5*x1707))+py+(((0.187545437253636)*x1713))+((x1702*x1709))+(((-0.18234135315471)*x1714))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x1702)));
evalcond[1]=((((-1.0)*x1717))+((x1703*x1709))+(((-0.216558867852667)*x1721))+((x1705*x1709))+pz+(((0.187545437253636)*x1711))+(((0.216558867852667)*r20*x1700))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x1703))+(((-0.18234135315471)*x1705)));
evalcond[2]=((((-0.0648043305514941)*x1703))+(((-0.0648043305514941)*x1705))+(((-1.0)*x1701*x1719))+((x1710*x1713))+(((-1.0)*cj5*x1707*x1708))+((x1702*x1720))+((r10*x1700*x1701))+(((0.0678600949192303)*sj3*sj5*x1707))+(((-0.0185150129489311)*r20*x1700))+(((0.235073880801598)*r12*x1712))+(((-1.0)*x1717))+(((0.135720094919197)*x1712*x1714))+((r11*x1700*x1716))+(((-1.0)*x1705*x1706))+((r11*x1708*x1715))+(((-1.0)*x1703*x1706))+pz+(((0.0185150129489311)*x1721))+((x1704*x1714))+(((0.0160344678271334)*r22))+((x1702*x1704))+(((-1.0)*r12*x1710))+(((-0.0160344678271334)*x1711)));
evalcond[3]=(((x1710*x1711))+((x1705*x1720))+((r21*x1708*x1715))+x1718+(((0.235073880801598)*r22*x1712))+(((-0.0160344678271334)*r12))+((x1703*x1704))+(((0.0185150129489311)*r10*x1700))+((r21*x1700*x1716))+((r20*x1700*x1701))+(((-1.0)*x1701*x1721))+(((0.0648043305514941)*x1714))+((x1704*x1705))+(((-1.0)*py))+(((0.0648043305514941)*x1702))+(((-0.0185150129489311)*x1719))+(((-1.0)*r22*x1710))+((x1703*x1720))+(((-1.0)*cj4*cj5*r20*x1708))+((x1706*x1714))+(((0.0160344678271334)*x1713))+((x1702*x1706))+(((0.135720094919197)*x1705*x1712)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1722=((0.250000349687704)*r12);
IkReal x1723=((0.749999650312296)*cj4);
IkReal x1724=(cj1*r22);
IkReal x1725=((0.866025201892125)*sj4);
IkReal x1726=(cj1*r20);
IkReal x1727=(sj1*sj5);
IkReal x1728=((0.433012903784321)*r20);
IkReal x1729=((0.433012903784321)*sj5);
IkReal x1730=(cj1*r10);
IkReal x1731=(r22*sj1);
IkReal x1732=((0.433012903784321)*r10);
IkReal x1733=((0.433012903784321)*cj5);
IkReal x1734=(cj1*r21);
IkReal x1735=(cj1*r11);
IkReal x1736=(r11*sj1);
IkReal x1737=(cj1*cj4*x1729);
IkReal x1738=(cj5*sj1*x1725);
IkReal x1739=(cj4*r21*x1733);
if( IKabs((((x1723*x1731))+(((-1.0)*cj4*x1729*x1730))+((cj4*x1727*x1728))+((x1729*x1730))+((sj1*x1739))+(((-1.0)*cj1*r12*x1723))+(((-1.0)*cj4*x1733*x1735))+(((-1.0)*r21*x1725*x1727))+(((0.250000349687704)*x1731))+((x1733*x1735))+(((-1.0)*cj5*x1725*x1730))+(((-1.0)*r21*sj1*x1733))+((r20*x1738))+(((-1.0)*cj1*x1722))+(((-1.0)*x1727*x1728))+((sj5*x1725*x1735)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1733*x1734))+(((-1.0)*x1733*x1736))+((cj4*x1733*x1736))+((cj4*x1733*x1734))+((x1723*x1724))+(((-1.0)*x1726*x1729))+((r10*x1738))+((cj4*x1727*x1732))+((cj5*x1725*x1726))+((sj1*x1722))+(((-1.0)*r11*x1725*x1727))+((r12*sj1*x1723))+((cj4*x1726*x1729))+(((0.250000349687704)*x1724))+(((-1.0)*x1727*x1732))+(((-1.0)*sj5*x1725*x1734)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1723*x1731))+(((-1.0)*cj4*x1729*x1730))+((cj4*x1727*x1728))+((x1729*x1730))+((sj1*x1739))+(((-1.0)*cj1*r12*x1723))+(((-1.0)*cj4*x1733*x1735))+(((-1.0)*r21*x1725*x1727))+(((0.250000349687704)*x1731))+((x1733*x1735))+(((-1.0)*cj5*x1725*x1730))+(((-1.0)*r21*sj1*x1733))+((r20*x1738))+(((-1.0)*cj1*x1722))+(((-1.0)*x1727*x1728))+((sj5*x1725*x1735))))+IKsqr(((((-1.0)*x1733*x1734))+(((-1.0)*x1733*x1736))+((cj4*x1733*x1736))+((cj4*x1733*x1734))+((x1723*x1724))+(((-1.0)*x1726*x1729))+((r10*x1738))+((cj4*x1727*x1732))+((cj5*x1725*x1726))+((sj1*x1722))+(((-1.0)*r11*x1725*x1727))+((r12*sj1*x1723))+((cj4*x1726*x1729))+(((0.250000349687704)*x1724))+(((-1.0)*x1727*x1732))+(((-1.0)*sj5*x1725*x1734))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1723*x1731))+(((-1.0)*cj4*x1729*x1730))+((cj4*x1727*x1728))+((x1729*x1730))+((sj1*x1739))+(((-1.0)*cj1*r12*x1723))+(((-1.0)*cj4*x1733*x1735))+(((-1.0)*r21*x1725*x1727))+(((0.250000349687704)*x1731))+((x1733*x1735))+(((-1.0)*cj5*x1725*x1730))+(((-1.0)*r21*sj1*x1733))+((r20*x1738))+(((-1.0)*cj1*x1722))+(((-1.0)*x1727*x1728))+((sj5*x1725*x1735))), ((((-1.0)*x1733*x1734))+(((-1.0)*x1733*x1736))+((cj4*x1733*x1736))+((cj4*x1733*x1734))+((x1723*x1724))+(((-1.0)*x1726*x1729))+((r10*x1738))+((cj4*x1727*x1732))+((cj5*x1725*x1726))+((sj1*x1722))+(((-1.0)*r11*x1725*x1727))+((r12*sj1*x1723))+((cj4*x1726*x1729))+(((0.250000349687704)*x1724))+(((-1.0)*x1727*x1732))+(((-1.0)*sj5*x1725*x1734))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1740=IKcos(j2);
IkReal x1741=IKsin(j2);
IkReal x1742=(cj5*r11);
IkReal x1743=((0.433012903784321)*cj4);
IkReal x1744=(r21*sj5);
IkReal x1745=((0.500000349687582)*sj4);
IkReal x1746=((0.749999650312296)*sj3);
IkReal x1747=(cj3*cj4);
IkReal x1748=(cj5*r10);
IkReal x1749=((0.0185150129489311)*sj4);
IkReal x1750=(r20*sj5);
IkReal x1751=(cj4*r22);
IkReal x1752=(r10*sj5);
IkReal x1753=(r12*sj3);
IkReal x1754=(r11*sj5);
IkReal x1755=(r22*sj3);
IkReal x1756=((0.27144)*sj1);
IkReal x1757=((0.00925751294893567)*cj4);
IkReal x1758=(cj5*r20);
IkReal x1759=(cj5*r21);
IkReal x1760=(cj4*r12);
IkReal x1761=((0.866025201892125)*sj4);
IkReal x1762=(sj1*x1740);
IkReal x1763=(cj1*x1740);
IkReal x1764=(cj1*x1741);
IkReal x1765=((0.250000349687704)*cj4*sj3);
IkReal x1766=(cj3*x1761);
IkReal x1767=(sj1*x1741);
IkReal x1768=((1.0)*x1764);
evalcond[0]=((((-0.250000349687704)*r22))+x1763+x1767+(((0.433012903784321)*x1759))+(((0.433012903784321)*x1750))+(((-0.749999650312296)*x1751))+(((-1.0)*x1758*x1761))+((x1744*x1761))+(((-1.0)*x1743*x1759))+(((-1.0)*x1743*x1750)));
evalcond[1]=((((-0.250000349687704)*r12))+(((0.433012903784321)*x1742))+(((-1.0)*x1768))+x1762+(((0.433012903784321)*x1752))+(((-1.0)*x1748*x1761))+((x1754*x1761))+(((-1.0)*x1743*x1752))+(((-1.0)*x1742*x1743))+(((-0.749999650312296)*x1760)));
evalcond[2]=((((0.0648043305514941)*x1750))+(((0.0648043305514941)*x1759))+((x1749*x1758))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x1750*x1757))+(((-1.0)*pz))+(((-1.0)*x1744*x1749))+(((-0.27144)*x1763))+((x1757*x1759))+(((0.0160344678271334)*x1751))+(((-1.0)*x1741*x1756)));
evalcond[3]=(((x1752*x1757))+(((0.0648043305514941)*x1742))+(((-1.0)*x1740*x1756))+(((0.0648043305514941)*x1752))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x1749*x1754))+(((0.0160344678271334)*x1760))+(((-1.0)*py))+(((0.27144)*x1764))+((x1748*x1749))+((x1742*x1757)));
evalcond[4]=((((-0.433012903784321)*x1755))+(((-1.0)*x1747*x1758))+(((-1.0)*x1768))+x1762+((x1744*x1747))+((x1746*x1750))+((x1746*x1759))+(((-1.0)*sj3*x1744*x1745))+((x1759*x1765))+((cj3*x1745*x1759))+((cj3*x1745*x1750))+((x1743*x1755))+((r22*x1766))+((x1750*x1765))+((sj3*x1745*x1758)));
evalcond[5]=((((-1.0)*x1747*x1748))+(((-0.433012903784321)*x1753))+(((-1.0)*x1767))+(((-1.0)*x1763))+((cj3*x1742*x1745))+((x1746*x1752))+((x1747*x1754))+((x1742*x1765))+(((-1.0)*sj3*x1745*x1754))+((cj3*x1745*x1752))+((r12*x1766))+((x1752*x1765))+((x1743*x1753))+((x1742*x1746))+((sj3*x1745*x1748)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2, j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1769=((0.433012903784321)*cj5);
IkReal x1770=(cj0*cj4);
IkReal x1771=((0.433012903784321)*r02);
IkReal x1772=(cj5*r00);
IkReal x1773=((0.500000349687582)*sj4);
IkReal x1774=((0.433012903784321)*cj4);
IkReal x1775=(r12*sj0);
IkReal x1776=((0.866025201892125)*sj4);
IkReal x1777=(r01*sj5);
IkReal x1778=(sj0*sj5);
IkReal x1779=(r00*sj5);
IkReal x1780=((0.250000349687704)*cj4);
IkReal x1781=(cj5*r11*sj0);
IkReal x1782=(cj0*cj5*r01);
IkReal x1783=(cj5*r10*sj0);
CheckValue<IkReal> x1784 = IKatan2WithCheck(IkReal((((r11*x1773*x1778))+(((-1.0)*x1773*x1783))+(((-0.749999650312296)*r10*x1778))+(((-1.0)*r10*x1778*x1780))+(((-1.0)*cj0*x1772*x1773))+((cj0*x1773*x1777))+((cj0*x1771))+(((-0.749999650312296)*x1782))+(((-0.749999650312296)*x1781))+(((-0.250000349687704)*cj5*r01*x1770))+(((0.433012903784321)*x1775))+(((-1.0)*x1770*x1771))+(((-0.749999650312296)*cj0*x1779))+(((-1.0)*x1780*x1781))+(((-1.0)*x1774*x1775))+(((-0.250000349687704)*x1770*x1779)))),IkReal(((((-1.0)*x1773*x1781))+(((-1.0)*x1773*x1782))+((x1770*x1772))+(((-1.0)*r10*x1773*x1778))+(((-1.0)*cj4*r11*x1778))+(((-1.0)*cj0*x1773*x1779))+(((-1.0)*cj0*r02*x1776))+(((-1.0)*x1775*x1776))+(((-1.0)*x1770*x1777))+((cj4*x1783)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1784.valid){
continue;
}
CheckValue<IkReal> x1785=IKPowWithIntegerCheck(IKsign((((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r20*((((cj5*x1776))+(((-0.433012903784321)*sj5))+((sj5*x1774))))))+((r21*(((((-1.0)*x1769))+(((-1.0)*sj5*x1776))+((cj4*x1769)))))))),-1);
if(!x1785.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1784.value)+(((1.5707963267949)*(x1785.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1786=IKsin(j3);
IkReal x1787=IKcos(j3);
IkReal x1788=(r11*sj5);
IkReal x1789=(cj5*r20);
IkReal x1790=(cj4*cj5);
IkReal x1791=(r00*sj5);
IkReal x1792=(cj5*r01);
IkReal x1793=(r10*sj5);
IkReal x1794=(r21*sj5);
IkReal x1795=(r20*sj5);
IkReal x1796=(cj5*r21);
IkReal x1797=(cj5*r11);
IkReal x1798=(r01*sj5);
IkReal x1799=((1.0)*x1786);
IkReal x1800=((0.250000349687704)*x1787);
IkReal x1801=((0.749999650312296)*x1787);
IkReal x1802=(cj4*x1786);
IkReal x1803=((0.500000349687582)*sj4*x1787);
IkReal x1804=((0.433012903784321)*r12*x1787);
IkReal x1805=((0.500000349687582)*sj4*x1786);
IkReal x1806=((0.433012903784321)*r02*x1787);
IkReal x1807=((0.866025201892125)*sj4*x1786);
IkReal x1808=((0.433012903784321)*r22*x1787);
evalcond[0]=((((-1.0)*x1789*x1803))+(((-1.0)*cj4*x1789*x1799))+((x1795*x1805))+(((-1.0)*x1795*x1801))+(((-1.0)*x1796*x1801))+((x1794*x1803))+((x1794*x1802))+((r22*x1807))+(((-1.0)*cj4*x1795*x1800))+((x1796*x1805))+x1808+(((-1.0)*cj4*x1808))+(((-1.0)*r21*x1790*x1800)));
evalcond[1]=((((-1.0)*r11*x1790*x1800))+(((-1.0)*cj4*x1793*x1800))+(((-1.0)*cj5*r10*x1803))+cj0+(((-1.0)*x1797*x1801))+(((-1.0)*r10*x1790*x1799))+((x1788*x1802))+((x1788*x1803))+((x1797*x1805))+((r12*x1807))+x1804+(((-1.0)*cj4*x1804))+((x1793*x1805))+(((-1.0)*x1793*x1801)));
evalcond[2]=((((-1.0)*sj0))+((x1798*x1802))+((x1798*x1803))+(((-1.0)*cj5*r00*x1803))+((x1792*x1805))+(((-1.0)*cj4*x1791*x1800))+((r02*x1807))+(((-1.0)*r01*x1790*x1800))+x1806+(((-1.0)*x1792*x1801))+(((-1.0)*cj4*x1806))+(((-1.0)*x1791*x1801))+(((-1.0)*r00*x1790*x1799))+((x1791*x1805)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1809=((0.528192360616262)*sj4);
IkReal x1810=(r20*sj5);
IkReal x1811=((0.26409636501044)*cj4);
IkReal x1812=((0.444735007694415)*cj5);
IkReal x1813=((0.457427895740576)*cj4);
IkReal x1814=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x1814))+(((-1.0)*cj5*r10*x1809))+((r11*sj5*x1809))+(((-1.0)*x1811*x1814))+(((-1.0)*r12*x1813))+(((-1.0)*cj5*r11*x1811))+((r11*x1812)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x1813))+(((0.204620884747229)*r22))+((cj5*r20*x1809))+(((-0.444735007694415)*x1810))+(((-1.0)*r21*sj5*x1809))+((cj5*r21*x1811))+(((-1.0)*r21*x1812))+((x1810*x1811))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x1814))+(((-1.0)*cj5*r10*x1809))+((r11*sj5*x1809))+(((-1.0)*x1811*x1814))+(((-1.0)*r12*x1813))+(((-1.0)*cj5*r11*x1811))+((r11*x1812))))+IKsqr((((r22*x1813))+(((0.204620884747229)*r22))+((cj5*r20*x1809))+(((-0.444735007694415)*x1810))+(((-1.0)*r21*sj5*x1809))+((cj5*r21*x1811))+(((-1.0)*r21*x1812))+((x1810*x1811))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x1814))+(((-1.0)*cj5*r10*x1809))+((r11*sj5*x1809))+(((-1.0)*x1811*x1814))+(((-1.0)*r12*x1813))+(((-1.0)*cj5*r11*x1811))+((r11*x1812))), (((r22*x1813))+(((0.204620884747229)*r22))+((cj5*r20*x1809))+(((-0.444735007694415)*x1810))+(((-1.0)*r21*sj5*x1809))+((cj5*r21*x1811))+(((-1.0)*r21*x1812))+((x1810*x1811))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1815=((1.0)*py);
IkReal x1816=(cj5*r11);
IkReal x1817=(cj5*sj3);
IkReal x1818=(r20*sj5);
IkReal x1819=((0.135720094919197)*sj4);
IkReal x1820=(r21*sj5);
IkReal x1821=((0.0185150129489311)*sj4);
IkReal x1822=((0.135720094919197)*sj3);
IkReal x1823=((0.00925751294893567)*cj4);
IkReal x1824=(cj4*cj5);
IkReal x1825=(cj3*r10);
IkReal x1826=((0.0678600949192303)*cj4);
IkReal x1827=(r10*sj5);
IkReal x1828=((0.10827950965428)*cj4);
IkReal x1829=(cj4*r22);
IkReal x1830=((0.0160344678271334)*r12);
IkReal x1831=((0.20357990508077)*sj3);
IkReal x1832=(cj5*r20);
IkReal x1833=((0.216558867852667)*sj4);
IkReal x1834=((0.117537022603216)*sj3);
IkReal x1835=((0.27144)*cj3);
IkReal x1836=(cj5*r21);
IkReal x1837=(cj4*r12);
IkReal x1838=((0.41)*(IKsin(j1)));
IkReal x1839=((0.41)*(IKcos(j1)));
IkReal x1840=(cj5*r10*sj4);
IkReal x1841=(r11*sj4*sj5);
IkReal x1842=((0.235073880801598)*cj3*sj4);
IkReal x1843=(x1815+x1838);
evalcond[0]=((((-0.18234135315471)*x1818))+(((-0.18234135315471)*x1836))+((x1818*x1828))+(((-1.0)*x1839))+pz+((x1832*x1833))+(((-1.0)*x1820*x1833))+(((0.187545437253636)*x1829))+(((0.10827950965428)*r21*x1824))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*cj5*r10*x1833))+(((-1.0)*x1843))+(((0.18234135315471)*x1816))+(((0.18234135315471)*x1827))+((r11*sj5*x1833))+(((-0.0838945627463637)*r12))+(((-1.0)*x1827*x1828))+(((-0.187545437253636)*x1837))+(((-1.0)*x1816*x1828)));
evalcond[2]=(((r20*x1824*x1835))+(((-1.0)*r11*sj5*x1821))+(((-1.0)*cj4*x1820*x1835))+(((-1.0)*sj3*x1818*x1826))+((cj5*r10*x1821))+(((-1.0)*r22*x1842))+(((-1.0)*x1843))+((r22*x1834))+(((-1.0)*x1830))+(((0.0648043305514941)*x1827))+(((-1.0)*x1818*x1831))+(((-1.0)*cj3*x1819*x1836))+(((0.0648043305514941)*x1816))+((x1823*x1827))+(((-1.0)*cj3*x1818*x1819))+(((-1.0)*r20*x1817*x1819))+((cj4*x1830))+(((-1.0)*r21*x1817*x1826))+((x1816*x1823))+(((-0.20357990508077)*r21*x1817))+(((-1.0)*x1829*x1834))+((sj3*x1819*x1820)));
evalcond[3]=((((0.0648043305514941)*x1836))+((sj3*x1826*x1827))+((x1827*x1831))+((cj4*r11*sj5*x1835))+((x1818*x1823))+(((-1.0)*r11*sj3*sj5*x1819))+(((-0.0160344678271334)*r22))+((x1821*x1832))+((x1823*x1836))+(((0.0648043305514941)*x1818))+(((0.0160344678271334)*x1829))+(((-1.0)*pz))+((sj5*x1819*x1825))+((r10*x1817*x1819))+x1839+((cj3*x1816*x1819))+(((-1.0)*r12*x1834))+((x1816*x1831))+(((-1.0)*x1820*x1821))+((x1834*x1837))+((r12*x1842))+((sj3*x1816*x1826))+(((-0.27144)*x1824*x1825)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1844=((0.250000349687704)*r12);
IkReal x1845=((0.749999650312296)*cj4);
IkReal x1846=((0.433012903784321)*sj5);
IkReal x1847=(cj1*r10);
IkReal x1848=(cj1*r22);
IkReal x1849=(cj1*r20);
IkReal x1850=((0.866025201892125)*sj4);
IkReal x1851=(r20*sj1);
IkReal x1852=(r22*sj1);
IkReal x1853=(r10*sj1);
IkReal x1854=(r11*sj1);
IkReal x1855=((0.433012903784321)*cj5);
IkReal x1856=(r21*sj1);
IkReal x1857=(cj1*r21);
IkReal x1858=(cj1*r11);
IkReal x1859=(cj5*sj1*x1850);
IkReal x1860=(cj4*r21*x1855);
if( IKabs((((cj1*r12*x1845))+((cj5*x1850*x1851))+((cj4*x1846*x1847))+((cj1*x1844))+((x1845*x1852))+(((0.250000349687704)*x1852))+((cj4*x1846*x1851))+(((-1.0)*sj5*x1850*x1858))+(((-1.0)*sj5*x1850*x1856))+(((-1.0)*x1855*x1858))+(((-1.0)*x1855*x1856))+(((-1.0)*x1846*x1847))+(((-1.0)*x1846*x1851))+((cj4*x1855*x1856))+((cj4*x1855*x1858))+((cj5*x1847*x1850)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r12*sj1*x1845))+((x1845*x1848))+(((-1.0)*cj4*x1854*x1855))+((x1846*x1853))+((sj5*x1850*x1854))+(((-1.0)*sj1*x1844))+((cj4*x1846*x1849))+(((-1.0)*cj4*x1846*x1853))+((x1854*x1855))+((cj5*x1849*x1850))+(((-1.0)*sj5*x1850*x1857))+(((-1.0)*x1855*x1857))+(((-1.0)*x1846*x1849))+((cj4*x1855*x1857))+(((0.250000349687704)*x1848))+(((-1.0)*cj5*x1850*x1853)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*r12*x1845))+((cj5*x1850*x1851))+((cj4*x1846*x1847))+((cj1*x1844))+((x1845*x1852))+(((0.250000349687704)*x1852))+((cj4*x1846*x1851))+(((-1.0)*sj5*x1850*x1858))+(((-1.0)*sj5*x1850*x1856))+(((-1.0)*x1855*x1858))+(((-1.0)*x1855*x1856))+(((-1.0)*x1846*x1847))+(((-1.0)*x1846*x1851))+((cj4*x1855*x1856))+((cj4*x1855*x1858))+((cj5*x1847*x1850))))+IKsqr(((((-1.0)*r12*sj1*x1845))+((x1845*x1848))+(((-1.0)*cj4*x1854*x1855))+((x1846*x1853))+((sj5*x1850*x1854))+(((-1.0)*sj1*x1844))+((cj4*x1846*x1849))+(((-1.0)*cj4*x1846*x1853))+((x1854*x1855))+((cj5*x1849*x1850))+(((-1.0)*sj5*x1850*x1857))+(((-1.0)*x1855*x1857))+(((-1.0)*x1846*x1849))+((cj4*x1855*x1857))+(((0.250000349687704)*x1848))+(((-1.0)*cj5*x1850*x1853))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*r12*x1845))+((cj5*x1850*x1851))+((cj4*x1846*x1847))+((cj1*x1844))+((x1845*x1852))+(((0.250000349687704)*x1852))+((cj4*x1846*x1851))+(((-1.0)*sj5*x1850*x1858))+(((-1.0)*sj5*x1850*x1856))+(((-1.0)*x1855*x1858))+(((-1.0)*x1855*x1856))+(((-1.0)*x1846*x1847))+(((-1.0)*x1846*x1851))+((cj4*x1855*x1856))+((cj4*x1855*x1858))+((cj5*x1847*x1850))), ((((-1.0)*r12*sj1*x1845))+((x1845*x1848))+(((-1.0)*cj4*x1854*x1855))+((x1846*x1853))+((sj5*x1850*x1854))+(((-1.0)*sj1*x1844))+((cj4*x1846*x1849))+(((-1.0)*cj4*x1846*x1853))+((x1854*x1855))+((cj5*x1849*x1850))+(((-1.0)*sj5*x1850*x1857))+(((-1.0)*x1855*x1857))+(((-1.0)*x1846*x1849))+((cj4*x1855*x1857))+(((0.250000349687704)*x1848))+(((-1.0)*cj5*x1850*x1853))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1861=IKsin(j2);
IkReal x1862=IKcos(j2);
IkReal x1863=(cj5*r11);
IkReal x1864=((0.433012903784321)*cj4);
IkReal x1865=(r21*sj5);
IkReal x1866=((0.500000349687582)*sj4);
IkReal x1867=((0.749999650312296)*sj3);
IkReal x1868=(cj3*cj4);
IkReal x1869=(cj5*r10);
IkReal x1870=((0.0185150129489311)*sj4);
IkReal x1871=(r20*sj5);
IkReal x1872=(cj4*r22);
IkReal x1873=(r10*sj5);
IkReal x1874=(r22*sj3);
IkReal x1875=(r11*sj5);
IkReal x1876=((0.00925751294893567)*cj4);
IkReal x1877=(cj5*r21);
IkReal x1878=(r12*sj3);
IkReal x1879=(cj4*r12);
IkReal x1880=(cj5*r20);
IkReal x1881=((0.866025201892125)*sj4);
IkReal x1882=(cj1*x1862);
IkReal x1883=(sj1*x1861);
IkReal x1884=(cj1*x1861);
IkReal x1885=((0.250000349687704)*cj4*sj3);
IkReal x1886=(sj1*x1862);
IkReal x1887=(cj3*x1881);
IkReal x1888=(x1883+x1882);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x1880*x1881))+(((-0.749999650312296)*x1872))+((x1865*x1881))+(((-1.0)*x1864*x1871))+(((-1.0)*x1864*x1877))+(((0.433012903784321)*x1871))+(((0.433012903784321)*x1877))+x1888);
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x1869*x1881))+(((-0.749999650312296)*x1879))+(((-1.0)*x1864*x1873))+((x1875*x1881))+(((-1.0)*x1863*x1864))+(((0.433012903784321)*x1863))+(((0.433012903784321)*x1873))+x1884+(((-1.0)*x1886)));
evalcond[2]=(((x1876*x1877))+((x1870*x1880))+((x1871*x1876))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.0648043305514941)*x1877))+(((0.0648043305514941)*x1871))+(((0.0160344678271334)*x1872))+(((-1.0)*x1865*x1870))+(((-0.27144)*x1883))+(((-0.27144)*x1882)));
evalcond[3]=((((0.27144)*x1886))+((x1863*x1876))+(((-0.0160344678271334)*r12))+(((-1.0)*x1870*x1875))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0648043305514941)*x1873))+(((0.0160344678271334)*x1879))+((x1873*x1876))+(((-0.27144)*x1884))+((x1869*x1870))+(((0.0648043305514941)*x1863)));
evalcond[4]=(((r12*x1887))+(((-1.0)*x1868*x1869))+((cj3*x1866*x1873))+((x1863*x1867))+((x1863*x1885))+((x1873*x1885))+((cj3*x1863*x1866))+x1888+((sj3*x1866*x1869))+((x1868*x1875))+((x1867*x1873))+(((-0.433012903784321)*x1878))+((x1864*x1878))+(((-1.0)*sj3*x1866*x1875)));
evalcond[5]=(((x1877*x1885))+(((-1.0)*sj3*x1865*x1866))+((cj3*x1866*x1871))+((cj3*x1866*x1877))+((sj3*x1866*x1880))+((x1865*x1868))+x1886+((x1871*x1885))+(((-1.0)*x1884))+((r22*x1887))+((x1867*x1871))+((x1867*x1877))+(((-0.433012903784321)*x1874))+(((-1.0)*x1868*x1880))+((x1864*x1874)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1889=((0.528192360616262)*sj4);
IkReal x1890=((0.26409636501044)*cj4);
IkReal x1891=(r20*sj5);
IkReal x1892=((0.444735007694415)*cj5);
IkReal x1893=((0.457427895740576)*cj4);
IkReal x1894=(r10*sj5);
if( IKabs(((((-0.444735007694415)*x1894))+(((-1.0)*r11*sj5*x1889))+((cj5*r10*x1889))+(((-1.0)*r11*x1892))+(((0.204620884747229)*r12))+((cj5*r11*x1890))+(((2.4390243902439)*py))+((r12*x1893))+((x1890*x1894)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x1893))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1889))+((cj5*r21*x1890))+(((-0.444735007694415)*x1891))+(((-1.0)*r21*x1892))+((cj5*r20*x1889))+(((2.4390243902439)*pz))+((x1890*x1891)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.444735007694415)*x1894))+(((-1.0)*r11*sj5*x1889))+((cj5*r10*x1889))+(((-1.0)*r11*x1892))+(((0.204620884747229)*r12))+((cj5*r11*x1890))+(((2.4390243902439)*py))+((r12*x1893))+((x1890*x1894))))+IKsqr((((r22*x1893))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1889))+((cj5*r21*x1890))+(((-0.444735007694415)*x1891))+(((-1.0)*r21*x1892))+((cj5*r20*x1889))+(((2.4390243902439)*pz))+((x1890*x1891))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-0.444735007694415)*x1894))+(((-1.0)*r11*sj5*x1889))+((cj5*r10*x1889))+(((-1.0)*r11*x1892))+(((0.204620884747229)*r12))+((cj5*r11*x1890))+(((2.4390243902439)*py))+((r12*x1893))+((x1890*x1894))), (((r22*x1893))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1889))+((cj5*r21*x1890))+(((-0.444735007694415)*x1891))+(((-1.0)*r21*x1892))+((cj5*r20*x1889))+(((2.4390243902439)*pz))+((x1890*x1891))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1895=(cj5*sj4);
IkReal x1896=((0.135720094919197)*sj3);
IkReal x1897=(cj5*r11);
IkReal x1898=(cj5*r21);
IkReal x1899=((0.20357990508077)*sj3);
IkReal x1900=(r20*sj5);
IkReal x1901=((0.00925751294893567)*cj4);
IkReal x1902=(cj4*r10);
IkReal x1903=((0.27144)*cj3);
IkReal x1904=((0.10827950965428)*cj4);
IkReal x1905=((0.117537022603216)*sj3);
IkReal x1906=(cj4*r22);
IkReal x1907=(cj3*sj4);
IkReal x1908=(cj4*r12);
IkReal x1909=(r10*sj5);
IkReal x1910=(cj4*sj5);
IkReal x1911=((0.135720094919197)*cj3);
IkReal x1912=((0.41)*(IKcos(j1)));
IkReal x1913=((0.41)*(IKsin(j1)));
IkReal x1914=(r11*sj4*sj5);
IkReal x1915=((0.0678600949192303)*cj4*sj3);
IkReal x1916=(r21*sj4*sj5);
evalcond[0]=((((0.187545437253636)*x1908))+(((0.10827950965428)*sj5*x1902))+py+(((-0.216558867852667)*x1914))+(((-0.18234135315471)*x1909))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x1897))+(((-1.0)*x1913))+(((0.216558867852667)*r10*x1895))+((x1897*x1904)));
evalcond[1]=((((0.187545437253636)*x1906))+((x1898*x1904))+((x1900*x1904))+pz+(((0.216558867852667)*r20*x1895))+(((-0.216558867852667)*x1916))+(((-0.18234135315471)*x1900))+(((-0.18234135315471)*x1898))+(((-1.0)*x1912))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-0.0648043305514941)*x1898))+((x1905*x1908))+((x1897*x1899))+(((0.135720094919197)*x1907*x1909))+(((-0.0648043305514941)*x1900))+(((0.0678600949192303)*sj3*sj5*x1902))+(((0.235073880801598)*r12*x1907))+(((-1.0)*x1900*x1901))+((r11*x1895*x1911))+(((-1.0)*x1898*x1901))+(((-0.0160344678271334)*x1906))+(((0.0185150129489311)*x1916))+((r10*x1895*x1896))+(((-1.0)*r12*x1905))+((x1899*x1909))+(((-0.0185150129489311)*r20*x1895))+pz+(((0.0160344678271334)*r22))+(((-1.0)*cj5*x1902*x1903))+((x1897*x1915))+((r11*x1903*x1910))+(((-1.0)*x1896*x1914))+(((-1.0)*x1912)));
evalcond[3]=(((x1901*x1909))+(((-1.0)*cj4*cj5*r20*x1903))+(((0.0185150129489311)*r10*x1895))+((x1905*x1906))+(((0.0160344678271334)*x1908))+(((-0.0160344678271334)*r12))+((r20*x1895*x1896))+((r21*x1903*x1910))+(((-1.0)*r22*x1905))+((x1900*x1915))+((r21*x1895*x1911))+(((-1.0)*py))+x1913+((x1898*x1899))+((x1898*x1915))+((x1899*x1900))+(((-0.0185150129489311)*x1914))+(((0.135720094919197)*x1900*x1907))+(((0.0648043305514941)*x1909))+(((0.235073880801598)*r22*x1907))+(((-1.0)*x1896*x1916))+(((0.0648043305514941)*x1897))+((x1897*x1901)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1917=((0.250000349687704)*r12);
IkReal x1918=((0.749999650312296)*cj4);
IkReal x1919=(cj1*r22);
IkReal x1920=((0.866025201892125)*sj4);
IkReal x1921=(cj1*r20);
IkReal x1922=(sj1*sj5);
IkReal x1923=((0.433012903784321)*r20);
IkReal x1924=((0.433012903784321)*sj5);
IkReal x1925=(cj1*r10);
IkReal x1926=(r22*sj1);
IkReal x1927=((0.433012903784321)*r10);
IkReal x1928=((0.433012903784321)*cj5);
IkReal x1929=(cj1*r21);
IkReal x1930=(cj1*r11);
IkReal x1931=(r11*sj1);
IkReal x1932=(cj1*cj4*x1924);
IkReal x1933=(cj5*sj1*x1920);
IkReal x1934=(cj4*r21*x1928);
if( IKabs(((((-1.0)*cj5*x1920*x1925))+(((-1.0)*cj1*r12*x1918))+(((-1.0)*cj4*x1928*x1930))+((x1918*x1926))+(((-1.0)*x1922*x1923))+((sj5*x1920*x1930))+((cj4*x1922*x1923))+(((-1.0)*cj1*x1917))+(((-1.0)*r21*x1920*x1922))+((sj1*x1934))+(((0.250000349687704)*x1926))+(((-1.0)*cj4*x1924*x1925))+((x1928*x1930))+(((-1.0)*r21*sj1*x1928))+((x1924*x1925))+((r20*x1933)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1928*x1931))+((cj4*x1921*x1924))+((r12*sj1*x1918))+(((-1.0)*x1922*x1927))+(((-1.0)*r11*x1920*x1922))+((cj4*x1922*x1927))+(((-1.0)*sj5*x1920*x1929))+(((0.250000349687704)*x1919))+((cj4*x1928*x1931))+((cj4*x1928*x1929))+(((-1.0)*x1928*x1929))+((sj1*x1917))+(((-1.0)*x1921*x1924))+((x1918*x1919))+((r10*x1933))+((cj5*x1920*x1921)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj5*x1920*x1925))+(((-1.0)*cj1*r12*x1918))+(((-1.0)*cj4*x1928*x1930))+((x1918*x1926))+(((-1.0)*x1922*x1923))+((sj5*x1920*x1930))+((cj4*x1922*x1923))+(((-1.0)*cj1*x1917))+(((-1.0)*r21*x1920*x1922))+((sj1*x1934))+(((0.250000349687704)*x1926))+(((-1.0)*cj4*x1924*x1925))+((x1928*x1930))+(((-1.0)*r21*sj1*x1928))+((x1924*x1925))+((r20*x1933))))+IKsqr(((((-1.0)*x1928*x1931))+((cj4*x1921*x1924))+((r12*sj1*x1918))+(((-1.0)*x1922*x1927))+(((-1.0)*r11*x1920*x1922))+((cj4*x1922*x1927))+(((-1.0)*sj5*x1920*x1929))+(((0.250000349687704)*x1919))+((cj4*x1928*x1931))+((cj4*x1928*x1929))+(((-1.0)*x1928*x1929))+((sj1*x1917))+(((-1.0)*x1921*x1924))+((x1918*x1919))+((r10*x1933))+((cj5*x1920*x1921))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj5*x1920*x1925))+(((-1.0)*cj1*r12*x1918))+(((-1.0)*cj4*x1928*x1930))+((x1918*x1926))+(((-1.0)*x1922*x1923))+((sj5*x1920*x1930))+((cj4*x1922*x1923))+(((-1.0)*cj1*x1917))+(((-1.0)*r21*x1920*x1922))+((sj1*x1934))+(((0.250000349687704)*x1926))+(((-1.0)*cj4*x1924*x1925))+((x1928*x1930))+(((-1.0)*r21*sj1*x1928))+((x1924*x1925))+((r20*x1933))), ((((-1.0)*x1928*x1931))+((cj4*x1921*x1924))+((r12*sj1*x1918))+(((-1.0)*x1922*x1927))+(((-1.0)*r11*x1920*x1922))+((cj4*x1922*x1927))+(((-1.0)*sj5*x1920*x1929))+(((0.250000349687704)*x1919))+((cj4*x1928*x1931))+((cj4*x1928*x1929))+(((-1.0)*x1928*x1929))+((sj1*x1917))+(((-1.0)*x1921*x1924))+((x1918*x1919))+((r10*x1933))+((cj5*x1920*x1921))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1935=IKcos(j2);
IkReal x1936=IKsin(j2);
IkReal x1937=(cj5*r11);
IkReal x1938=((0.433012903784321)*cj4);
IkReal x1939=(r21*sj5);
IkReal x1940=((0.500000349687582)*sj4);
IkReal x1941=((0.749999650312296)*sj3);
IkReal x1942=(cj3*cj4);
IkReal x1943=(cj5*r10);
IkReal x1944=((0.0185150129489311)*sj4);
IkReal x1945=(r20*sj5);
IkReal x1946=(cj4*r22);
IkReal x1947=(r10*sj5);
IkReal x1948=(r12*sj3);
IkReal x1949=(r11*sj5);
IkReal x1950=(r22*sj3);
IkReal x1951=((0.27144)*sj1);
IkReal x1952=((0.00925751294893567)*cj4);
IkReal x1953=(cj5*r20);
IkReal x1954=(cj5*r21);
IkReal x1955=(cj4*r12);
IkReal x1956=((0.866025201892125)*sj4);
IkReal x1957=(sj1*x1935);
IkReal x1958=(cj1*x1935);
IkReal x1959=(cj1*x1936);
IkReal x1960=((0.250000349687704)*cj4*sj3);
IkReal x1961=(cj3*x1956);
IkReal x1962=(sj1*x1936);
IkReal x1963=((1.0)*x1959);
evalcond[0]=((((-0.250000349687704)*r22))+((x1939*x1956))+x1962+x1958+(((-1.0)*x1938*x1945))+(((-1.0)*x1938*x1954))+(((-1.0)*x1953*x1956))+(((-0.749999650312296)*x1946))+(((0.433012903784321)*x1945))+(((0.433012903784321)*x1954)));
evalcond[1]=((((-1.0)*x1937*x1938))+(((-0.250000349687704)*r12))+(((-1.0)*x1943*x1956))+(((-1.0)*x1963))+x1957+(((-1.0)*x1938*x1947))+(((-0.749999650312296)*x1955))+(((0.433012903784321)*x1947))+(((0.433012903784321)*x1937))+((x1949*x1956)));
evalcond[2]=(((x1945*x1952))+((x1952*x1954))+((x1944*x1953))+(((-0.27144)*x1958))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x1946))+(((0.0648043305514941)*x1945))+(((-1.0)*pz))+(((0.0648043305514941)*x1954))+(((-1.0)*x1936*x1951))+(((-1.0)*x1939*x1944)));
evalcond[3]=(((x1943*x1944))+((x1937*x1952))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x1944*x1949))+(((0.0648043305514941)*x1947))+(((0.0160344678271334)*x1955))+(((-1.0)*py))+(((-1.0)*x1935*x1951))+(((0.0648043305514941)*x1937))+((x1947*x1952))+(((0.27144)*x1959)));
evalcond[4]=(((cj3*x1940*x1945))+((sj3*x1940*x1953))+((x1938*x1950))+((x1945*x1960))+(((-1.0)*sj3*x1939*x1940))+((x1939*x1942))+(((-1.0)*x1963))+((x1954*x1960))+((x1941*x1954))+(((-1.0)*x1942*x1953))+((x1941*x1945))+x1957+((r22*x1961))+(((-0.433012903784321)*x1950))+((cj3*x1940*x1954)));
evalcond[5]=(((cj3*x1940*x1947))+((x1937*x1960))+((x1938*x1948))+((x1937*x1941))+((sj3*x1940*x1943))+((r12*x1961))+((cj3*x1937*x1940))+(((-1.0)*x1962))+((x1941*x1947))+(((-1.0)*x1942*x1943))+(((-1.0)*x1958))+((x1942*x1949))+(((-1.0)*sj3*x1940*x1949))+(((-0.433012903784321)*x1948))+((x1947*x1960)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1964=((0.26409636501044)*cj4);
IkReal x1965=(r20*sj5);
IkReal x1966=(cj5*r21);
IkReal x1967=((0.457427895740576)*cj4);
IkReal x1968=(r00*sj5);
IkReal x1969=((0.528192360616262)*sj4);
IkReal x1970=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x1970))+(((0.444735007694415)*x1968))+(((-1.0)*x1964*x1970))+(((-1.0)*x1964*x1968))+(((-1.0)*cj5*r00*x1969))+(((-1.0)*r02*x1967))+((r01*sj5*x1969)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((x1964*x1965))+((x1964*x1966))+(((-1.0)*r21*sj5*x1969))+(((-0.444735007694415)*x1966))+(((-0.444735007694415)*x1965))+((cj5*r20*x1969))+((r22*x1967))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x1970))+(((0.444735007694415)*x1968))+(((-1.0)*x1964*x1970))+(((-1.0)*x1964*x1968))+(((-1.0)*cj5*r00*x1969))+(((-1.0)*r02*x1967))+((r01*sj5*x1969))))+IKsqr(((((0.204620884747229)*r22))+((x1964*x1965))+((x1964*x1966))+(((-1.0)*r21*sj5*x1969))+(((-0.444735007694415)*x1966))+(((-0.444735007694415)*x1965))+((cj5*r20*x1969))+((r22*x1967))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x1970))+(((0.444735007694415)*x1968))+(((-1.0)*x1964*x1970))+(((-1.0)*x1964*x1968))+(((-1.0)*cj5*r00*x1969))+(((-1.0)*r02*x1967))+((r01*sj5*x1969))), ((((0.204620884747229)*r22))+((x1964*x1965))+((x1964*x1966))+(((-1.0)*r21*sj5*x1969))+(((-0.444735007694415)*x1966))+(((-0.444735007694415)*x1965))+((cj5*r20*x1969))+((r22*x1967))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1971=((1.0)*px);
IkReal x1972=((0.187545437253636)*cj4);
IkReal x1973=(r20*sj5);
IkReal x1974=(r01*sj3);
IkReal x1975=(cj5*r21);
IkReal x1976=(cj3*r00);
IkReal x1977=((0.0185150129489311)*sj4);
IkReal x1978=(r21*sj5);
IkReal x1979=((0.20357990508077)*sj3);
IkReal x1980=(cj5*sj4);
IkReal x1981=((0.135720094919197)*sj3);
IkReal x1982=(cj4*cj5);
IkReal x1983=(r00*sj5);
IkReal x1984=((0.00925751294893567)*cj4);
IkReal x1985=((0.10827950965428)*cj4);
IkReal x1986=(cj4*r22);
IkReal x1987=((0.117537022603216)*sj3);
IkReal x1988=(cj5*r01);
IkReal x1989=((0.135720094919197)*cj3);
IkReal x1990=(r01*sj5);
IkReal x1991=((0.216558867852667)*sj4);
IkReal x1992=(cj4*r02);
IkReal x1993=((0.27144)*cj3);
IkReal x1994=((0.41)*(IKsin(j1)));
IkReal x1995=((0.41)*(IKcos(j1)));
IkReal x1996=((0.135720094919197)*sj4*sj5);
IkReal x1997=((0.0678600949192303)*cj4*sj3);
IkReal x1998=((0.235073880801598)*cj3*sj4);
IkReal x1999=(x1994+x1971);
evalcond[0]=(((x1975*x1985))+((r22*x1972))+((x1973*x1985))+(((-1.0)*x1995))+pz+(((0.216558867852667)*r20*x1980))+(((-0.18234135315471)*x1975))+(((-0.18234135315471)*x1973))+(((-1.0)*x1978*x1991))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x1983*x1985))+(((-0.10827950965428)*r01*x1982))+(((-1.0)*r02*x1972))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x1980))+(((-1.0)*x1999))+((x1990*x1991))+(((0.18234135315471)*x1988))+(((0.18234135315471)*x1983)));
evalcond[2]=((((-1.0)*x1986*x1987))+((sj4*x1978*x1981))+(((-1.0)*x1977*x1990))+(((-1.0)*x1975*x1979))+(((-1.0)*r20*x1980*x1981))+(((-0.0160344678271334)*r02))+(((-1.0)*x1973*x1997))+(((0.0648043305514941)*x1983))+(((0.0648043305514941)*x1988))+((r20*x1982*x1993))+(((-1.0)*x1973*x1979))+(((-1.0)*sj4*x1973*x1989))+(((-1.0)*cj4*x1978*x1993))+(((0.00925751294893567)*r01*x1982))+(((-1.0)*x1999))+((r22*x1987))+(((0.0160344678271334)*x1992))+(((-1.0)*sj4*x1975*x1989))+((cj5*r00*x1977))+(((-1.0)*r22*x1998))+((x1983*x1984))+(((-1.0)*x1975*x1997)));
evalcond[3]=(((r00*x1980*x1981))+(((-0.27144)*x1976*x1982))+((x1976*x1996))+(((-1.0)*r02*x1987))+((x1975*x1984))+(((-1.0)*x1974*x1996))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x1986))+((r02*x1998))+((x1983*x1997))+((cj4*x1990*x1993))+(((-1.0)*pz))+(((0.0648043305514941)*x1975))+(((0.0648043305514941)*x1973))+((x1979*x1983))+x1995+((r01*x1980*x1989))+((x1973*x1984))+(((-1.0)*x1977*x1978))+((cj5*r20*x1977))+(((0.20357990508077)*cj5*x1974))+((x1987*x1992))+(((0.0678600949192303)*x1974*x1982)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2000=((0.250000349687704)*sj1);
IkReal x2001=(cj1*cj4);
IkReal x2002=((0.749999650312296)*r22);
IkReal x2003=(cj4*sj1);
IkReal x2004=((0.749999650312296)*r02);
IkReal x2005=((0.250000349687704)*cj1);
IkReal x2006=((0.433012903784321)*r00*sj5);
IkReal x2007=((0.433012903784321)*r20*sj5);
IkReal x2008=((0.433012903784321)*cj5*r01);
IkReal x2009=((0.433012903784321)*cj5*r21);
IkReal x2010=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2011=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2012=((0.866025201892125)*r01*sj4*sj5);
IkReal x2013=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r22*x2000))+((x2002*x2003))+((r20*x2010))+((r00*x2011))+(((-1.0)*sj1*x2009))+(((-1.0)*sj1*x2007))+((r02*x2005))+(((-1.0)*cj1*x2006))+(((-1.0)*cj1*x2008))+(((-1.0)*cj1*x2012))+((x2001*x2006))+((x2001*x2004))+((x2001*x2008))+(((-1.0)*sj1*x2013))+((x2003*x2007))+((x2003*x2009)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2005))+((r20*x2011))+((sj1*x2012))+(((-1.0)*x2003*x2008))+(((-1.0)*x2003*x2004))+(((-1.0)*x2003*x2006))+(((-1.0)*cj1*x2009))+(((-1.0)*cj1*x2007))+(((-1.0)*cj1*x2013))+(((-1.0)*r02*x2000))+((sj1*x2008))+((sj1*x2006))+((x2001*x2002))+((x2001*x2007))+((x2001*x2009))+(((-1.0)*r00*x2010)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x2000))+((x2002*x2003))+((r20*x2010))+((r00*x2011))+(((-1.0)*sj1*x2009))+(((-1.0)*sj1*x2007))+((r02*x2005))+(((-1.0)*cj1*x2006))+(((-1.0)*cj1*x2008))+(((-1.0)*cj1*x2012))+((x2001*x2006))+((x2001*x2004))+((x2001*x2008))+(((-1.0)*sj1*x2013))+((x2003*x2007))+((x2003*x2009))))+IKsqr((((r22*x2005))+((r20*x2011))+((sj1*x2012))+(((-1.0)*x2003*x2008))+(((-1.0)*x2003*x2004))+(((-1.0)*x2003*x2006))+(((-1.0)*cj1*x2009))+(((-1.0)*cj1*x2007))+(((-1.0)*cj1*x2013))+(((-1.0)*r02*x2000))+((sj1*x2008))+((sj1*x2006))+((x2001*x2002))+((x2001*x2007))+((x2001*x2009))+(((-1.0)*r00*x2010))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x2000))+((x2002*x2003))+((r20*x2010))+((r00*x2011))+(((-1.0)*sj1*x2009))+(((-1.0)*sj1*x2007))+((r02*x2005))+(((-1.0)*cj1*x2006))+(((-1.0)*cj1*x2008))+(((-1.0)*cj1*x2012))+((x2001*x2006))+((x2001*x2004))+((x2001*x2008))+(((-1.0)*sj1*x2013))+((x2003*x2007))+((x2003*x2009))), (((r22*x2005))+((r20*x2011))+((sj1*x2012))+(((-1.0)*x2003*x2008))+(((-1.0)*x2003*x2004))+(((-1.0)*x2003*x2006))+(((-1.0)*cj1*x2009))+(((-1.0)*cj1*x2007))+(((-1.0)*cj1*x2013))+(((-1.0)*r02*x2000))+((sj1*x2008))+((sj1*x2006))+((x2001*x2002))+((x2001*x2007))+((x2001*x2009))+(((-1.0)*r00*x2010))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2014=IKsin(j2);
IkReal x2015=IKcos(j2);
IkReal x2016=((0.749999650312296)*sj3);
IkReal x2017=(cj5*r01);
IkReal x2018=(r00*sj5);
IkReal x2019=(cj4*cj5);
IkReal x2020=((1.0)*cj3);
IkReal x2021=(r21*sj3);
IkReal x2022=(cj4*sj5);
IkReal x2023=(cj3*r21);
IkReal x2024=((0.500000349687582)*sj4);
IkReal x2025=((0.433012903784321)*r20);
IkReal x2026=(cj4*r22);
IkReal x2027=((0.433012903784321)*sj3);
IkReal x2028=((0.433012903784321)*cj4);
IkReal x2029=(r01*sj5);
IkReal x2030=(r20*sj5);
IkReal x2031=((0.0160344678271334)*r02);
IkReal x2032=(cj4*r02);
IkReal x2033=((0.00925751294893567)*cj4);
IkReal x2034=((0.0185150129489311)*sj4);
IkReal x2035=(r21*sj5);
IkReal x2036=(cj5*r21);
IkReal x2037=((0.866025201892125)*sj4);
IkReal x2038=(cj5*r20);
IkReal x2039=(cj5*r00);
IkReal x2040=((0.250000349687704)*sj3);
IkReal x2041=(cj1*x2015);
IkReal x2042=(sj1*x2014);
IkReal x2043=(cj1*x2014);
IkReal x2044=(sj1*x2015);
IkReal x2045=(x2042+x2041);
evalcond[0]=((((-1.0)*x2022*x2025))+(((-0.250000349687704)*r22))+((sj5*x2025))+(((-0.749999650312296)*x2026))+(((-0.433012903784321)*r21*x2019))+x2045+((x2035*x2037))+(((0.433012903784321)*x2036))+(((-1.0)*x2037*x2038)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.749999650312296)*x2032))+x2043+(((-1.0)*x2017*x2028))+(((-1.0)*x2044))+(((-1.0)*x2018*x2028))+((x2029*x2037))+(((0.433012903784321)*x2017))+(((0.433012903784321)*x2018))+(((-1.0)*x2037*x2039)));
evalcond[2]=((((0.0648043305514941)*x2036))+(((0.0648043305514941)*x2030))+((x2034*x2038))+(((0.00925751294893567)*r20*x2022))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r21*x2019))+(((-1.0)*pz))+(((-0.27144)*x2041))+(((-0.27144)*x2042))+(((-1.0)*x2034*x2035))+(((0.0160344678271334)*x2026)));
evalcond[3]=(((x2018*x2033))+((cj4*x2031))+((x2034*x2039))+((x2017*x2033))+(((-0.41)*sj1))+(((-1.0)*x2029*x2034))+(((-1.0)*px))+(((-0.27144)*x2043))+(((-1.0)*x2031))+(((0.27144)*x2044))+(((0.0648043305514941)*x2017))+(((0.0648043305514941)*x2018)));
evalcond[4]=(((cj4*x2018*x2040))+((x2027*x2032))+((cj3*r02*x2037))+((cj3*x2017*x2024))+x2045+((cj3*x2018*x2024))+((x2016*x2017))+((x2016*x2018))+(((-1.0)*r00*x2019*x2020))+(((-1.0)*r02*x2027))+((cj4*x2017*x2040))+((sj3*x2024*x2039))+((cj3*r01*x2022))+(((-1.0)*sj3*x2024*x2029)));
evalcond[5]=((((-1.0)*r22*x2027))+((x2026*x2027))+x2044+((x2022*x2023))+((r20*x2022*x2040))+(((0.250000349687704)*x2019*x2021))+(((-1.0)*sj5*x2021*x2024))+(((-1.0)*x2043))+(((-1.0)*r20*x2019*x2020))+((cj5*x2023*x2024))+((cj3*r22*x2037))+((sj3*x2024*x2038))+((x2016*x2036))+((x2016*x2030))+((cj3*x2024*x2030)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2046=(cj5*r21);
IkReal x2047=((0.26409636501044)*cj4);
IkReal x2048=((0.457427895740576)*cj4);
IkReal x2049=((0.528192360616262)*sj4);
IkReal x2050=(cj5*r01);
IkReal x2051=((0.444735007694415)*sj5);
if( IKabs(((((-1.0)*r00*x2051))+(((-0.444735007694415)*x2050))+((r02*x2048))+((x2047*x2050))+((r00*sj5*x2047))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x2049))+((cj5*r00*x2049))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2048))+(((0.204620884747229)*r22))+((cj5*r20*x2049))+((x2046*x2047))+(((-1.0)*r21*sj5*x2049))+((r20*sj5*x2047))+(((-1.0)*r20*x2051))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2046)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x2051))+(((-0.444735007694415)*x2050))+((r02*x2048))+((x2047*x2050))+((r00*sj5*x2047))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x2049))+((cj5*r00*x2049))+(((2.4390243902439)*px))))+IKsqr((((r22*x2048))+(((0.204620884747229)*r22))+((cj5*r20*x2049))+((x2046*x2047))+(((-1.0)*r21*sj5*x2049))+((r20*sj5*x2047))+(((-1.0)*r20*x2051))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2046))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r00*x2051))+(((-0.444735007694415)*x2050))+((r02*x2048))+((x2047*x2050))+((r00*sj5*x2047))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x2049))+((cj5*r00*x2049))+(((2.4390243902439)*px))), (((r22*x2048))+(((0.204620884747229)*r22))+((cj5*r20*x2049))+((x2046*x2047))+(((-1.0)*r21*sj5*x2049))+((r20*sj5*x2047))+(((-1.0)*r20*x2051))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2046))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2052=((0.187545437253636)*cj4);
IkReal x2053=(cj5*r20);
IkReal x2054=(r01*sj5);
IkReal x2055=(cj5*r21);
IkReal x2056=(cj3*r00);
IkReal x2057=(sj4*sj5);
IkReal x2058=((0.20357990508077)*sj3);
IkReal x2059=(r20*sj5);
IkReal x2060=(cj4*cj5);
IkReal x2061=((0.00925751294893567)*cj4);
IkReal x2062=((0.117537022603216)*sj3);
IkReal x2063=((0.10827950965428)*cj4);
IkReal x2064=(r00*sj5);
IkReal x2065=(cj4*r22);
IkReal x2066=(r21*sj5);
IkReal x2067=((0.216558867852667)*sj4);
IkReal x2068=((0.0185150129489311)*sj4);
IkReal x2069=(cj3*sj4);
IkReal x2070=(cj4*r02);
IkReal x2071=(cj5*r01);
IkReal x2072=((0.41)*(IKcos(j1)));
IkReal x2073=((0.41)*(IKsin(j1)));
IkReal x2074=((0.135720094919197)*sj3*sj4);
IkReal x2075=((0.0678600949192303)*cj4*sj3);
IkReal x2076=(cj5*r00*sj4);
IkReal x2077=((0.27144)*cj3*cj4);
evalcond[0]=((((-1.0)*x2073))+((r02*x2052))+(((-1.0)*x2054*x2067))+px+((x2063*x2064))+(((-0.18234135315471)*x2064))+(((-0.18234135315471)*x2071))+((cj5*r00*x2067))+(((0.10827950965428)*r01*x2060))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x2055*x2063))+((r22*x2052))+((x2059*x2063))+(((-1.0)*x2072))+pz+(((-0.216558867852667)*r21*x2057))+(((-0.18234135315471)*x2059))+(((-0.18234135315471)*x2055))+(((0.0838945627463637)*r22))+((x2053*x2067)));
evalcond[2]=(((cj5*r00*x2074))+((x2054*x2077))+(((-1.0)*r02*x2062))+(((0.135720094919197)*x2069*x2071))+(((-1.0)*x2053*x2068))+(((-1.0)*x2072))+(((-1.0)*x2055*x2061))+(((-0.27144)*x2056*x2060))+(((-0.0160344678271334)*x2065))+(((-1.0)*x2054*x2074))+(((0.135720094919197)*x2056*x2057))+((x2058*x2064))+pz+(((0.235073880801598)*r02*x2069))+((x2058*x2071))+(((0.0160344678271334)*r22))+(((-1.0)*x2059*x2061))+((x2062*x2070))+(((-0.0648043305514941)*x2055))+(((-0.0648043305514941)*x2059))+(((0.0678600949192303)*r01*sj3*x2060))+((x2064*x2075))+(((0.0185150129489311)*r21*x2057)));
evalcond[3]=(((x2053*x2074))+((x2066*x2077))+(((-0.135720094919197)*r21*sj3*x2057))+(((0.00925751294893567)*r01*x2060))+((x2055*x2058))+(((-0.0160344678271334)*r02))+x2073+(((0.0648043305514941)*x2064))+(((-1.0)*r22*x2062))+(((0.0648043305514941)*x2071))+(((-1.0)*x2053*x2077))+((x2059*x2075))+(((0.235073880801598)*r22*x2069))+(((-1.0)*px))+(((0.0160344678271334)*x2070))+(((-1.0)*x2054*x2068))+(((0.135720094919197)*x2055*x2069))+((x2062*x2065))+(((0.135720094919197)*cj3*r20*x2057))+((x2058*x2059))+((cj5*r00*x2068))+((x2055*x2075))+((x2061*x2064)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2078=(r02*sj1);
IkReal x2079=(cj1*cj4);
IkReal x2080=((0.749999650312296)*r22);
IkReal x2081=(cj4*sj1);
IkReal x2082=((0.250000349687704)*r22);
IkReal x2083=((0.433012903784321)*r00*sj5);
IkReal x2084=((0.433012903784321)*r20*sj5);
IkReal x2085=((0.433012903784321)*cj5*r01);
IkReal x2086=((0.433012903784321)*cj5*r21);
IkReal x2087=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2088=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2089=((0.866025201892125)*r01*sj4*sj5);
IkReal x2090=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2086))+((r20*x2087))+((sj1*x2082))+((x2081*x2086))+((x2081*x2084))+((cj1*x2089))+((cj1*x2083))+((cj1*x2085))+(((-1.0)*x2079*x2083))+(((-1.0)*x2079*x2085))+(((-1.0)*sj1*x2090))+(((-0.250000349687704)*cj1*r02))+(((-0.749999650312296)*r02*x2079))+((x2080*x2081))+(((-1.0)*r00*x2088)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x2086))+(((-1.0)*cj1*x2084))+(((-1.0)*sj1*x2089))+(((-1.0)*sj1*x2085))+(((-1.0)*sj1*x2083))+((r20*x2088))+((x2081*x2083))+((x2081*x2085))+((cj1*x2082))+(((-1.0)*cj1*x2090))+((r00*x2087))+((x2079*x2084))+((x2079*x2080))+((x2079*x2086))+(((0.749999650312296)*cj4*x2078))+(((0.250000349687704)*x2078)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2086))+((r20*x2087))+((sj1*x2082))+((x2081*x2086))+((x2081*x2084))+((cj1*x2089))+((cj1*x2083))+((cj1*x2085))+(((-1.0)*x2079*x2083))+(((-1.0)*x2079*x2085))+(((-1.0)*sj1*x2090))+(((-0.250000349687704)*cj1*r02))+(((-0.749999650312296)*r02*x2079))+((x2080*x2081))+(((-1.0)*r00*x2088))))+IKsqr(((((-1.0)*cj1*x2086))+(((-1.0)*cj1*x2084))+(((-1.0)*sj1*x2089))+(((-1.0)*sj1*x2085))+(((-1.0)*sj1*x2083))+((r20*x2088))+((x2081*x2083))+((x2081*x2085))+((cj1*x2082))+(((-1.0)*cj1*x2090))+((r00*x2087))+((x2079*x2084))+((x2079*x2080))+((x2079*x2086))+(((0.749999650312296)*cj4*x2078))+(((0.250000349687704)*x2078))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2086))+((r20*x2087))+((sj1*x2082))+((x2081*x2086))+((x2081*x2084))+((cj1*x2089))+((cj1*x2083))+((cj1*x2085))+(((-1.0)*x2079*x2083))+(((-1.0)*x2079*x2085))+(((-1.0)*sj1*x2090))+(((-0.250000349687704)*cj1*r02))+(((-0.749999650312296)*r02*x2079))+((x2080*x2081))+(((-1.0)*r00*x2088))), ((((-1.0)*cj1*x2086))+(((-1.0)*cj1*x2084))+(((-1.0)*sj1*x2089))+(((-1.0)*sj1*x2085))+(((-1.0)*sj1*x2083))+((r20*x2088))+((x2081*x2083))+((x2081*x2085))+((cj1*x2082))+(((-1.0)*cj1*x2090))+((r00*x2087))+((x2079*x2084))+((x2079*x2080))+((x2079*x2086))+(((0.749999650312296)*cj4*x2078))+(((0.250000349687704)*x2078))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2091=IKcos(j2);
IkReal x2092=IKsin(j2);
IkReal x2093=((0.433012903784321)*sj3);
IkReal x2094=((0.749999650312296)*sj3);
IkReal x2095=(r00*sj5);
IkReal x2096=(cj4*cj5);
IkReal x2097=((1.0)*cj3);
IkReal x2098=(cj5*r01);
IkReal x2099=(r21*sj3);
IkReal x2100=(cj4*sj5);
IkReal x2101=(cj3*r21);
IkReal x2102=((0.500000349687582)*sj4);
IkReal x2103=((0.433012903784321)*r20);
IkReal x2104=(cj4*r22);
IkReal x2105=(r20*sj5);
IkReal x2106=((0.0160344678271334)*r02);
IkReal x2107=(cj4*r02);
IkReal x2108=(r01*sj5);
IkReal x2109=(cj5*r00);
IkReal x2110=((0.0185150129489311)*sj4);
IkReal x2111=(r21*sj5);
IkReal x2112=(cj5*r21);
IkReal x2113=((0.866025201892125)*sj4);
IkReal x2114=(cj5*r20);
IkReal x2115=((0.250000349687704)*sj3);
IkReal x2116=(sj1*x2091);
IkReal x2117=(cj1*x2091);
IkReal x2118=(sj1*x2092);
IkReal x2119=(cj1*x2092);
IkReal x2120=((1.0)*x2119);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x2100*x2103))+(((-0.433012903784321)*r21*x2096))+x2118+x2117+((x2111*x2113))+(((0.433012903784321)*x2112))+(((-0.749999650312296)*x2104))+((sj5*x2103))+(((-1.0)*x2113*x2114)));
evalcond[1]=((((-0.250000349687704)*r02))+x2116+(((-0.433012903784321)*r01*x2096))+(((-0.433012903784321)*cj4*x2095))+(((-1.0)*x2120))+(((-1.0)*x2109*x2113))+(((-0.749999650312296)*x2107))+(((0.433012903784321)*x2098))+(((0.433012903784321)*x2095))+((x2108*x2113)));
evalcond[2]=((((0.0160344678271334)*x2104))+(((0.0648043305514941)*x2112))+(((-0.27144)*x2118))+(((-0.27144)*x2117))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x2100))+(((-1.0)*pz))+((x2110*x2114))+(((0.00925751294893567)*r21*x2096))+(((-1.0)*x2110*x2111))+(((0.0648043305514941)*x2105)));
evalcond[3]=(((x2109*x2110))+((cj4*x2106))+(((-1.0)*x2106))+(((-0.27144)*x2116))+(((0.41)*sj1))+(((-1.0)*px))+(((-1.0)*x2108*x2110))+(((0.00925751294893567)*cj4*x2095))+(((0.27144)*x2119))+(((0.00925751294893567)*r01*x2096))+(((0.0648043305514941)*x2095))+(((0.0648043305514941)*x2098)));
evalcond[4]=(((sj3*x2102*x2114))+((cj3*x2102*x2105))+((r20*x2100*x2115))+((x2093*x2104))+x2116+(((0.250000349687704)*x2096*x2099))+((cj3*r22*x2113))+((cj5*x2101*x2102))+((x2100*x2101))+(((-1.0)*x2120))+(((-1.0)*sj5*x2099*x2102))+((x2094*x2112))+(((-1.0)*r22*x2093))+((x2094*x2105))+(((-1.0)*r20*x2096*x2097)));
evalcond[5]=(((cj3*x2095*x2102))+((sj3*x2102*x2109))+((x2094*x2098))+((x2094*x2095))+(((-1.0)*sj3*x2102*x2108))+((x2093*x2107))+((r01*x2096*x2115))+((cj4*x2095*x2115))+((cj3*x2098*x2102))+(((-1.0)*r00*x2096*x2097))+((cj3*r02*x2113))+((cj3*r01*x2100))+(((-1.0)*r02*x2093))+(((-1.0)*x2117))+(((-1.0)*x2118)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2121=(cj4*sj5);
IkReal x2122=(cj0*r00);
IkReal x2123=(cj0*r02);
IkReal x2124=(cj5*r21);
IkReal x2125=((0.216558867852667)*sj4);
IkReal x2126=((0.528192360616262)*sj4);
IkReal x2127=(cj0*cj5*r01);
CheckValue<IkReal> x2128=IKPowWithIntegerCheck(cj0,-2);
if(!x2128.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x2128.value)*(((((0.0098)*cj0*sj0))+((cj0*r01*sj5*x2125))+(((-0.187545437253636)*cj4*x2123))+(((-0.0838945627463637)*x2123))+(((-1.0)*cj5*x2122*x2125))+(((-0.10827950965428)*cj4*x2127))+(((0.18234135315471)*sj5*x2122))+(((0.18234135315471)*x2127))+(((-1.0)*cj0*px))+(((-0.10827950965428)*x2121*x2122)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.26409636501044)*cj4*x2124))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x2124))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x2121))+(((-1.0)*r21*sj5*x2126))+(((2.4390243902439)*pz))+((cj5*r20*x2126)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x2128.value)*(((((0.0098)*cj0*sj0))+((cj0*r01*sj5*x2125))+(((-0.187545437253636)*cj4*x2123))+(((-0.0838945627463637)*x2123))+(((-1.0)*cj5*x2122*x2125))+(((-0.10827950965428)*cj4*x2127))+(((0.18234135315471)*sj5*x2122))+(((0.18234135315471)*x2127))+(((-1.0)*cj0*px))+(((-0.10827950965428)*x2121*x2122))))))+IKsqr(((((0.26409636501044)*cj4*x2124))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x2124))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x2121))+(((-1.0)*r21*sj5*x2126))+(((2.4390243902439)*pz))+((cj5*r20*x2126))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x2128.value)*(((((0.0098)*cj0*sj0))+((cj0*r01*sj5*x2125))+(((-0.187545437253636)*cj4*x2123))+(((-0.0838945627463637)*x2123))+(((-1.0)*cj5*x2122*x2125))+(((-0.10827950965428)*cj4*x2127))+(((0.18234135315471)*sj5*x2122))+(((0.18234135315471)*x2127))+(((-1.0)*cj0*px))+(((-0.10827950965428)*x2121*x2122))))), ((((0.26409636501044)*cj4*x2124))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x2124))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x2121))+(((-1.0)*r21*sj5*x2126))+(((2.4390243902439)*pz))+((cj5*r20*x2126))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2129=IKsin(j1);
IkReal x2130=IKcos(j1);
IkReal x2131=sj0*sj0;
IkReal x2132=cj0*cj0;
IkReal x2133=((0.0098)*cj0);
IkReal x2134=(cj0*cj5);
IkReal x2135=(cj5*sj0);
IkReal x2136=((0.0648043305514941)*r21);
IkReal x2137=(r00*sj5);
IkReal x2138=((0.20357990508077)*sj3);
IkReal x2139=((0.135720094919197)*r21);
IkReal x2140=((1.0)*px);
IkReal x2141=((0.117537022603216)*sj3);
IkReal x2142=((0.00925751294893567)*cj4);
IkReal x2143=(r10*sj4);
IkReal x2144=(sj0*sj5);
IkReal x2145=(cj4*sj0);
IkReal x2146=(r20*sj5);
IkReal x2147=((0.10827950965428)*cj4);
IkReal x2148=(cj3*sj4);
IkReal x2149=((0.135720094919197)*sj5);
IkReal x2150=((0.117537022603216)*r11);
IkReal x2151=(cj5*r01);
IkReal x2152=(cj4*r02);
IkReal x2153=((0.117537022603216)*cj4);
IkReal x2154=((0.0160344678271334)*r02);
IkReal x2155=((0.0648043305514941)*r11);
IkReal x2156=((0.0160344678271334)*r12);
IkReal x2157=(cj0*cj4);
IkReal x2158=(cj5*sj3);
IkReal x2159=((0.0678600949192303)*cj4);
IkReal x2160=(r10*sj5);
IkReal x2161=((1.0)*py);
IkReal x2162=(cj5*r00);
IkReal x2163=(cj0*r21);
IkReal x2164=(r11*sj5);
IkReal x2165=((0.0160344678271334)*r22);
IkReal x2166=(r00*sj4);
IkReal x2167=((1.0)*pz);
IkReal x2168=(r22*sj0);
IkReal x2169=(sj3*sj4);
IkReal x2170=(cj5*r21);
IkReal x2171=(r21*sj3);
IkReal x2172=(cj0*r22);
IkReal x2173=((0.0185150129489311)*sj4);
IkReal x2174=(cj5*r11);
IkReal x2175=(r01*sj5);
IkReal x2176=((0.216558867852667)*sj4);
IkReal x2177=((0.135720094919197)*r20);
IkReal x2178=(sj0*x2133);
IkReal x2179=(sj4*x2144);
IkReal x2180=((0.27144)*cj3*cj4);
IkReal x2181=(r11*x2142);
IkReal x2182=((0.41)*x2129);
IkReal x2183=(cj0*x2160);
IkReal x2184=(sj5*x2173);
IkReal x2185=((0.41)*x2130);
IkReal x2186=(cj0*sj0*x2182);
evalcond[0]=(((x2146*x2147))+(((-1.0)*r21*sj5*x2176))+((cj5*r20*x2176))+((x2147*x2170))+(((0.187545437253636)*cj4*r22))+(((-0.18234135315471)*x2170))+pz+(((-1.0)*x2185))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x2146)));
evalcond[1]=((((-1.0)*x2131*x2182))+(((-1.0)*r11*x2135*x2147))+(((-1.0)*r10*x2144*x2147))+(((-0.187545437253636)*r12*x2145))+(((-0.0838945627463637)*r12*sj0))+(((0.18234135315471)*r11*x2135))+(((0.18234135315471)*r10*x2144))+(((-1.0)*x2178))+((r11*x2144*x2176))+(((-0.216558867852667)*x2135*x2143))+(((-1.0)*sj0*x2161)));
evalcond[2]=((((-1.0)*cj0*x2140))+(((0.18234135315471)*cj0*x2137))+(((-0.216558867852667)*x2134*x2166))+(((-1.0)*x2132*x2182))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*r01*x2134*x2147))+x2178+((cj0*x2175*x2176))+(((-1.0)*cj0*x2137*x2147))+(((-0.187545437253636)*cj0*x2152))+(((0.18234135315471)*r01*x2134)));
evalcond[3]=(((x2164*x2180))+(((0.135720094919197)*x2143*x2158))+((x2138*x2160))+(((-1.0)*r21*x2144*x2173))+((x2145*x2165))+((cj4*r12*x2141))+((x2138*x2174))+((sj0*x2185))+((cj3*x2143*x2149))+(((0.135720094919197)*x2148*x2174))+((r20*x2135*x2173))+((r21*x2135*x2142))+((x2135*x2136))+(((-1.0)*r12*x2141))+((sj3*x2159*x2160))+(((0.235073880801598)*r12*x2148))+(((-1.0)*r11*x2149*x2169))+(((-1.0)*cj5*r10*x2180))+((r20*x2142*x2144))+(((0.0648043305514941)*r20*x2144))+((r11*x2158*x2159))+(((-1.0)*sj0*x2167))+(((-1.0)*sj0*x2165)));
evalcond[4]=(((sj3*x2151*x2159))+((x2157*x2165))+(((0.135720094919197)*x2137*x2148))+((sj3*x2137*x2159))+(((0.235073880801598)*r02*x2148))+(((-1.0)*r02*x2141))+((r21*x2134*x2142))+(((-1.0)*cj0*x2167))+(((-1.0)*cj0*x2165))+(((-1.0)*x2163*x2184))+((x2141*x2152))+(((0.135720094919197)*x2148*x2151))+(((-1.0)*r01*x2149*x2169))+((cj0*x2185))+((x2134*x2136))+((cj0*x2142*x2146))+(((0.0648043305514941)*cj0*x2146))+((r20*x2134*x2173))+((x2175*x2180))+(((0.135720094919197)*x2158*x2166))+(((-1.0)*x2162*x2180))+((x2137*x2138))+((x2138*x2151)));
evalcond[5]=((((0.0185150129489311)*cj5*x2143))+(((0.0648043305514941)*x2160))+(((-1.0)*x2135*x2159*x2171))+(((-1.0)*x2144*x2148*x2177))+(((-1.0)*x2133))+(((-1.0)*r21*x2144*x2180))+(((-1.0)*r21*x2135*x2138))+(((-1.0)*x2164*x2173))+(((-1.0)*x2156))+((x2142*x2160))+(((-1.0)*r20*x2138*x2144))+(((-1.0)*sj0*x2182))+(((-1.0)*x2135*x2169*x2177))+(((-1.0)*x2161))+(((-0.235073880801598)*x2148*x2168))+((cj5*x2155))+((x2142*x2174))+(((-1.0)*r22*x2141*x2145))+(((-1.0)*r20*sj3*x2144*x2159))+((cj4*x2156))+((x2141*x2168))+(((-1.0)*x2135*x2139*x2148))+((r20*x2135*x2180))+((x2139*x2144*x2169)));
evalcond[6]=((((-0.135720094919197)*cj0*x2146*x2148))+((r20*x2134*x2180))+(((-1.0)*r21*x2134*x2138))+((cj0*sj5*x2139*x2169))+(((-1.0)*cj0*x2182))+(((0.0648043305514941)*x2151))+((x2142*x2151))+(((0.0160344678271334)*x2152))+(((-1.0)*x2134*x2159*x2171))+(((-1.0)*x2140))+(((-0.235073880801598)*x2148*x2172))+(((-1.0)*x2154))+(((-1.0)*x2134*x2169*x2177))+(((-0.27144)*cj3*r21*sj5*x2157))+(((-1.0)*x2134*x2139*x2148))+((x2137*x2142))+((x2162*x2173))+(((-1.0)*cj0*x2138*x2146))+(((0.0648043305514941)*x2137))+(((-1.0)*r22*x2141*x2157))+((x2141*x2172))+(((-1.0)*x2173*x2175))+(((0.0098)*sj0))+(((-0.0678600949192303)*sj3*x2146*x2157)));
evalcond[7]=((((-0.0678600949192303)*cj0*r12))+((x2145*x2154))+(((-1.0)*r01*x2144*x2173))+(((0.117537022603216)*x2183))+((sj0*x2137*x2142))+(((0.0098)*x2131))+(((-0.20357990508077)*r12*x2157))+(((0.0648043305514941)*r01*x2135))+(((-1.0)*cj4*x2134*x2150))+(((-0.235073880801598)*x2134*x2143))+((r01*x2135*x2142))+(((-1.0)*x2186))+(((-1.0)*x2153*x2183))+(((0.0648043305514941)*sj0*x2137))+((x2134*x2150))+(((-1.0)*sj0*x2140))+(((0.235073880801598)*cj0*sj4*x2164))+(((0.0185150129489311)*x2135*x2166))+(((-1.0)*sj0*x2154)));
evalcond[8]=((((0.117537022603216)*r01*x2135))+(((-1.0)*cj0*x2156))+(((-1.0)*r01*x2135*x2153))+(((0.117537022603216)*sj0*x2137))+(((0.0185150129489311)*x2134*x2143))+((x2134*x2181))+(((0.0648043305514941)*x2183))+(((-0.0098)*x2132))+((x2156*x2157))+(((-0.20357990508077)*r02*x2145))+(((-1.0)*cj0*x2161))+(((-0.235073880801598)*x2135*x2166))+(((-1.0)*cj0*x2164*x2173))+((x2142*x2183))+(((-1.0)*x2186))+((x2134*x2155))+(((-0.0678600949192303)*r02*sj0))+(((-0.117537022603216)*x2137*x2145))+(((0.235073880801598)*r01*x2179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2187=((0.250000349687704)*sj1);
IkReal x2188=(cj1*cj4);
IkReal x2189=((0.749999650312296)*r22);
IkReal x2190=(cj4*sj1);
IkReal x2191=((0.749999650312296)*r02);
IkReal x2192=((0.250000349687704)*cj1);
IkReal x2193=((0.433012903784321)*r00*sj5);
IkReal x2194=((0.433012903784321)*r20*sj5);
IkReal x2195=((0.433012903784321)*cj5*r01);
IkReal x2196=((0.433012903784321)*cj5*r21);
IkReal x2197=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2198=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2199=((0.866025201892125)*r01*sj4*sj5);
IkReal x2200=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r22*x2187))+(((-1.0)*sj1*x2200))+((r20*x2197))+((x2190*x2196))+((x2190*x2194))+(((-1.0)*sj1*x2194))+(((-1.0)*sj1*x2196))+((x2189*x2190))+((x2188*x2195))+((x2188*x2191))+((x2188*x2193))+((r02*x2192))+(((-1.0)*cj1*x2193))+(((-1.0)*cj1*x2199))+(((-1.0)*cj1*x2195))+((r00*x2198)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2192))+(((-1.0)*cj1*x2200))+((sj1*x2199))+((sj1*x2195))+((sj1*x2193))+((r20*x2198))+(((-1.0)*r02*x2187))+((x2188*x2196))+((x2188*x2194))+((x2188*x2189))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2196))+(((-1.0)*x2190*x2195))+(((-1.0)*x2190*x2191))+(((-1.0)*x2190*x2193))+(((-1.0)*r00*x2197)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x2187))+(((-1.0)*sj1*x2200))+((r20*x2197))+((x2190*x2196))+((x2190*x2194))+(((-1.0)*sj1*x2194))+(((-1.0)*sj1*x2196))+((x2189*x2190))+((x2188*x2195))+((x2188*x2191))+((x2188*x2193))+((r02*x2192))+(((-1.0)*cj1*x2193))+(((-1.0)*cj1*x2199))+(((-1.0)*cj1*x2195))+((r00*x2198))))+IKsqr((((r22*x2192))+(((-1.0)*cj1*x2200))+((sj1*x2199))+((sj1*x2195))+((sj1*x2193))+((r20*x2198))+(((-1.0)*r02*x2187))+((x2188*x2196))+((x2188*x2194))+((x2188*x2189))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2196))+(((-1.0)*x2190*x2195))+(((-1.0)*x2190*x2191))+(((-1.0)*x2190*x2193))+(((-1.0)*r00*x2197))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x2187))+(((-1.0)*sj1*x2200))+((r20*x2197))+((x2190*x2196))+((x2190*x2194))+(((-1.0)*sj1*x2194))+(((-1.0)*sj1*x2196))+((x2189*x2190))+((x2188*x2195))+((x2188*x2191))+((x2188*x2193))+((r02*x2192))+(((-1.0)*cj1*x2193))+(((-1.0)*cj1*x2199))+(((-1.0)*cj1*x2195))+((r00*x2198))), (((r22*x2192))+(((-1.0)*cj1*x2200))+((sj1*x2199))+((sj1*x2195))+((sj1*x2193))+((r20*x2198))+(((-1.0)*r02*x2187))+((x2188*x2196))+((x2188*x2194))+((x2188*x2189))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2196))+(((-1.0)*x2190*x2195))+(((-1.0)*x2190*x2191))+(((-1.0)*x2190*x2193))+(((-1.0)*r00*x2197))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2201=IKsin(j2);
IkReal x2202=IKcos(j2);
IkReal x2203=((0.749999650312296)*sj3);
IkReal x2204=(cj5*r01);
IkReal x2205=(r00*sj5);
IkReal x2206=(cj4*cj5);
IkReal x2207=((1.0)*cj3);
IkReal x2208=(r21*sj3);
IkReal x2209=(cj4*sj5);
IkReal x2210=(cj3*r21);
IkReal x2211=((0.500000349687582)*sj4);
IkReal x2212=((0.433012903784321)*r20);
IkReal x2213=(cj4*r22);
IkReal x2214=((0.433012903784321)*sj3);
IkReal x2215=((0.433012903784321)*cj4);
IkReal x2216=(r01*sj5);
IkReal x2217=(r20*sj5);
IkReal x2218=((0.0160344678271334)*r02);
IkReal x2219=(cj4*r02);
IkReal x2220=((0.00925751294893567)*cj4);
IkReal x2221=((0.0185150129489311)*sj4);
IkReal x2222=(r21*sj5);
IkReal x2223=(cj5*r21);
IkReal x2224=((0.866025201892125)*sj4);
IkReal x2225=(cj5*r20);
IkReal x2226=(cj5*r00);
IkReal x2227=((0.250000349687704)*sj3);
IkReal x2228=(cj1*x2202);
IkReal x2229=(sj1*x2201);
IkReal x2230=(cj1*x2201);
IkReal x2231=(sj1*x2202);
IkReal x2232=(x2228+x2229);
evalcond[0]=((((-0.250000349687704)*r22))+x2232+(((0.433012903784321)*x2223))+(((-1.0)*x2224*x2225))+((x2222*x2224))+(((-0.749999650312296)*x2213))+(((-1.0)*x2209*x2212))+(((-0.433012903784321)*r21*x2206))+((sj5*x2212)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x2205*x2215))+x2230+(((-1.0)*x2204*x2215))+(((-1.0)*x2224*x2226))+((x2216*x2224))+(((-0.749999650312296)*x2219))+(((-1.0)*x2231))+(((0.433012903784321)*x2204))+(((0.433012903784321)*x2205)));
evalcond[2]=((((0.00925751294893567)*r21*x2206))+(((0.00925751294893567)*r20*x2209))+(((-0.27144)*x2228))+(((-0.27144)*x2229))+(((0.0648043305514941)*x2217))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x2221*x2222))+(((-1.0)*pz))+(((0.0648043305514941)*x2223))+((x2221*x2225))+(((0.0160344678271334)*x2213)));
evalcond[3]=(((cj4*x2218))+(((0.27144)*x2231))+(((-1.0)*x2218))+(((0.0648043305514941)*x2204))+(((0.0648043305514941)*x2205))+(((-0.27144)*x2230))+(((-0.41)*sj1))+(((-1.0)*px))+(((-1.0)*x2216*x2221))+((x2204*x2220))+((x2221*x2226))+((x2205*x2220)));
evalcond[4]=(x2232+((cj3*x2205*x2211))+(((-1.0)*r00*x2206*x2207))+((x2203*x2204))+((x2203*x2205))+((x2214*x2219))+((cj3*x2204*x2211))+((cj4*x2204*x2227))+((cj4*x2205*x2227))+((sj3*x2211*x2226))+(((-1.0)*r02*x2214))+(((-1.0)*sj3*x2211*x2216))+((cj3*r02*x2224))+((cj3*r01*x2209)));
evalcond[5]=(((x2203*x2223))+(((0.250000349687704)*x2206*x2208))+((r20*x2209*x2227))+x2231+(((-1.0)*r20*x2206*x2207))+(((-1.0)*r22*x2214))+((x2203*x2217))+((cj3*r22*x2224))+((cj3*x2211*x2217))+(((-1.0)*x2230))+(((-1.0)*sj5*x2208*x2211))+((sj3*x2211*x2225))+((x2209*x2210))+((cj5*x2210*x2211))+((x2213*x2214)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2233=(r02*sj1);
IkReal x2234=(cj1*cj4);
IkReal x2235=((0.749999650312296)*r22);
IkReal x2236=(cj4*sj1);
IkReal x2237=((0.250000349687704)*r22);
IkReal x2238=((0.433012903784321)*r00*sj5);
IkReal x2239=((0.433012903784321)*r20*sj5);
IkReal x2240=((0.433012903784321)*cj5*r01);
IkReal x2241=((0.433012903784321)*cj5*r21);
IkReal x2242=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2243=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2244=((0.866025201892125)*r01*sj4*sj5);
IkReal x2245=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x2235*x2236))+((x2236*x2241))+(((-1.0)*x2234*x2240))+(((-1.0)*x2234*x2238))+(((-1.0)*sj1*x2245))+(((-1.0)*sj1*x2241))+(((-0.749999650312296)*r02*x2234))+((sj1*x2237))+((cj1*x2244))+((cj1*x2240))+((x2236*x2239))+(((-1.0)*r00*x2243))+((r20*x2242))+(((-1.0)*sj1*x2239))+(((-0.250000349687704)*cj1*r02))+((cj1*x2238)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x2239))+((x2236*x2240))+(((-1.0)*sj1*x2244))+(((-1.0)*sj1*x2240))+(((0.749999650312296)*cj4*x2233))+((x2234*x2241))+((x2236*x2238))+((r20*x2243))+(((-1.0)*sj1*x2238))+((r00*x2242))+(((-1.0)*cj1*x2245))+(((-1.0)*cj1*x2241))+((cj1*x2237))+(((0.250000349687704)*x2233))+((x2234*x2235))+((x2234*x2239)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2235*x2236))+((x2236*x2241))+(((-1.0)*x2234*x2240))+(((-1.0)*x2234*x2238))+(((-1.0)*sj1*x2245))+(((-1.0)*sj1*x2241))+(((-0.749999650312296)*r02*x2234))+((sj1*x2237))+((cj1*x2244))+((cj1*x2240))+((x2236*x2239))+(((-1.0)*r00*x2243))+((r20*x2242))+(((-1.0)*sj1*x2239))+(((-0.250000349687704)*cj1*r02))+((cj1*x2238))))+IKsqr(((((-1.0)*cj1*x2239))+((x2236*x2240))+(((-1.0)*sj1*x2244))+(((-1.0)*sj1*x2240))+(((0.749999650312296)*cj4*x2233))+((x2234*x2241))+((x2236*x2238))+((r20*x2243))+(((-1.0)*sj1*x2238))+((r00*x2242))+(((-1.0)*cj1*x2245))+(((-1.0)*cj1*x2241))+((cj1*x2237))+(((0.250000349687704)*x2233))+((x2234*x2235))+((x2234*x2239))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2235*x2236))+((x2236*x2241))+(((-1.0)*x2234*x2240))+(((-1.0)*x2234*x2238))+(((-1.0)*sj1*x2245))+(((-1.0)*sj1*x2241))+(((-0.749999650312296)*r02*x2234))+((sj1*x2237))+((cj1*x2244))+((cj1*x2240))+((x2236*x2239))+(((-1.0)*r00*x2243))+((r20*x2242))+(((-1.0)*sj1*x2239))+(((-0.250000349687704)*cj1*r02))+((cj1*x2238))), ((((-1.0)*cj1*x2239))+((x2236*x2240))+(((-1.0)*sj1*x2244))+(((-1.0)*sj1*x2240))+(((0.749999650312296)*cj4*x2233))+((x2234*x2241))+((x2236*x2238))+((r20*x2243))+(((-1.0)*sj1*x2238))+((r00*x2242))+(((-1.0)*cj1*x2245))+(((-1.0)*cj1*x2241))+((cj1*x2237))+(((0.250000349687704)*x2233))+((x2234*x2235))+((x2234*x2239))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2246=IKcos(j2);
IkReal x2247=IKsin(j2);
IkReal x2248=((0.433012903784321)*sj3);
IkReal x2249=((0.749999650312296)*sj3);
IkReal x2250=(r00*sj5);
IkReal x2251=(cj4*cj5);
IkReal x2252=((1.0)*cj3);
IkReal x2253=(cj5*r01);
IkReal x2254=(r21*sj3);
IkReal x2255=(cj4*sj5);
IkReal x2256=(cj3*r21);
IkReal x2257=((0.500000349687582)*sj4);
IkReal x2258=((0.433012903784321)*r20);
IkReal x2259=(cj4*r22);
IkReal x2260=(r20*sj5);
IkReal x2261=((0.0160344678271334)*r02);
IkReal x2262=(cj4*r02);
IkReal x2263=(r01*sj5);
IkReal x2264=(cj5*r00);
IkReal x2265=((0.0185150129489311)*sj4);
IkReal x2266=(r21*sj5);
IkReal x2267=(cj5*r21);
IkReal x2268=((0.866025201892125)*sj4);
IkReal x2269=(cj5*r20);
IkReal x2270=((0.250000349687704)*sj3);
IkReal x2271=(sj1*x2246);
IkReal x2272=(cj1*x2246);
IkReal x2273=(sj1*x2247);
IkReal x2274=(cj1*x2247);
IkReal x2275=((1.0)*x2274);
evalcond[0]=((((-1.0)*x2255*x2258))+(((-0.250000349687704)*r22))+x2273+x2272+(((-0.749999650312296)*x2259))+((sj5*x2258))+(((-0.433012903784321)*r21*x2251))+((x2266*x2268))+(((-1.0)*x2268*x2269))+(((0.433012903784321)*x2267)));
evalcond[1]=((((-0.250000349687704)*r02))+x2271+((x2263*x2268))+(((-0.433012903784321)*r01*x2251))+(((0.433012903784321)*x2250))+(((0.433012903784321)*x2253))+(((-0.749999650312296)*x2262))+(((-1.0)*x2275))+(((-1.0)*x2264*x2268))+(((-0.433012903784321)*cj4*x2250)));
evalcond[2]=((((0.0160344678271334)*x2259))+(((-0.27144)*x2272))+(((-0.27144)*x2273))+(((0.00925751294893567)*r21*x2251))+(((0.41)*cj1))+(((0.0648043305514941)*x2267))+(((0.0648043305514941)*x2260))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x2255))+(((-1.0)*pz))+((x2265*x2269))+(((-1.0)*x2265*x2266)));
evalcond[3]=((((0.00925751294893567)*r01*x2251))+(((-0.27144)*x2271))+((cj4*x2261))+(((0.41)*sj1))+(((0.27144)*x2274))+(((-1.0)*x2263*x2265))+(((-1.0)*px))+(((0.00925751294893567)*cj4*x2250))+((x2264*x2265))+(((-1.0)*x2261))+(((0.0648043305514941)*x2253))+(((0.0648043305514941)*x2250)));
evalcond[4]=(((x2255*x2256))+((cj3*r22*x2268))+x2271+(((-1.0)*r22*x2248))+((cj3*x2257*x2260))+((sj3*x2257*x2269))+(((-1.0)*sj5*x2254*x2257))+(((-1.0)*x2275))+((r20*x2255*x2270))+((x2249*x2267))+((x2249*x2260))+((cj5*x2256*x2257))+((x2248*x2259))+(((0.250000349687704)*x2251*x2254))+(((-1.0)*r20*x2251*x2252)));
evalcond[5]=((((-1.0)*r02*x2248))+((r01*x2251*x2270))+(((-1.0)*sj3*x2257*x2263))+((x2249*x2250))+((x2249*x2253))+(((-1.0)*r00*x2251*x2252))+((cj3*x2253*x2257))+((sj3*x2257*x2264))+((cj3*r02*x2268))+((cj4*x2250*x2270))+((cj3*x2250*x2257))+((x2248*x2262))+(((-1.0)*x2272))+(((-1.0)*x2273))+((cj3*r01*x2255)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2276=((0.250000349687704)*r12);
IkReal x2277=((0.749999650312296)*cj4);
IkReal x2278=((0.433012903784321)*sj5);
IkReal x2279=(cj1*r10);
IkReal x2280=(cj1*r22);
IkReal x2281=(cj1*r20);
IkReal x2282=((0.866025201892125)*sj4);
IkReal x2283=(r20*sj1);
IkReal x2284=(r22*sj1);
IkReal x2285=(r10*sj1);
IkReal x2286=(r11*sj1);
IkReal x2287=((0.433012903784321)*cj5);
IkReal x2288=(r21*sj1);
IkReal x2289=(cj1*r21);
IkReal x2290=(cj1*r11);
IkReal x2291=(cj5*sj1*x2282);
IkReal x2292=(cj4*r21*x2287);
if( IKabs(((((-1.0)*x2278*x2279))+((cj4*x2287*x2288))+((cj4*x2278*x2283))+((cj5*x2279*x2282))+((cj1*x2276))+(((0.250000349687704)*x2284))+(((-1.0)*sj5*x2282*x2288))+(((-1.0)*sj5*x2282*x2290))+(((-1.0)*x2287*x2290))+((x2277*x2284))+(((-1.0)*x2278*x2283))+((cj4*x2287*x2290))+(((-1.0)*x2287*x2288))+((cj4*x2278*x2279))+((cj1*r12*x2277))+((cj5*x2282*x2283)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x2287*x2289))+((cj4*x2278*x2281))+((sj5*x2282*x2286))+(((0.250000349687704)*x2280))+(((-1.0)*sj5*x2282*x2289))+((x2277*x2280))+((x2278*x2285))+(((-1.0)*x2278*x2281))+(((-1.0)*r12*sj1*x2277))+(((-1.0)*cj4*x2286*x2287))+(((-1.0)*cj4*x2278*x2285))+(((-1.0)*sj1*x2276))+(((-1.0)*cj5*x2282*x2285))+(((-1.0)*x2287*x2289))+((x2286*x2287))+((cj5*x2281*x2282)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2278*x2279))+((cj4*x2287*x2288))+((cj4*x2278*x2283))+((cj5*x2279*x2282))+((cj1*x2276))+(((0.250000349687704)*x2284))+(((-1.0)*sj5*x2282*x2288))+(((-1.0)*sj5*x2282*x2290))+(((-1.0)*x2287*x2290))+((x2277*x2284))+(((-1.0)*x2278*x2283))+((cj4*x2287*x2290))+(((-1.0)*x2287*x2288))+((cj4*x2278*x2279))+((cj1*r12*x2277))+((cj5*x2282*x2283))))+IKsqr((((cj4*x2287*x2289))+((cj4*x2278*x2281))+((sj5*x2282*x2286))+(((0.250000349687704)*x2280))+(((-1.0)*sj5*x2282*x2289))+((x2277*x2280))+((x2278*x2285))+(((-1.0)*x2278*x2281))+(((-1.0)*r12*sj1*x2277))+(((-1.0)*cj4*x2286*x2287))+(((-1.0)*cj4*x2278*x2285))+(((-1.0)*sj1*x2276))+(((-1.0)*cj5*x2282*x2285))+(((-1.0)*x2287*x2289))+((x2286*x2287))+((cj5*x2281*x2282))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2278*x2279))+((cj4*x2287*x2288))+((cj4*x2278*x2283))+((cj5*x2279*x2282))+((cj1*x2276))+(((0.250000349687704)*x2284))+(((-1.0)*sj5*x2282*x2288))+(((-1.0)*sj5*x2282*x2290))+(((-1.0)*x2287*x2290))+((x2277*x2284))+(((-1.0)*x2278*x2283))+((cj4*x2287*x2290))+(((-1.0)*x2287*x2288))+((cj4*x2278*x2279))+((cj1*r12*x2277))+((cj5*x2282*x2283))), (((cj4*x2287*x2289))+((cj4*x2278*x2281))+((sj5*x2282*x2286))+(((0.250000349687704)*x2280))+(((-1.0)*sj5*x2282*x2289))+((x2277*x2280))+((x2278*x2285))+(((-1.0)*x2278*x2281))+(((-1.0)*r12*sj1*x2277))+(((-1.0)*cj4*x2286*x2287))+(((-1.0)*cj4*x2278*x2285))+(((-1.0)*sj1*x2276))+(((-1.0)*cj5*x2282*x2285))+(((-1.0)*x2287*x2289))+((x2286*x2287))+((cj5*x2281*x2282))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2293=IKsin(j2);
IkReal x2294=IKcos(j2);
IkReal x2295=(cj5*r11);
IkReal x2296=((0.433012903784321)*cj4);
IkReal x2297=(r21*sj5);
IkReal x2298=((0.500000349687582)*sj4);
IkReal x2299=((0.749999650312296)*sj3);
IkReal x2300=(cj3*cj4);
IkReal x2301=(cj5*r10);
IkReal x2302=((0.0185150129489311)*sj4);
IkReal x2303=(r20*sj5);
IkReal x2304=(cj4*r22);
IkReal x2305=(r10*sj5);
IkReal x2306=(r22*sj3);
IkReal x2307=(r11*sj5);
IkReal x2308=((0.00925751294893567)*cj4);
IkReal x2309=(cj5*r21);
IkReal x2310=(r12*sj3);
IkReal x2311=(cj4*r12);
IkReal x2312=(cj5*r20);
IkReal x2313=((0.866025201892125)*sj4);
IkReal x2314=(cj1*x2294);
IkReal x2315=(sj1*x2293);
IkReal x2316=(cj1*x2293);
IkReal x2317=((0.250000349687704)*cj4*sj3);
IkReal x2318=(sj1*x2294);
IkReal x2319=(cj3*x2313);
IkReal x2320=(x2314+x2315);
evalcond[0]=((((-0.250000349687704)*r22))+x2320+(((-1.0)*x2312*x2313))+(((-1.0)*x2296*x2303))+(((-1.0)*x2296*x2309))+((x2297*x2313))+(((-0.749999650312296)*x2304))+(((0.433012903784321)*x2309))+(((0.433012903784321)*x2303)));
evalcond[1]=((((-1.0)*x2318))+(((-0.250000349687704)*r12))+x2316+(((0.433012903784321)*x2295))+(((-1.0)*x2296*x2305))+(((-1.0)*x2295*x2296))+((x2307*x2313))+(((0.433012903784321)*x2305))+(((-0.749999650312296)*x2311))+(((-1.0)*x2301*x2313)));
evalcond[2]=(((x2308*x2309))+((x2303*x2308))+(((-1.0)*x2297*x2302))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x2302*x2312))+(((0.0648043305514941)*x2303))+(((0.0648043305514941)*x2309))+(((-1.0)*pz))+(((-0.27144)*x2315))+(((-0.27144)*x2314))+(((0.0160344678271334)*x2304)));
evalcond[3]=(((x2305*x2308))+(((0.27144)*x2318))+(((-0.0160344678271334)*r12))+((x2295*x2308))+(((-0.41)*sj1))+(((0.0648043305514941)*x2305))+(((-1.0)*py))+(((0.0160344678271334)*x2311))+((x2301*x2302))+(((0.0648043305514941)*x2295))+(((-1.0)*x2302*x2307))+(((-0.27144)*x2316)));
evalcond[4]=(((x2300*x2307))+x2320+((cj3*x2295*x2298))+((sj3*x2298*x2301))+(((-0.433012903784321)*x2310))+((x2305*x2317))+((x2295*x2299))+((cj3*x2298*x2305))+((x2295*x2317))+((r12*x2319))+(((-1.0)*x2300*x2301))+((x2296*x2310))+((x2299*x2305))+(((-1.0)*sj3*x2298*x2307)));
evalcond[5]=((((-1.0)*x2316))+(((-0.433012903784321)*x2306))+x2318+((r22*x2319))+((cj3*x2298*x2309))+((cj3*x2298*x2303))+((x2297*x2300))+((x2309*x2317))+((x2296*x2306))+(((-1.0)*x2300*x2312))+((sj3*x2298*x2312))+((x2299*x2309))+((x2299*x2303))+(((-1.0)*sj3*x2297*x2298))+((x2303*x2317)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2321=((0.250000349687704)*r12);
IkReal x2322=((0.749999650312296)*cj4);
IkReal x2323=(cj1*r22);
IkReal x2324=((0.866025201892125)*sj4);
IkReal x2325=(cj1*r20);
IkReal x2326=(sj1*sj5);
IkReal x2327=((0.433012903784321)*r20);
IkReal x2328=((0.433012903784321)*sj5);
IkReal x2329=(cj1*r10);
IkReal x2330=(r22*sj1);
IkReal x2331=((0.433012903784321)*r10);
IkReal x2332=((0.433012903784321)*cj5);
IkReal x2333=(cj1*r21);
IkReal x2334=(cj1*r11);
IkReal x2335=(r11*sj1);
IkReal x2336=(cj1*cj4*x2328);
IkReal x2337=(cj5*sj1*x2324);
IkReal x2338=(cj4*r21*x2332);
if( IKabs((((sj5*x2324*x2334))+(((-1.0)*cj4*x2328*x2329))+((x2332*x2334))+(((-1.0)*r21*sj1*x2332))+((sj1*x2338))+((x2322*x2330))+(((-1.0)*cj1*r12*x2322))+(((-1.0)*cj1*x2321))+((cj4*x2326*x2327))+(((-1.0)*x2326*x2327))+(((-1.0)*r21*x2324*x2326))+(((0.250000349687704)*x2330))+(((-1.0)*cj4*x2332*x2334))+((x2328*x2329))+((r20*x2337))+(((-1.0)*cj5*x2324*x2329)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2332*x2335))+(((-1.0)*x2332*x2333))+((x2322*x2323))+((r12*sj1*x2322))+((cj4*x2325*x2328))+((cj5*x2324*x2325))+((sj1*x2321))+((cj4*x2326*x2331))+(((-1.0)*sj5*x2324*x2333))+(((-1.0)*x2325*x2328))+(((-1.0)*x2326*x2331))+((cj4*x2332*x2333))+((cj4*x2332*x2335))+(((-1.0)*r11*x2324*x2326))+(((0.250000349687704)*x2323))+((r10*x2337)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj5*x2324*x2334))+(((-1.0)*cj4*x2328*x2329))+((x2332*x2334))+(((-1.0)*r21*sj1*x2332))+((sj1*x2338))+((x2322*x2330))+(((-1.0)*cj1*r12*x2322))+(((-1.0)*cj1*x2321))+((cj4*x2326*x2327))+(((-1.0)*x2326*x2327))+(((-1.0)*r21*x2324*x2326))+(((0.250000349687704)*x2330))+(((-1.0)*cj4*x2332*x2334))+((x2328*x2329))+((r20*x2337))+(((-1.0)*cj5*x2324*x2329))))+IKsqr(((((-1.0)*x2332*x2335))+(((-1.0)*x2332*x2333))+((x2322*x2323))+((r12*sj1*x2322))+((cj4*x2325*x2328))+((cj5*x2324*x2325))+((sj1*x2321))+((cj4*x2326*x2331))+(((-1.0)*sj5*x2324*x2333))+(((-1.0)*x2325*x2328))+(((-1.0)*x2326*x2331))+((cj4*x2332*x2333))+((cj4*x2332*x2335))+(((-1.0)*r11*x2324*x2326))+(((0.250000349687704)*x2323))+((r10*x2337))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj5*x2324*x2334))+(((-1.0)*cj4*x2328*x2329))+((x2332*x2334))+(((-1.0)*r21*sj1*x2332))+((sj1*x2338))+((x2322*x2330))+(((-1.0)*cj1*r12*x2322))+(((-1.0)*cj1*x2321))+((cj4*x2326*x2327))+(((-1.0)*x2326*x2327))+(((-1.0)*r21*x2324*x2326))+(((0.250000349687704)*x2330))+(((-1.0)*cj4*x2332*x2334))+((x2328*x2329))+((r20*x2337))+(((-1.0)*cj5*x2324*x2329))), ((((-1.0)*x2332*x2335))+(((-1.0)*x2332*x2333))+((x2322*x2323))+((r12*sj1*x2322))+((cj4*x2325*x2328))+((cj5*x2324*x2325))+((sj1*x2321))+((cj4*x2326*x2331))+(((-1.0)*sj5*x2324*x2333))+(((-1.0)*x2325*x2328))+(((-1.0)*x2326*x2331))+((cj4*x2332*x2333))+((cj4*x2332*x2335))+(((-1.0)*r11*x2324*x2326))+(((0.250000349687704)*x2323))+((r10*x2337))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2339=IKcos(j2);
IkReal x2340=IKsin(j2);
IkReal x2341=(cj5*r11);
IkReal x2342=((0.433012903784321)*cj4);
IkReal x2343=(r21*sj5);
IkReal x2344=((0.500000349687582)*sj4);
IkReal x2345=((0.749999650312296)*sj3);
IkReal x2346=(cj3*cj4);
IkReal x2347=(cj5*r10);
IkReal x2348=((0.0185150129489311)*sj4);
IkReal x2349=(r20*sj5);
IkReal x2350=(cj4*r22);
IkReal x2351=(r10*sj5);
IkReal x2352=(r12*sj3);
IkReal x2353=(r11*sj5);
IkReal x2354=(r22*sj3);
IkReal x2355=((0.27144)*sj1);
IkReal x2356=((0.00925751294893567)*cj4);
IkReal x2357=(cj5*r20);
IkReal x2358=(cj5*r21);
IkReal x2359=(cj4*r12);
IkReal x2360=((0.866025201892125)*sj4);
IkReal x2361=(sj1*x2339);
IkReal x2362=(cj1*x2339);
IkReal x2363=(cj1*x2340);
IkReal x2364=((0.250000349687704)*cj4*sj3);
IkReal x2365=(cj3*x2360);
IkReal x2366=(sj1*x2340);
IkReal x2367=((1.0)*x2363);
evalcond[0]=(((x2343*x2360))+(((-0.250000349687704)*r22))+x2366+x2362+(((0.433012903784321)*x2358))+(((0.433012903784321)*x2349))+(((-1.0)*x2357*x2360))+(((-0.749999650312296)*x2350))+(((-1.0)*x2342*x2358))+(((-1.0)*x2342*x2349)));
evalcond[1]=((((-1.0)*x2347*x2360))+(((-0.250000349687704)*r12))+x2361+(((-1.0)*x2367))+(((0.433012903784321)*x2351))+(((0.433012903784321)*x2341))+(((-1.0)*x2341*x2342))+((x2353*x2360))+(((-0.749999650312296)*x2359))+(((-1.0)*x2342*x2351)));
evalcond[2]=(((x2356*x2358))+(((-1.0)*x2340*x2355))+((x2348*x2357))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x2350))+(((-0.27144)*x2362))+(((-1.0)*pz))+(((-1.0)*x2343*x2348))+(((0.0648043305514941)*x2358))+((x2349*x2356))+(((0.0648043305514941)*x2349)));
evalcond[3]=((((-1.0)*x2339*x2355))+((x2341*x2356))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x2348*x2353))+(((0.0160344678271334)*x2359))+(((0.27144)*x2363))+(((-1.0)*py))+((x2351*x2356))+(((0.0648043305514941)*x2351))+(((0.0648043305514941)*x2341))+((x2347*x2348)));
evalcond[4]=(((cj3*x2344*x2358))+x2361+(((-1.0)*x2367))+((sj3*x2344*x2357))+((x2345*x2349))+(((-0.433012903784321)*x2354))+((x2345*x2358))+((x2358*x2364))+((r22*x2365))+(((-1.0)*x2346*x2357))+((x2343*x2346))+((x2342*x2354))+(((-1.0)*sj3*x2343*x2344))+((x2349*x2364))+((cj3*x2344*x2349)));
evalcond[5]=(((x2346*x2353))+((cj3*x2344*x2351))+((r12*x2365))+((cj3*x2341*x2344))+((x2341*x2345))+(((-1.0)*x2362))+(((-1.0)*x2366))+((sj3*x2344*x2347))+(((-0.433012903784321)*x2352))+((x2351*x2364))+((x2345*x2351))+((x2341*x2364))+(((-1.0)*x2346*x2347))+((x2342*x2352))+(((-1.0)*sj3*x2344*x2353)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2368=(cj4*sj1);
IkReal x2369=((0.433012903784321)*sj0);
IkReal x2370=(cj5*r21);
IkReal x2371=(cj1*r12);
IkReal x2372=(r20*sj5);
IkReal x2373=(r20*sj0);
IkReal x2374=(r10*sj1);
IkReal x2375=((0.749999650312296)*cj4);
IkReal x2376=(r21*sj0);
IkReal x2377=((0.433012903784321)*sj5);
IkReal x2378=(cj1*cj4);
IkReal x2379=(r22*sj0);
IkReal x2380=((0.250000349687704)*x2379);
IkReal x2381=((0.866025201892125)*cj5*sj4);
IkReal x2382=((0.433012903784321)*cj5*r11);
IkReal x2383=(cj1*r10*x2377);
IkReal x2384=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2385=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x2386=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2386.valid){
continue;
}
CheckValue<IkReal> x2387 = IKatan2WithCheck(IkReal(((((-1.0)*x2376*x2384))+((x2371*x2375))+(((-1.0)*cj1*x2382))+((r10*x2377*x2378))+(((-1.0)*x2383))+((cj1*r10*x2381))+(((0.250000349687704)*x2371))+((x2368*x2369*x2370))+((x2368*x2369*x2372))+(((0.749999650312296)*x2368*x2379))+((sj1*x2373*x2381))+((sj1*x2380))+(((-1.0)*sj1*x2369*x2370))+(((-1.0)*sj1*x2369*x2372))+(((-1.0)*r11*x2385))+((x2378*x2382)))),IkReal(((((-0.749999650312296)*r12*x2368))+(((-1.0)*x2374*x2381))+(((-0.250000349687704)*r12*sj1))+(((-1.0)*x2376*x2385))+(((-1.0)*x2368*x2382))+((cj1*x2375*x2379))+(((-1.0)*cj1*x2369*x2372))+(((-1.0)*cj1*x2369*x2370))+((cj1*x2373*x2381))+((x2374*x2377))+(((-1.0)*r10*x2368*x2377))+((x2369*x2370*x2378))+((cj1*x2380))+((r11*x2384))+((sj1*x2382))+((x2369*x2372*x2378)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2387.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2386.value)))+(x2387.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2388=IKsin(j2);
IkReal x2389=IKcos(j2);
IkReal x2390=(cj4*sj5);
IkReal x2391=(cj3*r21);
IkReal x2392=((0.433012903784321)*r20);
IkReal x2393=((0.749999650312296)*cj4);
IkReal x2394=(cj4*cj5);
IkReal x2395=((1.0)*cj3);
IkReal x2396=((0.433012903784321)*r01);
IkReal x2397=(sj4*sj5);
IkReal x2398=((0.749999650312296)*sj3);
IkReal x2399=(r10*sj5);
IkReal x2400=((0.500000349687582)*sj3);
IkReal x2401=(cj0*sj1);
IkReal x2402=((0.500000349687582)*cj3);
IkReal x2403=((0.0160344678271334)*r22);
IkReal x2404=(r20*sj3);
IkReal x2405=(r00*sj5);
IkReal x2406=(cj3*r11);
IkReal x2407=((0.0160344678271334)*r12);
IkReal x2408=((0.433012903784321)*r11);
IkReal x2409=(cj5*r11);
IkReal x2410=(r10*sj3);
IkReal x2411=(r00*sj3);
IkReal x2412=((0.433012903784321)*sj3);
IkReal x2413=(cj5*sj4);
IkReal x2414=(r20*sj5);
IkReal x2415=((0.433012903784321)*r21);
IkReal x2416=(sj0*sj1);
IkReal x2417=(cj3*r01);
IkReal x2418=(cj5*r21);
IkReal x2419=((0.0160344678271334)*r02);
IkReal x2420=(cj5*r01);
IkReal x2421=((0.250000349687704)*sj3);
IkReal x2422=(cj1*x2388);
IkReal x2423=((0.500000349687582)*x2413);
IkReal x2424=((0.27144)*x2389);
IkReal x2425=(cj4*x2412);
IkReal x2426=(sj1*x2388);
IkReal x2427=((0.866025201892125)*cj3*sj4);
IkReal x2428=(cj1*x2389);
IkReal x2429=((1.0)*x2389);
evalcond[0]=(x2428+x2426+(((-0.250000349687704)*r22))+(((-1.0)*x2390*x2392))+(((-1.0)*x2394*x2415))+(((-1.0)*r22*x2393))+(((-0.866025201892125)*r20*x2413))+((cj5*x2415))+(((0.866025201892125)*r21*x2397))+((sj5*x2392)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.866025201892125)*r00*x2413))+(((-1.0)*r02*x2393))+(((0.866025201892125)*r01*x2397))+(((-1.0)*x2401*x2429))+(((0.433012903784321)*x2405))+(((-0.433012903784321)*r00*x2390))+(((-1.0)*x2394*x2396))+((cj0*x2422))+((cj5*x2396)));
evalcond[2]=((((-0.250000349687704)*r12))+(((-1.0)*x2394*x2408))+((sj0*x2422))+(((0.433012903784321)*x2399))+(((-1.0)*x2416*x2429))+(((0.866025201892125)*r11*x2397))+(((-0.433012903784321)*r10*x2390))+(((-0.866025201892125)*r10*x2413))+((cj5*x2408))+(((-1.0)*r12*x2393)));
evalcond[3]=((((-1.0)*x2403))+(((0.00925751294893567)*r21*x2394))+(((0.41)*cj1))+(((-0.27144)*x2426))+(((0.00925751294893567)*r20*x2390))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x2397))+(((0.0185150129489311)*r20*x2413))+((cj4*x2403))+(((0.0648043305514941)*x2418))+(((0.0648043305514941)*x2414))+(((-1.0)*cj1*x2424)));
evalcond[4]=((((-0.27144)*cj0*x2422))+(((-0.41)*x2401))+(((0.0648043305514941)*x2420))+(((-1.0)*px))+(((-0.0185150129489311)*r01*x2397))+(((-1.0)*x2419))+((cj4*x2419))+(((0.00925751294893567)*r01*x2394))+(((0.0185150129489311)*r00*x2413))+(((0.00925751294893567)*r00*x2390))+(((0.0648043305514941)*x2405))+(((0.0098)*sj0))+((x2401*x2424)));
evalcond[5]=((((-0.41)*x2416))+(((0.0648043305514941)*x2399))+((x2416*x2424))+(((-1.0)*x2407))+(((0.00925751294893567)*r10*x2390))+(((-1.0)*py))+(((0.0185150129489311)*r10*x2413))+(((-0.0185150129489311)*r11*x2397))+((cj4*x2407))+(((0.00925751294893567)*r11*x2394))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2409))+(((-0.27144)*sj0*x2422)));
evalcond[6]=(((r22*x2425))+((r22*x2427))+(((-1.0)*r21*x2397*x2400))+((x2398*x2418))+((x2398*x2414))+((x2391*x2423))+((r20*x2400*x2413))+((x2390*x2391))+(((-1.0)*x2422))+(((0.250000349687704)*x2390*x2404))+(((-1.0)*r22*x2412))+((r21*x2394*x2421))+((sj1*x2389))+(((-1.0)*r20*x2394*x2395))+((r20*x2397*x2402)));
evalcond[7]=((((-1.0)*r00*x2394*x2395))+(((0.250000349687704)*x2390*x2411))+((r00*x2397*x2402))+((r01*x2402*x2413))+((x2398*x2405))+((r00*x2400*x2413))+(((-1.0)*r02*x2412))+((cj0*x2428))+((x2388*x2401))+((x2398*x2420))+(((-1.0)*r01*x2397*x2400))+((x2390*x2417))+((r02*x2427))+((r02*x2425))+((r01*x2394*x2421)));
evalcond[8]=((((0.250000349687704)*x2390*x2410))+((x2388*x2416))+((r11*x2394*x2421))+((x2390*x2406))+(((-1.0)*r12*x2412))+((x2398*x2409))+((x2398*x2399))+((sj0*x2428))+((r10*x2400*x2413))+((sj4*x2402*x2409))+((r10*x2397*x2402))+(((-1.0)*r11*x2397*x2400))+((r12*x2425))+((r12*x2427))+(((-1.0)*r10*x2394*x2395)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2430=(cj0*r20);
IkReal x2431=(cj1*r00);
IkReal x2432=(r02*sj1);
IkReal x2433=(r00*sj1);
IkReal x2434=((0.433012903784321)*sj5);
IkReal x2435=(cj4*sj1);
IkReal x2436=((0.749999650312296)*cj4);
IkReal x2437=(cj0*r22);
IkReal x2438=(r01*sj1);
IkReal x2439=(cj1*cj4);
IkReal x2440=(cj0*r21);
IkReal x2441=(cj1*r02);
IkReal x2442=((0.866025201892125)*cj5*sj4);
IkReal x2443=((0.866025201892125)*sj4*sj5);
IkReal x2444=((0.433012903784321)*cj5*r01);
IkReal x2445=((0.433012903784321)*cj5*x2440);
CheckValue<IkReal> x2446=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2446.valid){
continue;
}
CheckValue<IkReal> x2447 = IKatan2WithCheck(IkReal(((((-1.0)*sj1*x2445))+(((-1.0)*sj1*x2430*x2434))+(((0.250000349687704)*sj1*x2437))+((x2431*x2442))+(((-1.0)*sj1*x2440*x2443))+(((-1.0)*x2431*x2434))+((cj4*x2431*x2434))+(((0.749999650312296)*x2435*x2437))+(((0.250000349687704)*x2441))+((x2430*x2434*x2435))+(((-1.0)*cj1*r01*x2443))+((x2439*x2444))+(((-1.0)*cj1*x2444))+((sj1*x2430*x2442))+((x2436*x2441))+((x2435*x2445)))),IkReal(((((0.433012903784321)*cj5*x2438))+(((-1.0)*x2435*x2444))+(((-0.250000349687704)*x2432))+(((-1.0)*x2432*x2436))+(((0.250000349687704)*cj1*x2437))+((x2430*x2434*x2439))+((x2433*x2434))+((x2439*x2445))+(((-1.0)*cj1*x2445))+(((-1.0)*x2433*x2442))+((cj1*x2436*x2437))+((cj1*x2430*x2442))+(((-1.0)*cj1*x2440*x2443))+((x2438*x2443))+(((-1.0)*cj1*x2430*x2434))+(((-1.0)*cj4*x2433*x2434)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2447.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2446.value)))+(x2447.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2448=IKsin(j2);
IkReal x2449=IKcos(j2);
IkReal x2450=(cj4*sj5);
IkReal x2451=(cj3*r21);
IkReal x2452=((0.433012903784321)*r20);
IkReal x2453=((0.749999650312296)*cj4);
IkReal x2454=(cj4*cj5);
IkReal x2455=((1.0)*cj3);
IkReal x2456=((0.433012903784321)*r01);
IkReal x2457=(sj4*sj5);
IkReal x2458=((0.749999650312296)*sj3);
IkReal x2459=(r10*sj5);
IkReal x2460=((0.500000349687582)*sj3);
IkReal x2461=(cj0*sj1);
IkReal x2462=((0.500000349687582)*cj3);
IkReal x2463=((0.0160344678271334)*r22);
IkReal x2464=(r20*sj3);
IkReal x2465=(r00*sj5);
IkReal x2466=(cj3*r11);
IkReal x2467=((0.0160344678271334)*r12);
IkReal x2468=((0.433012903784321)*r11);
IkReal x2469=(cj5*r11);
IkReal x2470=(r10*sj3);
IkReal x2471=(r00*sj3);
IkReal x2472=((0.433012903784321)*sj3);
IkReal x2473=(cj5*sj4);
IkReal x2474=(r20*sj5);
IkReal x2475=((0.433012903784321)*r21);
IkReal x2476=(sj0*sj1);
IkReal x2477=(cj3*r01);
IkReal x2478=(cj5*r21);
IkReal x2479=((0.0160344678271334)*r02);
IkReal x2480=(cj5*r01);
IkReal x2481=((0.250000349687704)*sj3);
IkReal x2482=(cj1*x2448);
IkReal x2483=((0.500000349687582)*x2473);
IkReal x2484=((0.27144)*x2449);
IkReal x2485=(cj4*x2472);
IkReal x2486=(sj1*x2448);
IkReal x2487=((0.866025201892125)*cj3*sj4);
IkReal x2488=(cj1*x2449);
IkReal x2489=((1.0)*x2449);
evalcond[0]=((((-1.0)*x2450*x2452))+x2488+x2486+(((-0.250000349687704)*r22))+((cj5*x2475))+(((-1.0)*x2454*x2475))+(((-1.0)*r22*x2453))+(((-0.866025201892125)*r20*x2473))+(((0.866025201892125)*r21*x2457))+((sj5*x2452)));
evalcond[1]=((((-0.433012903784321)*r00*x2450))+(((-0.250000349687704)*r02))+(((-1.0)*x2461*x2489))+(((-0.866025201892125)*r00*x2473))+(((-1.0)*x2454*x2456))+(((0.866025201892125)*r01*x2457))+((cj5*x2456))+(((0.433012903784321)*x2465))+((cj0*x2482))+(((-1.0)*r02*x2453)));
evalcond[2]=(((sj0*x2482))+(((-0.250000349687704)*r12))+(((-1.0)*x2454*x2468))+(((-1.0)*x2476*x2489))+(((0.433012903784321)*x2459))+(((0.866025201892125)*r11*x2457))+(((-0.866025201892125)*r10*x2473))+((cj5*x2468))+(((-1.0)*r12*x2453))+(((-0.433012903784321)*r10*x2450)));
evalcond[3]=((((-0.0185150129489311)*r21*x2457))+(((-0.27144)*x2486))+(((0.41)*cj1))+(((-1.0)*pz))+(((0.0185150129489311)*r20*x2473))+(((-1.0)*cj1*x2484))+(((0.0648043305514941)*x2478))+(((0.0648043305514941)*x2474))+(((0.00925751294893567)*r20*x2450))+((cj4*x2463))+(((0.00925751294893567)*r21*x2454))+(((-1.0)*x2463)));
evalcond[4]=((((0.00925751294893567)*r00*x2450))+(((-0.27144)*cj0*x2482))+(((0.00925751294893567)*r01*x2454))+(((0.0648043305514941)*x2465))+(((0.0648043305514941)*x2480))+(((-0.41)*x2461))+(((-1.0)*x2479))+((cj4*x2479))+((x2461*x2484))+(((0.0185150129489311)*r00*x2473))+(((-1.0)*px))+(((-0.0185150129489311)*r01*x2457))+(((0.0098)*sj0)));
evalcond[5]=(((x2476*x2484))+(((0.00925751294893567)*r11*x2454))+(((0.0648043305514941)*x2469))+(((-0.27144)*sj0*x2482))+(((-1.0)*py))+(((0.0648043305514941)*x2459))+(((-0.0185150129489311)*r11*x2457))+(((0.0185150129489311)*r10*x2473))+((cj4*x2467))+(((-1.0)*x2467))+(((0.00925751294893567)*r10*x2450))+(((-0.0098)*cj0))+(((-0.41)*x2476)));
evalcond[6]=(((x2451*x2483))+(((0.250000349687704)*x2450*x2464))+(((-1.0)*r21*x2457*x2460))+(((-1.0)*x2482))+((sj1*x2449))+(((-1.0)*r20*x2454*x2455))+((r22*x2487))+((r22*x2485))+((x2450*x2451))+((r21*x2454*x2481))+((x2458*x2474))+((x2458*x2478))+(((-1.0)*r22*x2472))+((r20*x2460*x2473))+((r20*x2457*x2462)));
evalcond[7]=(((x2458*x2465))+(((-1.0)*r01*x2457*x2460))+((r00*x2460*x2473))+((r02*x2487))+((r02*x2485))+(((-1.0)*r00*x2454*x2455))+((r01*x2454*x2481))+((x2450*x2477))+((x2448*x2461))+((x2458*x2480))+(((0.250000349687704)*x2450*x2471))+(((-1.0)*r02*x2472))+((cj0*x2488))+((r00*x2457*x2462))+((r01*x2462*x2473)));
evalcond[8]=(((sj4*x2462*x2469))+((x2458*x2459))+((x2458*x2469))+((sj0*x2488))+(((-1.0)*r10*x2454*x2455))+(((-1.0)*r12*x2472))+(((-1.0)*r11*x2457*x2460))+((x2450*x2466))+(((0.250000349687704)*x2450*x2470))+((r11*x2454*x2481))+((r12*x2487))+((r12*x2485))+((r10*x2460*x2473))+((r10*x2457*x2462))+((x2448*x2476)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2490=((0.26409636501044)*cj4);
IkReal x2491=(r20*sj5);
IkReal x2492=(cj5*r21);
IkReal x2493=(r10*sj5);
IkReal x2494=(cj5*r11);
IkReal x2495=((0.528192360616262)*sj4);
IkReal x2496=((0.18234135315471)*sj0);
IkReal x2497=(r12*sj0);
IkReal x2498=((0.10827950965428)*cj4*sj0);
IkReal x2499=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x2500=IKPowWithIntegerCheck(sj0,-2);
if(!x2500.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x2500.value)*((((x2494*x2496))+(((-1.0)*x2493*x2498))+(((-0.0098)*cj0*sj0))+(((-1.0)*x2494*x2498))+((x2493*x2496))+(((-1.0)*cj5*r10*x2499))+(((-1.0)*py*sj0))+((r11*sj5*x2499))+(((-0.0838945627463637)*x2497))+(((-0.187545437253636)*cj4*x2497)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x2495))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x2490*x2492))+((x2490*x2491))+(((-0.444735007694415)*x2491))+(((-0.444735007694415)*x2492))+((cj5*r20*x2495))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x2500.value)*((((x2494*x2496))+(((-1.0)*x2493*x2498))+(((-0.0098)*cj0*sj0))+(((-1.0)*x2494*x2498))+((x2493*x2496))+(((-1.0)*cj5*r10*x2499))+(((-1.0)*py*sj0))+((r11*sj5*x2499))+(((-0.0838945627463637)*x2497))+(((-0.187545437253636)*cj4*x2497))))))+IKsqr(((((-1.0)*r21*sj5*x2495))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x2490*x2492))+((x2490*x2491))+(((-0.444735007694415)*x2491))+(((-0.444735007694415)*x2492))+((cj5*r20*x2495))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x2500.value)*((((x2494*x2496))+(((-1.0)*x2493*x2498))+(((-0.0098)*cj0*sj0))+(((-1.0)*x2494*x2498))+((x2493*x2496))+(((-1.0)*cj5*r10*x2499))+(((-1.0)*py*sj0))+((r11*sj5*x2499))+(((-0.0838945627463637)*x2497))+(((-0.187545437253636)*cj4*x2497))))), ((((-1.0)*r21*sj5*x2495))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x2490*x2492))+((x2490*x2491))+(((-0.444735007694415)*x2491))+(((-0.444735007694415)*x2492))+((cj5*r20*x2495))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2501=IKsin(j1);
IkReal x2502=IKcos(j1);
IkReal x2503=sj0*sj0;
IkReal x2504=cj0*cj0;
IkReal x2505=((0.0098)*cj0);
IkReal x2506=(cj0*cj5);
IkReal x2507=(cj5*sj0);
IkReal x2508=((0.0648043305514941)*r21);
IkReal x2509=(r00*sj5);
IkReal x2510=((0.20357990508077)*sj3);
IkReal x2511=((0.135720094919197)*r21);
IkReal x2512=((1.0)*px);
IkReal x2513=((0.117537022603216)*sj3);
IkReal x2514=((0.00925751294893567)*cj4);
IkReal x2515=(r10*sj4);
IkReal x2516=(sj0*sj5);
IkReal x2517=(cj4*sj0);
IkReal x2518=(r20*sj5);
IkReal x2519=((0.10827950965428)*cj4);
IkReal x2520=(cj3*sj4);
IkReal x2521=((0.135720094919197)*sj5);
IkReal x2522=((0.117537022603216)*r11);
IkReal x2523=(cj5*r01);
IkReal x2524=(cj4*r02);
IkReal x2525=((0.117537022603216)*cj4);
IkReal x2526=((0.0160344678271334)*r02);
IkReal x2527=((0.0648043305514941)*r11);
IkReal x2528=((0.0160344678271334)*r12);
IkReal x2529=(cj0*cj4);
IkReal x2530=(cj5*sj3);
IkReal x2531=((0.0678600949192303)*cj4);
IkReal x2532=(r10*sj5);
IkReal x2533=((1.0)*py);
IkReal x2534=(cj5*r00);
IkReal x2535=(cj0*r21);
IkReal x2536=(r11*sj5);
IkReal x2537=((0.0160344678271334)*r22);
IkReal x2538=(r00*sj4);
IkReal x2539=((1.0)*pz);
IkReal x2540=(r22*sj0);
IkReal x2541=(sj3*sj4);
IkReal x2542=(cj5*r21);
IkReal x2543=(r21*sj3);
IkReal x2544=(cj0*r22);
IkReal x2545=((0.0185150129489311)*sj4);
IkReal x2546=(cj5*r11);
IkReal x2547=(r01*sj5);
IkReal x2548=((0.216558867852667)*sj4);
IkReal x2549=((0.135720094919197)*r20);
IkReal x2550=(sj0*x2505);
IkReal x2551=(sj4*x2516);
IkReal x2552=((0.27144)*cj3*cj4);
IkReal x2553=(r11*x2514);
IkReal x2554=((0.41)*x2501);
IkReal x2555=(cj0*x2532);
IkReal x2556=(sj5*x2545);
IkReal x2557=((0.41)*x2502);
IkReal x2558=(cj0*sj0*x2554);
evalcond[0]=(((x2518*x2519))+((cj5*r20*x2548))+(((-0.18234135315471)*x2518))+((x2519*x2542))+(((0.187545437253636)*cj4*r22))+(((-1.0)*r21*sj5*x2548))+pz+(((-0.18234135315471)*x2542))+(((-1.0)*x2557))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*sj0*x2533))+(((-0.216558867852667)*x2507*x2515))+(((-0.187545437253636)*r12*x2517))+(((0.18234135315471)*r11*x2507))+(((0.18234135315471)*r10*x2516))+((r11*x2516*x2548))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*r11*x2507*x2519))+(((-1.0)*x2550))+(((-1.0)*r10*x2516*x2519))+(((-1.0)*x2503*x2554)));
evalcond[2]=(x2550+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*cj0*x2512))+(((0.18234135315471)*r01*x2506))+(((-0.216558867852667)*x2506*x2538))+(((-1.0)*r01*x2506*x2519))+(((0.18234135315471)*cj0*x2509))+(((-0.187545437253636)*cj0*x2524))+(((-1.0)*x2504*x2554))+(((-1.0)*cj0*x2509*x2519))+((cj0*x2547*x2548)));
evalcond[3]=(((x2510*x2546))+(((0.135720094919197)*x2515*x2530))+((sj3*x2531*x2532))+((r20*x2514*x2516))+(((-1.0)*sj0*x2539))+(((-1.0)*sj0*x2537))+((r21*x2507*x2514))+(((0.235073880801598)*r12*x2520))+(((0.135720094919197)*x2520*x2546))+(((-1.0)*r12*x2513))+((sj0*x2557))+((x2510*x2532))+((x2507*x2508))+(((-1.0)*r21*x2516*x2545))+((x2517*x2537))+((r11*x2530*x2531))+(((-1.0)*cj5*r10*x2552))+((r20*x2507*x2545))+((cj3*x2515*x2521))+((cj4*r12*x2513))+((x2536*x2552))+(((-1.0)*r11*x2521*x2541))+(((0.0648043305514941)*r20*x2516)));
evalcond[4]=(((x2510*x2523))+((x2547*x2552))+(((0.235073880801598)*r02*x2520))+((sj3*x2509*x2531))+((cj0*x2514*x2518))+(((-1.0)*r01*x2521*x2541))+(((0.0648043305514941)*cj0*x2518))+((x2506*x2508))+((r21*x2506*x2514))+(((-1.0)*cj0*x2539))+(((-1.0)*cj0*x2537))+((r20*x2506*x2545))+(((0.135720094919197)*x2520*x2523))+(((0.135720094919197)*x2530*x2538))+(((-1.0)*x2534*x2552))+((cj0*x2557))+(((0.135720094919197)*x2509*x2520))+((sj3*x2523*x2531))+((x2509*x2510))+(((-1.0)*r02*x2513))+((x2529*x2537))+(((-1.0)*x2535*x2556))+((x2513*x2524)));
evalcond[5]=((((-1.0)*x2536*x2545))+(((-1.0)*x2505))+((x2513*x2540))+(((-1.0)*x2507*x2531*x2543))+(((-1.0)*x2533))+((x2511*x2516*x2541))+((cj5*x2527))+(((0.0185150129489311)*cj5*x2515))+(((-1.0)*r20*sj3*x2516*x2531))+((cj4*x2528))+(((-1.0)*r21*x2516*x2552))+(((-1.0)*r21*x2507*x2510))+((x2514*x2546))+(((-1.0)*x2516*x2520*x2549))+(((0.0648043305514941)*x2532))+(((-1.0)*r22*x2513*x2517))+((r20*x2507*x2552))+(((-1.0)*x2528))+(((-0.235073880801598)*x2520*x2540))+(((-1.0)*x2507*x2511*x2520))+(((-1.0)*sj0*x2554))+(((-1.0)*x2507*x2541*x2549))+((x2514*x2532))+(((-1.0)*r20*x2510*x2516)));
evalcond[6]=((((-1.0)*cj0*x2510*x2518))+(((-1.0)*r22*x2513*x2529))+((x2513*x2544))+(((-1.0)*x2512))+(((0.0648043305514941)*x2523))+(((-0.135720094919197)*cj0*x2518*x2520))+(((-0.27144)*cj3*r21*sj5*x2529))+((x2534*x2545))+((x2514*x2523))+((cj0*sj5*x2511*x2541))+(((-1.0)*x2545*x2547))+(((-0.0678600949192303)*sj3*x2518*x2529))+(((0.0648043305514941)*x2509))+(((-1.0)*x2506*x2541*x2549))+(((-1.0)*x2506*x2511*x2520))+(((0.0098)*sj0))+((x2509*x2514))+(((0.0160344678271334)*x2524))+(((-1.0)*x2526))+(((-1.0)*x2506*x2531*x2543))+((r20*x2506*x2552))+(((-0.235073880801598)*x2520*x2544))+(((-1.0)*cj0*x2554))+(((-1.0)*r21*x2506*x2510)));
evalcond[7]=((((-1.0)*sj0*x2526))+(((0.0648043305514941)*r01*x2507))+(((0.235073880801598)*cj0*sj4*x2536))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*r01*x2516*x2545))+(((-0.20357990508077)*r12*x2529))+(((0.0648043305514941)*sj0*x2509))+((x2517*x2526))+((sj0*x2509*x2514))+(((0.0185150129489311)*x2507*x2538))+((x2506*x2522))+(((0.0098)*x2503))+(((-0.235073880801598)*x2506*x2515))+(((-1.0)*cj4*x2506*x2522))+((r01*x2507*x2514))+(((-1.0)*sj0*x2512))+(((-1.0)*x2525*x2555))+(((-1.0)*x2558))+(((0.117537022603216)*x2555)));
evalcond[8]=((((-1.0)*cj0*x2528))+(((0.0185150129489311)*x2506*x2515))+(((-0.117537022603216)*x2509*x2517))+(((-0.0098)*x2504))+(((0.0648043305514941)*x2555))+(((0.117537022603216)*r01*x2507))+(((0.117537022603216)*sj0*x2509))+((x2528*x2529))+(((-0.235073880801598)*x2507*x2538))+((x2514*x2555))+((x2506*x2527))+(((-1.0)*cj0*x2533))+(((-1.0)*cj0*x2536*x2545))+(((-1.0)*r01*x2507*x2525))+((x2506*x2553))+(((-0.20357990508077)*r02*x2517))+(((-1.0)*x2558))+(((0.235073880801598)*r01*x2551))+(((-0.0678600949192303)*r02*sj0)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2559=((0.250000349687704)*sj1);
IkReal x2560=(cj1*cj4);
IkReal x2561=((0.749999650312296)*r22);
IkReal x2562=(cj4*sj1);
IkReal x2563=((0.749999650312296)*r02);
IkReal x2564=((0.250000349687704)*cj1);
IkReal x2565=((0.433012903784321)*r00*sj5);
IkReal x2566=((0.433012903784321)*r20*sj5);
IkReal x2567=((0.433012903784321)*cj5*r01);
IkReal x2568=((0.433012903784321)*cj5*r21);
IkReal x2569=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2570=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2571=((0.866025201892125)*r01*sj4*sj5);
IkReal x2572=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x2560*x2563))+((x2560*x2565))+((x2560*x2567))+(((-1.0)*cj1*x2565))+(((-1.0)*cj1*x2567))+((r22*x2559))+((x2562*x2566))+((x2562*x2568))+((r20*x2569))+(((-1.0)*sj1*x2572))+((r00*x2570))+(((-1.0)*cj1*x2571))+(((-1.0)*sj1*x2568))+(((-1.0)*sj1*x2566))+((x2561*x2562))+((r02*x2564)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2560*x2561))+((x2560*x2566))+((x2560*x2568))+((r22*x2564))+(((-1.0)*r00*x2569))+(((-1.0)*cj1*x2568))+(((-1.0)*cj1*x2566))+(((-1.0)*x2562*x2563))+(((-1.0)*x2562*x2567))+(((-1.0)*x2562*x2565))+((r20*x2570))+(((-1.0)*r02*x2559))+((sj1*x2567))+((sj1*x2565))+(((-1.0)*cj1*x2572))+((sj1*x2571)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2560*x2563))+((x2560*x2565))+((x2560*x2567))+(((-1.0)*cj1*x2565))+(((-1.0)*cj1*x2567))+((r22*x2559))+((x2562*x2566))+((x2562*x2568))+((r20*x2569))+(((-1.0)*sj1*x2572))+((r00*x2570))+(((-1.0)*cj1*x2571))+(((-1.0)*sj1*x2568))+(((-1.0)*sj1*x2566))+((x2561*x2562))+((r02*x2564))))+IKsqr((((x2560*x2561))+((x2560*x2566))+((x2560*x2568))+((r22*x2564))+(((-1.0)*r00*x2569))+(((-1.0)*cj1*x2568))+(((-1.0)*cj1*x2566))+(((-1.0)*x2562*x2563))+(((-1.0)*x2562*x2567))+(((-1.0)*x2562*x2565))+((r20*x2570))+(((-1.0)*r02*x2559))+((sj1*x2567))+((sj1*x2565))+(((-1.0)*cj1*x2572))+((sj1*x2571))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2560*x2563))+((x2560*x2565))+((x2560*x2567))+(((-1.0)*cj1*x2565))+(((-1.0)*cj1*x2567))+((r22*x2559))+((x2562*x2566))+((x2562*x2568))+((r20*x2569))+(((-1.0)*sj1*x2572))+((r00*x2570))+(((-1.0)*cj1*x2571))+(((-1.0)*sj1*x2568))+(((-1.0)*sj1*x2566))+((x2561*x2562))+((r02*x2564))), (((x2560*x2561))+((x2560*x2566))+((x2560*x2568))+((r22*x2564))+(((-1.0)*r00*x2569))+(((-1.0)*cj1*x2568))+(((-1.0)*cj1*x2566))+(((-1.0)*x2562*x2563))+(((-1.0)*x2562*x2567))+(((-1.0)*x2562*x2565))+((r20*x2570))+(((-1.0)*r02*x2559))+((sj1*x2567))+((sj1*x2565))+(((-1.0)*cj1*x2572))+((sj1*x2571))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2573=IKsin(j2);
IkReal x2574=IKcos(j2);
IkReal x2575=((0.749999650312296)*sj3);
IkReal x2576=(cj5*r01);
IkReal x2577=(r00*sj5);
IkReal x2578=(cj4*cj5);
IkReal x2579=((1.0)*cj3);
IkReal x2580=(r21*sj3);
IkReal x2581=(cj4*sj5);
IkReal x2582=(cj3*r21);
IkReal x2583=((0.500000349687582)*sj4);
IkReal x2584=((0.433012903784321)*r20);
IkReal x2585=(cj4*r22);
IkReal x2586=((0.433012903784321)*sj3);
IkReal x2587=((0.433012903784321)*cj4);
IkReal x2588=(r01*sj5);
IkReal x2589=(r20*sj5);
IkReal x2590=((0.0160344678271334)*r02);
IkReal x2591=(cj4*r02);
IkReal x2592=((0.00925751294893567)*cj4);
IkReal x2593=((0.0185150129489311)*sj4);
IkReal x2594=(r21*sj5);
IkReal x2595=(cj5*r21);
IkReal x2596=((0.866025201892125)*sj4);
IkReal x2597=(cj5*r20);
IkReal x2598=(cj5*r00);
IkReal x2599=((0.250000349687704)*sj3);
IkReal x2600=(cj1*x2574);
IkReal x2601=(sj1*x2573);
IkReal x2602=(cj1*x2573);
IkReal x2603=(sj1*x2574);
IkReal x2604=(x2600+x2601);
evalcond[0]=(((sj5*x2584))+((x2594*x2596))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x2578))+(((0.433012903784321)*x2595))+(((-1.0)*x2596*x2597))+(((-0.749999650312296)*x2585))+x2604+(((-1.0)*x2581*x2584)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x2576))+(((0.433012903784321)*x2577))+(((-1.0)*x2603))+(((-1.0)*x2596*x2598))+(((-1.0)*x2577*x2587))+(((-1.0)*x2576*x2587))+((x2588*x2596))+(((-0.749999650312296)*x2591))+x2602);
evalcond[2]=((((0.00925751294893567)*r20*x2581))+(((0.0648043305514941)*x2595))+(((-0.27144)*x2601))+(((-0.27144)*x2600))+(((0.41)*cj1))+(((0.0648043305514941)*x2589))+(((-0.0160344678271334)*r22))+(((-1.0)*x2593*x2594))+(((0.00925751294893567)*r21*x2578))+(((-1.0)*pz))+((x2593*x2597))+(((0.0160344678271334)*x2585)));
evalcond[3]=((((0.0648043305514941)*x2576))+(((0.0648043305514941)*x2577))+(((-0.27144)*x2602))+(((-0.41)*sj1))+(((-1.0)*x2590))+(((-1.0)*px))+((x2593*x2598))+(((-1.0)*x2588*x2593))+((x2577*x2592))+((x2576*x2592))+(((0.27144)*x2603))+((cj4*x2590)));
evalcond[4]=(((x2575*x2577))+((x2575*x2576))+(((-1.0)*sj3*x2583*x2588))+((cj3*r02*x2596))+(((-1.0)*r02*x2586))+((cj3*r01*x2581))+((x2586*x2591))+((sj3*x2583*x2598))+(((-1.0)*r00*x2578*x2579))+((cj4*x2577*x2599))+((cj3*x2577*x2583))+((cj4*x2576*x2599))+((cj3*x2576*x2583))+x2604);
evalcond[5]=(((cj3*x2583*x2589))+(((-1.0)*x2602))+((cj3*r22*x2596))+(((-1.0)*sj5*x2580*x2583))+((x2581*x2582))+((x2575*x2595))+(((0.250000349687704)*x2578*x2580))+((x2575*x2589))+((sj3*x2583*x2597))+((r20*x2581*x2599))+((x2585*x2586))+(((-1.0)*r20*x2578*x2579))+((cj5*x2582*x2583))+x2603+(((-1.0)*r22*x2586)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2605=(r02*sj1);
IkReal x2606=(cj1*cj4);
IkReal x2607=((0.749999650312296)*r22);
IkReal x2608=(cj4*sj1);
IkReal x2609=((0.250000349687704)*r22);
IkReal x2610=((0.433012903784321)*r00*sj5);
IkReal x2611=((0.433012903784321)*r20*sj5);
IkReal x2612=((0.433012903784321)*cj5*r01);
IkReal x2613=((0.433012903784321)*cj5*r21);
IkReal x2614=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2615=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2616=((0.866025201892125)*r01*sj4*sj5);
IkReal x2617=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*x2606*x2612))+(((-1.0)*x2606*x2610))+(((-1.0)*r00*x2615))+((x2607*x2608))+(((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2613))+(((-1.0)*sj1*x2617))+((r20*x2614))+(((-0.749999650312296)*r02*x2606))+((cj1*x2612))+((cj1*x2616))+((cj1*x2610))+((x2608*x2613))+((x2608*x2611))+((sj1*x2609))+(((-0.250000349687704)*cj1*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x2614))+(((0.749999650312296)*cj4*x2605))+(((-1.0)*sj1*x2612))+(((-1.0)*sj1*x2616))+(((-1.0)*sj1*x2610))+((r20*x2615))+((cj1*x2609))+((x2606*x2607))+((x2608*x2610))+((x2608*x2612))+((x2606*x2613))+((x2606*x2611))+(((-1.0)*cj1*x2613))+(((-1.0)*cj1*x2611))+(((-1.0)*cj1*x2617))+(((0.250000349687704)*x2605)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2606*x2612))+(((-1.0)*x2606*x2610))+(((-1.0)*r00*x2615))+((x2607*x2608))+(((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2613))+(((-1.0)*sj1*x2617))+((r20*x2614))+(((-0.749999650312296)*r02*x2606))+((cj1*x2612))+((cj1*x2616))+((cj1*x2610))+((x2608*x2613))+((x2608*x2611))+((sj1*x2609))+(((-0.250000349687704)*cj1*r02))))+IKsqr((((r00*x2614))+(((0.749999650312296)*cj4*x2605))+(((-1.0)*sj1*x2612))+(((-1.0)*sj1*x2616))+(((-1.0)*sj1*x2610))+((r20*x2615))+((cj1*x2609))+((x2606*x2607))+((x2608*x2610))+((x2608*x2612))+((x2606*x2613))+((x2606*x2611))+(((-1.0)*cj1*x2613))+(((-1.0)*cj1*x2611))+(((-1.0)*cj1*x2617))+(((0.250000349687704)*x2605))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2606*x2612))+(((-1.0)*x2606*x2610))+(((-1.0)*r00*x2615))+((x2607*x2608))+(((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2613))+(((-1.0)*sj1*x2617))+((r20*x2614))+(((-0.749999650312296)*r02*x2606))+((cj1*x2612))+((cj1*x2616))+((cj1*x2610))+((x2608*x2613))+((x2608*x2611))+((sj1*x2609))+(((-0.250000349687704)*cj1*r02))), (((r00*x2614))+(((0.749999650312296)*cj4*x2605))+(((-1.0)*sj1*x2612))+(((-1.0)*sj1*x2616))+(((-1.0)*sj1*x2610))+((r20*x2615))+((cj1*x2609))+((x2606*x2607))+((x2608*x2610))+((x2608*x2612))+((x2606*x2613))+((x2606*x2611))+(((-1.0)*cj1*x2613))+(((-1.0)*cj1*x2611))+(((-1.0)*cj1*x2617))+(((0.250000349687704)*x2605))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2618=IKcos(j2);
IkReal x2619=IKsin(j2);
IkReal x2620=((0.433012903784321)*sj3);
IkReal x2621=((0.749999650312296)*sj3);
IkReal x2622=(r00*sj5);
IkReal x2623=(cj4*cj5);
IkReal x2624=((1.0)*cj3);
IkReal x2625=(cj5*r01);
IkReal x2626=(r21*sj3);
IkReal x2627=(cj4*sj5);
IkReal x2628=(cj3*r21);
IkReal x2629=((0.500000349687582)*sj4);
IkReal x2630=((0.433012903784321)*r20);
IkReal x2631=(cj4*r22);
IkReal x2632=(r20*sj5);
IkReal x2633=((0.0160344678271334)*r02);
IkReal x2634=(cj4*r02);
IkReal x2635=(r01*sj5);
IkReal x2636=(cj5*r00);
IkReal x2637=((0.0185150129489311)*sj4);
IkReal x2638=(r21*sj5);
IkReal x2639=(cj5*r21);
IkReal x2640=((0.866025201892125)*sj4);
IkReal x2641=(cj5*r20);
IkReal x2642=((0.250000349687704)*sj3);
IkReal x2643=(sj1*x2618);
IkReal x2644=(cj1*x2618);
IkReal x2645=(sj1*x2619);
IkReal x2646=(cj1*x2619);
IkReal x2647=((1.0)*x2646);
evalcond[0]=((((-0.250000349687704)*r22))+((x2638*x2640))+(((-0.433012903784321)*r21*x2623))+(((-1.0)*x2640*x2641))+(((-0.749999650312296)*x2631))+((sj5*x2630))+(((0.433012903784321)*x2639))+x2644+x2645+(((-1.0)*x2627*x2630)));
evalcond[1]=((((-0.433012903784321)*cj4*x2622))+(((-0.250000349687704)*r02))+(((0.433012903784321)*x2625))+(((0.433012903784321)*x2622))+(((-0.749999650312296)*x2634))+(((-0.433012903784321)*r01*x2623))+((x2635*x2640))+(((-1.0)*x2647))+(((-1.0)*x2636*x2640))+x2643);
evalcond[2]=((((0.00925751294893567)*r20*x2627))+(((0.00925751294893567)*r21*x2623))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2639))+(((0.0648043305514941)*x2632))+(((-1.0)*x2637*x2638))+(((-1.0)*pz))+(((-0.27144)*x2644))+(((-0.27144)*x2645))+(((0.0160344678271334)*x2631))+((x2637*x2641)));
evalcond[3]=((((0.41)*sj1))+(((-1.0)*x2633))+(((-1.0)*px))+(((-0.27144)*x2643))+((cj4*x2633))+(((0.27144)*x2646))+(((-1.0)*x2635*x2637))+(((0.00925751294893567)*r01*x2623))+(((0.00925751294893567)*cj4*x2622))+((x2636*x2637))+(((0.0648043305514941)*x2625))+(((0.0648043305514941)*x2622)));
evalcond[4]=((((0.250000349687704)*x2623*x2626))+((r20*x2627*x2642))+((x2621*x2639))+((x2621*x2632))+(((-1.0)*sj5*x2626*x2629))+((x2620*x2631))+((cj3*r22*x2640))+((x2627*x2628))+(((-1.0)*r20*x2623*x2624))+((cj3*x2629*x2632))+(((-1.0)*r22*x2620))+((sj3*x2629*x2641))+(((-1.0)*x2647))+((cj5*x2628*x2629))+x2643);
evalcond[5]=(((x2620*x2634))+(((-1.0)*r00*x2623*x2624))+((cj3*x2625*x2629))+((r01*x2623*x2642))+(((-1.0)*sj3*x2629*x2635))+((cj4*x2622*x2642))+((x2621*x2622))+((x2621*x2625))+(((-1.0)*r02*x2620))+((cj3*r01*x2627))+((sj3*x2629*x2636))+(((-1.0)*x2644))+(((-1.0)*x2645))+((cj3*r02*x2640))+((cj3*x2622*x2629)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2648=((0.250000349687704)*r12);
IkReal x2649=((0.749999650312296)*cj4);
IkReal x2650=((0.433012903784321)*sj5);
IkReal x2651=(cj1*r10);
IkReal x2652=(cj1*r22);
IkReal x2653=(cj1*r20);
IkReal x2654=((0.866025201892125)*sj4);
IkReal x2655=(r20*sj1);
IkReal x2656=(r22*sj1);
IkReal x2657=(r10*sj1);
IkReal x2658=(r11*sj1);
IkReal x2659=((0.433012903784321)*cj5);
IkReal x2660=(r21*sj1);
IkReal x2661=(cj1*r21);
IkReal x2662=(cj1*r11);
IkReal x2663=(cj5*sj1*x2654);
IkReal x2664=(cj4*r21*x2659);
if( IKabs((((cj1*r12*x2649))+((x2649*x2656))+(((-1.0)*x2650*x2651))+(((-1.0)*x2650*x2655))+((cj1*x2648))+(((0.250000349687704)*x2656))+(((-1.0)*sj5*x2654*x2660))+(((-1.0)*sj5*x2654*x2662))+((cj4*x2650*x2655))+((cj4*x2650*x2651))+((cj5*x2651*x2654))+((cj4*x2659*x2662))+((cj4*x2659*x2660))+(((-1.0)*x2659*x2660))+(((-1.0)*x2659*x2662))+((cj5*x2654*x2655)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2649*x2652))+((x2658*x2659))+(((-1.0)*x2650*x2653))+((sj5*x2654*x2658))+(((-1.0)*cj5*x2654*x2657))+(((0.250000349687704)*x2652))+(((-1.0)*sj5*x2654*x2661))+(((-1.0)*cj4*x2658*x2659))+((cj4*x2650*x2653))+((cj5*x2653*x2654))+((cj4*x2659*x2661))+(((-1.0)*cj4*x2650*x2657))+(((-1.0)*x2659*x2661))+((x2650*x2657))+(((-1.0)*sj1*x2648))+(((-1.0)*r12*sj1*x2649)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*r12*x2649))+((x2649*x2656))+(((-1.0)*x2650*x2651))+(((-1.0)*x2650*x2655))+((cj1*x2648))+(((0.250000349687704)*x2656))+(((-1.0)*sj5*x2654*x2660))+(((-1.0)*sj5*x2654*x2662))+((cj4*x2650*x2655))+((cj4*x2650*x2651))+((cj5*x2651*x2654))+((cj4*x2659*x2662))+((cj4*x2659*x2660))+(((-1.0)*x2659*x2660))+(((-1.0)*x2659*x2662))+((cj5*x2654*x2655))))+IKsqr((((x2649*x2652))+((x2658*x2659))+(((-1.0)*x2650*x2653))+((sj5*x2654*x2658))+(((-1.0)*cj5*x2654*x2657))+(((0.250000349687704)*x2652))+(((-1.0)*sj5*x2654*x2661))+(((-1.0)*cj4*x2658*x2659))+((cj4*x2650*x2653))+((cj5*x2653*x2654))+((cj4*x2659*x2661))+(((-1.0)*cj4*x2650*x2657))+(((-1.0)*x2659*x2661))+((x2650*x2657))+(((-1.0)*sj1*x2648))+(((-1.0)*r12*sj1*x2649))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*r12*x2649))+((x2649*x2656))+(((-1.0)*x2650*x2651))+(((-1.0)*x2650*x2655))+((cj1*x2648))+(((0.250000349687704)*x2656))+(((-1.0)*sj5*x2654*x2660))+(((-1.0)*sj5*x2654*x2662))+((cj4*x2650*x2655))+((cj4*x2650*x2651))+((cj5*x2651*x2654))+((cj4*x2659*x2662))+((cj4*x2659*x2660))+(((-1.0)*x2659*x2660))+(((-1.0)*x2659*x2662))+((cj5*x2654*x2655))), (((x2649*x2652))+((x2658*x2659))+(((-1.0)*x2650*x2653))+((sj5*x2654*x2658))+(((-1.0)*cj5*x2654*x2657))+(((0.250000349687704)*x2652))+(((-1.0)*sj5*x2654*x2661))+(((-1.0)*cj4*x2658*x2659))+((cj4*x2650*x2653))+((cj5*x2653*x2654))+((cj4*x2659*x2661))+(((-1.0)*cj4*x2650*x2657))+(((-1.0)*x2659*x2661))+((x2650*x2657))+(((-1.0)*sj1*x2648))+(((-1.0)*r12*sj1*x2649))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2665=IKsin(j2);
IkReal x2666=IKcos(j2);
IkReal x2667=(cj5*r11);
IkReal x2668=((0.433012903784321)*cj4);
IkReal x2669=(r21*sj5);
IkReal x2670=((0.500000349687582)*sj4);
IkReal x2671=((0.749999650312296)*sj3);
IkReal x2672=(cj3*cj4);
IkReal x2673=(cj5*r10);
IkReal x2674=((0.0185150129489311)*sj4);
IkReal x2675=(r20*sj5);
IkReal x2676=(cj4*r22);
IkReal x2677=(r10*sj5);
IkReal x2678=(r22*sj3);
IkReal x2679=(r11*sj5);
IkReal x2680=((0.00925751294893567)*cj4);
IkReal x2681=(cj5*r21);
IkReal x2682=(r12*sj3);
IkReal x2683=(cj4*r12);
IkReal x2684=(cj5*r20);
IkReal x2685=((0.866025201892125)*sj4);
IkReal x2686=(cj1*x2666);
IkReal x2687=(sj1*x2665);
IkReal x2688=(cj1*x2665);
IkReal x2689=((0.250000349687704)*cj4*sj3);
IkReal x2690=(sj1*x2666);
IkReal x2691=(cj3*x2685);
IkReal x2692=(x2686+x2687);
evalcond[0]=((((0.433012903784321)*x2681))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x2676))+(((-1.0)*x2684*x2685))+(((-1.0)*x2668*x2681))+(((0.433012903784321)*x2675))+((x2669*x2685))+(((-1.0)*x2668*x2675))+x2692);
evalcond[1]=((((-0.250000349687704)*r12))+(((0.433012903784321)*x2667))+(((0.433012903784321)*x2677))+(((-1.0)*x2673*x2685))+((x2679*x2685))+(((-0.749999650312296)*x2683))+(((-1.0)*x2667*x2668))+(((-1.0)*x2690))+(((-1.0)*x2668*x2677))+x2688);
evalcond[2]=((((0.0648043305514941)*x2675))+((x2674*x2684))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x2675*x2680))+(((0.0160344678271334)*x2676))+(((-0.27144)*x2686))+(((-0.27144)*x2687))+(((-1.0)*x2669*x2674))+(((0.0648043305514941)*x2681))+((x2680*x2681)));
evalcond[3]=((((0.0648043305514941)*x2677))+((x2673*x2674))+(((0.0648043305514941)*x2667))+(((-0.0160344678271334)*r12))+(((-1.0)*x2674*x2679))+(((-0.41)*sj1))+(((0.27144)*x2690))+(((-1.0)*py))+(((-0.27144)*x2688))+(((0.0160344678271334)*x2683))+((x2677*x2680))+((x2667*x2680)));
evalcond[4]=(((r12*x2691))+((x2672*x2679))+((cj3*x2667*x2670))+((sj3*x2670*x2673))+(((-1.0)*sj3*x2670*x2679))+((x2668*x2682))+((x2667*x2671))+((cj3*x2670*x2677))+((x2671*x2677))+((x2677*x2689))+((x2667*x2689))+(((-1.0)*x2672*x2673))+(((-0.433012903784321)*x2682))+x2692);
evalcond[5]=(((r22*x2691))+(((-1.0)*sj3*x2669*x2670))+((sj3*x2670*x2684))+((x2668*x2678))+(((-1.0)*x2672*x2684))+(((-0.433012903784321)*x2678))+((x2671*x2681))+((cj3*x2670*x2681))+((cj3*x2670*x2675))+((x2669*x2672))+((x2675*x2689))+((x2671*x2675))+(((-1.0)*x2688))+((x2681*x2689))+x2690);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2693=((0.250000349687704)*r12);
IkReal x2694=((0.749999650312296)*cj4);
IkReal x2695=(cj1*r22);
IkReal x2696=((0.866025201892125)*sj4);
IkReal x2697=(cj1*r20);
IkReal x2698=(sj1*sj5);
IkReal x2699=((0.433012903784321)*r20);
IkReal x2700=((0.433012903784321)*sj5);
IkReal x2701=(cj1*r10);
IkReal x2702=(r22*sj1);
IkReal x2703=((0.433012903784321)*r10);
IkReal x2704=((0.433012903784321)*cj5);
IkReal x2705=(cj1*r21);
IkReal x2706=(cj1*r11);
IkReal x2707=(r11*sj1);
IkReal x2708=(cj1*cj4*x2700);
IkReal x2709=(cj5*sj1*x2696);
IkReal x2710=(cj4*r21*x2704);
if( IKabs((((x2694*x2702))+(((-1.0)*cj1*x2693))+(((-1.0)*r21*sj1*x2704))+((x2704*x2706))+(((-1.0)*r21*x2696*x2698))+((cj4*x2698*x2699))+(((-1.0)*cj4*x2704*x2706))+((sj1*x2710))+(((-1.0)*cj4*x2700*x2701))+(((-1.0)*cj5*x2696*x2701))+((r20*x2709))+(((-1.0)*x2698*x2699))+((x2700*x2701))+((sj5*x2696*x2706))+(((-1.0)*cj1*r12*x2694))+(((0.250000349687704)*x2702)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*x2696*x2697))+((r12*sj1*x2694))+(((-1.0)*x2697*x2700))+((cj4*x2697*x2700))+((cj4*x2698*x2703))+((r10*x2709))+(((-1.0)*x2704*x2705))+(((-1.0)*x2704*x2707))+((sj1*x2693))+(((-1.0)*sj5*x2696*x2705))+((cj4*x2704*x2707))+((cj4*x2704*x2705))+(((0.250000349687704)*x2695))+((x2694*x2695))+(((-1.0)*r11*x2696*x2698))+(((-1.0)*x2698*x2703)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2694*x2702))+(((-1.0)*cj1*x2693))+(((-1.0)*r21*sj1*x2704))+((x2704*x2706))+(((-1.0)*r21*x2696*x2698))+((cj4*x2698*x2699))+(((-1.0)*cj4*x2704*x2706))+((sj1*x2710))+(((-1.0)*cj4*x2700*x2701))+(((-1.0)*cj5*x2696*x2701))+((r20*x2709))+(((-1.0)*x2698*x2699))+((x2700*x2701))+((sj5*x2696*x2706))+(((-1.0)*cj1*r12*x2694))+(((0.250000349687704)*x2702))))+IKsqr((((cj5*x2696*x2697))+((r12*sj1*x2694))+(((-1.0)*x2697*x2700))+((cj4*x2697*x2700))+((cj4*x2698*x2703))+((r10*x2709))+(((-1.0)*x2704*x2705))+(((-1.0)*x2704*x2707))+((sj1*x2693))+(((-1.0)*sj5*x2696*x2705))+((cj4*x2704*x2707))+((cj4*x2704*x2705))+(((0.250000349687704)*x2695))+((x2694*x2695))+(((-1.0)*r11*x2696*x2698))+(((-1.0)*x2698*x2703))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2694*x2702))+(((-1.0)*cj1*x2693))+(((-1.0)*r21*sj1*x2704))+((x2704*x2706))+(((-1.0)*r21*x2696*x2698))+((cj4*x2698*x2699))+(((-1.0)*cj4*x2704*x2706))+((sj1*x2710))+(((-1.0)*cj4*x2700*x2701))+(((-1.0)*cj5*x2696*x2701))+((r20*x2709))+(((-1.0)*x2698*x2699))+((x2700*x2701))+((sj5*x2696*x2706))+(((-1.0)*cj1*r12*x2694))+(((0.250000349687704)*x2702))), (((cj5*x2696*x2697))+((r12*sj1*x2694))+(((-1.0)*x2697*x2700))+((cj4*x2697*x2700))+((cj4*x2698*x2703))+((r10*x2709))+(((-1.0)*x2704*x2705))+(((-1.0)*x2704*x2707))+((sj1*x2693))+(((-1.0)*sj5*x2696*x2705))+((cj4*x2704*x2707))+((cj4*x2704*x2705))+(((0.250000349687704)*x2695))+((x2694*x2695))+(((-1.0)*r11*x2696*x2698))+(((-1.0)*x2698*x2703))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2711=IKcos(j2);
IkReal x2712=IKsin(j2);
IkReal x2713=(cj5*r11);
IkReal x2714=((0.433012903784321)*cj4);
IkReal x2715=(r21*sj5);
IkReal x2716=((0.500000349687582)*sj4);
IkReal x2717=((0.749999650312296)*sj3);
IkReal x2718=(cj3*cj4);
IkReal x2719=(cj5*r10);
IkReal x2720=((0.0185150129489311)*sj4);
IkReal x2721=(r20*sj5);
IkReal x2722=(cj4*r22);
IkReal x2723=(r10*sj5);
IkReal x2724=(r12*sj3);
IkReal x2725=(r11*sj5);
IkReal x2726=(r22*sj3);
IkReal x2727=((0.27144)*sj1);
IkReal x2728=((0.00925751294893567)*cj4);
IkReal x2729=(cj5*r20);
IkReal x2730=(cj5*r21);
IkReal x2731=(cj4*r12);
IkReal x2732=((0.866025201892125)*sj4);
IkReal x2733=(sj1*x2711);
IkReal x2734=(cj1*x2711);
IkReal x2735=(cj1*x2712);
IkReal x2736=((0.250000349687704)*cj4*sj3);
IkReal x2737=(cj3*x2732);
IkReal x2738=(sj1*x2712);
IkReal x2739=((1.0)*x2735);
evalcond[0]=(x2734+x2738+(((0.433012903784321)*x2721))+(((-0.250000349687704)*r22))+(((0.433012903784321)*x2730))+((x2715*x2732))+(((-0.749999650312296)*x2722))+(((-1.0)*x2714*x2721))+(((-1.0)*x2714*x2730))+(((-1.0)*x2729*x2732)));
evalcond[1]=(x2733+(((0.433012903784321)*x2723))+(((-0.250000349687704)*r12))+(((-1.0)*x2719*x2732))+(((-1.0)*x2713*x2714))+((x2725*x2732))+(((-0.749999650312296)*x2731))+(((-1.0)*x2714*x2723))+(((0.433012903784321)*x2713))+(((-1.0)*x2739)));
evalcond[2]=((((0.0160344678271334)*x2722))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2721))+((x2721*x2728))+(((-1.0)*pz))+(((-1.0)*x2715*x2720))+(((0.0648043305514941)*x2730))+((x2728*x2730))+((x2720*x2729))+(((-0.27144)*x2734))+(((-1.0)*x2712*x2727)));
evalcond[3]=(((x2713*x2728))+(((0.0648043305514941)*x2713))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0648043305514941)*x2723))+(((-1.0)*x2720*x2725))+(((0.0160344678271334)*x2731))+(((-1.0)*py))+(((0.27144)*x2735))+((x2719*x2720))+(((-1.0)*x2711*x2727))+((x2723*x2728)));
evalcond[4]=(x2733+((x2717*x2730))+((sj3*x2716*x2729))+((x2717*x2721))+((x2714*x2726))+(((-0.433012903784321)*x2726))+((r22*x2737))+((x2721*x2736))+((cj3*x2716*x2721))+((x2730*x2736))+((cj3*x2716*x2730))+(((-1.0)*sj3*x2715*x2716))+((x2715*x2718))+(((-1.0)*x2718*x2729))+(((-1.0)*x2739)));
evalcond[5]=((((-1.0)*sj3*x2716*x2725))+((cj3*x2713*x2716))+(((-1.0)*x2718*x2719))+((x2717*x2723))+((x2714*x2724))+(((-0.433012903784321)*x2724))+(((-1.0)*x2734))+(((-1.0)*x2738))+((cj3*x2716*x2723))+((sj3*x2716*x2719))+((x2723*x2736))+((x2718*x2725))+((r12*x2737))+((x2713*x2717))+((x2713*x2736)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2740=(cj4*sj1);
IkReal x2741=((0.433012903784321)*sj0);
IkReal x2742=(cj5*r21);
IkReal x2743=(cj1*r12);
IkReal x2744=(r20*sj5);
IkReal x2745=(r20*sj0);
IkReal x2746=(r10*sj1);
IkReal x2747=((0.749999650312296)*cj4);
IkReal x2748=(r21*sj0);
IkReal x2749=((0.433012903784321)*sj5);
IkReal x2750=(cj1*cj4);
IkReal x2751=(r22*sj0);
IkReal x2752=((0.250000349687704)*x2751);
IkReal x2753=((0.866025201892125)*cj5*sj4);
IkReal x2754=((0.433012903784321)*cj5*r11);
IkReal x2755=(cj1*r10*x2749);
IkReal x2756=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2757=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x2758 = IKatan2WithCheck(IkReal((((cj1*r10*x2753))+(((-1.0)*sj1*x2741*x2744))+(((-1.0)*sj1*x2741*x2742))+((x2743*x2747))+((x2750*x2754))+((r10*x2749*x2750))+((sj1*x2752))+(((-1.0)*r11*x2757))+(((-1.0)*x2748*x2756))+(((-1.0)*cj1*x2754))+(((0.250000349687704)*x2743))+((sj1*x2745*x2753))+((x2740*x2741*x2742))+((x2740*x2741*x2744))+(((0.749999650312296)*x2740*x2751))+(((-1.0)*x2755)))),IkReal((((r11*x2756))+(((-0.250000349687704)*r12*sj1))+((x2741*x2742*x2750))+((x2746*x2749))+(((-1.0)*cj1*x2741*x2744))+(((-1.0)*cj1*x2741*x2742))+(((-1.0)*r10*x2740*x2749))+((cj1*x2745*x2753))+(((-0.749999650312296)*r12*x2740))+(((-1.0)*x2740*x2754))+((sj1*x2754))+(((-1.0)*x2748*x2757))+((cj1*x2747*x2751))+((cj1*x2752))+(((-1.0)*x2746*x2753))+((x2741*x2744*x2750)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2758.valid){
continue;
}
CheckValue<IkReal> x2759=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2759.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x2758.value)+(((1.5707963267949)*(x2759.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2760=IKsin(j2);
IkReal x2761=IKcos(j2);
IkReal x2762=(cj4*sj5);
IkReal x2763=(cj3*r21);
IkReal x2764=((0.433012903784321)*r20);
IkReal x2765=((0.749999650312296)*cj4);
IkReal x2766=(cj4*cj5);
IkReal x2767=((1.0)*cj3);
IkReal x2768=((0.433012903784321)*r01);
IkReal x2769=(sj4*sj5);
IkReal x2770=((0.749999650312296)*sj3);
IkReal x2771=(r10*sj5);
IkReal x2772=((0.500000349687582)*sj3);
IkReal x2773=(cj0*sj1);
IkReal x2774=((0.500000349687582)*cj3);
IkReal x2775=((0.0160344678271334)*r22);
IkReal x2776=(r20*sj3);
IkReal x2777=(r00*sj5);
IkReal x2778=(cj3*r11);
IkReal x2779=((0.0160344678271334)*r12);
IkReal x2780=((0.433012903784321)*r11);
IkReal x2781=(cj5*r11);
IkReal x2782=(r10*sj3);
IkReal x2783=(r00*sj3);
IkReal x2784=((0.433012903784321)*sj3);
IkReal x2785=(cj5*sj4);
IkReal x2786=(r20*sj5);
IkReal x2787=((0.433012903784321)*r21);
IkReal x2788=(sj0*sj1);
IkReal x2789=(cj3*r01);
IkReal x2790=(cj5*r21);
IkReal x2791=((0.0160344678271334)*r02);
IkReal x2792=(cj5*r01);
IkReal x2793=((0.250000349687704)*sj3);
IkReal x2794=(cj1*x2760);
IkReal x2795=((0.500000349687582)*x2785);
IkReal x2796=((0.27144)*x2761);
IkReal x2797=(cj4*x2784);
IkReal x2798=(sj1*x2760);
IkReal x2799=((0.866025201892125)*cj3*sj4);
IkReal x2800=(cj1*x2761);
IkReal x2801=((1.0)*x2761);
evalcond[0]=(x2798+(((-0.250000349687704)*r22))+(((0.866025201892125)*r21*x2769))+(((-1.0)*x2762*x2764))+(((-0.866025201892125)*r20*x2785))+(((-1.0)*x2766*x2787))+x2800+((sj5*x2764))+(((-1.0)*r22*x2765))+((cj5*x2787)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj5*x2768))+(((-0.433012903784321)*r00*x2762))+(((0.433012903784321)*x2777))+(((0.866025201892125)*r01*x2769))+(((-1.0)*r02*x2765))+(((-1.0)*x2773*x2801))+(((-0.866025201892125)*r00*x2785))+((cj0*x2794))+(((-1.0)*x2766*x2768)));
evalcond[2]=((((0.866025201892125)*r11*x2769))+(((-0.866025201892125)*r10*x2785))+(((-0.250000349687704)*r12))+(((-1.0)*r12*x2765))+(((-1.0)*x2788*x2801))+(((-0.433012903784321)*r10*x2762))+(((0.433012903784321)*x2771))+((sj0*x2794))+(((-1.0)*x2766*x2780))+((cj5*x2780)));
evalcond[3]=((((0.00925751294893567)*r21*x2766))+((cj4*x2775))+(((0.41)*cj1))+(((0.0648043305514941)*x2790))+(((0.00925751294893567)*r20*x2762))+(((0.0648043305514941)*x2786))+(((-0.0185150129489311)*r21*x2769))+(((-1.0)*pz))+(((-1.0)*x2775))+(((-0.27144)*x2798))+(((0.0185150129489311)*r20*x2785))+(((-1.0)*cj1*x2796)));
evalcond[4]=((((-1.0)*x2791))+(((-0.27144)*cj0*x2794))+(((0.0185150129489311)*r00*x2785))+(((0.00925751294893567)*r01*x2766))+(((0.0648043305514941)*x2792))+(((-0.41)*x2773))+(((0.00925751294893567)*r00*x2762))+((x2773*x2796))+(((-1.0)*px))+(((-0.0185150129489311)*r01*x2769))+(((0.0648043305514941)*x2777))+(((0.0098)*sj0))+((cj4*x2791)));
evalcond[5]=((((0.00925751294893567)*r10*x2762))+(((0.0185150129489311)*r10*x2785))+((cj4*x2779))+(((0.0648043305514941)*x2781))+(((-0.27144)*sj0*x2794))+(((-1.0)*py))+(((-1.0)*x2779))+(((-0.41)*x2788))+(((-0.0185150129489311)*r11*x2769))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2771))+((x2788*x2796))+(((0.00925751294893567)*r11*x2766)));
evalcond[6]=(((sj1*x2761))+((r20*x2769*x2774))+(((-1.0)*r20*x2766*x2767))+((x2762*x2763))+((x2770*x2790))+(((-1.0)*r21*x2769*x2772))+(((0.250000349687704)*x2762*x2776))+((x2770*x2786))+((x2763*x2795))+(((-1.0)*x2794))+(((-1.0)*r22*x2784))+((r22*x2799))+((r22*x2797))+((r21*x2766*x2793))+((r20*x2772*x2785)));
evalcond[7]=(((x2770*x2777))+(((0.250000349687704)*x2762*x2783))+((r01*x2766*x2793))+(((-1.0)*r00*x2766*x2767))+((x2770*x2792))+((r02*x2799))+((r02*x2797))+((r01*x2774*x2785))+((r00*x2769*x2774))+(((-1.0)*r01*x2769*x2772))+((cj0*x2800))+((x2762*x2789))+((x2760*x2773))+(((-1.0)*r02*x2784))+((r00*x2772*x2785)));
evalcond[8]=((((-1.0)*r12*x2784))+((sj4*x2774*x2781))+((x2770*x2771))+(((0.250000349687704)*x2762*x2782))+((r10*x2772*x2785))+(((-1.0)*r11*x2769*x2772))+((r11*x2766*x2793))+(((-1.0)*r10*x2766*x2767))+((x2762*x2778))+((x2760*x2788))+((r10*x2769*x2774))+((r12*x2797))+((r12*x2799))+((x2770*x2781))+((sj0*x2800)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2802=(cj0*r20);
IkReal x2803=(cj1*r00);
IkReal x2804=(r02*sj1);
IkReal x2805=(r00*sj1);
IkReal x2806=((0.433012903784321)*sj5);
IkReal x2807=(cj4*sj1);
IkReal x2808=((0.749999650312296)*cj4);
IkReal x2809=(cj0*r22);
IkReal x2810=(r01*sj1);
IkReal x2811=(cj1*cj4);
IkReal x2812=(cj0*r21);
IkReal x2813=(cj1*r02);
IkReal x2814=((0.866025201892125)*cj5*sj4);
IkReal x2815=((0.866025201892125)*sj4*sj5);
IkReal x2816=((0.433012903784321)*cj5*r01);
IkReal x2817=((0.433012903784321)*cj5*x2812);
CheckValue<IkReal> x2818=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2818.valid){
continue;
}
CheckValue<IkReal> x2819 = IKatan2WithCheck(IkReal(((((-1.0)*cj1*r01*x2815))+(((0.250000349687704)*sj1*x2809))+(((-1.0)*sj1*x2812*x2815))+(((0.250000349687704)*x2813))+(((-1.0)*cj1*x2816))+(((-1.0)*x2803*x2806))+((x2803*x2814))+((x2802*x2806*x2807))+(((-1.0)*sj1*x2802*x2806))+((cj4*x2803*x2806))+((sj1*x2802*x2814))+(((-1.0)*sj1*x2817))+(((0.749999650312296)*x2807*x2809))+((x2808*x2813))+((x2811*x2816))+((x2807*x2817)))),IkReal((((x2810*x2815))+(((-1.0)*cj4*x2805*x2806))+(((0.433012903784321)*cj5*x2810))+(((-1.0)*cj1*x2817))+((x2805*x2806))+(((-1.0)*cj1*x2812*x2815))+((cj1*x2802*x2814))+(((-1.0)*cj1*x2802*x2806))+(((-1.0)*x2805*x2814))+(((-1.0)*x2807*x2816))+(((-1.0)*x2804*x2808))+((x2802*x2806*x2811))+(((-0.250000349687704)*x2804))+((cj1*x2808*x2809))+((x2811*x2817))+(((0.250000349687704)*cj1*x2809)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2819.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2818.value)))+(x2819.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2820=IKsin(j2);
IkReal x2821=IKcos(j2);
IkReal x2822=(cj4*sj5);
IkReal x2823=(cj3*r21);
IkReal x2824=((0.433012903784321)*r20);
IkReal x2825=((0.749999650312296)*cj4);
IkReal x2826=(cj4*cj5);
IkReal x2827=((1.0)*cj3);
IkReal x2828=((0.433012903784321)*r01);
IkReal x2829=(sj4*sj5);
IkReal x2830=((0.749999650312296)*sj3);
IkReal x2831=(r10*sj5);
IkReal x2832=((0.500000349687582)*sj3);
IkReal x2833=(cj0*sj1);
IkReal x2834=((0.500000349687582)*cj3);
IkReal x2835=((0.0160344678271334)*r22);
IkReal x2836=(r20*sj3);
IkReal x2837=(r00*sj5);
IkReal x2838=(cj3*r11);
IkReal x2839=((0.0160344678271334)*r12);
IkReal x2840=((0.433012903784321)*r11);
IkReal x2841=(cj5*r11);
IkReal x2842=(r10*sj3);
IkReal x2843=(r00*sj3);
IkReal x2844=((0.433012903784321)*sj3);
IkReal x2845=(cj5*sj4);
IkReal x2846=(r20*sj5);
IkReal x2847=((0.433012903784321)*r21);
IkReal x2848=(sj0*sj1);
IkReal x2849=(cj3*r01);
IkReal x2850=(cj5*r21);
IkReal x2851=((0.0160344678271334)*r02);
IkReal x2852=(cj5*r01);
IkReal x2853=((0.250000349687704)*sj3);
IkReal x2854=(cj1*x2820);
IkReal x2855=((0.500000349687582)*x2845);
IkReal x2856=((0.27144)*x2821);
IkReal x2857=(cj4*x2844);
IkReal x2858=(sj1*x2820);
IkReal x2859=((0.866025201892125)*cj3*sj4);
IkReal x2860=(cj1*x2821);
IkReal x2861=((1.0)*x2821);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.866025201892125)*r20*x2845))+(((-1.0)*x2822*x2824))+((sj5*x2824))+((cj5*x2847))+(((-1.0)*r22*x2825))+(((0.866025201892125)*r21*x2829))+x2858+x2860+(((-1.0)*x2826*x2847)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x2833*x2861))+(((0.433012903784321)*x2837))+(((-1.0)*x2826*x2828))+(((-1.0)*r02*x2825))+((cj0*x2854))+((cj5*x2828))+(((-0.866025201892125)*r00*x2845))+(((-0.433012903784321)*r00*x2822))+(((0.866025201892125)*r01*x2829)));
evalcond[2]=((((-1.0)*x2848*x2861))+(((-1.0)*r12*x2825))+(((-0.866025201892125)*r10*x2845))+(((-0.250000349687704)*r12))+((sj0*x2854))+(((0.866025201892125)*r11*x2829))+(((-0.433012903784321)*r10*x2822))+((cj5*x2840))+(((0.433012903784321)*x2831))+(((-1.0)*x2826*x2840)));
evalcond[3]=((((0.0648043305514941)*x2850))+(((-1.0)*cj1*x2856))+(((-1.0)*x2835))+(((0.0185150129489311)*r20*x2845))+((cj4*x2835))+(((-0.27144)*x2858))+(((0.41)*cj1))+(((-0.0185150129489311)*r21*x2829))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x2826))+(((0.00925751294893567)*r20*x2822))+(((0.0648043305514941)*x2846)));
evalcond[4]=((((0.0648043305514941)*x2852))+(((-0.27144)*cj0*x2854))+(((0.00925751294893567)*r01*x2826))+(((0.00925751294893567)*r00*x2822))+((cj4*x2851))+(((0.0185150129489311)*r00*x2845))+(((-1.0)*px))+(((-0.0185150129489311)*r01*x2829))+((x2833*x2856))+(((-0.41)*x2833))+(((0.0648043305514941)*x2837))+(((0.0098)*sj0))+(((-1.0)*x2851)));
evalcond[5]=((((-0.41)*x2848))+(((-1.0)*x2839))+((cj4*x2839))+(((-0.27144)*sj0*x2854))+((x2848*x2856))+(((0.00925751294893567)*r11*x2826))+(((0.00925751294893567)*r10*x2822))+(((-1.0)*py))+(((0.0185150129489311)*r10*x2845))+(((0.0648043305514941)*x2831))+(((-0.0185150129489311)*r11*x2829))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2841)));
evalcond[6]=((((0.250000349687704)*x2822*x2836))+((r21*x2826*x2853))+((x2822*x2823))+(((-1.0)*r21*x2829*x2832))+((x2823*x2855))+(((-1.0)*r20*x2826*x2827))+((sj1*x2821))+((r22*x2859))+((r22*x2857))+((r20*x2829*x2834))+((x2830*x2850))+((x2830*x2846))+(((-1.0)*r22*x2844))+(((-1.0)*x2854))+((r20*x2832*x2845)));
evalcond[7]=(((r01*x2826*x2853))+((x2830*x2837))+((x2822*x2849))+(((-1.0)*r00*x2826*x2827))+((x2820*x2833))+(((-1.0)*r02*x2844))+((r01*x2834*x2845))+((x2830*x2852))+((r00*x2832*x2845))+(((-1.0)*r01*x2829*x2832))+((cj0*x2860))+((r00*x2829*x2834))+((r02*x2857))+((r02*x2859))+(((0.250000349687704)*x2822*x2843)));
evalcond[8]=((((-1.0)*r10*x2826*x2827))+(((-1.0)*r12*x2844))+((x2822*x2838))+((r12*x2857))+((r12*x2859))+(((-1.0)*r11*x2829*x2832))+((x2830*x2831))+((sj4*x2834*x2841))+((sj0*x2860))+((r10*x2832*x2845))+((x2820*x2848))+((x2830*x2841))+((r11*x2826*x2853))+((r10*x2829*x2834))+(((0.250000349687704)*x2822*x2842)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2862=((0.433012903784321)*cj5);
IkReal x2863=(sj4*sj5);
IkReal x2864=((0.500000349687582)*sj0);
IkReal x2865=(r22*sj0);
IkReal x2866=((0.866025201892125)*sj4);
IkReal x2867=((0.433012903784321)*cj4);
IkReal x2868=((0.250000349687704)*cj4);
IkReal x2869=(cj5*sj4);
IkReal x2870=(cj4*sj0);
IkReal x2871=(cj5*r21*sj0);
IkReal x2872=(r20*sj0*sj5);
CheckValue<IkReal> x2873=IKPowWithIntegerCheck(IKsign((((r11*(((((-1.0)*cj4*x2862))+(((0.866025201892125)*x2863))+x2862))))+((r10*(((((-1.0)*cj5*x2866))+(((-1.0)*sj5*x2867))+(((0.433012903784321)*sj5))))))+((r12*(((-0.250000349687704)+(((-0.749999650312296)*cj4)))))))),-1);
if(!x2873.valid){
continue;
}
CheckValue<IkReal> x2874 = IKatan2WithCheck(IkReal(((((0.433012903784321)*x2865))+(((-1.0)*x2865*x2867))+(((-1.0)*x2868*x2872))+(((-1.0)*x2868*x2871))+((r21*x2863*x2864))+(((-1.0)*r20*x2864*x2869))+(((-0.749999650312296)*x2872))+(((-0.749999650312296)*x2871)))),IkReal(((((-1.0)*r21*sj5*x2870))+(((-1.0)*r21*x2864*x2869))+(((-1.0)*x2865*x2866))+(((-1.0)*r20*x2863*x2864))+((cj5*r20*x2870)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2874.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2873.value)))+(x2874.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2875=IKsin(j3);
IkReal x2876=IKcos(j3);
IkReal x2877=(r11*sj5);
IkReal x2878=(cj5*r20);
IkReal x2879=(cj4*cj5);
IkReal x2880=(r00*sj5);
IkReal x2881=(cj5*r01);
IkReal x2882=(r10*sj5);
IkReal x2883=(r21*sj5);
IkReal x2884=(r20*sj5);
IkReal x2885=(cj5*r21);
IkReal x2886=(cj5*r11);
IkReal x2887=(r01*sj5);
IkReal x2888=((1.0)*x2875);
IkReal x2889=((0.250000349687704)*x2876);
IkReal x2890=((0.749999650312296)*x2876);
IkReal x2891=(cj4*x2875);
IkReal x2892=((0.500000349687582)*sj4*x2876);
IkReal x2893=((0.433012903784321)*r12*x2876);
IkReal x2894=((0.500000349687582)*sj4*x2875);
IkReal x2895=((0.433012903784321)*r02*x2876);
IkReal x2896=((0.866025201892125)*sj4*x2875);
IkReal x2897=((0.433012903784321)*r22*x2876);
evalcond[0]=(((x2884*x2894))+((r22*x2896))+(((-1.0)*x2878*x2892))+(((-1.0)*x2885*x2890))+(((-1.0)*x2884*x2890))+(((-1.0)*cj4*x2884*x2889))+x2897+(((-1.0)*cj4*x2897))+(((-1.0)*cj4*x2878*x2888))+((x2883*x2891))+((x2883*x2892))+(((-1.0)*r21*x2879*x2889))+((x2885*x2894)));
evalcond[1]=(cj0+(((-1.0)*x2882*x2890))+(((-1.0)*r10*x2879*x2888))+((r12*x2896))+((x2886*x2894))+(((-1.0)*cj5*r10*x2892))+(((-1.0)*x2886*x2890))+(((-1.0)*cj4*x2882*x2889))+(((-1.0)*r11*x2879*x2889))+x2893+(((-1.0)*cj4*x2893))+((x2877*x2891))+((x2877*x2892))+((x2882*x2894)));
evalcond[2]=((((-1.0)*r01*x2879*x2889))+(((-1.0)*sj0))+((x2880*x2894))+(((-1.0)*r00*x2879*x2888))+((x2887*x2891))+((x2887*x2892))+((r02*x2896))+((x2881*x2894))+x2895+(((-1.0)*cj4*x2895))+(((-1.0)*x2881*x2890))+(((-1.0)*cj5*r00*x2892))+(((-1.0)*cj4*x2880*x2889))+(((-1.0)*x2880*x2890)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2898=((0.528192360616262)*sj4);
IkReal x2899=(r20*sj5);
IkReal x2900=((0.26409636501044)*cj4);
IkReal x2901=((0.444735007694415)*cj5);
IkReal x2902=((0.457427895740576)*cj4);
IkReal x2903=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+((r11*sj5*x2898))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x2903))+(((-1.0)*x2900*x2903))+(((-1.0)*cj5*r11*x2900))+(((-1.0)*cj5*r10*x2898))+(((-1.0)*r12*x2902))+((r11*x2901)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x2901))+((cj5*r20*x2898))+((x2899*x2900))+(((0.204620884747229)*r22))+((r22*x2902))+(((-0.444735007694415)*x2899))+(((-1.0)*r21*sj5*x2898))+(((2.4390243902439)*pz))+((cj5*r21*x2900)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+((r11*sj5*x2898))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x2903))+(((-1.0)*x2900*x2903))+(((-1.0)*cj5*r11*x2900))+(((-1.0)*cj5*r10*x2898))+(((-1.0)*r12*x2902))+((r11*x2901))))+IKsqr(((((-1.0)*r21*x2901))+((cj5*r20*x2898))+((x2899*x2900))+(((0.204620884747229)*r22))+((r22*x2902))+(((-0.444735007694415)*x2899))+(((-1.0)*r21*sj5*x2898))+(((2.4390243902439)*pz))+((cj5*r21*x2900))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+((r11*sj5*x2898))+(((-0.204620884747229)*r12))+(((0.444735007694415)*x2903))+(((-1.0)*x2900*x2903))+(((-1.0)*cj5*r11*x2900))+(((-1.0)*cj5*r10*x2898))+(((-1.0)*r12*x2902))+((r11*x2901))), ((((-1.0)*r21*x2901))+((cj5*r20*x2898))+((x2899*x2900))+(((0.204620884747229)*r22))+((r22*x2902))+(((-0.444735007694415)*x2899))+(((-1.0)*r21*sj5*x2898))+(((2.4390243902439)*pz))+((cj5*r21*x2900))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2904=((1.0)*py);
IkReal x2905=(cj5*r11);
IkReal x2906=(cj5*sj3);
IkReal x2907=(r20*sj5);
IkReal x2908=((0.135720094919197)*sj4);
IkReal x2909=(r21*sj5);
IkReal x2910=((0.0185150129489311)*sj4);
IkReal x2911=((0.135720094919197)*sj3);
IkReal x2912=((0.00925751294893567)*cj4);
IkReal x2913=(cj4*cj5);
IkReal x2914=(cj3*r10);
IkReal x2915=((0.0678600949192303)*cj4);
IkReal x2916=(r10*sj5);
IkReal x2917=((0.10827950965428)*cj4);
IkReal x2918=(cj4*r22);
IkReal x2919=((0.0160344678271334)*r12);
IkReal x2920=((0.20357990508077)*sj3);
IkReal x2921=(cj5*r20);
IkReal x2922=((0.216558867852667)*sj4);
IkReal x2923=((0.117537022603216)*sj3);
IkReal x2924=((0.27144)*cj3);
IkReal x2925=(cj5*r21);
IkReal x2926=(cj4*r12);
IkReal x2927=((0.41)*(IKsin(j1)));
IkReal x2928=((0.41)*(IKcos(j1)));
IkReal x2929=(cj5*r10*sj4);
IkReal x2930=(r11*sj4*sj5);
IkReal x2931=((0.235073880801598)*cj3*sj4);
IkReal x2932=(x2904+x2927);
evalcond[0]=(((x2921*x2922))+(((-0.18234135315471)*x2907))+((x2907*x2917))+(((-1.0)*x2928))+(((-1.0)*x2909*x2922))+pz+(((0.10827950965428)*r21*x2913))+(((0.187545437253636)*x2918))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x2925)));
evalcond[1]=((((-0.187545437253636)*x2926))+(((0.18234135315471)*x2905))+(((-1.0)*x2932))+(((0.18234135315471)*x2916))+(((-0.0838945627463637)*r12))+(((-1.0)*x2905*x2917))+((r11*sj5*x2922))+(((-1.0)*cj5*r10*x2922))+(((-1.0)*x2916*x2917)));
evalcond[2]=((((-0.20357990508077)*r21*x2906))+(((0.0648043305514941)*x2916))+((r22*x2923))+(((-1.0)*r20*x2906*x2908))+(((-1.0)*cj3*x2907*x2908))+(((-1.0)*sj3*x2907*x2915))+((r20*x2913*x2924))+(((-1.0)*x2918*x2923))+(((-1.0)*x2932))+((sj3*x2908*x2909))+((x2905*x2912))+((x2912*x2916))+((cj4*x2919))+(((-1.0)*r11*sj5*x2910))+(((-1.0)*cj3*x2908*x2925))+(((-1.0)*x2907*x2920))+(((0.0648043305514941)*x2905))+(((-1.0)*r22*x2931))+(((-1.0)*cj4*x2909*x2924))+(((-1.0)*r21*x2906*x2915))+((cj5*r10*x2910))+(((-1.0)*x2919)));
evalcond[3]=(((x2912*x2925))+((x2916*x2920))+((x2910*x2921))+(((-1.0)*r11*sj3*sj5*x2908))+((cj4*r11*sj5*x2924))+((x2907*x2912))+((sj3*x2905*x2915))+((r10*x2906*x2908))+(((-0.0160344678271334)*r22))+((x2905*x2920))+(((-1.0)*pz))+(((-1.0)*r12*x2923))+(((0.0648043305514941)*x2925))+((cj3*x2905*x2908))+((r12*x2931))+(((-1.0)*x2909*x2910))+(((0.0648043305514941)*x2907))+(((0.0160344678271334)*x2918))+(((-0.27144)*x2913*x2914))+((sj3*x2915*x2916))+((x2923*x2926))+x2928+((sj5*x2908*x2914)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2933=((0.250000349687704)*r12);
IkReal x2934=((0.749999650312296)*cj4);
IkReal x2935=((0.433012903784321)*sj5);
IkReal x2936=(cj1*r10);
IkReal x2937=(cj1*r22);
IkReal x2938=(cj1*r20);
IkReal x2939=((0.866025201892125)*sj4);
IkReal x2940=(r20*sj1);
IkReal x2941=(r22*sj1);
IkReal x2942=(r10*sj1);
IkReal x2943=(r11*sj1);
IkReal x2944=((0.433012903784321)*cj5);
IkReal x2945=(r21*sj1);
IkReal x2946=(cj1*r21);
IkReal x2947=(cj1*r11);
IkReal x2948=(cj5*sj1*x2939);
IkReal x2949=(cj4*r21*x2944);
if( IKabs((((cj5*x2936*x2939))+(((-1.0)*x2935*x2940))+((cj5*x2939*x2940))+((cj4*x2935*x2940))+(((-1.0)*x2935*x2936))+((cj4*x2944*x2947))+((cj4*x2944*x2945))+(((-1.0)*sj5*x2939*x2947))+(((-1.0)*sj5*x2939*x2945))+((cj4*x2935*x2936))+((cj1*x2933))+(((0.250000349687704)*x2941))+(((-1.0)*x2944*x2945))+(((-1.0)*x2944*x2947))+((cj1*r12*x2934))+((x2934*x2941)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2935*x2942))+((sj5*x2939*x2943))+((cj5*x2938*x2939))+(((-1.0)*x2935*x2938))+(((-1.0)*r12*sj1*x2934))+((cj4*x2944*x2946))+(((-1.0)*sj5*x2939*x2946))+(((-1.0)*sj1*x2933))+(((-1.0)*cj5*x2939*x2942))+((cj4*x2935*x2938))+(((-1.0)*cj4*x2935*x2942))+(((-1.0)*cj4*x2943*x2944))+((x2943*x2944))+((x2934*x2937))+(((-1.0)*x2944*x2946))+(((0.250000349687704)*x2937)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x2936*x2939))+(((-1.0)*x2935*x2940))+((cj5*x2939*x2940))+((cj4*x2935*x2940))+(((-1.0)*x2935*x2936))+((cj4*x2944*x2947))+((cj4*x2944*x2945))+(((-1.0)*sj5*x2939*x2947))+(((-1.0)*sj5*x2939*x2945))+((cj4*x2935*x2936))+((cj1*x2933))+(((0.250000349687704)*x2941))+(((-1.0)*x2944*x2945))+(((-1.0)*x2944*x2947))+((cj1*r12*x2934))+((x2934*x2941))))+IKsqr((((x2935*x2942))+((sj5*x2939*x2943))+((cj5*x2938*x2939))+(((-1.0)*x2935*x2938))+(((-1.0)*r12*sj1*x2934))+((cj4*x2944*x2946))+(((-1.0)*sj5*x2939*x2946))+(((-1.0)*sj1*x2933))+(((-1.0)*cj5*x2939*x2942))+((cj4*x2935*x2938))+(((-1.0)*cj4*x2935*x2942))+(((-1.0)*cj4*x2943*x2944))+((x2943*x2944))+((x2934*x2937))+(((-1.0)*x2944*x2946))+(((0.250000349687704)*x2937))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x2936*x2939))+(((-1.0)*x2935*x2940))+((cj5*x2939*x2940))+((cj4*x2935*x2940))+(((-1.0)*x2935*x2936))+((cj4*x2944*x2947))+((cj4*x2944*x2945))+(((-1.0)*sj5*x2939*x2947))+(((-1.0)*sj5*x2939*x2945))+((cj4*x2935*x2936))+((cj1*x2933))+(((0.250000349687704)*x2941))+(((-1.0)*x2944*x2945))+(((-1.0)*x2944*x2947))+((cj1*r12*x2934))+((x2934*x2941))), (((x2935*x2942))+((sj5*x2939*x2943))+((cj5*x2938*x2939))+(((-1.0)*x2935*x2938))+(((-1.0)*r12*sj1*x2934))+((cj4*x2944*x2946))+(((-1.0)*sj5*x2939*x2946))+(((-1.0)*sj1*x2933))+(((-1.0)*cj5*x2939*x2942))+((cj4*x2935*x2938))+(((-1.0)*cj4*x2935*x2942))+(((-1.0)*cj4*x2943*x2944))+((x2943*x2944))+((x2934*x2937))+(((-1.0)*x2944*x2946))+(((0.250000349687704)*x2937))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2950=IKsin(j2);
IkReal x2951=IKcos(j2);
IkReal x2952=(cj5*r11);
IkReal x2953=((0.433012903784321)*cj4);
IkReal x2954=(r21*sj5);
IkReal x2955=((0.500000349687582)*sj4);
IkReal x2956=((0.749999650312296)*sj3);
IkReal x2957=(cj3*cj4);
IkReal x2958=(cj5*r10);
IkReal x2959=((0.0185150129489311)*sj4);
IkReal x2960=(r20*sj5);
IkReal x2961=(cj4*r22);
IkReal x2962=(r10*sj5);
IkReal x2963=(r22*sj3);
IkReal x2964=(r11*sj5);
IkReal x2965=((0.00925751294893567)*cj4);
IkReal x2966=(cj5*r21);
IkReal x2967=(r12*sj3);
IkReal x2968=(cj4*r12);
IkReal x2969=(cj5*r20);
IkReal x2970=((0.866025201892125)*sj4);
IkReal x2971=(cj1*x2951);
IkReal x2972=(sj1*x2950);
IkReal x2973=(cj1*x2950);
IkReal x2974=((0.250000349687704)*cj4*sj3);
IkReal x2975=(sj1*x2951);
IkReal x2976=(cj3*x2970);
IkReal x2977=(x2972+x2971);
evalcond[0]=((((-0.250000349687704)*r22))+((x2954*x2970))+(((-1.0)*x2969*x2970))+(((0.433012903784321)*x2966))+(((0.433012903784321)*x2960))+x2977+(((-0.749999650312296)*x2961))+(((-1.0)*x2953*x2960))+(((-1.0)*x2953*x2966)));
evalcond[1]=(((x2964*x2970))+(((-0.250000349687704)*r12))+(((-1.0)*x2952*x2953))+(((-1.0)*x2975))+(((-1.0)*x2958*x2970))+(((0.433012903784321)*x2962))+x2973+(((0.433012903784321)*x2952))+(((-0.749999650312296)*x2968))+(((-1.0)*x2953*x2962)));
evalcond[2]=(((x2965*x2966))+(((-0.27144)*x2971))+(((-0.27144)*x2972))+(((0.0160344678271334)*x2961))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2966))+(((0.0648043305514941)*x2960))+((x2960*x2965))+(((-1.0)*x2954*x2959))+(((-1.0)*pz))+((x2959*x2969)));
evalcond[3]=((((-0.27144)*x2973))+(((0.0160344678271334)*x2968))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((-1.0)*x2959*x2964))+((x2952*x2965))+((x2962*x2965))+(((0.0648043305514941)*x2962))+(((-1.0)*py))+(((0.27144)*x2975))+(((0.0648043305514941)*x2952))+((x2958*x2959)));
evalcond[4]=(((cj3*x2952*x2955))+((x2956*x2962))+((x2962*x2974))+((r12*x2976))+((cj3*x2955*x2962))+(((-0.433012903784321)*x2967))+((x2952*x2974))+((x2957*x2964))+((x2952*x2956))+(((-1.0)*x2957*x2958))+((sj3*x2955*x2958))+(((-1.0)*sj3*x2955*x2964))+((x2953*x2967))+x2977);
evalcond[5]=(((x2954*x2957))+((x2956*x2960))+((x2956*x2966))+(((-1.0)*x2973))+(((-1.0)*sj3*x2954*x2955))+((cj3*x2955*x2960))+((cj3*x2955*x2966))+(((-0.433012903784321)*x2963))+((r22*x2976))+((x2960*x2974))+((x2966*x2974))+((sj3*x2955*x2969))+((x2953*x2963))+(((-1.0)*x2957*x2969))+x2975);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2978=((0.528192360616262)*sj4);
IkReal x2979=((0.26409636501044)*cj4);
IkReal x2980=(r20*sj5);
IkReal x2981=((0.444735007694415)*cj5);
IkReal x2982=((0.457427895740576)*cj4);
IkReal x2983=(r10*sj5);
if( IKabs((((cj5*r11*x2979))+(((-1.0)*r11*x2981))+(((-1.0)*r11*sj5*x2978))+((r12*x2982))+((cj5*r10*x2978))+(((-0.444735007694415)*x2983))+(((0.204620884747229)*r12))+((x2979*x2983))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x2978))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x2978))+(((-1.0)*r21*x2981))+(((-0.444735007694415)*x2980))+((x2979*x2980))+((cj5*r21*x2979))+((r22*x2982))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r11*x2979))+(((-1.0)*r11*x2981))+(((-1.0)*r11*sj5*x2978))+((r12*x2982))+((cj5*r10*x2978))+(((-0.444735007694415)*x2983))+(((0.204620884747229)*r12))+((x2979*x2983))+(((2.4390243902439)*py))))+IKsqr((((cj5*r20*x2978))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x2978))+(((-1.0)*r21*x2981))+(((-0.444735007694415)*x2980))+((x2979*x2980))+((cj5*r21*x2979))+((r22*x2982))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((cj5*r11*x2979))+(((-1.0)*r11*x2981))+(((-1.0)*r11*sj5*x2978))+((r12*x2982))+((cj5*r10*x2978))+(((-0.444735007694415)*x2983))+(((0.204620884747229)*r12))+((x2979*x2983))+(((2.4390243902439)*py))), (((cj5*r20*x2978))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x2978))+(((-1.0)*r21*x2981))+(((-0.444735007694415)*x2980))+((x2979*x2980))+((cj5*r21*x2979))+((r22*x2982))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2984=(cj5*sj4);
IkReal x2985=((0.135720094919197)*sj3);
IkReal x2986=(cj5*r11);
IkReal x2987=(cj5*r21);
IkReal x2988=((0.20357990508077)*sj3);
IkReal x2989=(r20*sj5);
IkReal x2990=((0.00925751294893567)*cj4);
IkReal x2991=(cj4*r10);
IkReal x2992=((0.27144)*cj3);
IkReal x2993=((0.10827950965428)*cj4);
IkReal x2994=((0.117537022603216)*sj3);
IkReal x2995=(cj4*r22);
IkReal x2996=(cj3*sj4);
IkReal x2997=(cj4*r12);
IkReal x2998=(r10*sj5);
IkReal x2999=(cj4*sj5);
IkReal x3000=((0.135720094919197)*cj3);
IkReal x3001=((0.41)*(IKcos(j1)));
IkReal x3002=((0.41)*(IKsin(j1)));
IkReal x3003=(r11*sj4*sj5);
IkReal x3004=((0.0678600949192303)*cj4*sj3);
IkReal x3005=(r21*sj4*sj5);
evalcond[0]=((((-0.18234135315471)*x2986))+((x2986*x2993))+(((-1.0)*x3002))+py+(((-0.18234135315471)*x2998))+(((0.10827950965428)*sj5*x2991))+(((0.216558867852667)*r10*x2984))+(((0.0838945627463637)*r12))+(((-0.216558867852667)*x3003))+(((0.187545437253636)*x2997)));
evalcond[1]=(((x2987*x2993))+(((-0.18234135315471)*x2987))+(((-0.18234135315471)*x2989))+(((-1.0)*x3001))+pz+(((0.216558867852667)*r20*x2984))+((x2989*x2993))+(((-0.216558867852667)*x3005))+(((0.0838945627463637)*r22))+(((0.187545437253636)*x2995)));
evalcond[2]=((((0.135720094919197)*x2996*x2998))+((x2986*x2988))+(((0.0678600949192303)*sj3*sj5*x2991))+((r10*x2984*x2985))+(((0.235073880801598)*r12*x2996))+(((-0.0160344678271334)*x2995))+(((-0.0648043305514941)*x2989))+(((-0.0648043305514941)*x2987))+(((-1.0)*x2987*x2990))+(((-1.0)*r12*x2994))+(((-1.0)*x2989*x2990))+(((-1.0)*x3001))+(((-1.0)*x2985*x3003))+(((-1.0)*cj5*x2991*x2992))+pz+((r11*x2992*x2999))+(((0.0160344678271334)*r22))+((x2994*x2997))+((x2988*x2998))+(((0.0185150129489311)*x3005))+((x2986*x3004))+(((-0.0185150129489311)*r20*x2984))+((r11*x2984*x3000)));
evalcond[3]=(((r20*x2984*x2985))+((x2990*x2998))+(((-1.0)*r22*x2994))+((x2987*x3004))+x3002+((x2988*x2989))+(((-0.0160344678271334)*r12))+((x2989*x3004))+(((-1.0)*cj4*cj5*r20*x2992))+((x2986*x2990))+(((0.235073880801598)*r22*x2996))+(((-1.0)*py))+(((0.0185150129489311)*r10*x2984))+((x2987*x2988))+(((-1.0)*x2985*x3005))+((r21*x2992*x2999))+((r21*x2984*x3000))+((x2994*x2995))+(((0.0648043305514941)*x2986))+(((0.0160344678271334)*x2997))+(((-0.0185150129489311)*x3003))+(((0.135720094919197)*x2989*x2996))+(((0.0648043305514941)*x2998)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3006=((0.250000349687704)*r12);
IkReal x3007=((0.749999650312296)*cj4);
IkReal x3008=(cj1*r22);
IkReal x3009=((0.866025201892125)*sj4);
IkReal x3010=(cj1*r20);
IkReal x3011=(sj1*sj5);
IkReal x3012=((0.433012903784321)*r20);
IkReal x3013=((0.433012903784321)*sj5);
IkReal x3014=(cj1*r10);
IkReal x3015=(r22*sj1);
IkReal x3016=((0.433012903784321)*r10);
IkReal x3017=((0.433012903784321)*cj5);
IkReal x3018=(cj1*r21);
IkReal x3019=(cj1*r11);
IkReal x3020=(r11*sj1);
IkReal x3021=(cj1*cj4*x3013);
IkReal x3022=(cj5*sj1*x3009);
IkReal x3023=(cj4*r21*x3017);
if( IKabs(((((-1.0)*cj1*r12*x3007))+((sj1*x3023))+((cj4*x3011*x3012))+((sj5*x3009*x3019))+((x3013*x3014))+((r20*x3022))+(((-1.0)*r21*sj1*x3017))+(((-1.0)*cj1*x3006))+(((-1.0)*cj5*x3009*x3014))+(((-1.0)*x3011*x3012))+(((-1.0)*r21*x3009*x3011))+((x3007*x3015))+(((-1.0)*cj4*x3017*x3019))+(((0.250000349687704)*x3015))+((x3017*x3019))+(((-1.0)*cj4*x3013*x3014)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x3022))+((cj4*x3017*x3020))+((cj4*x3010*x3013))+(((-1.0)*sj5*x3009*x3018))+(((-1.0)*r11*x3009*x3011))+((cj4*x3011*x3016))+((cj4*x3017*x3018))+(((-1.0)*x3010*x3013))+((x3007*x3008))+(((-1.0)*x3017*x3018))+((sj1*x3006))+(((-1.0)*x3011*x3016))+((r12*sj1*x3007))+(((0.250000349687704)*x3008))+(((-1.0)*x3017*x3020))+((cj5*x3009*x3010)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r12*x3007))+((sj1*x3023))+((cj4*x3011*x3012))+((sj5*x3009*x3019))+((x3013*x3014))+((r20*x3022))+(((-1.0)*r21*sj1*x3017))+(((-1.0)*cj1*x3006))+(((-1.0)*cj5*x3009*x3014))+(((-1.0)*x3011*x3012))+(((-1.0)*r21*x3009*x3011))+((x3007*x3015))+(((-1.0)*cj4*x3017*x3019))+(((0.250000349687704)*x3015))+((x3017*x3019))+(((-1.0)*cj4*x3013*x3014))))+IKsqr((((r10*x3022))+((cj4*x3017*x3020))+((cj4*x3010*x3013))+(((-1.0)*sj5*x3009*x3018))+(((-1.0)*r11*x3009*x3011))+((cj4*x3011*x3016))+((cj4*x3017*x3018))+(((-1.0)*x3010*x3013))+((x3007*x3008))+(((-1.0)*x3017*x3018))+((sj1*x3006))+(((-1.0)*x3011*x3016))+((r12*sj1*x3007))+(((0.250000349687704)*x3008))+(((-1.0)*x3017*x3020))+((cj5*x3009*x3010))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r12*x3007))+((sj1*x3023))+((cj4*x3011*x3012))+((sj5*x3009*x3019))+((x3013*x3014))+((r20*x3022))+(((-1.0)*r21*sj1*x3017))+(((-1.0)*cj1*x3006))+(((-1.0)*cj5*x3009*x3014))+(((-1.0)*x3011*x3012))+(((-1.0)*r21*x3009*x3011))+((x3007*x3015))+(((-1.0)*cj4*x3017*x3019))+(((0.250000349687704)*x3015))+((x3017*x3019))+(((-1.0)*cj4*x3013*x3014))), (((r10*x3022))+((cj4*x3017*x3020))+((cj4*x3010*x3013))+(((-1.0)*sj5*x3009*x3018))+(((-1.0)*r11*x3009*x3011))+((cj4*x3011*x3016))+((cj4*x3017*x3018))+(((-1.0)*x3010*x3013))+((x3007*x3008))+(((-1.0)*x3017*x3018))+((sj1*x3006))+(((-1.0)*x3011*x3016))+((r12*sj1*x3007))+(((0.250000349687704)*x3008))+(((-1.0)*x3017*x3020))+((cj5*x3009*x3010))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3024=IKcos(j2);
IkReal x3025=IKsin(j2);
IkReal x3026=(cj5*r11);
IkReal x3027=((0.433012903784321)*cj4);
IkReal x3028=(r21*sj5);
IkReal x3029=((0.500000349687582)*sj4);
IkReal x3030=((0.749999650312296)*sj3);
IkReal x3031=(cj3*cj4);
IkReal x3032=(cj5*r10);
IkReal x3033=((0.0185150129489311)*sj4);
IkReal x3034=(r20*sj5);
IkReal x3035=(cj4*r22);
IkReal x3036=(r10*sj5);
IkReal x3037=(r12*sj3);
IkReal x3038=(r11*sj5);
IkReal x3039=(r22*sj3);
IkReal x3040=((0.27144)*sj1);
IkReal x3041=((0.00925751294893567)*cj4);
IkReal x3042=(cj5*r20);
IkReal x3043=(cj5*r21);
IkReal x3044=(cj4*r12);
IkReal x3045=((0.866025201892125)*sj4);
IkReal x3046=(sj1*x3024);
IkReal x3047=(cj1*x3024);
IkReal x3048=(cj1*x3025);
IkReal x3049=((0.250000349687704)*cj4*sj3);
IkReal x3050=(cj3*x3045);
IkReal x3051=(sj1*x3025);
IkReal x3052=((1.0)*x3048);
evalcond[0]=((((-1.0)*x3042*x3045))+(((-0.250000349687704)*r22))+x3047+x3051+(((0.433012903784321)*x3043))+(((-1.0)*x3027*x3043))+(((-1.0)*x3027*x3034))+(((0.433012903784321)*x3034))+(((-0.749999650312296)*x3035))+((x3028*x3045)));
evalcond[1]=((((-1.0)*x3032*x3045))+(((-0.250000349687704)*r12))+x3046+(((-1.0)*x3026*x3027))+(((-0.749999650312296)*x3044))+(((-1.0)*x3027*x3036))+(((0.433012903784321)*x3036))+(((0.433012903784321)*x3026))+((x3038*x3045))+(((-1.0)*x3052)));
evalcond[2]=((((-0.27144)*x3047))+(((0.0160344678271334)*x3035))+((x3033*x3042))+(((0.41)*cj1))+(((0.0648043305514941)*x3043))+(((-0.0160344678271334)*r22))+(((-1.0)*x3025*x3040))+((x3034*x3041))+(((-1.0)*pz))+(((-1.0)*x3028*x3033))+(((0.0648043305514941)*x3034))+((x3041*x3043)));
evalcond[3]=((((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.27144)*x3048))+((x3026*x3041))+(((-1.0)*py))+(((-1.0)*x3024*x3040))+(((-1.0)*x3033*x3038))+(((0.0160344678271334)*x3044))+(((0.0648043305514941)*x3026))+((x3032*x3033))+(((0.0648043305514941)*x3036))+((x3036*x3041)));
evalcond[4]=(((x3043*x3049))+((x3028*x3031))+((cj3*x3029*x3034))+x3046+(((-0.433012903784321)*x3039))+((x3030*x3034))+(((-1.0)*sj3*x3028*x3029))+((cj3*x3029*x3043))+((x3034*x3049))+((x3030*x3043))+((r22*x3050))+((sj3*x3029*x3042))+(((-1.0)*x3052))+(((-1.0)*x3031*x3042))+((x3027*x3039)));
evalcond[5]=((((-1.0)*sj3*x3029*x3038))+((cj3*x3029*x3036))+((x3026*x3030))+(((-0.433012903784321)*x3037))+((x3030*x3036))+(((-1.0)*x3051))+((r12*x3050))+((x3026*x3049))+(((-1.0)*x3047))+(((-1.0)*x3031*x3032))+((cj3*x3026*x3029))+((x3031*x3038))+((sj3*x3029*x3032))+((x3036*x3049))+((x3027*x3037)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3053=((0.26409636501044)*cj4);
IkReal x3054=(r20*sj5);
IkReal x3055=(cj5*r21);
IkReal x3056=((0.457427895740576)*cj4);
IkReal x3057=(r00*sj5);
IkReal x3058=((0.528192360616262)*sj4);
IkReal x3059=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x3059))+(((0.444735007694415)*x3057))+(((-1.0)*x3053*x3059))+(((-1.0)*x3053*x3057))+((r01*sj5*x3058))+(((-1.0)*r02*x3056))+(((-1.0)*cj5*r00*x3058)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.444735007694415)*x3054))+(((-0.444735007694415)*x3055))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x3058))+((r22*x3056))+((x3053*x3054))+((x3053*x3055))+((cj5*r20*x3058))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x3059))+(((0.444735007694415)*x3057))+(((-1.0)*x3053*x3059))+(((-1.0)*x3053*x3057))+((r01*sj5*x3058))+(((-1.0)*r02*x3056))+(((-1.0)*cj5*r00*x3058))))+IKsqr(((((-0.444735007694415)*x3054))+(((-0.444735007694415)*x3055))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x3058))+((r22*x3056))+((x3053*x3054))+((x3053*x3055))+((cj5*r20*x3058))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x3059))+(((0.444735007694415)*x3057))+(((-1.0)*x3053*x3059))+(((-1.0)*x3053*x3057))+((r01*sj5*x3058))+(((-1.0)*r02*x3056))+(((-1.0)*cj5*r00*x3058))), ((((-0.444735007694415)*x3054))+(((-0.444735007694415)*x3055))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x3058))+((r22*x3056))+((x3053*x3054))+((x3053*x3055))+((cj5*r20*x3058))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3060=((1.0)*px);
IkReal x3061=((0.187545437253636)*cj4);
IkReal x3062=(r20*sj5);
IkReal x3063=(r01*sj3);
IkReal x3064=(cj5*r21);
IkReal x3065=(cj3*r00);
IkReal x3066=((0.0185150129489311)*sj4);
IkReal x3067=(r21*sj5);
IkReal x3068=((0.20357990508077)*sj3);
IkReal x3069=(cj5*sj4);
IkReal x3070=((0.135720094919197)*sj3);
IkReal x3071=(cj4*cj5);
IkReal x3072=(r00*sj5);
IkReal x3073=((0.00925751294893567)*cj4);
IkReal x3074=((0.10827950965428)*cj4);
IkReal x3075=(cj4*r22);
IkReal x3076=((0.117537022603216)*sj3);
IkReal x3077=(cj5*r01);
IkReal x3078=((0.135720094919197)*cj3);
IkReal x3079=(r01*sj5);
IkReal x3080=((0.216558867852667)*sj4);
IkReal x3081=(cj4*r02);
IkReal x3082=((0.27144)*cj3);
IkReal x3083=((0.41)*(IKsin(j1)));
IkReal x3084=((0.41)*(IKcos(j1)));
IkReal x3085=((0.135720094919197)*sj4*sj5);
IkReal x3086=((0.0678600949192303)*cj4*sj3);
IkReal x3087=((0.235073880801598)*cj3*sj4);
IkReal x3088=(x3083+x3060);
evalcond[0]=(((x3062*x3074))+(((-1.0)*x3084))+(((-0.18234135315471)*x3064))+(((-0.18234135315471)*x3062))+((r22*x3061))+(((0.216558867852667)*r20*x3069))+((x3064*x3074))+pz+(((-1.0)*x3067*x3080))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x3088))+(((-1.0)*x3072*x3074))+(((0.18234135315471)*x3072))+(((0.18234135315471)*x3077))+(((-0.0838945627463637)*r02))+(((-1.0)*r02*x3061))+(((-0.216558867852667)*r00*x3069))+((x3079*x3080))+(((-0.10827950965428)*r01*x3071)));
evalcond[2]=((((-1.0)*x3088))+(((-1.0)*sj4*x3062*x3078))+(((0.00925751294893567)*r01*x3071))+(((-1.0)*cj4*x3067*x3082))+(((0.0648043305514941)*x3077))+(((0.0648043305514941)*x3072))+(((-1.0)*x3066*x3079))+(((-0.0160344678271334)*r02))+(((-1.0)*x3064*x3086))+(((-1.0)*x3062*x3068))+((r22*x3076))+(((-1.0)*r20*x3069*x3070))+(((0.0160344678271334)*x3081))+((x3072*x3073))+((sj4*x3067*x3070))+(((-1.0)*r22*x3087))+(((-1.0)*sj4*x3064*x3078))+(((-1.0)*x3062*x3086))+(((-1.0)*x3075*x3076))+(((-1.0)*x3064*x3068))+((r20*x3071*x3082))+((cj5*r00*x3066)));
evalcond[3]=(((x3062*x3073))+((r01*x3069*x3078))+(((-1.0)*x3066*x3067))+((x3072*x3086))+x3084+(((-1.0)*r02*x3076))+(((0.20357990508077)*cj5*x3063))+(((0.0678600949192303)*x3063*x3071))+((cj5*r20*x3066))+((r00*x3069*x3070))+(((-0.0160344678271334)*r22))+((r02*x3087))+(((-1.0)*pz))+((x3064*x3073))+(((-1.0)*x3063*x3085))+((x3068*x3072))+((cj4*x3079*x3082))+((x3076*x3081))+(((-0.27144)*x3065*x3071))+((x3065*x3085))+(((0.0160344678271334)*x3075))+(((0.0648043305514941)*x3064))+(((0.0648043305514941)*x3062)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3089=((0.250000349687704)*sj1);
IkReal x3090=(cj1*cj4);
IkReal x3091=((0.749999650312296)*r22);
IkReal x3092=(cj4*sj1);
IkReal x3093=((0.749999650312296)*r02);
IkReal x3094=((0.250000349687704)*cj1);
IkReal x3095=((0.433012903784321)*r00*sj5);
IkReal x3096=((0.433012903784321)*r20*sj5);
IkReal x3097=((0.433012903784321)*cj5*r01);
IkReal x3098=((0.433012903784321)*cj5*r21);
IkReal x3099=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3100=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3101=((0.866025201892125)*r01*sj4*sj5);
IkReal x3102=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x3102))+((r20*x3099))+(((-1.0)*cj1*x3101))+((x3092*x3098))+((x3092*x3096))+((r02*x3094))+(((-1.0)*sj1*x3098))+(((-1.0)*sj1*x3096))+((x3091*x3092))+(((-1.0)*cj1*x3097))+(((-1.0)*cj1*x3095))+((x3090*x3093))+((x3090*x3095))+((x3090*x3097))+((r00*x3100))+((r22*x3089)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x3095))+((sj1*x3097))+((sj1*x3101))+(((-1.0)*cj1*x3102))+(((-1.0)*x3092*x3093))+(((-1.0)*x3092*x3095))+(((-1.0)*x3092*x3097))+(((-1.0)*r00*x3099))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3098))+(((-1.0)*r02*x3089))+((x3090*x3096))+((x3090*x3091))+((x3090*x3098))+((r20*x3100))+((r22*x3094)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x3102))+((r20*x3099))+(((-1.0)*cj1*x3101))+((x3092*x3098))+((x3092*x3096))+((r02*x3094))+(((-1.0)*sj1*x3098))+(((-1.0)*sj1*x3096))+((x3091*x3092))+(((-1.0)*cj1*x3097))+(((-1.0)*cj1*x3095))+((x3090*x3093))+((x3090*x3095))+((x3090*x3097))+((r00*x3100))+((r22*x3089))))+IKsqr((((sj1*x3095))+((sj1*x3097))+((sj1*x3101))+(((-1.0)*cj1*x3102))+(((-1.0)*x3092*x3093))+(((-1.0)*x3092*x3095))+(((-1.0)*x3092*x3097))+(((-1.0)*r00*x3099))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3098))+(((-1.0)*r02*x3089))+((x3090*x3096))+((x3090*x3091))+((x3090*x3098))+((r20*x3100))+((r22*x3094))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x3102))+((r20*x3099))+(((-1.0)*cj1*x3101))+((x3092*x3098))+((x3092*x3096))+((r02*x3094))+(((-1.0)*sj1*x3098))+(((-1.0)*sj1*x3096))+((x3091*x3092))+(((-1.0)*cj1*x3097))+(((-1.0)*cj1*x3095))+((x3090*x3093))+((x3090*x3095))+((x3090*x3097))+((r00*x3100))+((r22*x3089))), (((sj1*x3095))+((sj1*x3097))+((sj1*x3101))+(((-1.0)*cj1*x3102))+(((-1.0)*x3092*x3093))+(((-1.0)*x3092*x3095))+(((-1.0)*x3092*x3097))+(((-1.0)*r00*x3099))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3098))+(((-1.0)*r02*x3089))+((x3090*x3096))+((x3090*x3091))+((x3090*x3098))+((r20*x3100))+((r22*x3094))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3103=IKsin(j2);
IkReal x3104=IKcos(j2);
IkReal x3105=((0.749999650312296)*sj3);
IkReal x3106=(cj5*r01);
IkReal x3107=(r00*sj5);
IkReal x3108=(cj4*cj5);
IkReal x3109=((1.0)*cj3);
IkReal x3110=(r21*sj3);
IkReal x3111=(cj4*sj5);
IkReal x3112=(cj3*r21);
IkReal x3113=((0.500000349687582)*sj4);
IkReal x3114=((0.433012903784321)*r20);
IkReal x3115=(cj4*r22);
IkReal x3116=((0.433012903784321)*sj3);
IkReal x3117=((0.433012903784321)*cj4);
IkReal x3118=(r01*sj5);
IkReal x3119=(r20*sj5);
IkReal x3120=((0.0160344678271334)*r02);
IkReal x3121=(cj4*r02);
IkReal x3122=((0.00925751294893567)*cj4);
IkReal x3123=((0.0185150129489311)*sj4);
IkReal x3124=(r21*sj5);
IkReal x3125=(cj5*r21);
IkReal x3126=((0.866025201892125)*sj4);
IkReal x3127=(cj5*r20);
IkReal x3128=(cj5*r00);
IkReal x3129=((0.250000349687704)*sj3);
IkReal x3130=(cj1*x3104);
IkReal x3131=(sj1*x3103);
IkReal x3132=(cj1*x3103);
IkReal x3133=(sj1*x3104);
IkReal x3134=(x3131+x3130);
evalcond[0]=(x3134+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x3108))+(((-0.749999650312296)*x3115))+((sj5*x3114))+((x3124*x3126))+(((-1.0)*x3126*x3127))+(((-1.0)*x3111*x3114))+(((0.433012903784321)*x3125)));
evalcond[1]=((((-0.250000349687704)*r02))+x3132+(((0.433012903784321)*x3106))+(((0.433012903784321)*x3107))+(((-1.0)*x3133))+((x3118*x3126))+(((-0.749999650312296)*x3121))+(((-1.0)*x3106*x3117))+(((-1.0)*x3126*x3128))+(((-1.0)*x3107*x3117)));
evalcond[2]=((((0.0648043305514941)*x3119))+(((0.0648043305514941)*x3125))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x3111))+(((-1.0)*pz))+(((-0.27144)*x3131))+(((-0.27144)*x3130))+(((0.0160344678271334)*x3115))+(((-1.0)*x3123*x3124))+(((0.00925751294893567)*r21*x3108))+((x3123*x3127)));
evalcond[3]=((((0.0648043305514941)*x3107))+(((0.0648043305514941)*x3106))+(((-0.41)*sj1))+(((-1.0)*px))+(((-0.27144)*x3132))+((x3107*x3122))+(((0.27144)*x3133))+((cj4*x3120))+(((-1.0)*x3120))+(((-1.0)*x3118*x3123))+((x3106*x3122))+((x3123*x3128)));
evalcond[4]=(((x3116*x3121))+x3134+(((-1.0)*r02*x3116))+((sj3*x3113*x3128))+(((-1.0)*r00*x3108*x3109))+((cj3*x3106*x3113))+((cj3*r02*x3126))+((cj4*x3107*x3129))+((cj3*r01*x3111))+((cj4*x3106*x3129))+((x3105*x3106))+((x3105*x3107))+(((-1.0)*sj3*x3113*x3118))+((cj3*x3107*x3113)));
evalcond[5]=(x3133+((cj3*r22*x3126))+((sj3*x3113*x3127))+(((-1.0)*sj5*x3110*x3113))+((x3111*x3112))+(((-1.0)*x3132))+(((-1.0)*r20*x3108*x3109))+((cj3*x3113*x3119))+((x3105*x3125))+(((-1.0)*r22*x3116))+((cj5*x3112*x3113))+((x3105*x3119))+((r20*x3111*x3129))+(((0.250000349687704)*x3108*x3110))+((x3115*x3116)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3135=(cj5*r21);
IkReal x3136=((0.26409636501044)*cj4);
IkReal x3137=((0.457427895740576)*cj4);
IkReal x3138=((0.528192360616262)*sj4);
IkReal x3139=(cj5*r01);
IkReal x3140=((0.444735007694415)*sj5);
if( IKabs(((((-1.0)*r01*sj5*x3138))+((cj5*r00*x3138))+(((-0.444735007694415)*x3139))+((r02*x3137))+(((0.204620884747229)*r02))+((r00*sj5*x3136))+((x3136*x3139))+(((-1.0)*r00*x3140))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((cj5*r20*x3138))+(((-1.0)*r21*sj5*x3138))+((r20*sj5*x3136))+(((-0.444735007694415)*x3135))+((r22*x3137))+(((-1.0)*r20*x3140))+((x3135*x3136))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*sj5*x3138))+((cj5*r00*x3138))+(((-0.444735007694415)*x3139))+((r02*x3137))+(((0.204620884747229)*r02))+((r00*sj5*x3136))+((x3136*x3139))+(((-1.0)*r00*x3140))+(((2.4390243902439)*px))))+IKsqr(((((0.204620884747229)*r22))+((cj5*r20*x3138))+(((-1.0)*r21*sj5*x3138))+((r20*sj5*x3136))+(((-0.444735007694415)*x3135))+((r22*x3137))+(((-1.0)*r20*x3140))+((x3135*x3136))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r01*sj5*x3138))+((cj5*r00*x3138))+(((-0.444735007694415)*x3139))+((r02*x3137))+(((0.204620884747229)*r02))+((r00*sj5*x3136))+((x3136*x3139))+(((-1.0)*r00*x3140))+(((2.4390243902439)*px))), ((((0.204620884747229)*r22))+((cj5*r20*x3138))+(((-1.0)*r21*sj5*x3138))+((r20*sj5*x3136))+(((-0.444735007694415)*x3135))+((r22*x3137))+(((-1.0)*r20*x3140))+((x3135*x3136))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3141=((0.187545437253636)*cj4);
IkReal x3142=(cj5*r20);
IkReal x3143=(r01*sj5);
IkReal x3144=(cj5*r21);
IkReal x3145=(cj3*r00);
IkReal x3146=(sj4*sj5);
IkReal x3147=((0.20357990508077)*sj3);
IkReal x3148=(r20*sj5);
IkReal x3149=(cj4*cj5);
IkReal x3150=((0.00925751294893567)*cj4);
IkReal x3151=((0.117537022603216)*sj3);
IkReal x3152=((0.10827950965428)*cj4);
IkReal x3153=(r00*sj5);
IkReal x3154=(cj4*r22);
IkReal x3155=(r21*sj5);
IkReal x3156=((0.216558867852667)*sj4);
IkReal x3157=((0.0185150129489311)*sj4);
IkReal x3158=(cj3*sj4);
IkReal x3159=(cj4*r02);
IkReal x3160=(cj5*r01);
IkReal x3161=((0.41)*(IKcos(j1)));
IkReal x3162=((0.41)*(IKsin(j1)));
IkReal x3163=((0.135720094919197)*sj3*sj4);
IkReal x3164=((0.0678600949192303)*cj4*sj3);
IkReal x3165=(cj5*r00*sj4);
IkReal x3166=((0.27144)*cj3*cj4);
evalcond[0]=((((0.10827950965428)*r01*x3149))+((r02*x3141))+(((-1.0)*x3143*x3156))+((cj5*r00*x3156))+px+(((-0.18234135315471)*x3153))+(((-0.18234135315471)*x3160))+((x3152*x3153))+(((0.0838945627463637)*r02))+(((-1.0)*x3162)));
evalcond[1]=(((x3142*x3156))+((r22*x3141))+((x3148*x3152))+((x3144*x3152))+pz+(((-0.216558867852667)*r21*x3146))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x3148))+(((-0.18234135315471)*x3144))+(((-1.0)*x3161)));
evalcond[2]=((((-0.27144)*x3145*x3149))+(((-0.0648043305514941)*x3144))+(((-0.0648043305514941)*x3148))+(((-1.0)*x3148*x3150))+((x3151*x3159))+(((-1.0)*x3144*x3150))+(((-0.0160344678271334)*x3154))+(((0.235073880801598)*r02*x3158))+(((-1.0)*x3142*x3157))+((x3147*x3153))+(((-1.0)*x3143*x3163))+(((0.0185150129489311)*r21*x3146))+((x3147*x3160))+((cj5*r00*x3163))+((x3153*x3164))+((x3143*x3166))+(((0.135720094919197)*x3145*x3146))+pz+(((0.0160344678271334)*r22))+(((-1.0)*r02*x3151))+(((0.0678600949192303)*r01*sj3*x3149))+(((-1.0)*x3161))+(((0.135720094919197)*x3158*x3160)));
evalcond[3]=((((0.235073880801598)*r22*x3158))+((x3142*x3163))+((x3151*x3154))+(((-1.0)*r22*x3151))+x3162+((x3155*x3166))+((x3147*x3148))+(((-0.0160344678271334)*r02))+((x3148*x3164))+((x3144*x3147))+(((-1.0)*x3143*x3157))+(((0.0160344678271334)*x3159))+((x3150*x3153))+(((-1.0)*x3142*x3166))+((cj5*r00*x3157))+((x3144*x3164))+(((0.0648043305514941)*x3153))+(((0.0648043305514941)*x3160))+(((0.00925751294893567)*r01*x3149))+(((-0.135720094919197)*r21*sj3*x3146))+(((0.135720094919197)*x3144*x3158))+(((-1.0)*px))+(((0.135720094919197)*cj3*r20*x3146)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3167=(r02*sj1);
IkReal x3168=(cj1*cj4);
IkReal x3169=((0.749999650312296)*r22);
IkReal x3170=(cj4*sj1);
IkReal x3171=((0.250000349687704)*r22);
IkReal x3172=((0.433012903784321)*r00*sj5);
IkReal x3173=((0.433012903784321)*r20*sj5);
IkReal x3174=((0.433012903784321)*cj5*r01);
IkReal x3175=((0.433012903784321)*cj5*r21);
IkReal x3176=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3177=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3178=((0.866025201892125)*r01*sj4*sj5);
IkReal x3179=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((sj1*x3171))+((cj1*x3178))+((cj1*x3172))+((cj1*x3174))+(((-1.0)*sj1*x3179))+(((-1.0)*sj1*x3175))+(((-1.0)*sj1*x3173))+(((-1.0)*r00*x3177))+((x3170*x3175))+((x3170*x3173))+(((-1.0)*x3168*x3172))+(((-1.0)*x3168*x3174))+(((-0.749999650312296)*r02*x3168))+(((-0.250000349687704)*cj1*r02))+((r20*x3176))+((x3169*x3170)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x3171))+(((-1.0)*sj1*x3178))+(((-1.0)*sj1*x3174))+(((-1.0)*sj1*x3172))+((x3168*x3175))+((x3168*x3173))+(((-1.0)*cj1*x3179))+(((-1.0)*cj1*x3173))+(((-1.0)*cj1*x3175))+(((0.749999650312296)*cj4*x3167))+((x3170*x3174))+((x3170*x3172))+(((0.250000349687704)*x3167))+((r00*x3176))+((x3168*x3169))+((r20*x3177)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x3171))+((cj1*x3178))+((cj1*x3172))+((cj1*x3174))+(((-1.0)*sj1*x3179))+(((-1.0)*sj1*x3175))+(((-1.0)*sj1*x3173))+(((-1.0)*r00*x3177))+((x3170*x3175))+((x3170*x3173))+(((-1.0)*x3168*x3172))+(((-1.0)*x3168*x3174))+(((-0.749999650312296)*r02*x3168))+(((-0.250000349687704)*cj1*r02))+((r20*x3176))+((x3169*x3170))))+IKsqr((((cj1*x3171))+(((-1.0)*sj1*x3178))+(((-1.0)*sj1*x3174))+(((-1.0)*sj1*x3172))+((x3168*x3175))+((x3168*x3173))+(((-1.0)*cj1*x3179))+(((-1.0)*cj1*x3173))+(((-1.0)*cj1*x3175))+(((0.749999650312296)*cj4*x3167))+((x3170*x3174))+((x3170*x3172))+(((0.250000349687704)*x3167))+((r00*x3176))+((x3168*x3169))+((r20*x3177))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj1*x3171))+((cj1*x3178))+((cj1*x3172))+((cj1*x3174))+(((-1.0)*sj1*x3179))+(((-1.0)*sj1*x3175))+(((-1.0)*sj1*x3173))+(((-1.0)*r00*x3177))+((x3170*x3175))+((x3170*x3173))+(((-1.0)*x3168*x3172))+(((-1.0)*x3168*x3174))+(((-0.749999650312296)*r02*x3168))+(((-0.250000349687704)*cj1*r02))+((r20*x3176))+((x3169*x3170))), (((cj1*x3171))+(((-1.0)*sj1*x3178))+(((-1.0)*sj1*x3174))+(((-1.0)*sj1*x3172))+((x3168*x3175))+((x3168*x3173))+(((-1.0)*cj1*x3179))+(((-1.0)*cj1*x3173))+(((-1.0)*cj1*x3175))+(((0.749999650312296)*cj4*x3167))+((x3170*x3174))+((x3170*x3172))+(((0.250000349687704)*x3167))+((r00*x3176))+((x3168*x3169))+((r20*x3177))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3180=IKcos(j2);
IkReal x3181=IKsin(j2);
IkReal x3182=((0.433012903784321)*sj3);
IkReal x3183=((0.749999650312296)*sj3);
IkReal x3184=(r00*sj5);
IkReal x3185=(cj4*cj5);
IkReal x3186=((1.0)*cj3);
IkReal x3187=(cj5*r01);
IkReal x3188=(r21*sj3);
IkReal x3189=(cj4*sj5);
IkReal x3190=(cj3*r21);
IkReal x3191=((0.500000349687582)*sj4);
IkReal x3192=((0.433012903784321)*r20);
IkReal x3193=(cj4*r22);
IkReal x3194=(r20*sj5);
IkReal x3195=((0.0160344678271334)*r02);
IkReal x3196=(cj4*r02);
IkReal x3197=(r01*sj5);
IkReal x3198=(cj5*r00);
IkReal x3199=((0.0185150129489311)*sj4);
IkReal x3200=(r21*sj5);
IkReal x3201=(cj5*r21);
IkReal x3202=((0.866025201892125)*sj4);
IkReal x3203=(cj5*r20);
IkReal x3204=((0.250000349687704)*sj3);
IkReal x3205=(sj1*x3180);
IkReal x3206=(cj1*x3180);
IkReal x3207=(sj1*x3181);
IkReal x3208=(cj1*x3181);
IkReal x3209=((1.0)*x3208);
evalcond[0]=((((-0.250000349687704)*r22))+x3207+x3206+(((-1.0)*x3202*x3203))+((x3200*x3202))+(((-0.433012903784321)*r21*x3185))+(((-1.0)*x3189*x3192))+(((0.433012903784321)*x3201))+(((-0.749999650312296)*x3193))+((sj5*x3192)));
evalcond[1]=((((-0.250000349687704)*r02))+((x3197*x3202))+(((-0.433012903784321)*r01*x3185))+x3205+(((-0.433012903784321)*cj4*x3184))+(((0.433012903784321)*x3187))+(((0.433012903784321)*x3184))+(((-1.0)*x3209))+(((-0.749999650312296)*x3196))+(((-1.0)*x3198*x3202)));
evalcond[2]=((((0.00925751294893567)*r20*x3189))+(((0.0160344678271334)*x3193))+(((0.00925751294893567)*r21*x3185))+(((-1.0)*x3199*x3200))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x3199*x3203))+(((-1.0)*pz))+(((0.0648043305514941)*x3201))+(((-0.27144)*x3206))+(((-0.27144)*x3207))+(((0.0648043305514941)*x3194)));
evalcond[3]=((((-1.0)*x3197*x3199))+(((0.27144)*x3208))+(((0.41)*sj1))+((cj4*x3195))+(((0.00925751294893567)*cj4*x3184))+(((-1.0)*px))+(((-0.27144)*x3205))+((x3198*x3199))+(((0.00925751294893567)*r01*x3185))+(((0.0648043305514941)*x3187))+(((0.0648043305514941)*x3184))+(((-1.0)*x3195)));
evalcond[4]=(((cj5*x3190*x3191))+((sj3*x3191*x3203))+(((-1.0)*sj5*x3188*x3191))+(((-1.0)*r22*x3182))+(((-1.0)*r20*x3185*x3186))+x3205+((cj3*r22*x3202))+((x3183*x3194))+((x3183*x3201))+(((0.250000349687704)*x3185*x3188))+((x3182*x3193))+(((-1.0)*x3209))+((r20*x3189*x3204))+((cj3*x3191*x3194))+((x3189*x3190)));
evalcond[5]=((((-1.0)*sj3*x3191*x3197))+(((-1.0)*r02*x3182))+((cj3*x3184*x3191))+(((-1.0)*x3207))+(((-1.0)*x3206))+((cj3*x3187*x3191))+(((-1.0)*r00*x3185*x3186))+((x3182*x3196))+((x3183*x3187))+((x3183*x3184))+((cj3*r02*x3202))+((sj3*x3191*x3198))+((cj4*x3184*x3204))+((cj3*r01*x3189))+((r01*x3185*x3204)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3210=(cj4*sj5);
IkReal x3211=(cj0*r00);
IkReal x3212=(cj0*r02);
IkReal x3213=(cj5*r21);
IkReal x3214=((0.216558867852667)*sj4);
IkReal x3215=((0.528192360616262)*sj4);
IkReal x3216=(cj0*cj5*r01);
CheckValue<IkReal> x3217=IKPowWithIntegerCheck(cj0,-2);
if(!x3217.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x3217.value)*(((((0.0098)*cj0*sj0))+(((-0.0838945627463637)*x3212))+((cj0*r01*sj5*x3214))+(((-0.10827950965428)*cj4*x3216))+(((-0.10827950965428)*x3210*x3211))+(((-1.0)*cj5*x3211*x3214))+(((0.18234135315471)*x3216))+(((0.18234135315471)*sj5*x3211))+(((-1.0)*cj0*px))+(((-0.187545437253636)*cj4*x3212)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.26409636501044)*cj4*x3213))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((0.26409636501044)*r20*x3210))+(((-0.444735007694415)*x3213))+(((-0.444735007694415)*r20*sj5))+(((-1.0)*r21*sj5*x3215))+((cj5*r20*x3215))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x3217.value)*(((((0.0098)*cj0*sj0))+(((-0.0838945627463637)*x3212))+((cj0*r01*sj5*x3214))+(((-0.10827950965428)*cj4*x3216))+(((-0.10827950965428)*x3210*x3211))+(((-1.0)*cj5*x3211*x3214))+(((0.18234135315471)*x3216))+(((0.18234135315471)*sj5*x3211))+(((-1.0)*cj0*px))+(((-0.187545437253636)*cj4*x3212))))))+IKsqr(((((0.26409636501044)*cj4*x3213))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((0.26409636501044)*r20*x3210))+(((-0.444735007694415)*x3213))+(((-0.444735007694415)*r20*sj5))+(((-1.0)*r21*sj5*x3215))+((cj5*r20*x3215))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x3217.value)*(((((0.0098)*cj0*sj0))+(((-0.0838945627463637)*x3212))+((cj0*r01*sj5*x3214))+(((-0.10827950965428)*cj4*x3216))+(((-0.10827950965428)*x3210*x3211))+(((-1.0)*cj5*x3211*x3214))+(((0.18234135315471)*x3216))+(((0.18234135315471)*sj5*x3211))+(((-1.0)*cj0*px))+(((-0.187545437253636)*cj4*x3212))))), ((((0.26409636501044)*cj4*x3213))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((0.26409636501044)*r20*x3210))+(((-0.444735007694415)*x3213))+(((-0.444735007694415)*r20*sj5))+(((-1.0)*r21*sj5*x3215))+((cj5*r20*x3215))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3218=IKsin(j1);
IkReal x3219=IKcos(j1);
IkReal x3220=sj0*sj0;
IkReal x3221=cj0*cj0;
IkReal x3222=((0.0098)*cj0);
IkReal x3223=(cj0*cj5);
IkReal x3224=(cj5*sj0);
IkReal x3225=((0.0648043305514941)*r21);
IkReal x3226=(r00*sj5);
IkReal x3227=((0.20357990508077)*sj3);
IkReal x3228=((0.135720094919197)*r21);
IkReal x3229=((1.0)*px);
IkReal x3230=((0.117537022603216)*sj3);
IkReal x3231=((0.00925751294893567)*cj4);
IkReal x3232=(r10*sj4);
IkReal x3233=(sj0*sj5);
IkReal x3234=(cj4*sj0);
IkReal x3235=(r20*sj5);
IkReal x3236=((0.10827950965428)*cj4);
IkReal x3237=(cj3*sj4);
IkReal x3238=((0.135720094919197)*sj5);
IkReal x3239=((0.117537022603216)*r11);
IkReal x3240=(cj5*r01);
IkReal x3241=(cj4*r02);
IkReal x3242=((0.117537022603216)*cj4);
IkReal x3243=((0.0160344678271334)*r02);
IkReal x3244=((0.0648043305514941)*r11);
IkReal x3245=((0.0160344678271334)*r12);
IkReal x3246=(cj0*cj4);
IkReal x3247=(cj5*sj3);
IkReal x3248=((0.0678600949192303)*cj4);
IkReal x3249=(r10*sj5);
IkReal x3250=((1.0)*py);
IkReal x3251=(cj5*r00);
IkReal x3252=(cj0*r21);
IkReal x3253=(r11*sj5);
IkReal x3254=((0.0160344678271334)*r22);
IkReal x3255=(r00*sj4);
IkReal x3256=((1.0)*pz);
IkReal x3257=(r22*sj0);
IkReal x3258=(sj3*sj4);
IkReal x3259=(cj5*r21);
IkReal x3260=(r21*sj3);
IkReal x3261=(cj0*r22);
IkReal x3262=((0.0185150129489311)*sj4);
IkReal x3263=(cj5*r11);
IkReal x3264=(r01*sj5);
IkReal x3265=((0.216558867852667)*sj4);
IkReal x3266=((0.135720094919197)*r20);
IkReal x3267=(sj0*x3222);
IkReal x3268=(sj4*x3233);
IkReal x3269=((0.27144)*cj3*cj4);
IkReal x3270=(r11*x3231);
IkReal x3271=((0.41)*x3218);
IkReal x3272=(cj0*x3249);
IkReal x3273=(sj5*x3262);
IkReal x3274=((0.41)*x3219);
IkReal x3275=(cj0*sj0*x3271);
evalcond[0]=((((-0.18234135315471)*x3235))+((cj5*r20*x3265))+((x3235*x3236))+(((0.187545437253636)*cj4*r22))+(((-1.0)*x3274))+((x3236*x3259))+(((-0.18234135315471)*x3259))+pz+(((0.0838945627463637)*r22))+(((-1.0)*r21*sj5*x3265)));
evalcond[1]=(((r11*x3233*x3265))+(((-0.187545437253636)*r12*x3234))+(((-1.0)*r10*x3233*x3236))+(((0.18234135315471)*r10*x3233))+(((0.18234135315471)*r11*x3224))+(((-1.0)*x3267))+(((-0.216558867852667)*x3224*x3232))+(((-1.0)*r11*x3224*x3236))+(((-1.0)*x3220*x3271))+(((-1.0)*sj0*x3250))+(((-0.0838945627463637)*r12*sj0)));
evalcond[2]=(((cj0*x3264*x3265))+(((-0.0838945627463637)*cj0*r02))+(((0.18234135315471)*r01*x3223))+(((-1.0)*cj0*x3229))+x3267+(((-0.187545437253636)*cj0*x3241))+(((0.18234135315471)*cj0*x3226))+(((-1.0)*cj0*x3226*x3236))+(((-1.0)*r01*x3223*x3236))+(((-0.216558867852667)*x3223*x3255))+(((-1.0)*x3221*x3271)));
evalcond[3]=((((-1.0)*cj5*r10*x3269))+((x3227*x3263))+(((0.135720094919197)*x3237*x3263))+(((-1.0)*r11*x3238*x3258))+((sj0*x3274))+((cj4*r12*x3230))+((sj3*x3248*x3249))+((x3253*x3269))+(((0.135720094919197)*x3232*x3247))+(((0.235073880801598)*r12*x3237))+(((-1.0)*r12*x3230))+(((-1.0)*sj0*x3256))+(((-1.0)*sj0*x3254))+((r21*x3224*x3231))+((x3224*x3225))+(((0.0648043305514941)*r20*x3233))+((cj3*x3232*x3238))+(((-1.0)*r21*x3233*x3262))+((x3234*x3254))+((r20*x3231*x3233))+((r11*x3247*x3248))+((x3227*x3249))+((r20*x3224*x3262)));
evalcond[4]=((((-1.0)*r02*x3230))+((cj0*x3274))+(((0.235073880801598)*r02*x3237))+(((-1.0)*x3252*x3273))+((x3246*x3254))+(((0.135720094919197)*x3226*x3237))+((r20*x3223*x3262))+(((0.135720094919197)*x3237*x3240))+(((-1.0)*cj0*x3256))+(((-1.0)*cj0*x3254))+(((0.0648043305514941)*cj0*x3235))+((x3230*x3241))+(((-1.0)*x3251*x3269))+((cj0*x3231*x3235))+((r21*x3223*x3231))+((x3223*x3225))+((x3226*x3227))+((sj3*x3240*x3248))+(((0.135720094919197)*x3247*x3255))+((sj3*x3226*x3248))+(((-1.0)*r01*x3238*x3258))+((x3227*x3240))+((x3264*x3269)));
evalcond[5]=((((0.0185150129489311)*cj5*x3232))+(((-1.0)*x3224*x3228*x3237))+((x3231*x3249))+(((-0.235073880801598)*x3237*x3257))+((cj4*x3245))+((x3231*x3263))+((cj5*x3244))+(((-1.0)*x3224*x3248*x3260))+(((-1.0)*sj0*x3271))+(((-1.0)*x3224*x3258*x3266))+(((-1.0)*x3245))+(((-1.0)*r21*x3224*x3227))+(((-1.0)*x3253*x3262))+(((-1.0)*r21*x3233*x3269))+(((-1.0)*r22*x3230*x3234))+((x3230*x3257))+(((-1.0)*x3233*x3237*x3266))+(((-1.0)*r20*sj3*x3233*x3248))+((x3228*x3233*x3258))+(((-1.0)*x3222))+(((0.0648043305514941)*x3249))+(((-1.0)*x3250))+((r20*x3224*x3269))+(((-1.0)*r20*x3227*x3233)));
evalcond[6]=(((x3251*x3262))+((x3231*x3240))+((cj0*sj5*x3228*x3258))+((x3230*x3261))+(((0.0160344678271334)*x3241))+(((-1.0)*x3223*x3258*x3266))+((r20*x3223*x3269))+(((-0.27144)*cj3*r21*sj5*x3246))+(((-1.0)*cj0*x3227*x3235))+(((-1.0)*x3243))+(((0.0648043305514941)*x3226))+(((-0.235073880801598)*x3237*x3261))+(((-1.0)*x3262*x3264))+(((-1.0)*x3223*x3228*x3237))+((x3226*x3231))+(((-1.0)*r21*x3223*x3227))+(((-1.0)*x3223*x3248*x3260))+(((-1.0)*r22*x3230*x3246))+(((0.0098)*sj0))+(((-0.135720094919197)*cj0*x3235*x3237))+(((-1.0)*x3229))+(((0.0648043305514941)*x3240))+(((-1.0)*cj0*x3271))+(((-0.0678600949192303)*sj3*x3235*x3246)));
evalcond[7]=(((x3223*x3239))+(((0.0648043305514941)*r01*x3224))+(((-0.0678600949192303)*cj0*r12))+(((0.117537022603216)*x3272))+(((-1.0)*sj0*x3243))+((x3234*x3243))+(((-1.0)*cj4*x3223*x3239))+(((-0.20357990508077)*r12*x3246))+(((0.235073880801598)*cj0*sj4*x3253))+(((-0.235073880801598)*x3223*x3232))+((r01*x3224*x3231))+(((-1.0)*x3275))+(((-1.0)*x3242*x3272))+(((-1.0)*sj0*x3229))+(((0.0098)*x3220))+(((0.0648043305514941)*sj0*x3226))+(((-1.0)*r01*x3233*x3262))+((sj0*x3226*x3231))+(((0.0185150129489311)*x3224*x3255)));
evalcond[8]=((((-0.0098)*x3221))+(((-0.117537022603216)*x3226*x3234))+(((0.235073880801598)*r01*x3268))+(((-1.0)*cj0*x3250))+((x3231*x3272))+(((0.117537022603216)*sj0*x3226))+(((-1.0)*x3275))+(((0.117537022603216)*r01*x3224))+(((0.0185150129489311)*x3223*x3232))+(((-1.0)*cj0*x3245))+(((0.0648043305514941)*x3272))+(((-0.235073880801598)*x3224*x3255))+(((-1.0)*cj0*x3253*x3262))+(((-0.0678600949192303)*r02*sj0))+(((-1.0)*r01*x3224*x3242))+((x3223*x3270))+((x3245*x3246))+(((-0.20357990508077)*r02*x3234))+((x3223*x3244)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3276=((0.250000349687704)*sj1);
IkReal x3277=(cj1*cj4);
IkReal x3278=((0.749999650312296)*r22);
IkReal x3279=(cj4*sj1);
IkReal x3280=((0.749999650312296)*r02);
IkReal x3281=((0.250000349687704)*cj1);
IkReal x3282=((0.433012903784321)*r00*sj5);
IkReal x3283=((0.433012903784321)*r20*sj5);
IkReal x3284=((0.433012903784321)*cj5*r01);
IkReal x3285=((0.433012903784321)*cj5*r21);
IkReal x3286=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3287=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3288=((0.866025201892125)*r01*sj4*sj5);
IkReal x3289=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x3279*x3283))+((x3279*x3285))+((r00*x3287))+((r20*x3286))+((r02*x3281))+(((-1.0)*cj1*x3284))+(((-1.0)*cj1*x3288))+(((-1.0)*cj1*x3282))+((x3278*x3279))+((r22*x3276))+(((-1.0)*sj1*x3285))+(((-1.0)*sj1*x3289))+(((-1.0)*sj1*x3283))+((x3277*x3284))+((x3277*x3280))+((x3277*x3282)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3287))+(((-1.0)*x3279*x3280))+(((-1.0)*x3279*x3282))+(((-1.0)*x3279*x3284))+(((-1.0)*cj1*x3285))+(((-1.0)*cj1*x3289))+(((-1.0)*cj1*x3283))+((x3277*x3278))+((r22*x3281))+((sj1*x3282))+((sj1*x3284))+((sj1*x3288))+(((-1.0)*r00*x3286))+(((-1.0)*r02*x3276))+((x3277*x3285))+((x3277*x3283)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3279*x3283))+((x3279*x3285))+((r00*x3287))+((r20*x3286))+((r02*x3281))+(((-1.0)*cj1*x3284))+(((-1.0)*cj1*x3288))+(((-1.0)*cj1*x3282))+((x3278*x3279))+((r22*x3276))+(((-1.0)*sj1*x3285))+(((-1.0)*sj1*x3289))+(((-1.0)*sj1*x3283))+((x3277*x3284))+((x3277*x3280))+((x3277*x3282))))+IKsqr((((r20*x3287))+(((-1.0)*x3279*x3280))+(((-1.0)*x3279*x3282))+(((-1.0)*x3279*x3284))+(((-1.0)*cj1*x3285))+(((-1.0)*cj1*x3289))+(((-1.0)*cj1*x3283))+((x3277*x3278))+((r22*x3281))+((sj1*x3282))+((sj1*x3284))+((sj1*x3288))+(((-1.0)*r00*x3286))+(((-1.0)*r02*x3276))+((x3277*x3285))+((x3277*x3283))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3279*x3283))+((x3279*x3285))+((r00*x3287))+((r20*x3286))+((r02*x3281))+(((-1.0)*cj1*x3284))+(((-1.0)*cj1*x3288))+(((-1.0)*cj1*x3282))+((x3278*x3279))+((r22*x3276))+(((-1.0)*sj1*x3285))+(((-1.0)*sj1*x3289))+(((-1.0)*sj1*x3283))+((x3277*x3284))+((x3277*x3280))+((x3277*x3282))), (((r20*x3287))+(((-1.0)*x3279*x3280))+(((-1.0)*x3279*x3282))+(((-1.0)*x3279*x3284))+(((-1.0)*cj1*x3285))+(((-1.0)*cj1*x3289))+(((-1.0)*cj1*x3283))+((x3277*x3278))+((r22*x3281))+((sj1*x3282))+((sj1*x3284))+((sj1*x3288))+(((-1.0)*r00*x3286))+(((-1.0)*r02*x3276))+((x3277*x3285))+((x3277*x3283))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3290=IKsin(j2);
IkReal x3291=IKcos(j2);
IkReal x3292=((0.749999650312296)*sj3);
IkReal x3293=(cj5*r01);
IkReal x3294=(r00*sj5);
IkReal x3295=(cj4*cj5);
IkReal x3296=((1.0)*cj3);
IkReal x3297=(r21*sj3);
IkReal x3298=(cj4*sj5);
IkReal x3299=(cj3*r21);
IkReal x3300=((0.500000349687582)*sj4);
IkReal x3301=((0.433012903784321)*r20);
IkReal x3302=(cj4*r22);
IkReal x3303=((0.433012903784321)*sj3);
IkReal x3304=((0.433012903784321)*cj4);
IkReal x3305=(r01*sj5);
IkReal x3306=(r20*sj5);
IkReal x3307=((0.0160344678271334)*r02);
IkReal x3308=(cj4*r02);
IkReal x3309=((0.00925751294893567)*cj4);
IkReal x3310=((0.0185150129489311)*sj4);
IkReal x3311=(r21*sj5);
IkReal x3312=(cj5*r21);
IkReal x3313=((0.866025201892125)*sj4);
IkReal x3314=(cj5*r20);
IkReal x3315=(cj5*r00);
IkReal x3316=((0.250000349687704)*sj3);
IkReal x3317=(cj1*x3291);
IkReal x3318=(sj1*x3290);
IkReal x3319=(cj1*x3290);
IkReal x3320=(sj1*x3291);
IkReal x3321=(x3318+x3317);
evalcond[0]=((((-0.250000349687704)*r22))+x3321+(((-1.0)*x3298*x3301))+(((-0.749999650312296)*x3302))+(((-1.0)*x3313*x3314))+((sj5*x3301))+(((0.433012903784321)*x3312))+(((-0.433012903784321)*r21*x3295))+((x3311*x3313)));
evalcond[1]=((((-1.0)*x3320))+(((-0.250000349687704)*r02))+x3319+(((-1.0)*x3294*x3304))+(((-0.749999650312296)*x3308))+(((-1.0)*x3313*x3315))+(((0.433012903784321)*x3294))+(((0.433012903784321)*x3293))+(((-1.0)*x3293*x3304))+((x3305*x3313)));
evalcond[2]=((((0.0648043305514941)*x3306))+(((0.0648043305514941)*x3312))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x3318))+(((-0.27144)*x3317))+(((-1.0)*pz))+(((0.0160344678271334)*x3302))+(((0.00925751294893567)*r20*x3298))+(((-1.0)*x3310*x3311))+(((0.00925751294893567)*r21*x3295))+((x3310*x3314)));
evalcond[3]=(((cj4*x3307))+((x3293*x3309))+(((0.27144)*x3320))+(((-1.0)*x3305*x3310))+(((0.0648043305514941)*x3293))+(((0.0648043305514941)*x3294))+(((-0.27144)*x3319))+(((-0.41)*sj1))+(((-1.0)*x3307))+((x3294*x3309))+(((-1.0)*px))+((x3310*x3315)));
evalcond[4]=(((x3303*x3308))+x3321+((x3292*x3293))+((x3292*x3294))+((cj4*x3294*x3316))+((cj3*x3293*x3300))+((cj3*r01*x3298))+((cj4*x3293*x3316))+(((-1.0)*r02*x3303))+((cj3*x3294*x3300))+((sj3*x3300*x3315))+(((-1.0)*r00*x3295*x3296))+(((-1.0)*sj3*x3300*x3305))+((cj3*r02*x3313)));
evalcond[5]=(((x3292*x3306))+((cj3*x3300*x3306))+((r20*x3298*x3316))+((x3292*x3312))+x3320+((x3298*x3299))+(((-1.0)*r22*x3303))+(((0.250000349687704)*x3295*x3297))+(((-1.0)*sj5*x3297*x3300))+((sj3*x3300*x3314))+((cj5*x3299*x3300))+(((-1.0)*x3319))+((cj3*r22*x3313))+((x3302*x3303))+(((-1.0)*r20*x3295*x3296)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3322=(r02*sj1);
IkReal x3323=(cj1*cj4);
IkReal x3324=((0.749999650312296)*r22);
IkReal x3325=(cj4*sj1);
IkReal x3326=((0.250000349687704)*r22);
IkReal x3327=((0.433012903784321)*r00*sj5);
IkReal x3328=((0.433012903784321)*r20*sj5);
IkReal x3329=((0.433012903784321)*cj5*r01);
IkReal x3330=((0.433012903784321)*cj5*r21);
IkReal x3331=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3332=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3333=((0.866025201892125)*r01*sj4*sj5);
IkReal x3334=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x3324*x3325))+((sj1*x3326))+(((-0.749999650312296)*r02*x3323))+((cj1*x3327))+((cj1*x3329))+((x3325*x3328))+(((-1.0)*sj1*x3328))+(((-1.0)*r00*x3332))+(((-1.0)*x3323*x3327))+(((-1.0)*x3323*x3329))+((x3325*x3330))+(((-0.250000349687704)*cj1*r02))+((cj1*x3333))+(((-1.0)*sj1*x3330))+(((-1.0)*sj1*x3334))+((r20*x3331)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.749999650312296)*cj4*x3322))+((x3323*x3330))+((cj1*x3326))+((x3325*x3327))+((x3325*x3329))+(((-1.0)*sj1*x3329))+(((-1.0)*sj1*x3327))+(((-1.0)*cj1*x3328))+((r00*x3331))+(((-1.0)*sj1*x3333))+((x3323*x3324))+((x3323*x3328))+(((-1.0)*cj1*x3330))+(((-1.0)*cj1*x3334))+(((0.250000349687704)*x3322))+((r20*x3332)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3324*x3325))+((sj1*x3326))+(((-0.749999650312296)*r02*x3323))+((cj1*x3327))+((cj1*x3329))+((x3325*x3328))+(((-1.0)*sj1*x3328))+(((-1.0)*r00*x3332))+(((-1.0)*x3323*x3327))+(((-1.0)*x3323*x3329))+((x3325*x3330))+(((-0.250000349687704)*cj1*r02))+((cj1*x3333))+(((-1.0)*sj1*x3330))+(((-1.0)*sj1*x3334))+((r20*x3331))))+IKsqr(((((0.749999650312296)*cj4*x3322))+((x3323*x3330))+((cj1*x3326))+((x3325*x3327))+((x3325*x3329))+(((-1.0)*sj1*x3329))+(((-1.0)*sj1*x3327))+(((-1.0)*cj1*x3328))+((r00*x3331))+(((-1.0)*sj1*x3333))+((x3323*x3324))+((x3323*x3328))+(((-1.0)*cj1*x3330))+(((-1.0)*cj1*x3334))+(((0.250000349687704)*x3322))+((r20*x3332))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3324*x3325))+((sj1*x3326))+(((-0.749999650312296)*r02*x3323))+((cj1*x3327))+((cj1*x3329))+((x3325*x3328))+(((-1.0)*sj1*x3328))+(((-1.0)*r00*x3332))+(((-1.0)*x3323*x3327))+(((-1.0)*x3323*x3329))+((x3325*x3330))+(((-0.250000349687704)*cj1*r02))+((cj1*x3333))+(((-1.0)*sj1*x3330))+(((-1.0)*sj1*x3334))+((r20*x3331))), ((((0.749999650312296)*cj4*x3322))+((x3323*x3330))+((cj1*x3326))+((x3325*x3327))+((x3325*x3329))+(((-1.0)*sj1*x3329))+(((-1.0)*sj1*x3327))+(((-1.0)*cj1*x3328))+((r00*x3331))+(((-1.0)*sj1*x3333))+((x3323*x3324))+((x3323*x3328))+(((-1.0)*cj1*x3330))+(((-1.0)*cj1*x3334))+(((0.250000349687704)*x3322))+((r20*x3332))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3335=IKcos(j2);
IkReal x3336=IKsin(j2);
IkReal x3337=((0.433012903784321)*sj3);
IkReal x3338=((0.749999650312296)*sj3);
IkReal x3339=(r00*sj5);
IkReal x3340=(cj4*cj5);
IkReal x3341=((1.0)*cj3);
IkReal x3342=(cj5*r01);
IkReal x3343=(r21*sj3);
IkReal x3344=(cj4*sj5);
IkReal x3345=(cj3*r21);
IkReal x3346=((0.500000349687582)*sj4);
IkReal x3347=((0.433012903784321)*r20);
IkReal x3348=(cj4*r22);
IkReal x3349=(r20*sj5);
IkReal x3350=((0.0160344678271334)*r02);
IkReal x3351=(cj4*r02);
IkReal x3352=(r01*sj5);
IkReal x3353=(cj5*r00);
IkReal x3354=((0.0185150129489311)*sj4);
IkReal x3355=(r21*sj5);
IkReal x3356=(cj5*r21);
IkReal x3357=((0.866025201892125)*sj4);
IkReal x3358=(cj5*r20);
IkReal x3359=((0.250000349687704)*sj3);
IkReal x3360=(sj1*x3335);
IkReal x3361=(cj1*x3335);
IkReal x3362=(sj1*x3336);
IkReal x3363=(cj1*x3336);
IkReal x3364=((1.0)*x3363);
evalcond[0]=((((-0.250000349687704)*r22))+x3361+x3362+(((-0.433012903784321)*r21*x3340))+(((0.433012903784321)*x3356))+((sj5*x3347))+((x3355*x3357))+(((-1.0)*x3357*x3358))+(((-0.749999650312296)*x3348))+(((-1.0)*x3344*x3347)));
evalcond[1]=((((-0.749999650312296)*x3351))+(((-0.250000349687704)*r02))+(((0.433012903784321)*x3339))+(((0.433012903784321)*x3342))+x3360+(((-1.0)*x3364))+((x3352*x3357))+(((-1.0)*x3353*x3357))+(((-0.433012903784321)*r01*x3340))+(((-0.433012903784321)*cj4*x3339)));
evalcond[2]=((((0.0648043305514941)*x3349))+(((0.00925751294893567)*r20*x3344))+(((0.41)*cj1))+(((0.00925751294893567)*r21*x3340))+(((-0.0160344678271334)*r22))+(((-1.0)*x3354*x3355))+(((-1.0)*pz))+(((0.0648043305514941)*x3356))+(((-0.27144)*x3362))+(((-0.27144)*x3361))+((x3354*x3358))+(((0.0160344678271334)*x3348)));
evalcond[3]=((((-1.0)*x3350))+(((-1.0)*x3352*x3354))+(((0.0648043305514941)*x3342))+(((0.41)*sj1))+(((0.0648043305514941)*x3339))+(((0.00925751294893567)*cj4*x3339))+(((0.27144)*x3363))+(((-1.0)*px))+(((-0.27144)*x3360))+(((0.00925751294893567)*r01*x3340))+((cj4*x3350))+((x3353*x3354)));
evalcond[4]=(((x3344*x3345))+x3360+((sj3*x3346*x3358))+(((-1.0)*x3364))+((x3338*x3349))+(((-1.0)*sj5*x3343*x3346))+(((-1.0)*r20*x3340*x3341))+(((-1.0)*r22*x3337))+((x3338*x3356))+((cj3*r22*x3357))+((cj5*x3345*x3346))+(((0.250000349687704)*x3340*x3343))+((r20*x3344*x3359))+((cj3*x3346*x3349))+((x3337*x3348)));
evalcond[5]=((((-1.0)*r00*x3340*x3341))+((cj3*r01*x3344))+((x3337*x3351))+((sj3*x3346*x3353))+(((-1.0)*x3361))+(((-1.0)*x3362))+((cj3*x3342*x3346))+((x3338*x3342))+((cj3*r02*x3357))+(((-1.0)*r02*x3337))+((cj4*x3339*x3359))+((r01*x3340*x3359))+((x3338*x3339))+((cj3*x3339*x3346))+(((-1.0)*sj3*x3346*x3352)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3365=((0.250000349687704)*r12);
IkReal x3366=((0.749999650312296)*cj4);
IkReal x3367=((0.433012903784321)*sj5);
IkReal x3368=(cj1*r10);
IkReal x3369=(cj1*r22);
IkReal x3370=(cj1*r20);
IkReal x3371=((0.866025201892125)*sj4);
IkReal x3372=(r20*sj1);
IkReal x3373=(r22*sj1);
IkReal x3374=(r10*sj1);
IkReal x3375=(r11*sj1);
IkReal x3376=((0.433012903784321)*cj5);
IkReal x3377=(r21*sj1);
IkReal x3378=(cj1*r21);
IkReal x3379=(cj1*r11);
IkReal x3380=(cj5*sj1*x3371);
IkReal x3381=(cj4*r21*x3376);
if( IKabs((((cj5*x3368*x3371))+((cj4*x3367*x3372))+((cj5*x3371*x3372))+(((-1.0)*x3367*x3372))+(((-1.0)*sj5*x3371*x3377))+(((-1.0)*sj5*x3371*x3379))+((cj4*x3367*x3368))+(((-1.0)*x3367*x3368))+(((-1.0)*x3376*x3379))+(((-1.0)*x3376*x3377))+(((0.250000349687704)*x3373))+((x3366*x3373))+((cj1*x3365))+((cj4*x3376*x3377))+((cj4*x3376*x3379))+((cj1*r12*x3366)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3375*x3376))+((cj4*x3367*x3370))+(((-1.0)*x3367*x3370))+(((-1.0)*sj5*x3371*x3378))+(((-1.0)*cj4*x3367*x3374))+((x3367*x3374))+((sj5*x3371*x3375))+(((-1.0)*r12*sj1*x3366))+(((-1.0)*cj5*x3371*x3374))+(((0.250000349687704)*x3369))+(((-1.0)*x3376*x3378))+(((-1.0)*sj1*x3365))+(((-1.0)*cj4*x3375*x3376))+((cj4*x3376*x3378))+((cj5*x3370*x3371))+((x3366*x3369)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x3368*x3371))+((cj4*x3367*x3372))+((cj5*x3371*x3372))+(((-1.0)*x3367*x3372))+(((-1.0)*sj5*x3371*x3377))+(((-1.0)*sj5*x3371*x3379))+((cj4*x3367*x3368))+(((-1.0)*x3367*x3368))+(((-1.0)*x3376*x3379))+(((-1.0)*x3376*x3377))+(((0.250000349687704)*x3373))+((x3366*x3373))+((cj1*x3365))+((cj4*x3376*x3377))+((cj4*x3376*x3379))+((cj1*r12*x3366))))+IKsqr((((x3375*x3376))+((cj4*x3367*x3370))+(((-1.0)*x3367*x3370))+(((-1.0)*sj5*x3371*x3378))+(((-1.0)*cj4*x3367*x3374))+((x3367*x3374))+((sj5*x3371*x3375))+(((-1.0)*r12*sj1*x3366))+(((-1.0)*cj5*x3371*x3374))+(((0.250000349687704)*x3369))+(((-1.0)*x3376*x3378))+(((-1.0)*sj1*x3365))+(((-1.0)*cj4*x3375*x3376))+((cj4*x3376*x3378))+((cj5*x3370*x3371))+((x3366*x3369))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x3368*x3371))+((cj4*x3367*x3372))+((cj5*x3371*x3372))+(((-1.0)*x3367*x3372))+(((-1.0)*sj5*x3371*x3377))+(((-1.0)*sj5*x3371*x3379))+((cj4*x3367*x3368))+(((-1.0)*x3367*x3368))+(((-1.0)*x3376*x3379))+(((-1.0)*x3376*x3377))+(((0.250000349687704)*x3373))+((x3366*x3373))+((cj1*x3365))+((cj4*x3376*x3377))+((cj4*x3376*x3379))+((cj1*r12*x3366))), (((x3375*x3376))+((cj4*x3367*x3370))+(((-1.0)*x3367*x3370))+(((-1.0)*sj5*x3371*x3378))+(((-1.0)*cj4*x3367*x3374))+((x3367*x3374))+((sj5*x3371*x3375))+(((-1.0)*r12*sj1*x3366))+(((-1.0)*cj5*x3371*x3374))+(((0.250000349687704)*x3369))+(((-1.0)*x3376*x3378))+(((-1.0)*sj1*x3365))+(((-1.0)*cj4*x3375*x3376))+((cj4*x3376*x3378))+((cj5*x3370*x3371))+((x3366*x3369))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3382=IKsin(j2);
IkReal x3383=IKcos(j2);
IkReal x3384=(cj5*r11);
IkReal x3385=((0.433012903784321)*cj4);
IkReal x3386=(r21*sj5);
IkReal x3387=((0.500000349687582)*sj4);
IkReal x3388=((0.749999650312296)*sj3);
IkReal x3389=(cj3*cj4);
IkReal x3390=(cj5*r10);
IkReal x3391=((0.0185150129489311)*sj4);
IkReal x3392=(r20*sj5);
IkReal x3393=(cj4*r22);
IkReal x3394=(r10*sj5);
IkReal x3395=(r22*sj3);
IkReal x3396=(r11*sj5);
IkReal x3397=((0.00925751294893567)*cj4);
IkReal x3398=(cj5*r21);
IkReal x3399=(r12*sj3);
IkReal x3400=(cj4*r12);
IkReal x3401=(cj5*r20);
IkReal x3402=((0.866025201892125)*sj4);
IkReal x3403=(cj1*x3383);
IkReal x3404=(sj1*x3382);
IkReal x3405=(cj1*x3382);
IkReal x3406=((0.250000349687704)*cj4*sj3);
IkReal x3407=(sj1*x3383);
IkReal x3408=(cj3*x3402);
IkReal x3409=(x3403+x3404);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3385*x3398))+(((-1.0)*x3385*x3392))+(((-1.0)*x3401*x3402))+((x3386*x3402))+x3409+(((-0.749999650312296)*x3393))+(((0.433012903784321)*x3398))+(((0.433012903784321)*x3392)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x3407))+(((-1.0)*x3384*x3385))+(((-1.0)*x3385*x3394))+(((-0.749999650312296)*x3400))+x3405+((x3396*x3402))+(((0.433012903784321)*x3394))+(((0.433012903784321)*x3384))+(((-1.0)*x3390*x3402)));
evalcond[2]=(((x3391*x3401))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x3404))+(((-0.27144)*x3403))+(((-1.0)*x3386*x3391))+(((-1.0)*pz))+((x3397*x3398))+((x3392*x3397))+(((0.0648043305514941)*x3398))+(((0.0648043305514941)*x3392))+(((0.0160344678271334)*x3393)));
evalcond[3]=((((0.0648043305514941)*x3384))+((x3394*x3397))+(((-0.0160344678271334)*r12))+(((0.27144)*x3407))+(((-0.41)*sj1))+(((-0.27144)*x3405))+((x3390*x3391))+(((-1.0)*py))+((x3384*x3397))+(((0.0160344678271334)*x3400))+(((-1.0)*x3391*x3396))+(((0.0648043305514941)*x3394)));
evalcond[4]=((((-0.433012903784321)*x3399))+((x3394*x3406))+((x3389*x3396))+x3409+((x3388*x3394))+((r12*x3408))+((cj3*x3387*x3394))+((sj3*x3387*x3390))+(((-1.0)*x3389*x3390))+((cj3*x3384*x3387))+((x3384*x3406))+((x3384*x3388))+((x3385*x3399))+(((-1.0)*sj3*x3387*x3396)));
evalcond[5]=((((-0.433012903784321)*x3395))+((r22*x3408))+(((-1.0)*x3405))+(((-1.0)*sj3*x3386*x3387))+((sj3*x3387*x3401))+((x3392*x3406))+x3407+((x3398*x3406))+((x3388*x3392))+((x3388*x3398))+((cj3*x3387*x3392))+((cj3*x3387*x3398))+((x3385*x3395))+((x3386*x3389))+(((-1.0)*x3389*x3401)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3410=((0.250000349687704)*r12);
IkReal x3411=((0.749999650312296)*cj4);
IkReal x3412=(cj1*r22);
IkReal x3413=((0.866025201892125)*sj4);
IkReal x3414=(cj1*r20);
IkReal x3415=(sj1*sj5);
IkReal x3416=((0.433012903784321)*r20);
IkReal x3417=((0.433012903784321)*sj5);
IkReal x3418=(cj1*r10);
IkReal x3419=(r22*sj1);
IkReal x3420=((0.433012903784321)*r10);
IkReal x3421=((0.433012903784321)*cj5);
IkReal x3422=(cj1*r21);
IkReal x3423=(cj1*r11);
IkReal x3424=(r11*sj1);
IkReal x3425=(cj1*cj4*x3417);
IkReal x3426=(cj5*sj1*x3413);
IkReal x3427=(cj4*r21*x3421);
if( IKabs((((x3417*x3418))+(((-1.0)*x3415*x3416))+((r20*x3426))+(((-1.0)*r21*sj1*x3421))+(((-1.0)*cj5*x3413*x3418))+((sj5*x3413*x3423))+((x3411*x3419))+(((-1.0)*cj1*r12*x3411))+(((-1.0)*cj4*x3417*x3418))+(((-1.0)*cj4*x3421*x3423))+(((-1.0)*cj1*x3410))+((x3421*x3423))+((cj4*x3415*x3416))+((sj1*x3427))+(((-1.0)*r21*x3413*x3415))+(((0.250000349687704)*x3419)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x3415*x3420))+(((-1.0)*r11*x3413*x3415))+((r10*x3426))+((x3411*x3412))+((sj1*x3410))+(((-1.0)*x3414*x3417))+((cj4*x3421*x3424))+((cj4*x3421*x3422))+(((-1.0)*x3415*x3420))+((r12*sj1*x3411))+(((-1.0)*sj5*x3413*x3422))+((cj5*x3413*x3414))+((cj4*x3414*x3417))+(((0.250000349687704)*x3412))+(((-1.0)*x3421*x3424))+(((-1.0)*x3421*x3422)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3417*x3418))+(((-1.0)*x3415*x3416))+((r20*x3426))+(((-1.0)*r21*sj1*x3421))+(((-1.0)*cj5*x3413*x3418))+((sj5*x3413*x3423))+((x3411*x3419))+(((-1.0)*cj1*r12*x3411))+(((-1.0)*cj4*x3417*x3418))+(((-1.0)*cj4*x3421*x3423))+(((-1.0)*cj1*x3410))+((x3421*x3423))+((cj4*x3415*x3416))+((sj1*x3427))+(((-1.0)*r21*x3413*x3415))+(((0.250000349687704)*x3419))))+IKsqr((((cj4*x3415*x3420))+(((-1.0)*r11*x3413*x3415))+((r10*x3426))+((x3411*x3412))+((sj1*x3410))+(((-1.0)*x3414*x3417))+((cj4*x3421*x3424))+((cj4*x3421*x3422))+(((-1.0)*x3415*x3420))+((r12*sj1*x3411))+(((-1.0)*sj5*x3413*x3422))+((cj5*x3413*x3414))+((cj4*x3414*x3417))+(((0.250000349687704)*x3412))+(((-1.0)*x3421*x3424))+(((-1.0)*x3421*x3422))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3417*x3418))+(((-1.0)*x3415*x3416))+((r20*x3426))+(((-1.0)*r21*sj1*x3421))+(((-1.0)*cj5*x3413*x3418))+((sj5*x3413*x3423))+((x3411*x3419))+(((-1.0)*cj1*r12*x3411))+(((-1.0)*cj4*x3417*x3418))+(((-1.0)*cj4*x3421*x3423))+(((-1.0)*cj1*x3410))+((x3421*x3423))+((cj4*x3415*x3416))+((sj1*x3427))+(((-1.0)*r21*x3413*x3415))+(((0.250000349687704)*x3419))), (((cj4*x3415*x3420))+(((-1.0)*r11*x3413*x3415))+((r10*x3426))+((x3411*x3412))+((sj1*x3410))+(((-1.0)*x3414*x3417))+((cj4*x3421*x3424))+((cj4*x3421*x3422))+(((-1.0)*x3415*x3420))+((r12*sj1*x3411))+(((-1.0)*sj5*x3413*x3422))+((cj5*x3413*x3414))+((cj4*x3414*x3417))+(((0.250000349687704)*x3412))+(((-1.0)*x3421*x3424))+(((-1.0)*x3421*x3422))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3428=IKcos(j2);
IkReal x3429=IKsin(j2);
IkReal x3430=(cj5*r11);
IkReal x3431=((0.433012903784321)*cj4);
IkReal x3432=(r21*sj5);
IkReal x3433=((0.500000349687582)*sj4);
IkReal x3434=((0.749999650312296)*sj3);
IkReal x3435=(cj3*cj4);
IkReal x3436=(cj5*r10);
IkReal x3437=((0.0185150129489311)*sj4);
IkReal x3438=(r20*sj5);
IkReal x3439=(cj4*r22);
IkReal x3440=(r10*sj5);
IkReal x3441=(r12*sj3);
IkReal x3442=(r11*sj5);
IkReal x3443=(r22*sj3);
IkReal x3444=((0.27144)*sj1);
IkReal x3445=((0.00925751294893567)*cj4);
IkReal x3446=(cj5*r20);
IkReal x3447=(cj5*r21);
IkReal x3448=(cj4*r12);
IkReal x3449=((0.866025201892125)*sj4);
IkReal x3450=(sj1*x3428);
IkReal x3451=(cj1*x3428);
IkReal x3452=(cj1*x3429);
IkReal x3453=((0.250000349687704)*cj4*sj3);
IkReal x3454=(cj3*x3449);
IkReal x3455=(sj1*x3429);
IkReal x3456=((1.0)*x3452);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3431*x3438))+x3451+x3455+(((-1.0)*x3446*x3449))+(((-1.0)*x3431*x3447))+(((0.433012903784321)*x3438))+((x3432*x3449))+(((0.433012903784321)*x3447))+(((-0.749999650312296)*x3439)));
evalcond[1]=((((-1.0)*x3456))+(((-0.749999650312296)*x3448))+((x3442*x3449))+(((-0.250000349687704)*r12))+(((-1.0)*x3430*x3431))+x3450+(((-1.0)*x3431*x3440))+(((-1.0)*x3436*x3449))+(((0.433012903784321)*x3430))+(((0.433012903784321)*x3440)));
evalcond[2]=(((x3438*x3445))+(((-1.0)*x3432*x3437))+(((-0.27144)*x3451))+(((0.0160344678271334)*x3439))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x3429*x3444))+(((-1.0)*pz))+((x3437*x3446))+((x3445*x3447))+(((0.0648043305514941)*x3438))+(((0.0648043305514941)*x3447)));
evalcond[3]=((((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x3430*x3445))+(((-1.0)*x3428*x3444))+(((-1.0)*py))+(((0.27144)*x3452))+(((-1.0)*x3437*x3442))+((x3436*x3437))+(((0.0648043305514941)*x3430))+((x3440*x3445))+(((0.0648043305514941)*x3440))+(((0.0160344678271334)*x3448)));
evalcond[4]=((((-1.0)*x3456))+((x3434*x3438))+((x3447*x3453))+((cj3*x3433*x3438))+((cj3*x3433*x3447))+((x3434*x3447))+((r22*x3454))+x3450+((x3432*x3435))+((x3431*x3443))+(((-1.0)*sj3*x3432*x3433))+(((-0.433012903784321)*x3443))+((sj3*x3433*x3446))+(((-1.0)*x3435*x3446))+((x3438*x3453)));
evalcond[5]=((((-1.0)*sj3*x3433*x3442))+((r12*x3454))+((cj3*x3433*x3440))+((x3435*x3442))+((sj3*x3433*x3436))+((x3430*x3434))+((x3434*x3440))+(((-1.0)*x3455))+(((-1.0)*x3451))+((x3430*x3453))+((x3431*x3441))+(((-0.433012903784321)*x3441))+((cj3*x3430*x3433))+(((-1.0)*x3435*x3436))+((x3440*x3453)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3457=(cj4*sj1);
IkReal x3458=((0.433012903784321)*sj0);
IkReal x3459=(cj5*r21);
IkReal x3460=(cj1*r12);
IkReal x3461=(r20*sj5);
IkReal x3462=(r20*sj0);
IkReal x3463=(r10*sj1);
IkReal x3464=((0.749999650312296)*cj4);
IkReal x3465=(r21*sj0);
IkReal x3466=((0.433012903784321)*sj5);
IkReal x3467=(cj1*cj4);
IkReal x3468=(r22*sj0);
IkReal x3469=((0.250000349687704)*x3468);
IkReal x3470=((0.866025201892125)*cj5*sj4);
IkReal x3471=((0.433012903784321)*cj5*r11);
IkReal x3472=(cj1*r10*x3466);
IkReal x3473=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3474=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x3475=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3475.valid){
continue;
}
CheckValue<IkReal> x3476 = IKatan2WithCheck(IkReal((((sj1*x3462*x3470))+(((0.250000349687704)*x3460))+((x3457*x3458*x3461))+(((-1.0)*x3465*x3473))+((x3460*x3464))+((x3467*x3471))+(((-1.0)*sj1*x3458*x3461))+((r10*x3466*x3467))+(((-1.0)*cj1*x3471))+(((-1.0)*sj1*x3458*x3459))+(((-1.0)*r11*x3474))+((x3457*x3458*x3459))+((sj1*x3469))+(((0.749999650312296)*x3457*x3468))+(((-1.0)*x3472))+((cj1*r10*x3470)))),IkReal(((((-1.0)*x3463*x3470))+(((-0.250000349687704)*r12*sj1))+(((-1.0)*x3465*x3474))+(((-0.749999650312296)*r12*x3457))+(((-1.0)*cj1*x3458*x3461))+(((-1.0)*cj1*x3458*x3459))+((x3463*x3466))+((x3458*x3461*x3467))+((sj1*x3471))+((r11*x3473))+((cj1*x3469))+((x3458*x3459*x3467))+((cj1*x3462*x3470))+(((-1.0)*r10*x3457*x3466))+(((-1.0)*x3457*x3471))+((cj1*x3464*x3468)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3476.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3475.value)))+(x3476.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3477=IKsin(j2);
IkReal x3478=IKcos(j2);
IkReal x3479=(cj4*sj5);
IkReal x3480=(cj3*r21);
IkReal x3481=((0.433012903784321)*r20);
IkReal x3482=((0.749999650312296)*cj4);
IkReal x3483=(cj4*cj5);
IkReal x3484=((1.0)*cj3);
IkReal x3485=((0.433012903784321)*r01);
IkReal x3486=(sj4*sj5);
IkReal x3487=((0.749999650312296)*sj3);
IkReal x3488=(r10*sj5);
IkReal x3489=((0.500000349687582)*sj3);
IkReal x3490=(cj0*sj1);
IkReal x3491=((0.500000349687582)*cj3);
IkReal x3492=((0.0160344678271334)*r22);
IkReal x3493=(r20*sj3);
IkReal x3494=(r00*sj5);
IkReal x3495=(cj3*r11);
IkReal x3496=((0.0160344678271334)*r12);
IkReal x3497=((0.433012903784321)*r11);
IkReal x3498=(cj5*r11);
IkReal x3499=(r10*sj3);
IkReal x3500=(r00*sj3);
IkReal x3501=((0.433012903784321)*sj3);
IkReal x3502=(cj5*sj4);
IkReal x3503=(r20*sj5);
IkReal x3504=((0.433012903784321)*r21);
IkReal x3505=(sj0*sj1);
IkReal x3506=(cj3*r01);
IkReal x3507=(cj5*r21);
IkReal x3508=((0.0160344678271334)*r02);
IkReal x3509=(cj5*r01);
IkReal x3510=((0.250000349687704)*sj3);
IkReal x3511=(cj1*x3477);
IkReal x3512=((0.500000349687582)*x3502);
IkReal x3513=((0.27144)*x3478);
IkReal x3514=(cj4*x3501);
IkReal x3515=(sj1*x3477);
IkReal x3516=((0.866025201892125)*cj3*sj4);
IkReal x3517=(cj1*x3478);
IkReal x3518=((1.0)*x3478);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x3481))+x3517+x3515+((cj5*x3504))+(((-0.866025201892125)*r20*x3502))+(((-1.0)*x3479*x3481))+(((-1.0)*x3483*x3504))+(((0.866025201892125)*r21*x3486))+(((-1.0)*r22*x3482)));
evalcond[1]=((((-1.0)*x3483*x3485))+(((-0.250000349687704)*r02))+((cj5*x3485))+(((-0.866025201892125)*r00*x3502))+(((-0.433012903784321)*r00*x3479))+(((-1.0)*r02*x3482))+((cj0*x3511))+(((0.866025201892125)*r01*x3486))+(((0.433012903784321)*x3494))+(((-1.0)*x3490*x3518)));
evalcond[2]=((((-0.433012903784321)*r10*x3479))+(((-0.250000349687704)*r12))+(((-1.0)*x3483*x3497))+(((-1.0)*r12*x3482))+((cj5*x3497))+(((0.866025201892125)*r11*x3486))+(((0.433012903784321)*x3488))+(((-1.0)*x3505*x3518))+((sj0*x3511))+(((-0.866025201892125)*r10*x3502)));
evalcond[3]=((((-1.0)*cj1*x3513))+(((-1.0)*x3492))+(((-0.27144)*x3515))+(((0.41)*cj1))+((cj4*x3492))+(((0.0648043305514941)*x3507))+(((0.0648043305514941)*x3503))+(((0.0185150129489311)*r20*x3502))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x3483))+(((0.00925751294893567)*r20*x3479))+(((-0.0185150129489311)*r21*x3486)));
evalcond[4]=(((cj4*x3508))+(((0.00925751294893567)*r01*x3483))+(((0.00925751294893567)*r00*x3479))+(((0.0648043305514941)*x3509))+(((-1.0)*x3508))+(((-1.0)*px))+(((0.0648043305514941)*x3494))+(((-0.0185150129489311)*r01*x3486))+(((0.0185150129489311)*r00*x3502))+(((-0.41)*x3490))+(((-0.27144)*cj0*x3511))+(((0.0098)*sj0))+((x3490*x3513)));
evalcond[5]=((((0.0185150129489311)*r10*x3502))+(((-0.0185150129489311)*r11*x3486))+(((0.00925751294893567)*r11*x3483))+(((-1.0)*x3496))+((cj4*x3496))+(((-1.0)*py))+(((0.0648043305514941)*x3488))+(((0.0648043305514941)*x3498))+(((0.00925751294893567)*r10*x3479))+(((-0.0098)*cj0))+(((-0.27144)*sj0*x3511))+((x3505*x3513))+(((-0.41)*x3505)));
evalcond[6]=((((-1.0)*r21*x3486*x3489))+(((0.250000349687704)*x3479*x3493))+((x3479*x3480))+((x3487*x3503))+((x3487*x3507))+(((-1.0)*r22*x3501))+((r22*x3516))+((r22*x3514))+((r20*x3489*x3502))+((sj1*x3478))+(((-1.0)*r20*x3483*x3484))+((r20*x3486*x3491))+((x3480*x3512))+(((-1.0)*x3511))+((r21*x3483*x3510)));
evalcond[7]=(((r00*x3489*x3502))+(((-1.0)*r01*x3486*x3489))+((x3479*x3506))+((x3477*x3490))+(((0.250000349687704)*x3479*x3500))+((cj0*x3517))+((r02*x3516))+((r02*x3514))+((x3487*x3509))+((r00*x3486*x3491))+((x3487*x3494))+((r01*x3483*x3510))+(((-1.0)*r02*x3501))+(((-1.0)*r00*x3483*x3484))+((r01*x3491*x3502)));
evalcond[8]=((((-1.0)*r12*x3501))+((x3479*x3495))+((r11*x3483*x3510))+((r10*x3486*x3491))+(((0.250000349687704)*x3479*x3499))+(((-1.0)*r11*x3486*x3489))+((sj4*x3491*x3498))+((x3487*x3488))+((r10*x3489*x3502))+((x3477*x3505))+(((-1.0)*r10*x3483*x3484))+((r12*x3516))+((r12*x3514))+((sj0*x3517))+((x3487*x3498)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3519=(cj0*r20);
IkReal x3520=(cj1*r00);
IkReal x3521=(r02*sj1);
IkReal x3522=(r00*sj1);
IkReal x3523=((0.433012903784321)*sj5);
IkReal x3524=(cj4*sj1);
IkReal x3525=((0.749999650312296)*cj4);
IkReal x3526=(cj0*r22);
IkReal x3527=(r01*sj1);
IkReal x3528=(cj1*cj4);
IkReal x3529=(cj0*r21);
IkReal x3530=(cj1*r02);
IkReal x3531=((0.866025201892125)*cj5*sj4);
IkReal x3532=((0.866025201892125)*sj4*sj5);
IkReal x3533=((0.433012903784321)*cj5*r01);
IkReal x3534=((0.433012903784321)*cj5*x3529);
CheckValue<IkReal> x3535 = IKatan2WithCheck(IkReal((((x3519*x3523*x3524))+(((-1.0)*sj1*x3534))+(((-1.0)*cj1*r01*x3532))+((x3520*x3531))+(((-1.0)*sj1*x3519*x3523))+((sj1*x3519*x3531))+(((-1.0)*sj1*x3529*x3532))+(((-1.0)*cj1*x3533))+((x3525*x3530))+(((0.250000349687704)*sj1*x3526))+((x3524*x3534))+(((-1.0)*x3520*x3523))+((x3528*x3533))+(((0.250000349687704)*x3530))+((cj4*x3520*x3523))+(((0.749999650312296)*x3524*x3526)))),IkReal((((x3519*x3523*x3528))+((cj1*x3525*x3526))+(((-1.0)*cj1*x3519*x3523))+(((-1.0)*x3524*x3533))+(((-1.0)*cj1*x3534))+(((0.250000349687704)*cj1*x3526))+((x3522*x3523))+(((-1.0)*cj4*x3522*x3523))+(((-1.0)*x3521*x3525))+(((-1.0)*cj1*x3529*x3532))+((cj1*x3519*x3531))+(((-1.0)*x3522*x3531))+((x3528*x3534))+((x3527*x3532))+(((0.433012903784321)*cj5*x3527))+(((-0.250000349687704)*x3521)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3535.valid){
continue;
}
CheckValue<IkReal> x3536=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3536.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3535.value)+(((1.5707963267949)*(x3536.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3537=IKsin(j2);
IkReal x3538=IKcos(j2);
IkReal x3539=(cj4*sj5);
IkReal x3540=(cj3*r21);
IkReal x3541=((0.433012903784321)*r20);
IkReal x3542=((0.749999650312296)*cj4);
IkReal x3543=(cj4*cj5);
IkReal x3544=((1.0)*cj3);
IkReal x3545=((0.433012903784321)*r01);
IkReal x3546=(sj4*sj5);
IkReal x3547=((0.749999650312296)*sj3);
IkReal x3548=(r10*sj5);
IkReal x3549=((0.500000349687582)*sj3);
IkReal x3550=(cj0*sj1);
IkReal x3551=((0.500000349687582)*cj3);
IkReal x3552=((0.0160344678271334)*r22);
IkReal x3553=(r20*sj3);
IkReal x3554=(r00*sj5);
IkReal x3555=(cj3*r11);
IkReal x3556=((0.0160344678271334)*r12);
IkReal x3557=((0.433012903784321)*r11);
IkReal x3558=(cj5*r11);
IkReal x3559=(r10*sj3);
IkReal x3560=(r00*sj3);
IkReal x3561=((0.433012903784321)*sj3);
IkReal x3562=(cj5*sj4);
IkReal x3563=(r20*sj5);
IkReal x3564=((0.433012903784321)*r21);
IkReal x3565=(sj0*sj1);
IkReal x3566=(cj3*r01);
IkReal x3567=(cj5*r21);
IkReal x3568=((0.0160344678271334)*r02);
IkReal x3569=(cj5*r01);
IkReal x3570=((0.250000349687704)*sj3);
IkReal x3571=(cj1*x3537);
IkReal x3572=((0.500000349687582)*x3562);
IkReal x3573=((0.27144)*x3538);
IkReal x3574=(cj4*x3561);
IkReal x3575=(sj1*x3537);
IkReal x3576=((0.866025201892125)*cj3*sj4);
IkReal x3577=(cj1*x3538);
IkReal x3578=((1.0)*x3538);
evalcond[0]=((((-1.0)*x3539*x3541))+(((-0.250000349687704)*r22))+(((-1.0)*x3543*x3564))+(((-0.866025201892125)*r20*x3562))+((cj5*x3564))+x3575+x3577+(((-1.0)*r22*x3542))+((sj5*x3541))+(((0.866025201892125)*r21*x3546)));
evalcond[1]=((((-1.0)*r02*x3542))+(((-0.250000349687704)*r02))+(((0.433012903784321)*x3554))+((cj0*x3571))+(((0.866025201892125)*r01*x3546))+(((-1.0)*x3550*x3578))+((cj5*x3545))+(((-1.0)*x3543*x3545))+(((-0.866025201892125)*r00*x3562))+(((-0.433012903784321)*r00*x3539)));
evalcond[2]=((((0.433012903784321)*x3548))+(((-0.250000349687704)*r12))+(((-1.0)*x3565*x3578))+(((-1.0)*x3543*x3557))+((cj5*x3557))+(((-0.866025201892125)*r10*x3562))+(((-1.0)*r12*x3542))+((sj0*x3571))+(((-0.433012903784321)*r10*x3539))+(((0.866025201892125)*r11*x3546)));
evalcond[3]=((((-0.0185150129489311)*r21*x3546))+(((0.00925751294893567)*r21*x3543))+(((-0.27144)*x3575))+(((0.0185150129489311)*r20*x3562))+(((0.41)*cj1))+((cj4*x3552))+(((-1.0)*pz))+(((0.0648043305514941)*x3567))+(((0.0648043305514941)*x3563))+(((0.00925751294893567)*r20*x3539))+(((-1.0)*x3552))+(((-1.0)*cj1*x3573)));
evalcond[4]=((((-0.41)*x3550))+((cj4*x3568))+(((-0.0185150129489311)*r01*x3546))+(((-1.0)*x3568))+(((-1.0)*px))+(((0.0648043305514941)*x3569))+((x3550*x3573))+(((0.00925751294893567)*r00*x3539))+(((0.0648043305514941)*x3554))+(((0.00925751294893567)*r01*x3543))+(((-0.27144)*cj0*x3571))+(((0.0185150129489311)*r00*x3562))+(((0.0098)*sj0)));
evalcond[5]=((((-0.0185150129489311)*r11*x3546))+((cj4*x3556))+(((-1.0)*py))+(((0.0648043305514941)*x3548))+(((0.0648043305514941)*x3558))+(((0.00925751294893567)*r11*x3543))+(((-1.0)*x3556))+(((0.0185150129489311)*r10*x3562))+(((0.00925751294893567)*r10*x3539))+(((-0.41)*x3565))+(((-0.0098)*cj0))+((x3565*x3573))+(((-0.27144)*sj0*x3571)));
evalcond[6]=(((r20*x3549*x3562))+((sj1*x3538))+(((0.250000349687704)*x3539*x3553))+((r20*x3546*x3551))+((x3539*x3540))+(((-1.0)*r22*x3561))+((x3547*x3567))+((x3547*x3563))+((r22*x3574))+((r22*x3576))+(((-1.0)*x3571))+((r21*x3543*x3570))+(((-1.0)*r21*x3546*x3549))+((x3540*x3572))+(((-1.0)*r20*x3543*x3544)));
evalcond[7]=((((-1.0)*r01*x3546*x3549))+(((-1.0)*r02*x3561))+(((-1.0)*r00*x3543*x3544))+((r01*x3543*x3570))+((cj0*x3577))+((r00*x3546*x3551))+((r01*x3551*x3562))+((x3547*x3554))+(((0.250000349687704)*x3539*x3560))+((x3539*x3566))+((r00*x3549*x3562))+((x3547*x3569))+((r02*x3574))+((r02*x3576))+((x3537*x3550)));
evalcond[8]=(((sj4*x3551*x3558))+((r10*x3549*x3562))+((r11*x3543*x3570))+(((0.250000349687704)*x3539*x3559))+((r10*x3546*x3551))+((x3547*x3558))+((x3539*x3555))+(((-1.0)*r12*x3561))+((x3547*x3548))+((r12*x3574))+((r12*x3576))+((sj0*x3577))+((x3537*x3565))+(((-1.0)*r11*x3546*x3549))+(((-1.0)*r10*x3543*x3544)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3579=((0.26409636501044)*cj4);
IkReal x3580=(r20*sj5);
IkReal x3581=(cj5*r21);
IkReal x3582=(r10*sj5);
IkReal x3583=(cj5*r11);
IkReal x3584=((0.528192360616262)*sj4);
IkReal x3585=((0.18234135315471)*sj0);
IkReal x3586=(r12*sj0);
IkReal x3587=((0.10827950965428)*cj4*sj0);
IkReal x3588=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x3589=IKPowWithIntegerCheck(sj0,-2);
if(!x3589.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x3589.value)*((((x3583*x3585))+(((-0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x3586))+(((-1.0)*x3582*x3587))+((r11*sj5*x3588))+(((-1.0)*x3583*x3587))+(((-0.0838945627463637)*x3586))+(((-1.0)*py*sj0))+((x3582*x3585))+(((-1.0)*cj5*r10*x3588)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x3584))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x3581))+(((-0.444735007694415)*x3580))+((x3579*x3580))+((x3579*x3581))+(((-1.0)*r21*sj5*x3584))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x3589.value)*((((x3583*x3585))+(((-0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x3586))+(((-1.0)*x3582*x3587))+((r11*sj5*x3588))+(((-1.0)*x3583*x3587))+(((-0.0838945627463637)*x3586))+(((-1.0)*py*sj0))+((x3582*x3585))+(((-1.0)*cj5*r10*x3588))))))+IKsqr((((cj5*r20*x3584))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x3581))+(((-0.444735007694415)*x3580))+((x3579*x3580))+((x3579*x3581))+(((-1.0)*r21*sj5*x3584))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x3589.value)*((((x3583*x3585))+(((-0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x3586))+(((-1.0)*x3582*x3587))+((r11*sj5*x3588))+(((-1.0)*x3583*x3587))+(((-0.0838945627463637)*x3586))+(((-1.0)*py*sj0))+((x3582*x3585))+(((-1.0)*cj5*r10*x3588))))), (((cj5*r20*x3584))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x3581))+(((-0.444735007694415)*x3580))+((x3579*x3580))+((x3579*x3581))+(((-1.0)*r21*sj5*x3584))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3590=IKsin(j1);
IkReal x3591=IKcos(j1);
IkReal x3592=sj0*sj0;
IkReal x3593=cj0*cj0;
IkReal x3594=((0.0098)*cj0);
IkReal x3595=(cj0*cj5);
IkReal x3596=(cj5*sj0);
IkReal x3597=((0.0648043305514941)*r21);
IkReal x3598=(r00*sj5);
IkReal x3599=((0.20357990508077)*sj3);
IkReal x3600=((0.135720094919197)*r21);
IkReal x3601=((1.0)*px);
IkReal x3602=((0.117537022603216)*sj3);
IkReal x3603=((0.00925751294893567)*cj4);
IkReal x3604=(r10*sj4);
IkReal x3605=(sj0*sj5);
IkReal x3606=(cj4*sj0);
IkReal x3607=(r20*sj5);
IkReal x3608=((0.10827950965428)*cj4);
IkReal x3609=(cj3*sj4);
IkReal x3610=((0.135720094919197)*sj5);
IkReal x3611=((0.117537022603216)*r11);
IkReal x3612=(cj5*r01);
IkReal x3613=(cj4*r02);
IkReal x3614=((0.117537022603216)*cj4);
IkReal x3615=((0.0160344678271334)*r02);
IkReal x3616=((0.0648043305514941)*r11);
IkReal x3617=((0.0160344678271334)*r12);
IkReal x3618=(cj0*cj4);
IkReal x3619=(cj5*sj3);
IkReal x3620=((0.0678600949192303)*cj4);
IkReal x3621=(r10*sj5);
IkReal x3622=((1.0)*py);
IkReal x3623=(cj5*r00);
IkReal x3624=(cj0*r21);
IkReal x3625=(r11*sj5);
IkReal x3626=((0.0160344678271334)*r22);
IkReal x3627=(r00*sj4);
IkReal x3628=((1.0)*pz);
IkReal x3629=(r22*sj0);
IkReal x3630=(sj3*sj4);
IkReal x3631=(cj5*r21);
IkReal x3632=(r21*sj3);
IkReal x3633=(cj0*r22);
IkReal x3634=((0.0185150129489311)*sj4);
IkReal x3635=(cj5*r11);
IkReal x3636=(r01*sj5);
IkReal x3637=((0.216558867852667)*sj4);
IkReal x3638=((0.135720094919197)*r20);
IkReal x3639=(sj0*x3594);
IkReal x3640=(sj4*x3605);
IkReal x3641=((0.27144)*cj3*cj4);
IkReal x3642=(r11*x3603);
IkReal x3643=((0.41)*x3590);
IkReal x3644=(cj0*x3621);
IkReal x3645=(sj5*x3634);
IkReal x3646=((0.41)*x3591);
IkReal x3647=(cj0*sj0*x3643);
evalcond[0]=(((cj5*r20*x3637))+(((-1.0)*r21*sj5*x3637))+((x3607*x3608))+((x3608*x3631))+(((0.187545437253636)*cj4*r22))+(((-0.18234135315471)*x3631))+pz+(((-0.18234135315471)*x3607))+(((0.0838945627463637)*r22))+(((-1.0)*x3646)));
evalcond[1]=((((0.18234135315471)*r11*x3596))+(((-1.0)*sj0*x3622))+(((-1.0)*r10*x3605*x3608))+(((-0.187545437253636)*r12*x3606))+((r11*x3605*x3637))+(((-1.0)*x3639))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*x3592*x3643))+(((0.18234135315471)*r10*x3605))+(((-0.216558867852667)*x3596*x3604))+(((-1.0)*r11*x3596*x3608)));
evalcond[2]=((((0.18234135315471)*r01*x3595))+(((-0.216558867852667)*x3595*x3627))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*r01*x3595*x3608))+(((-1.0)*cj0*x3601))+x3639+(((-1.0)*cj0*x3598*x3608))+(((0.18234135315471)*cj0*x3598))+(((-1.0)*x3593*x3643))+((cj0*x3636*x3637))+(((-0.187545437253636)*cj0*x3613)));
evalcond[3]=((((0.0648043305514941)*r20*x3605))+((x3599*x3621))+(((0.135720094919197)*x3609*x3635))+(((-1.0)*sj0*x3628))+(((-1.0)*sj0*x3626))+((r20*x3603*x3605))+((sj3*x3620*x3621))+(((-1.0)*r12*x3602))+(((0.135720094919197)*x3604*x3619))+(((-1.0)*cj5*r10*x3641))+(((0.235073880801598)*r12*x3609))+((r21*x3596*x3603))+((x3599*x3635))+((x3596*x3597))+(((-1.0)*r11*x3610*x3630))+((r11*x3619*x3620))+(((-1.0)*r21*x3605*x3634))+((x3625*x3641))+((x3606*x3626))+((cj3*x3604*x3610))+((sj0*x3646))+((cj4*r12*x3602))+((r20*x3596*x3634)));
evalcond[4]=(((r20*x3595*x3634))+((x3598*x3599))+(((0.135720094919197)*x3619*x3627))+(((0.0648043305514941)*cj0*x3607))+(((-1.0)*x3623*x3641))+(((0.135720094919197)*x3609*x3612))+((x3618*x3626))+(((0.135720094919197)*x3598*x3609))+(((0.235073880801598)*r02*x3609))+((x3595*x3597))+(((-1.0)*r01*x3610*x3630))+(((-1.0)*r02*x3602))+((sj3*x3612*x3620))+((x3599*x3612))+((x3636*x3641))+((sj3*x3598*x3620))+((cj0*x3603*x3607))+(((-1.0)*x3624*x3645))+((x3602*x3613))+((r21*x3595*x3603))+((cj0*x3646))+(((-1.0)*cj0*x3626))+(((-1.0)*cj0*x3628)));
evalcond[5]=((((-1.0)*x3622))+(((-0.235073880801598)*x3609*x3629))+(((-1.0)*x3596*x3630*x3638))+(((-1.0)*sj0*x3643))+((cj5*x3616))+((cj4*x3617))+(((0.0185150129489311)*cj5*x3604))+(((-1.0)*r22*x3602*x3606))+((x3602*x3629))+((x3603*x3621))+(((-1.0)*r21*x3596*x3599))+(((0.0648043305514941)*x3621))+((r20*x3596*x3641))+(((-1.0)*r20*x3599*x3605))+(((-1.0)*x3596*x3620*x3632))+(((-1.0)*r20*sj3*x3605*x3620))+(((-1.0)*x3596*x3600*x3609))+(((-1.0)*x3617))+(((-1.0)*x3625*x3634))+(((-1.0)*x3594))+((x3603*x3635))+(((-1.0)*x3605*x3609*x3638))+(((-1.0)*r21*x3605*x3641))+((x3600*x3605*x3630)));
evalcond[6]=((((0.0648043305514941)*x3612))+(((-1.0)*x3634*x3636))+(((0.0160344678271334)*x3613))+(((-1.0)*cj0*x3643))+(((-0.135720094919197)*cj0*x3607*x3609))+(((0.0648043305514941)*x3598))+(((-1.0)*r22*x3602*x3618))+((x3598*x3603))+((x3623*x3634))+((cj0*sj5*x3600*x3630))+(((-1.0)*r21*x3595*x3599))+(((-0.27144)*cj3*r21*sj5*x3618))+(((-1.0)*x3595*x3600*x3609))+(((-0.235073880801598)*x3609*x3633))+((r20*x3595*x3641))+(((-1.0)*x3601))+(((-1.0)*x3615))+((x3603*x3612))+(((-1.0)*cj0*x3599*x3607))+(((-0.0678600949192303)*sj3*x3607*x3618))+((x3602*x3633))+(((-1.0)*x3595*x3620*x3632))+(((0.0098)*sj0))+(((-1.0)*x3595*x3630*x3638)));
evalcond[7]=((((-0.0678600949192303)*cj0*r12))+(((-0.20357990508077)*r12*x3618))+(((0.0185150129489311)*x3596*x3627))+(((0.0098)*x3592))+(((-1.0)*x3614*x3644))+(((-1.0)*cj4*x3595*x3611))+(((-1.0)*r01*x3605*x3634))+(((0.117537022603216)*x3644))+((x3595*x3611))+(((-1.0)*sj0*x3601))+(((-1.0)*sj0*x3615))+(((0.0648043305514941)*r01*x3596))+(((-0.235073880801598)*x3595*x3604))+(((0.235073880801598)*cj0*sj4*x3625))+((r01*x3596*x3603))+(((0.0648043305514941)*sj0*x3598))+((sj0*x3598*x3603))+(((-1.0)*x3647))+((x3606*x3615)));
evalcond[8]=((((-0.0098)*x3593))+(((0.235073880801598)*r01*x3640))+(((0.117537022603216)*r01*x3596))+((x3595*x3642))+(((0.0648043305514941)*x3644))+(((-1.0)*r01*x3596*x3614))+(((0.117537022603216)*sj0*x3598))+((x3595*x3616))+(((-1.0)*cj0*x3617))+((x3603*x3644))+((x3617*x3618))+(((-0.117537022603216)*x3598*x3606))+(((-1.0)*cj0*x3625*x3634))+(((-0.235073880801598)*x3596*x3627))+(((-0.20357990508077)*r02*x3606))+(((-0.0678600949192303)*r02*sj0))+(((0.0185150129489311)*x3595*x3604))+(((-1.0)*x3647))+(((-1.0)*cj0*x3622)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3648=((0.250000349687704)*sj1);
IkReal x3649=(cj1*cj4);
IkReal x3650=((0.749999650312296)*r22);
IkReal x3651=(cj4*sj1);
IkReal x3652=((0.749999650312296)*r02);
IkReal x3653=((0.250000349687704)*cj1);
IkReal x3654=((0.433012903784321)*r00*sj5);
IkReal x3655=((0.433012903784321)*r20*sj5);
IkReal x3656=((0.433012903784321)*cj5*r01);
IkReal x3657=((0.433012903784321)*cj5*r21);
IkReal x3658=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3659=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3660=((0.866025201892125)*r01*sj4*sj5);
IkReal x3661=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r00*x3659))+((x3649*x3652))+((x3649*x3656))+((x3649*x3654))+((r20*x3658))+((x3650*x3651))+((x3651*x3657))+((x3651*x3655))+(((-1.0)*sj1*x3661))+(((-1.0)*cj1*x3654))+(((-1.0)*cj1*x3656))+((r02*x3653))+((r22*x3648))+(((-1.0)*sj1*x3657))+(((-1.0)*sj1*x3655))+(((-1.0)*cj1*x3660)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x3660))+((x3649*x3650))+((x3649*x3657))+((x3649*x3655))+((r20*x3659))+(((-1.0)*x3651*x3652))+(((-1.0)*x3651*x3654))+(((-1.0)*x3651*x3656))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3657))+((sj1*x3656))+((sj1*x3654))+(((-1.0)*r00*x3658))+(((-1.0)*cj1*x3661))+(((-1.0)*r02*x3648))+((r22*x3653)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x3659))+((x3649*x3652))+((x3649*x3656))+((x3649*x3654))+((r20*x3658))+((x3650*x3651))+((x3651*x3657))+((x3651*x3655))+(((-1.0)*sj1*x3661))+(((-1.0)*cj1*x3654))+(((-1.0)*cj1*x3656))+((r02*x3653))+((r22*x3648))+(((-1.0)*sj1*x3657))+(((-1.0)*sj1*x3655))+(((-1.0)*cj1*x3660))))+IKsqr((((sj1*x3660))+((x3649*x3650))+((x3649*x3657))+((x3649*x3655))+((r20*x3659))+(((-1.0)*x3651*x3652))+(((-1.0)*x3651*x3654))+(((-1.0)*x3651*x3656))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3657))+((sj1*x3656))+((sj1*x3654))+(((-1.0)*r00*x3658))+(((-1.0)*cj1*x3661))+(((-1.0)*r02*x3648))+((r22*x3653))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r00*x3659))+((x3649*x3652))+((x3649*x3656))+((x3649*x3654))+((r20*x3658))+((x3650*x3651))+((x3651*x3657))+((x3651*x3655))+(((-1.0)*sj1*x3661))+(((-1.0)*cj1*x3654))+(((-1.0)*cj1*x3656))+((r02*x3653))+((r22*x3648))+(((-1.0)*sj1*x3657))+(((-1.0)*sj1*x3655))+(((-1.0)*cj1*x3660))), (((sj1*x3660))+((x3649*x3650))+((x3649*x3657))+((x3649*x3655))+((r20*x3659))+(((-1.0)*x3651*x3652))+(((-1.0)*x3651*x3654))+(((-1.0)*x3651*x3656))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3657))+((sj1*x3656))+((sj1*x3654))+(((-1.0)*r00*x3658))+(((-1.0)*cj1*x3661))+(((-1.0)*r02*x3648))+((r22*x3653))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3662=IKsin(j2);
IkReal x3663=IKcos(j2);
IkReal x3664=((0.749999650312296)*sj3);
IkReal x3665=(cj5*r01);
IkReal x3666=(r00*sj5);
IkReal x3667=(cj4*cj5);
IkReal x3668=((1.0)*cj3);
IkReal x3669=(r21*sj3);
IkReal x3670=(cj4*sj5);
IkReal x3671=(cj3*r21);
IkReal x3672=((0.500000349687582)*sj4);
IkReal x3673=((0.433012903784321)*r20);
IkReal x3674=(cj4*r22);
IkReal x3675=((0.433012903784321)*sj3);
IkReal x3676=((0.433012903784321)*cj4);
IkReal x3677=(r01*sj5);
IkReal x3678=(r20*sj5);
IkReal x3679=((0.0160344678271334)*r02);
IkReal x3680=(cj4*r02);
IkReal x3681=((0.00925751294893567)*cj4);
IkReal x3682=((0.0185150129489311)*sj4);
IkReal x3683=(r21*sj5);
IkReal x3684=(cj5*r21);
IkReal x3685=((0.866025201892125)*sj4);
IkReal x3686=(cj5*r20);
IkReal x3687=(cj5*r00);
IkReal x3688=((0.250000349687704)*sj3);
IkReal x3689=(cj1*x3663);
IkReal x3690=(sj1*x3662);
IkReal x3691=(cj1*x3662);
IkReal x3692=(sj1*x3663);
IkReal x3693=(x3690+x3689);
evalcond[0]=((((-0.433012903784321)*r21*x3667))+(((-0.250000349687704)*r22))+(((-1.0)*x3670*x3673))+(((0.433012903784321)*x3684))+((sj5*x3673))+x3693+(((-1.0)*x3685*x3686))+(((-0.749999650312296)*x3674))+((x3683*x3685)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x3665))+(((0.433012903784321)*x3666))+(((-1.0)*x3665*x3676))+x3691+(((-1.0)*x3685*x3687))+(((-1.0)*x3666*x3676))+(((-0.749999650312296)*x3680))+(((-1.0)*x3692))+((x3677*x3685)));
evalcond[2]=((((0.00925751294893567)*r20*x3670))+(((0.41)*cj1))+(((0.0648043305514941)*x3678))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x3674))+(((-1.0)*x3682*x3683))+(((0.00925751294893567)*r21*x3667))+(((0.0648043305514941)*x3684))+(((-1.0)*pz))+(((-0.27144)*x3689))+((x3682*x3686))+(((-0.27144)*x3690)));
evalcond[3]=((((0.0648043305514941)*x3666))+(((0.0648043305514941)*x3665))+(((-0.41)*sj1))+(((0.27144)*x3692))+(((-1.0)*x3677*x3682))+(((-1.0)*px))+((cj4*x3679))+((x3682*x3687))+((x3666*x3681))+(((-1.0)*x3679))+((x3665*x3681))+(((-0.27144)*x3691)));
evalcond[4]=((((-1.0)*r00*x3667*x3668))+((cj4*x3665*x3688))+((cj3*r01*x3670))+((cj3*r02*x3685))+((sj3*x3672*x3687))+(((-1.0)*sj3*x3672*x3677))+((x3664*x3665))+((x3664*x3666))+x3693+((x3675*x3680))+(((-1.0)*r02*x3675))+((cj3*x3666*x3672))+((cj4*x3666*x3688))+((cj3*x3665*x3672)));
evalcond[5]=(((x3664*x3678))+(((0.250000349687704)*x3667*x3669))+((sj3*x3672*x3686))+((x3674*x3675))+((x3664*x3684))+((cj3*x3672*x3678))+x3692+((r20*x3670*x3688))+(((-1.0)*r22*x3675))+((cj5*x3671*x3672))+((x3670*x3671))+(((-1.0)*x3691))+(((-1.0)*sj5*x3669*x3672))+((cj3*r22*x3685))+(((-1.0)*r20*x3667*x3668)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3694=(r02*sj1);
IkReal x3695=(cj1*cj4);
IkReal x3696=((0.749999650312296)*r22);
IkReal x3697=(cj4*sj1);
IkReal x3698=((0.250000349687704)*r22);
IkReal x3699=((0.433012903784321)*r00*sj5);
IkReal x3700=((0.433012903784321)*r20*sj5);
IkReal x3701=((0.433012903784321)*cj5*r01);
IkReal x3702=((0.433012903784321)*cj5*r21);
IkReal x3703=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3704=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3705=((0.866025201892125)*r01*sj4*sj5);
IkReal x3706=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*r00*x3704))+((x3696*x3697))+(((-0.749999650312296)*r02*x3695))+((x3697*x3702))+((x3697*x3700))+((r20*x3703))+((cj1*x3699))+((sj1*x3698))+(((-1.0)*x3695*x3699))+(((-1.0)*sj1*x3706))+(((-1.0)*sj1*x3700))+(((-1.0)*sj1*x3702))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x3695*x3701))+((cj1*x3705))+((cj1*x3701)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x3699))+((x3697*x3699))+((x3695*x3700))+((x3695*x3702))+(((-1.0)*cj1*x3702))+(((-1.0)*cj1*x3700))+(((-1.0)*cj1*x3706))+((r00*x3703))+((x3695*x3696))+((x3697*x3701))+((r20*x3704))+(((0.250000349687704)*x3694))+(((0.749999650312296)*cj4*x3694))+((cj1*x3698))+(((-1.0)*sj1*x3705))+(((-1.0)*sj1*x3701)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x3704))+((x3696*x3697))+(((-0.749999650312296)*r02*x3695))+((x3697*x3702))+((x3697*x3700))+((r20*x3703))+((cj1*x3699))+((sj1*x3698))+(((-1.0)*x3695*x3699))+(((-1.0)*sj1*x3706))+(((-1.0)*sj1*x3700))+(((-1.0)*sj1*x3702))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x3695*x3701))+((cj1*x3705))+((cj1*x3701))))+IKsqr(((((-1.0)*sj1*x3699))+((x3697*x3699))+((x3695*x3700))+((x3695*x3702))+(((-1.0)*cj1*x3702))+(((-1.0)*cj1*x3700))+(((-1.0)*cj1*x3706))+((r00*x3703))+((x3695*x3696))+((x3697*x3701))+((r20*x3704))+(((0.250000349687704)*x3694))+(((0.749999650312296)*cj4*x3694))+((cj1*x3698))+(((-1.0)*sj1*x3705))+(((-1.0)*sj1*x3701))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r00*x3704))+((x3696*x3697))+(((-0.749999650312296)*r02*x3695))+((x3697*x3702))+((x3697*x3700))+((r20*x3703))+((cj1*x3699))+((sj1*x3698))+(((-1.0)*x3695*x3699))+(((-1.0)*sj1*x3706))+(((-1.0)*sj1*x3700))+(((-1.0)*sj1*x3702))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x3695*x3701))+((cj1*x3705))+((cj1*x3701))), ((((-1.0)*sj1*x3699))+((x3697*x3699))+((x3695*x3700))+((x3695*x3702))+(((-1.0)*cj1*x3702))+(((-1.0)*cj1*x3700))+(((-1.0)*cj1*x3706))+((r00*x3703))+((x3695*x3696))+((x3697*x3701))+((r20*x3704))+(((0.250000349687704)*x3694))+(((0.749999650312296)*cj4*x3694))+((cj1*x3698))+(((-1.0)*sj1*x3705))+(((-1.0)*sj1*x3701))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3707=IKcos(j2);
IkReal x3708=IKsin(j2);
IkReal x3709=((0.433012903784321)*sj3);
IkReal x3710=((0.749999650312296)*sj3);
IkReal x3711=(r00*sj5);
IkReal x3712=(cj4*cj5);
IkReal x3713=((1.0)*cj3);
IkReal x3714=(cj5*r01);
IkReal x3715=(r21*sj3);
IkReal x3716=(cj4*sj5);
IkReal x3717=(cj3*r21);
IkReal x3718=((0.500000349687582)*sj4);
IkReal x3719=((0.433012903784321)*r20);
IkReal x3720=(cj4*r22);
IkReal x3721=(r20*sj5);
IkReal x3722=((0.0160344678271334)*r02);
IkReal x3723=(cj4*r02);
IkReal x3724=(r01*sj5);
IkReal x3725=(cj5*r00);
IkReal x3726=((0.0185150129489311)*sj4);
IkReal x3727=(r21*sj5);
IkReal x3728=(cj5*r21);
IkReal x3729=((0.866025201892125)*sj4);
IkReal x3730=(cj5*r20);
IkReal x3731=((0.250000349687704)*sj3);
IkReal x3732=(sj1*x3707);
IkReal x3733=(cj1*x3707);
IkReal x3734=(sj1*x3708);
IkReal x3735=(cj1*x3708);
IkReal x3736=((1.0)*x3735);
evalcond[0]=(((x3727*x3729))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x3720))+(((-1.0)*x3716*x3719))+x3734+x3733+(((-0.433012903784321)*r21*x3712))+(((-1.0)*x3729*x3730))+(((0.433012903784321)*x3728))+((sj5*x3719)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x3736))+(((-0.749999650312296)*x3723))+(((-0.433012903784321)*cj4*x3711))+(((-1.0)*x3725*x3729))+(((0.433012903784321)*x3711))+(((0.433012903784321)*x3714))+((x3724*x3729))+x3732+(((-0.433012903784321)*r01*x3712)));
evalcond[2]=((((0.0648043305514941)*x3721))+(((0.0648043305514941)*x3728))+((x3726*x3730))+(((0.41)*cj1))+(((0.00925751294893567)*r21*x3712))+(((-1.0)*x3726*x3727))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x3716))+(((-1.0)*pz))+(((-0.27144)*x3734))+(((-0.27144)*x3733))+(((0.0160344678271334)*x3720)));
evalcond[3]=((((-1.0)*x3722))+(((-1.0)*x3724*x3726))+((x3725*x3726))+(((0.41)*sj1))+((cj4*x3722))+(((-1.0)*px))+(((0.00925751294893567)*r01*x3712))+(((-0.27144)*x3732))+(((0.0648043305514941)*x3711))+(((0.0648043305514941)*x3714))+(((0.00925751294893567)*cj4*x3711))+(((0.27144)*x3735)));
evalcond[4]=(((r20*x3716*x3731))+(((-1.0)*x3736))+((sj3*x3718*x3730))+((cj5*x3717*x3718))+(((-1.0)*r20*x3712*x3713))+((x3709*x3720))+((cj3*x3718*x3721))+x3732+(((-1.0)*sj5*x3715*x3718))+((x3710*x3721))+((x3710*x3728))+(((0.250000349687704)*x3712*x3715))+((x3716*x3717))+(((-1.0)*r22*x3709))+((cj3*r22*x3729)));
evalcond[5]=((((-1.0)*sj3*x3718*x3724))+((x3710*x3711))+((x3710*x3714))+(((-1.0)*r02*x3709))+((cj3*r02*x3729))+((cj3*r01*x3716))+((sj3*x3718*x3725))+((cj3*x3714*x3718))+((x3709*x3723))+(((-1.0)*x3734))+(((-1.0)*x3733))+((r01*x3712*x3731))+(((-1.0)*r00*x3712*x3713))+((cj3*x3711*x3718))+((cj4*x3711*x3731)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3737=((0.250000349687704)*r12);
IkReal x3738=((0.749999650312296)*cj4);
IkReal x3739=((0.433012903784321)*sj5);
IkReal x3740=(cj1*r10);
IkReal x3741=(cj1*r22);
IkReal x3742=(cj1*r20);
IkReal x3743=((0.866025201892125)*sj4);
IkReal x3744=(r20*sj1);
IkReal x3745=(r22*sj1);
IkReal x3746=(r10*sj1);
IkReal x3747=(r11*sj1);
IkReal x3748=((0.433012903784321)*cj5);
IkReal x3749=(r21*sj1);
IkReal x3750=(cj1*r21);
IkReal x3751=(cj1*r11);
IkReal x3752=(cj5*sj1*x3743);
IkReal x3753=(cj4*r21*x3748);
if( IKabs((((cj5*x3743*x3744))+(((-1.0)*x3748*x3749))+(((-1.0)*x3748*x3751))+((cj1*r12*x3738))+(((-1.0)*sj5*x3743*x3751))+(((-1.0)*sj5*x3743*x3749))+((cj4*x3739*x3740))+((cj4*x3739*x3744))+((cj4*x3748*x3751))+((cj4*x3748*x3749))+((cj1*x3737))+(((-1.0)*x3739*x3744))+(((-1.0)*x3739*x3740))+(((0.250000349687704)*x3745))+((x3738*x3745))+((cj5*x3740*x3743)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj4*x3747*x3748))+(((-1.0)*x3748*x3750))+(((-1.0)*sj5*x3743*x3750))+(((-1.0)*cj4*x3739*x3746))+(((-1.0)*cj5*x3743*x3746))+((cj4*x3739*x3742))+(((-1.0)*r12*sj1*x3738))+(((-1.0)*sj1*x3737))+((cj4*x3748*x3750))+((sj5*x3743*x3747))+((x3747*x3748))+((cj5*x3742*x3743))+(((-1.0)*x3739*x3742))+((x3739*x3746))+(((0.250000349687704)*x3741))+((x3738*x3741)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x3743*x3744))+(((-1.0)*x3748*x3749))+(((-1.0)*x3748*x3751))+((cj1*r12*x3738))+(((-1.0)*sj5*x3743*x3751))+(((-1.0)*sj5*x3743*x3749))+((cj4*x3739*x3740))+((cj4*x3739*x3744))+((cj4*x3748*x3751))+((cj4*x3748*x3749))+((cj1*x3737))+(((-1.0)*x3739*x3744))+(((-1.0)*x3739*x3740))+(((0.250000349687704)*x3745))+((x3738*x3745))+((cj5*x3740*x3743))))+IKsqr(((((-1.0)*cj4*x3747*x3748))+(((-1.0)*x3748*x3750))+(((-1.0)*sj5*x3743*x3750))+(((-1.0)*cj4*x3739*x3746))+(((-1.0)*cj5*x3743*x3746))+((cj4*x3739*x3742))+(((-1.0)*r12*sj1*x3738))+(((-1.0)*sj1*x3737))+((cj4*x3748*x3750))+((sj5*x3743*x3747))+((x3747*x3748))+((cj5*x3742*x3743))+(((-1.0)*x3739*x3742))+((x3739*x3746))+(((0.250000349687704)*x3741))+((x3738*x3741))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x3743*x3744))+(((-1.0)*x3748*x3749))+(((-1.0)*x3748*x3751))+((cj1*r12*x3738))+(((-1.0)*sj5*x3743*x3751))+(((-1.0)*sj5*x3743*x3749))+((cj4*x3739*x3740))+((cj4*x3739*x3744))+((cj4*x3748*x3751))+((cj4*x3748*x3749))+((cj1*x3737))+(((-1.0)*x3739*x3744))+(((-1.0)*x3739*x3740))+(((0.250000349687704)*x3745))+((x3738*x3745))+((cj5*x3740*x3743))), ((((-1.0)*cj4*x3747*x3748))+(((-1.0)*x3748*x3750))+(((-1.0)*sj5*x3743*x3750))+(((-1.0)*cj4*x3739*x3746))+(((-1.0)*cj5*x3743*x3746))+((cj4*x3739*x3742))+(((-1.0)*r12*sj1*x3738))+(((-1.0)*sj1*x3737))+((cj4*x3748*x3750))+((sj5*x3743*x3747))+((x3747*x3748))+((cj5*x3742*x3743))+(((-1.0)*x3739*x3742))+((x3739*x3746))+(((0.250000349687704)*x3741))+((x3738*x3741))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3754=IKsin(j2);
IkReal x3755=IKcos(j2);
IkReal x3756=(cj5*r11);
IkReal x3757=((0.433012903784321)*cj4);
IkReal x3758=(r21*sj5);
IkReal x3759=((0.500000349687582)*sj4);
IkReal x3760=((0.749999650312296)*sj3);
IkReal x3761=(cj3*cj4);
IkReal x3762=(cj5*r10);
IkReal x3763=((0.0185150129489311)*sj4);
IkReal x3764=(r20*sj5);
IkReal x3765=(cj4*r22);
IkReal x3766=(r10*sj5);
IkReal x3767=(r22*sj3);
IkReal x3768=(r11*sj5);
IkReal x3769=((0.00925751294893567)*cj4);
IkReal x3770=(cj5*r21);
IkReal x3771=(r12*sj3);
IkReal x3772=(cj4*r12);
IkReal x3773=(cj5*r20);
IkReal x3774=((0.866025201892125)*sj4);
IkReal x3775=(cj1*x3755);
IkReal x3776=(sj1*x3754);
IkReal x3777=(cj1*x3754);
IkReal x3778=((0.250000349687704)*cj4*sj3);
IkReal x3779=(sj1*x3755);
IkReal x3780=(cj3*x3774);
IkReal x3781=(x3776+x3775);
evalcond[0]=((((0.433012903784321)*x3770))+(((-1.0)*x3757*x3764))+(((-0.250000349687704)*r22))+(((-1.0)*x3757*x3770))+((x3758*x3774))+(((-0.749999650312296)*x3765))+(((-1.0)*x3773*x3774))+x3781+(((0.433012903784321)*x3764)));
evalcond[1]=((((-1.0)*x3762*x3774))+(((-1.0)*x3757*x3766))+(((-0.250000349687704)*r12))+(((-1.0)*x3756*x3757))+((x3768*x3774))+(((-0.749999650312296)*x3772))+(((-1.0)*x3779))+x3777+(((0.433012903784321)*x3756))+(((0.433012903784321)*x3766)));
evalcond[2]=(((x3769*x3770))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x3764))+(((0.0648043305514941)*x3770))+(((-1.0)*pz))+(((0.0160344678271334)*x3765))+((x3763*x3773))+((x3764*x3769))+(((-1.0)*x3758*x3763))+(((-0.27144)*x3775))+(((-0.27144)*x3776)));
evalcond[3]=(((x3756*x3769))+(((0.0648043305514941)*x3756))+(((-1.0)*x3763*x3768))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x3766))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0160344678271334)*x3772))+((x3762*x3763))+((x3766*x3769))+(((0.27144)*x3779))+(((-0.27144)*x3777)));
evalcond[4]=(((r12*x3780))+((x3756*x3778))+((x3756*x3760))+((sj3*x3759*x3762))+(((-1.0)*sj3*x3759*x3768))+(((-0.433012903784321)*x3771))+((cj3*x3756*x3759))+x3781+((x3761*x3768))+((cj3*x3759*x3766))+((x3760*x3766))+((x3766*x3778))+((x3757*x3771))+(((-1.0)*x3761*x3762)));
evalcond[5]=(((r22*x3780))+((sj3*x3759*x3773))+((x3758*x3761))+(((-0.433012903784321)*x3767))+(((-1.0)*x3777))+x3779+((x3770*x3778))+(((-1.0)*sj3*x3758*x3759))+((cj3*x3759*x3764))+((x3757*x3767))+((x3760*x3764))+((cj3*x3759*x3770))+(((-1.0)*x3761*x3773))+((x3760*x3770))+((x3764*x3778)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3782=((0.250000349687704)*r12);
IkReal x3783=((0.749999650312296)*cj4);
IkReal x3784=(cj1*r22);
IkReal x3785=((0.866025201892125)*sj4);
IkReal x3786=(cj1*r20);
IkReal x3787=(sj1*sj5);
IkReal x3788=((0.433012903784321)*r20);
IkReal x3789=((0.433012903784321)*sj5);
IkReal x3790=(cj1*r10);
IkReal x3791=(r22*sj1);
IkReal x3792=((0.433012903784321)*r10);
IkReal x3793=((0.433012903784321)*cj5);
IkReal x3794=(cj1*r21);
IkReal x3795=(cj1*r11);
IkReal x3796=(r11*sj1);
IkReal x3797=(cj1*cj4*x3789);
IkReal x3798=(cj5*sj1*x3785);
IkReal x3799=(cj4*r21*x3793);
if( IKabs((((cj4*x3787*x3788))+((x3793*x3795))+((x3783*x3791))+(((-1.0)*cj1*r12*x3783))+(((-1.0)*cj4*x3793*x3795))+(((-1.0)*cj5*x3785*x3790))+(((-1.0)*cj4*x3789*x3790))+(((-1.0)*r21*x3785*x3787))+(((0.250000349687704)*x3791))+((x3789*x3790))+((sj5*x3785*x3795))+((sj1*x3799))+(((-1.0)*r21*sj1*x3793))+(((-1.0)*cj1*x3782))+(((-1.0)*x3787*x3788))+((r20*x3798)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x3785*x3794))+((cj5*x3785*x3786))+((r10*x3798))+(((-1.0)*r11*x3785*x3787))+(((-1.0)*x3786*x3789))+((cj4*x3793*x3794))+((cj4*x3793*x3796))+((cj4*x3786*x3789))+(((0.250000349687704)*x3784))+(((-1.0)*x3793*x3794))+(((-1.0)*x3793*x3796))+((sj1*x3782))+((cj4*x3787*x3792))+((x3783*x3784))+((r12*sj1*x3783))+(((-1.0)*x3787*x3792)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x3787*x3788))+((x3793*x3795))+((x3783*x3791))+(((-1.0)*cj1*r12*x3783))+(((-1.0)*cj4*x3793*x3795))+(((-1.0)*cj5*x3785*x3790))+(((-1.0)*cj4*x3789*x3790))+(((-1.0)*r21*x3785*x3787))+(((0.250000349687704)*x3791))+((x3789*x3790))+((sj5*x3785*x3795))+((sj1*x3799))+(((-1.0)*r21*sj1*x3793))+(((-1.0)*cj1*x3782))+(((-1.0)*x3787*x3788))+((r20*x3798))))+IKsqr(((((-1.0)*sj5*x3785*x3794))+((cj5*x3785*x3786))+((r10*x3798))+(((-1.0)*r11*x3785*x3787))+(((-1.0)*x3786*x3789))+((cj4*x3793*x3794))+((cj4*x3793*x3796))+((cj4*x3786*x3789))+(((0.250000349687704)*x3784))+(((-1.0)*x3793*x3794))+(((-1.0)*x3793*x3796))+((sj1*x3782))+((cj4*x3787*x3792))+((x3783*x3784))+((r12*sj1*x3783))+(((-1.0)*x3787*x3792))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x3787*x3788))+((x3793*x3795))+((x3783*x3791))+(((-1.0)*cj1*r12*x3783))+(((-1.0)*cj4*x3793*x3795))+(((-1.0)*cj5*x3785*x3790))+(((-1.0)*cj4*x3789*x3790))+(((-1.0)*r21*x3785*x3787))+(((0.250000349687704)*x3791))+((x3789*x3790))+((sj5*x3785*x3795))+((sj1*x3799))+(((-1.0)*r21*sj1*x3793))+(((-1.0)*cj1*x3782))+(((-1.0)*x3787*x3788))+((r20*x3798))), ((((-1.0)*sj5*x3785*x3794))+((cj5*x3785*x3786))+((r10*x3798))+(((-1.0)*r11*x3785*x3787))+(((-1.0)*x3786*x3789))+((cj4*x3793*x3794))+((cj4*x3793*x3796))+((cj4*x3786*x3789))+(((0.250000349687704)*x3784))+(((-1.0)*x3793*x3794))+(((-1.0)*x3793*x3796))+((sj1*x3782))+((cj4*x3787*x3792))+((x3783*x3784))+((r12*sj1*x3783))+(((-1.0)*x3787*x3792))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3800=IKcos(j2);
IkReal x3801=IKsin(j2);
IkReal x3802=(cj5*r11);
IkReal x3803=((0.433012903784321)*cj4);
IkReal x3804=(r21*sj5);
IkReal x3805=((0.500000349687582)*sj4);
IkReal x3806=((0.749999650312296)*sj3);
IkReal x3807=(cj3*cj4);
IkReal x3808=(cj5*r10);
IkReal x3809=((0.0185150129489311)*sj4);
IkReal x3810=(r20*sj5);
IkReal x3811=(cj4*r22);
IkReal x3812=(r10*sj5);
IkReal x3813=(r12*sj3);
IkReal x3814=(r11*sj5);
IkReal x3815=(r22*sj3);
IkReal x3816=((0.27144)*sj1);
IkReal x3817=((0.00925751294893567)*cj4);
IkReal x3818=(cj5*r20);
IkReal x3819=(cj5*r21);
IkReal x3820=(cj4*r12);
IkReal x3821=((0.866025201892125)*sj4);
IkReal x3822=(sj1*x3800);
IkReal x3823=(cj1*x3800);
IkReal x3824=(cj1*x3801);
IkReal x3825=((0.250000349687704)*cj4*sj3);
IkReal x3826=(cj3*x3821);
IkReal x3827=(sj1*x3801);
IkReal x3828=((1.0)*x3824);
evalcond[0]=((((0.433012903784321)*x3810))+(((0.433012903784321)*x3819))+(((-0.250000349687704)*r22))+((x3804*x3821))+(((-1.0)*x3803*x3810))+(((-1.0)*x3803*x3819))+x3827+x3823+(((-0.749999650312296)*x3811))+(((-1.0)*x3818*x3821)));
evalcond[1]=((((0.433012903784321)*x3812))+(((-0.250000349687704)*r12))+(((-1.0)*x3808*x3821))+(((-1.0)*x3828))+(((-1.0)*x3802*x3803))+(((-1.0)*x3803*x3812))+x3822+(((-0.749999650312296)*x3820))+((x3814*x3821))+(((0.433012903784321)*x3802)));
evalcond[2]=(((x3810*x3817))+(((-1.0)*x3801*x3816))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x3809*x3818))+(((-1.0)*pz))+((x3817*x3819))+(((-0.27144)*x3823))+(((0.0648043305514941)*x3819))+(((0.0648043305514941)*x3810))+(((-1.0)*x3804*x3809))+(((0.0160344678271334)*x3811)));
evalcond[3]=((((-1.0)*x3800*x3816))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x3809*x3814))+((x3808*x3809))+(((-1.0)*py))+(((0.27144)*x3824))+(((0.0648043305514941)*x3802))+(((0.0648043305514941)*x3812))+((x3812*x3817))+(((0.0160344678271334)*x3820))+((x3802*x3817)));
evalcond[4]=(((x3819*x3825))+((x3810*x3825))+((x3804*x3807))+((sj3*x3805*x3818))+((x3806*x3819))+((x3806*x3810))+(((-1.0)*x3828))+((cj3*x3805*x3819))+((cj3*x3805*x3810))+((r22*x3826))+x3822+((x3803*x3815))+(((-0.433012903784321)*x3815))+(((-1.0)*sj3*x3804*x3805))+(((-1.0)*x3807*x3818)));
evalcond[5]=(((r12*x3826))+((sj3*x3805*x3808))+(((-1.0)*x3807*x3808))+((x3802*x3806))+(((-1.0)*sj3*x3805*x3814))+((x3806*x3812))+((x3807*x3814))+((cj3*x3805*x3812))+(((-1.0)*x3827))+(((-1.0)*x3823))+((x3803*x3813))+(((-0.433012903784321)*x3813))+((x3812*x3825))+((x3802*x3825))+((cj3*x3802*x3805)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3829=(cj4*sj1);
IkReal x3830=((0.433012903784321)*sj0);
IkReal x3831=(cj5*r21);
IkReal x3832=(cj1*r12);
IkReal x3833=(r20*sj5);
IkReal x3834=(r20*sj0);
IkReal x3835=(r10*sj1);
IkReal x3836=((0.749999650312296)*cj4);
IkReal x3837=(r21*sj0);
IkReal x3838=((0.433012903784321)*sj5);
IkReal x3839=(cj1*cj4);
IkReal x3840=(r22*sj0);
IkReal x3841=((0.250000349687704)*x3840);
IkReal x3842=((0.866025201892125)*cj5*sj4);
IkReal x3843=((0.433012903784321)*cj5*r11);
IkReal x3844=(cj1*r10*x3838);
IkReal x3845=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3846=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x3847=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3847.valid){
continue;
}
CheckValue<IkReal> x3848 = IKatan2WithCheck(IkReal((((sj1*x3841))+((sj1*x3834*x3842))+((x3839*x3843))+((cj1*r10*x3842))+(((0.749999650312296)*x3829*x3840))+(((0.250000349687704)*x3832))+((r10*x3838*x3839))+(((-1.0)*r11*x3846))+((x3832*x3836))+(((-1.0)*sj1*x3830*x3831))+(((-1.0)*sj1*x3830*x3833))+((x3829*x3830*x3831))+((x3829*x3830*x3833))+(((-1.0)*cj1*x3843))+(((-1.0)*x3837*x3845))+(((-1.0)*x3844)))),IkReal((((sj1*x3843))+(((-0.250000349687704)*r12*sj1))+((x3835*x3838))+((cj1*x3834*x3842))+(((-1.0)*r10*x3829*x3838))+((x3830*x3833*x3839))+((cj1*x3841))+((x3830*x3831*x3839))+(((-1.0)*x3835*x3842))+((cj1*x3836*x3840))+(((-0.749999650312296)*r12*x3829))+(((-1.0)*x3837*x3846))+(((-1.0)*cj1*x3830*x3833))+(((-1.0)*cj1*x3830*x3831))+(((-1.0)*x3829*x3843))+((r11*x3845)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3848.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3847.value)))+(x3848.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3849=IKsin(j2);
IkReal x3850=IKcos(j2);
IkReal x3851=(cj4*sj5);
IkReal x3852=(cj3*r21);
IkReal x3853=((0.433012903784321)*r20);
IkReal x3854=((0.749999650312296)*cj4);
IkReal x3855=(cj4*cj5);
IkReal x3856=((1.0)*cj3);
IkReal x3857=((0.433012903784321)*r01);
IkReal x3858=(sj4*sj5);
IkReal x3859=((0.749999650312296)*sj3);
IkReal x3860=(r10*sj5);
IkReal x3861=((0.500000349687582)*sj3);
IkReal x3862=(cj0*sj1);
IkReal x3863=((0.500000349687582)*cj3);
IkReal x3864=((0.0160344678271334)*r22);
IkReal x3865=(r20*sj3);
IkReal x3866=(r00*sj5);
IkReal x3867=(cj3*r11);
IkReal x3868=((0.0160344678271334)*r12);
IkReal x3869=((0.433012903784321)*r11);
IkReal x3870=(cj5*r11);
IkReal x3871=(r10*sj3);
IkReal x3872=(r00*sj3);
IkReal x3873=((0.433012903784321)*sj3);
IkReal x3874=(cj5*sj4);
IkReal x3875=(r20*sj5);
IkReal x3876=((0.433012903784321)*r21);
IkReal x3877=(sj0*sj1);
IkReal x3878=(cj3*r01);
IkReal x3879=(cj5*r21);
IkReal x3880=((0.0160344678271334)*r02);
IkReal x3881=(cj5*r01);
IkReal x3882=((0.250000349687704)*sj3);
IkReal x3883=(cj1*x3849);
IkReal x3884=((0.500000349687582)*x3874);
IkReal x3885=((0.27144)*x3850);
IkReal x3886=(cj4*x3873);
IkReal x3887=(sj1*x3849);
IkReal x3888=((0.866025201892125)*cj3*sj4);
IkReal x3889=(cj1*x3850);
IkReal x3890=((1.0)*x3850);
evalcond[0]=(((sj5*x3853))+(((-0.250000349687704)*r22))+((cj5*x3876))+(((-1.0)*x3855*x3876))+x3887+x3889+(((-0.866025201892125)*r20*x3874))+(((0.866025201892125)*r21*x3858))+(((-1.0)*x3851*x3853))+(((-1.0)*r22*x3854)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj5*x3857))+(((-0.866025201892125)*r00*x3874))+(((0.866025201892125)*r01*x3858))+(((-0.433012903784321)*r00*x3851))+((cj0*x3883))+(((-1.0)*x3862*x3890))+(((-1.0)*x3855*x3857))+(((0.433012903784321)*x3866))+(((-1.0)*r02*x3854)));
evalcond[2]=(((cj5*x3869))+((sj0*x3883))+(((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x3851))+(((-0.866025201892125)*r10*x3874))+(((0.433012903784321)*x3860))+(((-1.0)*x3855*x3869))+(((0.866025201892125)*r11*x3858))+(((-1.0)*r12*x3854))+(((-1.0)*x3877*x3890)));
evalcond[3]=((((-1.0)*cj1*x3885))+((cj4*x3864))+(((-1.0)*x3864))+(((0.41)*cj1))+(((0.00925751294893567)*r20*x3851))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x3858))+(((0.00925751294893567)*r21*x3855))+(((0.0185150129489311)*r20*x3874))+(((0.0648043305514941)*x3875))+(((0.0648043305514941)*x3879))+(((-0.27144)*x3887)));
evalcond[4]=((((-0.41)*x3862))+(((0.0185150129489311)*r00*x3874))+(((-0.0185150129489311)*r01*x3858))+(((0.0648043305514941)*x3881))+(((-1.0)*x3880))+(((0.0648043305514941)*x3866))+(((-1.0)*px))+((x3862*x3885))+(((0.00925751294893567)*r00*x3851))+(((0.00925751294893567)*r01*x3855))+(((-0.27144)*cj0*x3883))+(((0.0098)*sj0))+((cj4*x3880)));
evalcond[5]=(((cj4*x3868))+(((-1.0)*x3868))+(((-0.41)*x3877))+((x3877*x3885))+(((0.0185150129489311)*r10*x3874))+(((0.0648043305514941)*x3860))+(((-1.0)*py))+(((0.0648043305514941)*x3870))+(((0.00925751294893567)*r11*x3855))+(((0.00925751294893567)*r10*x3851))+(((-0.27144)*sj0*x3883))+(((-0.0098)*cj0))+(((-0.0185150129489311)*r11*x3858)));
evalcond[6]=((((-1.0)*r20*x3855*x3856))+(((0.250000349687704)*x3851*x3865))+(((-1.0)*r21*x3858*x3861))+((r22*x3888))+((r22*x3886))+((x3859*x3875))+((x3859*x3879))+(((-1.0)*x3883))+((x3852*x3884))+((r20*x3861*x3874))+((r21*x3855*x3882))+((x3851*x3852))+(((-1.0)*r22*x3873))+((sj1*x3850))+((r20*x3858*x3863)));
evalcond[7]=(((r00*x3858*x3863))+((x3851*x3878))+(((0.250000349687704)*x3851*x3872))+((r01*x3863*x3874))+((x3849*x3862))+((cj0*x3889))+((r02*x3886))+((r02*x3888))+(((-1.0)*r02*x3873))+(((-1.0)*r00*x3855*x3856))+((x3859*x3866))+((x3859*x3881))+(((-1.0)*r01*x3858*x3861))+((r00*x3861*x3874))+((r01*x3855*x3882)));
evalcond[8]=(((sj0*x3889))+(((-1.0)*r10*x3855*x3856))+(((-1.0)*r12*x3873))+(((0.250000349687704)*x3851*x3871))+((r10*x3861*x3874))+((r12*x3888))+((r12*x3886))+((x3859*x3870))+((r10*x3858*x3863))+((x3849*x3877))+(((-1.0)*r11*x3858*x3861))+((x3851*x3867))+((sj4*x3863*x3870))+((x3859*x3860))+((r11*x3855*x3882)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3891=(cj0*r20);
IkReal x3892=(cj1*r00);
IkReal x3893=(r02*sj1);
IkReal x3894=(r00*sj1);
IkReal x3895=((0.433012903784321)*sj5);
IkReal x3896=(cj4*sj1);
IkReal x3897=((0.749999650312296)*cj4);
IkReal x3898=(cj0*r22);
IkReal x3899=(r01*sj1);
IkReal x3900=(cj1*cj4);
IkReal x3901=(cj0*r21);
IkReal x3902=(cj1*r02);
IkReal x3903=((0.866025201892125)*cj5*sj4);
IkReal x3904=((0.866025201892125)*sj4*sj5);
IkReal x3905=((0.433012903784321)*cj5*r01);
IkReal x3906=((0.433012903784321)*cj5*x3901);
CheckValue<IkReal> x3907 = IKatan2WithCheck(IkReal(((((-1.0)*cj1*r01*x3904))+((x3900*x3905))+((cj4*x3892*x3895))+((x3892*x3903))+(((0.250000349687704)*sj1*x3898))+((x3897*x3902))+(((-1.0)*sj1*x3906))+(((0.749999650312296)*x3896*x3898))+(((-1.0)*x3892*x3895))+(((-1.0)*sj1*x3891*x3895))+(((-1.0)*sj1*x3901*x3904))+(((-1.0)*cj1*x3905))+(((0.250000349687704)*x3902))+((sj1*x3891*x3903))+((x3896*x3906))+((x3891*x3895*x3896)))),IkReal((((x3900*x3906))+(((-1.0)*cj1*x3891*x3895))+((cj1*x3891*x3903))+((x3894*x3895))+((x3891*x3895*x3900))+(((-1.0)*x3894*x3903))+((x3899*x3904))+(((-1.0)*x3893*x3897))+(((-1.0)*cj4*x3894*x3895))+(((0.433012903784321)*cj5*x3899))+(((-1.0)*cj1*x3906))+(((-1.0)*x3896*x3905))+(((-0.250000349687704)*x3893))+((cj1*x3897*x3898))+(((0.250000349687704)*cj1*x3898))+(((-1.0)*cj1*x3901*x3904)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3907.valid){
continue;
}
CheckValue<IkReal> x3908=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3908.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3907.value)+(((1.5707963267949)*(x3908.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3909=IKsin(j2);
IkReal x3910=IKcos(j2);
IkReal x3911=(cj4*sj5);
IkReal x3912=(cj3*r21);
IkReal x3913=((0.433012903784321)*r20);
IkReal x3914=((0.749999650312296)*cj4);
IkReal x3915=(cj4*cj5);
IkReal x3916=((1.0)*cj3);
IkReal x3917=((0.433012903784321)*r01);
IkReal x3918=(sj4*sj5);
IkReal x3919=((0.749999650312296)*sj3);
IkReal x3920=(r10*sj5);
IkReal x3921=((0.500000349687582)*sj3);
IkReal x3922=(cj0*sj1);
IkReal x3923=((0.500000349687582)*cj3);
IkReal x3924=((0.0160344678271334)*r22);
IkReal x3925=(r20*sj3);
IkReal x3926=(r00*sj5);
IkReal x3927=(cj3*r11);
IkReal x3928=((0.0160344678271334)*r12);
IkReal x3929=((0.433012903784321)*r11);
IkReal x3930=(cj5*r11);
IkReal x3931=(r10*sj3);
IkReal x3932=(r00*sj3);
IkReal x3933=((0.433012903784321)*sj3);
IkReal x3934=(cj5*sj4);
IkReal x3935=(r20*sj5);
IkReal x3936=((0.433012903784321)*r21);
IkReal x3937=(sj0*sj1);
IkReal x3938=(cj3*r01);
IkReal x3939=(cj5*r21);
IkReal x3940=((0.0160344678271334)*r02);
IkReal x3941=(cj5*r01);
IkReal x3942=((0.250000349687704)*sj3);
IkReal x3943=(cj1*x3909);
IkReal x3944=((0.500000349687582)*x3934);
IkReal x3945=((0.27144)*x3910);
IkReal x3946=(cj4*x3933);
IkReal x3947=(sj1*x3909);
IkReal x3948=((0.866025201892125)*cj3*sj4);
IkReal x3949=(cj1*x3910);
IkReal x3950=((1.0)*x3910);
evalcond[0]=(((sj5*x3913))+(((-1.0)*x3911*x3913))+(((-0.250000349687704)*r22))+(((-0.866025201892125)*r20*x3934))+(((-1.0)*x3915*x3936))+(((-1.0)*r22*x3914))+x3949+x3947+((cj5*x3936))+(((0.866025201892125)*r21*x3918)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x3915*x3917))+(((-1.0)*r02*x3914))+((cj5*x3917))+((cj0*x3943))+(((-0.433012903784321)*r00*x3911))+(((-0.866025201892125)*r00*x3934))+(((-1.0)*x3922*x3950))+(((0.866025201892125)*r01*x3918))+(((0.433012903784321)*x3926)));
evalcond[2]=((((-0.250000349687704)*r12))+((sj0*x3943))+(((-0.433012903784321)*r10*x3911))+(((-1.0)*x3915*x3929))+(((-1.0)*x3937*x3950))+(((0.866025201892125)*r11*x3918))+(((-1.0)*r12*x3914))+(((0.433012903784321)*x3920))+((cj5*x3929))+(((-0.866025201892125)*r10*x3934)));
evalcond[3]=((((0.0648043305514941)*x3935))+(((0.0648043305514941)*x3939))+(((-1.0)*x3924))+(((0.41)*cj1))+(((-1.0)*cj1*x3945))+(((-1.0)*pz))+(((0.0185150129489311)*r20*x3934))+(((-0.0185150129489311)*r21*x3918))+((cj4*x3924))+(((-0.27144)*x3947))+(((0.00925751294893567)*r21*x3915))+(((0.00925751294893567)*r20*x3911)));
evalcond[4]=(((x3922*x3945))+(((0.0648043305514941)*x3941))+(((-0.41)*x3922))+(((0.0648043305514941)*x3926))+(((0.0185150129489311)*r00*x3934))+(((-1.0)*px))+(((-1.0)*x3940))+(((-0.27144)*cj0*x3943))+(((0.00925751294893567)*r01*x3915))+((cj4*x3940))+(((-0.0185150129489311)*r01*x3918))+(((0.00925751294893567)*r00*x3911))+(((0.0098)*sj0)));
evalcond[5]=((((-0.41)*x3937))+(((0.0648043305514941)*x3930))+(((-1.0)*x3928))+(((-0.0185150129489311)*r11*x3918))+(((0.00925751294893567)*r11*x3915))+(((0.0648043305514941)*x3920))+(((-1.0)*py))+((x3937*x3945))+(((0.0185150129489311)*r10*x3934))+(((0.00925751294893567)*r10*x3911))+((cj4*x3928))+(((-0.0098)*cj0))+(((-0.27144)*sj0*x3943)));
evalcond[6]=(((x3912*x3944))+((r22*x3948))+((r22*x3946))+(((-1.0)*r21*x3918*x3921))+((r21*x3915*x3942))+(((-1.0)*x3943))+((sj1*x3910))+(((-1.0)*r22*x3933))+((x3911*x3912))+(((-1.0)*r20*x3915*x3916))+((x3919*x3935))+((x3919*x3939))+(((0.250000349687704)*x3911*x3925))+((r20*x3918*x3923))+((r20*x3921*x3934)));
evalcond[7]=((((-1.0)*r01*x3918*x3921))+(((-1.0)*r00*x3915*x3916))+((r00*x3921*x3934))+((x3911*x3938))+((x3919*x3926))+((cj0*x3949))+((x3909*x3922))+(((0.250000349687704)*x3911*x3932))+((r00*x3918*x3923))+(((-1.0)*r02*x3933))+((r01*x3915*x3942))+((x3919*x3941))+((r02*x3948))+((r02*x3946))+((r01*x3923*x3934)));
evalcond[8]=(((r10*x3921*x3934))+((x3919*x3920))+(((-1.0)*r11*x3918*x3921))+((sj0*x3949))+(((0.250000349687704)*x3911*x3931))+((x3911*x3927))+((sj4*x3923*x3930))+(((-1.0)*r12*x3933))+((x3919*x3930))+(((-1.0)*r10*x3915*x3916))+((r12*x3948))+((r12*x3946))+((r11*x3915*x3942))+((x3909*x3937))+((r10*x3918*x3923)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3951=(cj0*cj4);
IkReal x3952=((0.433012903784321)*r22);
IkReal x3953=((0.433012903784321)*cj5);
IkReal x3954=(r20*sj5);
IkReal x3955=((0.749999650312296)*cj0);
IkReal x3956=(cj5*r21);
IkReal x3957=((0.866025201892125)*sj4);
IkReal x3958=((0.433012903784321)*sj5);
IkReal x3959=(r21*sj5);
IkReal x3960=(cj5*r20);
IkReal x3961=((0.500000349687582)*cj0*sj4);
CheckValue<IkReal> x3962=IKPowWithIntegerCheck(IKsign((((r02*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r01*((x3953+((sj5*x3957))+(((-1.0)*cj4*x3953))))))+((r00*((x3958+(((-1.0)*cj5*x3957))+(((-1.0)*cj4*x3958)))))))),-1);
if(!x3962.valid){
continue;
}
CheckValue<IkReal> x3963 = IKatan2WithCheck(IkReal(((((-1.0)*x3955*x3956))+(((-1.0)*x3954*x3955))+(((-0.250000349687704)*x3951*x3956))+(((-0.250000349687704)*x3951*x3954))+((cj0*x3952))+(((-1.0)*x3960*x3961))+(((-1.0)*x3951*x3952))+((x3959*x3961)))),IkReal((((x3951*x3960))+(((-1.0)*x3951*x3959))+(((-1.0)*x3954*x3961))+(((-1.0)*x3956*x3961))+(((-1.0)*cj0*r22*x3957)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3963.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3962.value)))+(x3963.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3964=IKsin(j3);
IkReal x3965=IKcos(j3);
IkReal x3966=(r11*sj5);
IkReal x3967=(cj5*r20);
IkReal x3968=(cj4*cj5);
IkReal x3969=(r00*sj5);
IkReal x3970=(cj5*r01);
IkReal x3971=(r10*sj5);
IkReal x3972=(r21*sj5);
IkReal x3973=(r20*sj5);
IkReal x3974=(cj5*r21);
IkReal x3975=(cj5*r11);
IkReal x3976=(r01*sj5);
IkReal x3977=((1.0)*x3964);
IkReal x3978=((0.250000349687704)*x3965);
IkReal x3979=((0.749999650312296)*x3965);
IkReal x3980=(cj4*x3964);
IkReal x3981=((0.500000349687582)*sj4*x3965);
IkReal x3982=((0.433012903784321)*r12*x3965);
IkReal x3983=((0.500000349687582)*sj4*x3964);
IkReal x3984=((0.433012903784321)*r02*x3965);
IkReal x3985=((0.866025201892125)*sj4*x3964);
IkReal x3986=((0.433012903784321)*r22*x3965);
evalcond[0]=((((-1.0)*r21*x3968*x3978))+(((-1.0)*cj4*x3973*x3978))+(((-1.0)*x3967*x3981))+((x3972*x3981))+((x3972*x3980))+(((-1.0)*cj4*x3967*x3977))+x3986+(((-1.0)*x3973*x3979))+(((-1.0)*cj4*x3986))+((x3973*x3983))+(((-1.0)*x3974*x3979))+((r22*x3985))+((x3974*x3983)));
evalcond[1]=(((x3971*x3983))+cj0+((x3966*x3981))+((x3966*x3980))+(((-1.0)*cj4*x3971*x3978))+((x3975*x3983))+(((-1.0)*cj5*r10*x3981))+x3982+(((-1.0)*x3971*x3979))+(((-1.0)*cj4*x3982))+(((-1.0)*r11*x3968*x3978))+(((-1.0)*x3975*x3979))+(((-1.0)*r10*x3968*x3977))+((r12*x3985)));
evalcond[2]=((((-1.0)*r00*x3968*x3977))+((x3970*x3983))+(((-1.0)*sj0))+(((-1.0)*cj4*x3969*x3978))+(((-1.0)*cj5*r00*x3981))+(((-1.0)*x3969*x3979))+((x3969*x3983))+x3984+((x3976*x3980))+((x3976*x3981))+(((-1.0)*x3970*x3979))+(((-1.0)*cj4*x3984))+(((-1.0)*r01*x3968*x3978))+((r02*x3985)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3987=((0.528192360616262)*sj4);
IkReal x3988=(r20*sj5);
IkReal x3989=((0.26409636501044)*cj4);
IkReal x3990=((0.444735007694415)*cj5);
IkReal x3991=((0.457427895740576)*cj4);
IkReal x3992=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-1.0)*x3989*x3992))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x3991))+(((0.444735007694415)*x3992))+(((-1.0)*cj5*r11*x3989))+((r11*sj5*x3987))+(((-1.0)*cj5*r10*x3987))+((r11*x3990)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((x3988*x3989))+(((-0.444735007694415)*x3988))+((r22*x3991))+((cj5*r20*x3987))+((cj5*r21*x3989))+(((-1.0)*r21*x3990))+(((-1.0)*r21*sj5*x3987))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-1.0)*x3989*x3992))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x3991))+(((0.444735007694415)*x3992))+(((-1.0)*cj5*r11*x3989))+((r11*sj5*x3987))+(((-1.0)*cj5*r10*x3987))+((r11*x3990))))+IKsqr(((((0.204620884747229)*r22))+((x3988*x3989))+(((-0.444735007694415)*x3988))+((r22*x3991))+((cj5*r20*x3987))+((cj5*r21*x3989))+(((-1.0)*r21*x3990))+(((-1.0)*r21*sj5*x3987))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-1.0)*x3989*x3992))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x3991))+(((0.444735007694415)*x3992))+(((-1.0)*cj5*r11*x3989))+((r11*sj5*x3987))+(((-1.0)*cj5*r10*x3987))+((r11*x3990))), ((((0.204620884747229)*r22))+((x3988*x3989))+(((-0.444735007694415)*x3988))+((r22*x3991))+((cj5*r20*x3987))+((cj5*r21*x3989))+(((-1.0)*r21*x3990))+(((-1.0)*r21*sj5*x3987))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3993=((1.0)*py);
IkReal x3994=(cj5*r11);
IkReal x3995=(cj5*sj3);
IkReal x3996=(r20*sj5);
IkReal x3997=((0.135720094919197)*sj4);
IkReal x3998=(r21*sj5);
IkReal x3999=((0.0185150129489311)*sj4);
IkReal x4000=((0.135720094919197)*sj3);
IkReal x4001=((0.00925751294893567)*cj4);
IkReal x4002=(cj4*cj5);
IkReal x4003=(cj3*r10);
IkReal x4004=((0.0678600949192303)*cj4);
IkReal x4005=(r10*sj5);
IkReal x4006=((0.10827950965428)*cj4);
IkReal x4007=(cj4*r22);
IkReal x4008=((0.0160344678271334)*r12);
IkReal x4009=((0.20357990508077)*sj3);
IkReal x4010=(cj5*r20);
IkReal x4011=((0.216558867852667)*sj4);
IkReal x4012=((0.117537022603216)*sj3);
IkReal x4013=((0.27144)*cj3);
IkReal x4014=(cj5*r21);
IkReal x4015=(cj4*r12);
IkReal x4016=((0.41)*(IKsin(j1)));
IkReal x4017=((0.41)*(IKcos(j1)));
IkReal x4018=(cj5*r10*sj4);
IkReal x4019=(r11*sj4*sj5);
IkReal x4020=((0.235073880801598)*cj3*sj4);
IkReal x4021=(x4016+x3993);
evalcond[0]=((((-1.0)*x3998*x4011))+((x4010*x4011))+((x3996*x4006))+(((0.10827950965428)*r21*x4002))+(((-0.18234135315471)*x4014))+(((-1.0)*x4017))+pz+(((-0.18234135315471)*x3996))+(((0.0838945627463637)*r22))+(((0.187545437253636)*x4007)));
evalcond[1]=((((-0.187545437253636)*x4015))+(((0.18234135315471)*x3994))+(((-1.0)*x3994*x4006))+(((-0.0838945627463637)*r12))+(((-1.0)*x4021))+((r11*sj5*x4011))+(((0.18234135315471)*x4005))+(((-1.0)*x4005*x4006))+(((-1.0)*cj5*r10*x4011)));
evalcond[2]=(((x4001*x4005))+((cj5*r10*x3999))+(((-1.0)*r22*x4020))+(((-1.0)*x4008))+(((-0.20357990508077)*r21*x3995))+(((-1.0)*r21*x3995*x4004))+(((-1.0)*cj3*x3996*x3997))+(((0.0648043305514941)*x3994))+(((-1.0)*x4021))+((sj3*x3997*x3998))+((r20*x4002*x4013))+(((-1.0)*x3996*x4009))+(((-1.0)*r11*sj5*x3999))+(((-1.0)*r20*x3995*x3997))+(((-1.0)*x4007*x4012))+(((-1.0)*sj3*x3996*x4004))+((r22*x4012))+(((-1.0)*cj3*x3997*x4014))+(((-1.0)*cj4*x3998*x4013))+((x3994*x4001))+(((0.0648043305514941)*x4005))+((cj4*x4008)));
evalcond[3]=((((-1.0)*x3998*x3999))+(((-1.0)*r12*x4012))+((sj3*x4004*x4005))+((x3999*x4010))+((sj5*x3997*x4003))+(((-0.27144)*x4002*x4003))+((x3996*x4001))+((x4001*x4014))+(((-0.0160344678271334)*r22))+(((-1.0)*r11*sj3*sj5*x3997))+((x4005*x4009))+((cj4*r11*sj5*x4013))+((r10*x3995*x3997))+(((0.0648043305514941)*x3996))+(((-1.0)*pz))+x4017+((x4012*x4015))+((sj3*x3994*x4004))+((r12*x4020))+(((0.0160344678271334)*x4007))+((cj3*x3994*x3997))+(((0.0648043305514941)*x4014))+((x3994*x4009)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4022=((0.250000349687704)*r12);
IkReal x4023=((0.749999650312296)*cj4);
IkReal x4024=((0.433012903784321)*sj5);
IkReal x4025=(cj1*r10);
IkReal x4026=(cj1*r22);
IkReal x4027=(cj1*r20);
IkReal x4028=((0.866025201892125)*sj4);
IkReal x4029=(r20*sj1);
IkReal x4030=(r22*sj1);
IkReal x4031=(r10*sj1);
IkReal x4032=(r11*sj1);
IkReal x4033=((0.433012903784321)*cj5);
IkReal x4034=(r21*sj1);
IkReal x4035=(cj1*r21);
IkReal x4036=(cj1*r11);
IkReal x4037=(cj5*sj1*x4028);
IkReal x4038=(cj4*r21*x4033);
if( IKabs(((((-1.0)*sj5*x4028*x4034))+(((-1.0)*sj5*x4028*x4036))+(((-1.0)*x4024*x4025))+(((-1.0)*x4024*x4029))+((cj5*x4028*x4029))+((cj5*x4025*x4028))+((cj1*r12*x4023))+((cj1*x4022))+((cj4*x4033*x4034))+((cj4*x4033*x4036))+((x4023*x4030))+((cj4*x4024*x4029))+((cj4*x4024*x4025))+(((-1.0)*x4033*x4034))+(((-1.0)*x4033*x4036))+(((0.250000349687704)*x4030)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4032*x4033))+(((-1.0)*sj5*x4028*x4035))+(((0.250000349687704)*x4026))+(((-1.0)*cj4*x4024*x4031))+((cj5*x4027*x4028))+(((-1.0)*x4024*x4027))+((sj5*x4028*x4032))+(((-1.0)*cj5*x4028*x4031))+(((-1.0)*cj4*x4032*x4033))+((x4023*x4026))+((cj4*x4033*x4035))+((cj4*x4024*x4027))+(((-1.0)*r12*sj1*x4023))+(((-1.0)*sj1*x4022))+(((-1.0)*x4033*x4035))+((x4024*x4031)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x4028*x4034))+(((-1.0)*sj5*x4028*x4036))+(((-1.0)*x4024*x4025))+(((-1.0)*x4024*x4029))+((cj5*x4028*x4029))+((cj5*x4025*x4028))+((cj1*r12*x4023))+((cj1*x4022))+((cj4*x4033*x4034))+((cj4*x4033*x4036))+((x4023*x4030))+((cj4*x4024*x4029))+((cj4*x4024*x4025))+(((-1.0)*x4033*x4034))+(((-1.0)*x4033*x4036))+(((0.250000349687704)*x4030))))+IKsqr((((x4032*x4033))+(((-1.0)*sj5*x4028*x4035))+(((0.250000349687704)*x4026))+(((-1.0)*cj4*x4024*x4031))+((cj5*x4027*x4028))+(((-1.0)*x4024*x4027))+((sj5*x4028*x4032))+(((-1.0)*cj5*x4028*x4031))+(((-1.0)*cj4*x4032*x4033))+((x4023*x4026))+((cj4*x4033*x4035))+((cj4*x4024*x4027))+(((-1.0)*r12*sj1*x4023))+(((-1.0)*sj1*x4022))+(((-1.0)*x4033*x4035))+((x4024*x4031))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj5*x4028*x4034))+(((-1.0)*sj5*x4028*x4036))+(((-1.0)*x4024*x4025))+(((-1.0)*x4024*x4029))+((cj5*x4028*x4029))+((cj5*x4025*x4028))+((cj1*r12*x4023))+((cj1*x4022))+((cj4*x4033*x4034))+((cj4*x4033*x4036))+((x4023*x4030))+((cj4*x4024*x4029))+((cj4*x4024*x4025))+(((-1.0)*x4033*x4034))+(((-1.0)*x4033*x4036))+(((0.250000349687704)*x4030))), (((x4032*x4033))+(((-1.0)*sj5*x4028*x4035))+(((0.250000349687704)*x4026))+(((-1.0)*cj4*x4024*x4031))+((cj5*x4027*x4028))+(((-1.0)*x4024*x4027))+((sj5*x4028*x4032))+(((-1.0)*cj5*x4028*x4031))+(((-1.0)*cj4*x4032*x4033))+((x4023*x4026))+((cj4*x4033*x4035))+((cj4*x4024*x4027))+(((-1.0)*r12*sj1*x4023))+(((-1.0)*sj1*x4022))+(((-1.0)*x4033*x4035))+((x4024*x4031))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4039=IKsin(j2);
IkReal x4040=IKcos(j2);
IkReal x4041=(cj5*r11);
IkReal x4042=((0.433012903784321)*cj4);
IkReal x4043=(r21*sj5);
IkReal x4044=((0.500000349687582)*sj4);
IkReal x4045=((0.749999650312296)*sj3);
IkReal x4046=(cj3*cj4);
IkReal x4047=(cj5*r10);
IkReal x4048=((0.0185150129489311)*sj4);
IkReal x4049=(r20*sj5);
IkReal x4050=(cj4*r22);
IkReal x4051=(r10*sj5);
IkReal x4052=(r22*sj3);
IkReal x4053=(r11*sj5);
IkReal x4054=((0.00925751294893567)*cj4);
IkReal x4055=(cj5*r21);
IkReal x4056=(r12*sj3);
IkReal x4057=(cj4*r12);
IkReal x4058=(cj5*r20);
IkReal x4059=((0.866025201892125)*sj4);
IkReal x4060=(cj1*x4040);
IkReal x4061=(sj1*x4039);
IkReal x4062=(cj1*x4039);
IkReal x4063=((0.250000349687704)*cj4*sj3);
IkReal x4064=(sj1*x4040);
IkReal x4065=(cj3*x4059);
IkReal x4066=(x4060+x4061);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x4050))+(((-1.0)*x4042*x4055))+((x4043*x4059))+x4066+(((-1.0)*x4042*x4049))+(((-1.0)*x4058*x4059))+(((0.433012903784321)*x4055))+(((0.433012903784321)*x4049)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-0.749999650312296)*x4057))+(((-1.0)*x4042*x4051))+x4062+(((-1.0)*x4041*x4042))+(((-1.0)*x4047*x4059))+(((-1.0)*x4064))+(((0.433012903784321)*x4051))+(((0.433012903784321)*x4041))+((x4053*x4059)));
evalcond[2]=((((-0.27144)*x4061))+(((-0.27144)*x4060))+((x4048*x4058))+(((0.0160344678271334)*x4050))+(((-1.0)*x4043*x4048))+((x4049*x4054))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4055))+(((-1.0)*pz))+((x4054*x4055))+(((0.0648043305514941)*x4049)));
evalcond[3]=((((-0.27144)*x4062))+(((0.0160344678271334)*x4057))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((0.0648043305514941)*x4051))+(((-1.0)*py))+(((0.0648043305514941)*x4041))+((x4051*x4054))+((x4041*x4054))+(((-1.0)*x4048*x4053))+((x4047*x4048))+(((0.27144)*x4064)));
evalcond[4]=(((x4041*x4045))+(((-0.433012903784321)*x4056))+((x4045*x4051))+((x4046*x4053))+((cj3*x4044*x4051))+(((-1.0)*sj3*x4044*x4053))+x4066+(((-1.0)*x4046*x4047))+((r12*x4065))+((x4042*x4056))+((x4051*x4063))+((x4041*x4063))+((cj3*x4041*x4044))+((sj3*x4044*x4047)));
evalcond[5]=((((-0.433012903784321)*x4052))+((x4045*x4049))+((x4049*x4063))+((cj3*x4044*x4049))+((x4045*x4055))+((cj3*x4044*x4055))+((x4043*x4046))+x4064+((x4042*x4052))+(((-1.0)*x4062))+((x4055*x4063))+(((-1.0)*sj3*x4043*x4044))+(((-1.0)*x4046*x4058))+((sj3*x4044*x4058))+((r22*x4065)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4067=((0.528192360616262)*sj4);
IkReal x4068=((0.26409636501044)*cj4);
IkReal x4069=(r20*sj5);
IkReal x4070=((0.444735007694415)*cj5);
IkReal x4071=((0.457427895740576)*cj4);
IkReal x4072=(r10*sj5);
if( IKabs((((cj5*r10*x4067))+((r12*x4071))+(((-0.444735007694415)*x4072))+((cj5*r11*x4068))+(((-1.0)*r11*x4070))+(((0.204620884747229)*r12))+((x4068*x4072))+(((-1.0)*r11*sj5*x4067))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x4067))+(((-0.444735007694415)*x4069))+(((0.204620884747229)*r22))+((x4068*x4069))+((r22*x4071))+((cj5*r21*x4068))+(((-1.0)*r21*x4070))+(((-1.0)*r21*sj5*x4067))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r10*x4067))+((r12*x4071))+(((-0.444735007694415)*x4072))+((cj5*r11*x4068))+(((-1.0)*r11*x4070))+(((0.204620884747229)*r12))+((x4068*x4072))+(((-1.0)*r11*sj5*x4067))+(((2.4390243902439)*py))))+IKsqr((((cj5*r20*x4067))+(((-0.444735007694415)*x4069))+(((0.204620884747229)*r22))+((x4068*x4069))+((r22*x4071))+((cj5*r21*x4068))+(((-1.0)*r21*x4070))+(((-1.0)*r21*sj5*x4067))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((cj5*r10*x4067))+((r12*x4071))+(((-0.444735007694415)*x4072))+((cj5*r11*x4068))+(((-1.0)*r11*x4070))+(((0.204620884747229)*r12))+((x4068*x4072))+(((-1.0)*r11*sj5*x4067))+(((2.4390243902439)*py))), (((cj5*r20*x4067))+(((-0.444735007694415)*x4069))+(((0.204620884747229)*r22))+((x4068*x4069))+((r22*x4071))+((cj5*r21*x4068))+(((-1.0)*r21*x4070))+(((-1.0)*r21*sj5*x4067))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4073=(cj5*sj4);
IkReal x4074=((0.135720094919197)*sj3);
IkReal x4075=(cj5*r11);
IkReal x4076=(cj5*r21);
IkReal x4077=((0.20357990508077)*sj3);
IkReal x4078=(r20*sj5);
IkReal x4079=((0.00925751294893567)*cj4);
IkReal x4080=(cj4*r10);
IkReal x4081=((0.27144)*cj3);
IkReal x4082=((0.10827950965428)*cj4);
IkReal x4083=((0.117537022603216)*sj3);
IkReal x4084=(cj4*r22);
IkReal x4085=(cj3*sj4);
IkReal x4086=(cj4*r12);
IkReal x4087=(r10*sj5);
IkReal x4088=(cj4*sj5);
IkReal x4089=((0.135720094919197)*cj3);
IkReal x4090=((0.41)*(IKcos(j1)));
IkReal x4091=((0.41)*(IKsin(j1)));
IkReal x4092=(r11*sj4*sj5);
IkReal x4093=((0.0678600949192303)*cj4*sj3);
IkReal x4094=(r21*sj4*sj5);
evalcond[0]=((((-0.18234135315471)*x4075))+(((-1.0)*x4091))+(((0.10827950965428)*sj5*x4080))+(((0.187545437253636)*x4086))+py+(((-0.216558867852667)*x4092))+((x4075*x4082))+(((0.0838945627463637)*r12))+(((0.216558867852667)*r10*x4073))+(((-0.18234135315471)*x4087)));
evalcond[1]=(((x4076*x4082))+(((-0.18234135315471)*x4076))+(((-0.18234135315471)*x4078))+(((-1.0)*x4090))+(((0.187545437253636)*x4084))+pz+(((-0.216558867852667)*x4094))+(((0.0838945627463637)*r22))+(((0.216558867852667)*r20*x4073))+((x4078*x4082)));
evalcond[2]=(((x4083*x4086))+(((-0.0648043305514941)*x4078))+(((-0.0648043305514941)*x4076))+(((0.135720094919197)*x4085*x4087))+(((-1.0)*x4090))+(((-1.0)*r12*x4083))+((r11*x4073*x4089))+(((0.0185150129489311)*x4094))+((x4075*x4077))+(((0.0678600949192303)*sj3*sj5*x4080))+(((-1.0)*cj5*x4080*x4081))+((r10*x4073*x4074))+pz+(((0.0160344678271334)*r22))+(((0.235073880801598)*r12*x4085))+(((-0.0185150129489311)*r20*x4073))+(((-1.0)*x4074*x4092))+((r11*x4081*x4088))+((x4077*x4087))+(((-0.0160344678271334)*x4084))+((x4075*x4093))+(((-1.0)*x4076*x4079))+(((-1.0)*x4078*x4079)));
evalcond[3]=(((r20*x4073*x4074))+((r21*x4081*x4088))+((x4083*x4084))+((x4076*x4093))+((x4079*x4087))+(((0.0648043305514941)*x4087))+((x4077*x4078))+(((-0.0185150129489311)*x4092))+((x4078*x4093))+(((-0.0160344678271334)*r12))+(((-1.0)*cj4*cj5*r20*x4081))+((x4075*x4079))+(((0.135720094919197)*x4078*x4085))+(((-1.0)*r22*x4083))+(((-1.0)*py))+x4091+(((0.235073880801598)*r22*x4085))+((r21*x4073*x4089))+(((0.0160344678271334)*x4086))+(((0.0185150129489311)*r10*x4073))+(((-1.0)*x4074*x4094))+(((0.0648043305514941)*x4075))+((x4076*x4077)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4095=((0.250000349687704)*r12);
IkReal x4096=((0.749999650312296)*cj4);
IkReal x4097=(cj1*r22);
IkReal x4098=((0.866025201892125)*sj4);
IkReal x4099=(cj1*r20);
IkReal x4100=(sj1*sj5);
IkReal x4101=((0.433012903784321)*r20);
IkReal x4102=((0.433012903784321)*sj5);
IkReal x4103=(cj1*r10);
IkReal x4104=(r22*sj1);
IkReal x4105=((0.433012903784321)*r10);
IkReal x4106=((0.433012903784321)*cj5);
IkReal x4107=(cj1*r21);
IkReal x4108=(cj1*r11);
IkReal x4109=(r11*sj1);
IkReal x4110=(cj1*cj4*x4102);
IkReal x4111=(cj5*sj1*x4098);
IkReal x4112=(cj4*r21*x4106);
if( IKabs((((cj4*x4100*x4101))+((r20*x4111))+(((-1.0)*cj4*x4102*x4103))+((sj5*x4098*x4108))+(((-1.0)*cj1*r12*x4096))+(((-1.0)*r21*sj1*x4106))+(((-1.0)*cj1*x4095))+(((-1.0)*cj5*x4098*x4103))+((x4106*x4108))+(((0.250000349687704)*x4104))+((x4096*x4104))+(((-1.0)*cj4*x4106*x4108))+(((-1.0)*x4100*x4101))+(((-1.0)*r21*x4098*x4100))+((x4102*x4103))+((sj1*x4112)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4100*x4105))+((cj4*x4106*x4109))+((cj4*x4106*x4107))+(((-1.0)*r11*x4098*x4100))+((r12*sj1*x4096))+(((-1.0)*x4106*x4109))+(((-1.0)*x4106*x4107))+((cj4*x4099*x4102))+(((0.250000349687704)*x4097))+((x4096*x4097))+(((-1.0)*sj5*x4098*x4107))+(((-1.0)*x4100*x4105))+((sj1*x4095))+((r10*x4111))+((cj5*x4098*x4099))+(((-1.0)*x4099*x4102)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x4100*x4101))+((r20*x4111))+(((-1.0)*cj4*x4102*x4103))+((sj5*x4098*x4108))+(((-1.0)*cj1*r12*x4096))+(((-1.0)*r21*sj1*x4106))+(((-1.0)*cj1*x4095))+(((-1.0)*cj5*x4098*x4103))+((x4106*x4108))+(((0.250000349687704)*x4104))+((x4096*x4104))+(((-1.0)*cj4*x4106*x4108))+(((-1.0)*x4100*x4101))+(((-1.0)*r21*x4098*x4100))+((x4102*x4103))+((sj1*x4112))))+IKsqr((((cj4*x4100*x4105))+((cj4*x4106*x4109))+((cj4*x4106*x4107))+(((-1.0)*r11*x4098*x4100))+((r12*sj1*x4096))+(((-1.0)*x4106*x4109))+(((-1.0)*x4106*x4107))+((cj4*x4099*x4102))+(((0.250000349687704)*x4097))+((x4096*x4097))+(((-1.0)*sj5*x4098*x4107))+(((-1.0)*x4100*x4105))+((sj1*x4095))+((r10*x4111))+((cj5*x4098*x4099))+(((-1.0)*x4099*x4102))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x4100*x4101))+((r20*x4111))+(((-1.0)*cj4*x4102*x4103))+((sj5*x4098*x4108))+(((-1.0)*cj1*r12*x4096))+(((-1.0)*r21*sj1*x4106))+(((-1.0)*cj1*x4095))+(((-1.0)*cj5*x4098*x4103))+((x4106*x4108))+(((0.250000349687704)*x4104))+((x4096*x4104))+(((-1.0)*cj4*x4106*x4108))+(((-1.0)*x4100*x4101))+(((-1.0)*r21*x4098*x4100))+((x4102*x4103))+((sj1*x4112))), (((cj4*x4100*x4105))+((cj4*x4106*x4109))+((cj4*x4106*x4107))+(((-1.0)*r11*x4098*x4100))+((r12*sj1*x4096))+(((-1.0)*x4106*x4109))+(((-1.0)*x4106*x4107))+((cj4*x4099*x4102))+(((0.250000349687704)*x4097))+((x4096*x4097))+(((-1.0)*sj5*x4098*x4107))+(((-1.0)*x4100*x4105))+((sj1*x4095))+((r10*x4111))+((cj5*x4098*x4099))+(((-1.0)*x4099*x4102))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4113=IKcos(j2);
IkReal x4114=IKsin(j2);
IkReal x4115=(cj5*r11);
IkReal x4116=((0.433012903784321)*cj4);
IkReal x4117=(r21*sj5);
IkReal x4118=((0.500000349687582)*sj4);
IkReal x4119=((0.749999650312296)*sj3);
IkReal x4120=(cj3*cj4);
IkReal x4121=(cj5*r10);
IkReal x4122=((0.0185150129489311)*sj4);
IkReal x4123=(r20*sj5);
IkReal x4124=(cj4*r22);
IkReal x4125=(r10*sj5);
IkReal x4126=(r12*sj3);
IkReal x4127=(r11*sj5);
IkReal x4128=(r22*sj3);
IkReal x4129=((0.27144)*sj1);
IkReal x4130=((0.00925751294893567)*cj4);
IkReal x4131=(cj5*r20);
IkReal x4132=(cj5*r21);
IkReal x4133=(cj4*r12);
IkReal x4134=((0.866025201892125)*sj4);
IkReal x4135=(sj1*x4113);
IkReal x4136=(cj1*x4113);
IkReal x4137=(cj1*x4114);
IkReal x4138=((0.250000349687704)*cj4*sj3);
IkReal x4139=(cj3*x4134);
IkReal x4140=(sj1*x4114);
IkReal x4141=((1.0)*x4137);
evalcond[0]=(((x4117*x4134))+(((-0.250000349687704)*r22))+(((-1.0)*x4131*x4134))+(((0.433012903784321)*x4123))+(((-1.0)*x4116*x4123))+(((-0.749999650312296)*x4124))+x4140+x4136+(((0.433012903784321)*x4132))+(((-1.0)*x4116*x4132)));
evalcond[1]=((((-1.0)*x4121*x4134))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x4115))+(((0.433012903784321)*x4125))+(((-1.0)*x4116*x4125))+((x4127*x4134))+x4135+(((-1.0)*x4141))+(((-1.0)*x4115*x4116))+(((-0.749999650312296)*x4133)));
evalcond[2]=((((0.0160344678271334)*x4124))+((x4123*x4130))+(((0.41)*cj1))+((x4122*x4131))+(((-0.0160344678271334)*r22))+((x4130*x4132))+(((0.0648043305514941)*x4123))+(((-1.0)*pz))+(((-0.27144)*x4136))+(((-1.0)*x4114*x4129))+(((0.0648043305514941)*x4132))+(((-1.0)*x4117*x4122)));
evalcond[3]=(((x4115*x4130))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x4113*x4129))+(((0.0648043305514941)*x4115))+(((0.0648043305514941)*x4125))+(((0.27144)*x4137))+(((-1.0)*py))+((x4121*x4122))+(((0.0160344678271334)*x4133))+((x4125*x4130))+(((-1.0)*x4122*x4127)));
evalcond[4]=(((cj3*x4118*x4132))+((r22*x4139))+((x4123*x4138))+((x4116*x4128))+(((-0.433012903784321)*x4128))+((sj3*x4118*x4131))+((x4119*x4132))+((x4132*x4138))+((x4117*x4120))+(((-1.0)*x4120*x4131))+x4135+(((-1.0)*sj3*x4117*x4118))+((cj3*x4118*x4123))+(((-1.0)*x4141))+((x4119*x4123)));
evalcond[5]=(((x4115*x4138))+((sj3*x4118*x4121))+((x4120*x4127))+(((-1.0)*x4120*x4121))+(((-1.0)*sj3*x4118*x4127))+((x4116*x4126))+(((-1.0)*x4140))+(((-0.433012903784321)*x4126))+(((-1.0)*x4136))+((r12*x4139))+((x4115*x4119))+((x4125*x4138))+((cj3*x4118*x4125))+((cj3*x4115*x4118))+((x4119*x4125)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4142=((0.26409636501044)*cj4);
IkReal x4143=(r20*sj5);
IkReal x4144=(cj5*r21);
IkReal x4145=((0.457427895740576)*cj4);
IkReal x4146=(r00*sj5);
IkReal x4147=((0.528192360616262)*sj4);
IkReal x4148=(cj5*r01);
if( IKabs(((((0.444735007694415)*x4146))+(((0.444735007694415)*x4148))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4147))+(((-1.0)*r02*x4145))+(((-1.0)*x4142*x4148))+(((-1.0)*x4142*x4146))+((r01*sj5*x4147)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4142*x4143))+((x4142*x4144))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x4144))+(((-0.444735007694415)*x4143))+((r22*x4145))+((cj5*r20*x4147))+(((-1.0)*r21*sj5*x4147))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((0.444735007694415)*x4146))+(((0.444735007694415)*x4148))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4147))+(((-1.0)*r02*x4145))+(((-1.0)*x4142*x4148))+(((-1.0)*x4142*x4146))+((r01*sj5*x4147))))+IKsqr((((x4142*x4143))+((x4142*x4144))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x4144))+(((-0.444735007694415)*x4143))+((r22*x4145))+((cj5*r20*x4147))+(((-1.0)*r21*sj5*x4147))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((0.444735007694415)*x4146))+(((0.444735007694415)*x4148))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4147))+(((-1.0)*r02*x4145))+(((-1.0)*x4142*x4148))+(((-1.0)*x4142*x4146))+((r01*sj5*x4147))), (((x4142*x4143))+((x4142*x4144))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x4144))+(((-0.444735007694415)*x4143))+((r22*x4145))+((cj5*r20*x4147))+(((-1.0)*r21*sj5*x4147))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4149=((1.0)*px);
IkReal x4150=((0.187545437253636)*cj4);
IkReal x4151=(r20*sj5);
IkReal x4152=(r01*sj3);
IkReal x4153=(cj5*r21);
IkReal x4154=(cj3*r00);
IkReal x4155=((0.0185150129489311)*sj4);
IkReal x4156=(r21*sj5);
IkReal x4157=((0.20357990508077)*sj3);
IkReal x4158=(cj5*sj4);
IkReal x4159=((0.135720094919197)*sj3);
IkReal x4160=(cj4*cj5);
IkReal x4161=(r00*sj5);
IkReal x4162=((0.00925751294893567)*cj4);
IkReal x4163=((0.10827950965428)*cj4);
IkReal x4164=(cj4*r22);
IkReal x4165=((0.117537022603216)*sj3);
IkReal x4166=(cj5*r01);
IkReal x4167=((0.135720094919197)*cj3);
IkReal x4168=(r01*sj5);
IkReal x4169=((0.216558867852667)*sj4);
IkReal x4170=(cj4*r02);
IkReal x4171=((0.27144)*cj3);
IkReal x4172=((0.41)*(IKsin(j1)));
IkReal x4173=((0.41)*(IKcos(j1)));
IkReal x4174=((0.135720094919197)*sj4*sj5);
IkReal x4175=((0.0678600949192303)*cj4*sj3);
IkReal x4176=((0.235073880801598)*cj3*sj4);
IkReal x4177=(x4149+x4172);
evalcond[0]=((((-1.0)*x4173))+(((-0.18234135315471)*x4153))+(((-0.18234135315471)*x4151))+((r22*x4150))+((x4151*x4163))+((x4153*x4163))+(((0.216558867852667)*r20*x4158))+pz+(((-1.0)*x4156*x4169))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-0.216558867852667)*r00*x4158))+(((-1.0)*x4177))+((x4168*x4169))+(((-1.0)*r02*x4150))+(((-0.0838945627463637)*r02))+(((-1.0)*x4161*x4163))+(((-0.10827950965428)*r01*x4160))+(((0.18234135315471)*x4161))+(((0.18234135315471)*x4166)));
evalcond[2]=(((r22*x4165))+((cj5*r00*x4155))+(((0.0160344678271334)*x4170))+(((0.00925751294893567)*r01*x4160))+(((-1.0)*x4177))+((r20*x4160*x4171))+(((-1.0)*cj4*x4156*x4171))+(((-0.0160344678271334)*r02))+(((-1.0)*r20*x4158*x4159))+(((-1.0)*x4151*x4175))+(((0.0648043305514941)*x4161))+(((0.0648043305514941)*x4166))+(((-1.0)*x4153*x4157))+(((-1.0)*x4155*x4168))+(((-1.0)*x4153*x4175))+(((-1.0)*sj4*x4153*x4167))+(((-1.0)*x4151*x4157))+(((-1.0)*r22*x4176))+(((-1.0)*x4164*x4165))+((x4161*x4162))+(((-1.0)*sj4*x4151*x4167))+((sj4*x4156*x4159)));
evalcond[3]=((((-1.0)*r02*x4165))+(((0.0648043305514941)*x4153))+(((0.0648043305514941)*x4151))+(((-1.0)*x4155*x4156))+((x4161*x4175))+(((-0.0160344678271334)*r22))+(((-1.0)*x4152*x4174))+((x4151*x4162))+((r00*x4158*x4159))+((x4153*x4162))+(((0.0160344678271334)*x4164))+((cj5*r20*x4155))+((cj4*x4168*x4171))+(((-0.27144)*x4154*x4160))+(((-1.0)*pz))+((x4165*x4170))+((x4157*x4161))+((r01*x4158*x4167))+(((0.20357990508077)*cj5*x4152))+x4173+(((0.0678600949192303)*x4152*x4160))+((x4154*x4174))+((r02*x4176)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4178=((0.250000349687704)*sj1);
IkReal x4179=(cj1*cj4);
IkReal x4180=((0.749999650312296)*r22);
IkReal x4181=(cj4*sj1);
IkReal x4182=((0.749999650312296)*r02);
IkReal x4183=((0.250000349687704)*cj1);
IkReal x4184=((0.433012903784321)*r00*sj5);
IkReal x4185=((0.433012903784321)*r20*sj5);
IkReal x4186=((0.433012903784321)*cj5*r01);
IkReal x4187=((0.433012903784321)*cj5*r21);
IkReal x4188=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4189=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4190=((0.866025201892125)*r01*sj4*sj5);
IkReal x4191=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x4184))+(((-1.0)*cj1*x4186))+(((-1.0)*sj1*x4191))+((r02*x4183))+((r20*x4188))+((x4180*x4181))+((x4179*x4186))+((x4179*x4184))+((x4179*x4182))+((r22*x4178))+((r00*x4189))+(((-1.0)*cj1*x4190))+(((-1.0)*sj1*x4185))+(((-1.0)*sj1*x4187))+((x4181*x4185))+((x4181*x4187)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4187))+(((-1.0)*x4181*x4186))+(((-1.0)*x4181*x4184))+(((-1.0)*x4181*x4182))+((r20*x4189))+(((-1.0)*r00*x4188))+((x4179*x4187))+((x4179*x4185))+((x4179*x4180))+((sj1*x4190))+((sj1*x4186))+((sj1*x4184))+((r22*x4183))+(((-1.0)*r02*x4178))+(((-1.0)*cj1*x4191)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x4184))+(((-1.0)*cj1*x4186))+(((-1.0)*sj1*x4191))+((r02*x4183))+((r20*x4188))+((x4180*x4181))+((x4179*x4186))+((x4179*x4184))+((x4179*x4182))+((r22*x4178))+((r00*x4189))+(((-1.0)*cj1*x4190))+(((-1.0)*sj1*x4185))+(((-1.0)*sj1*x4187))+((x4181*x4185))+((x4181*x4187))))+IKsqr(((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4187))+(((-1.0)*x4181*x4186))+(((-1.0)*x4181*x4184))+(((-1.0)*x4181*x4182))+((r20*x4189))+(((-1.0)*r00*x4188))+((x4179*x4187))+((x4179*x4185))+((x4179*x4180))+((sj1*x4190))+((sj1*x4186))+((sj1*x4184))+((r22*x4183))+(((-1.0)*r02*x4178))+(((-1.0)*cj1*x4191))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x4184))+(((-1.0)*cj1*x4186))+(((-1.0)*sj1*x4191))+((r02*x4183))+((r20*x4188))+((x4180*x4181))+((x4179*x4186))+((x4179*x4184))+((x4179*x4182))+((r22*x4178))+((r00*x4189))+(((-1.0)*cj1*x4190))+(((-1.0)*sj1*x4185))+(((-1.0)*sj1*x4187))+((x4181*x4185))+((x4181*x4187))), ((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4187))+(((-1.0)*x4181*x4186))+(((-1.0)*x4181*x4184))+(((-1.0)*x4181*x4182))+((r20*x4189))+(((-1.0)*r00*x4188))+((x4179*x4187))+((x4179*x4185))+((x4179*x4180))+((sj1*x4190))+((sj1*x4186))+((sj1*x4184))+((r22*x4183))+(((-1.0)*r02*x4178))+(((-1.0)*cj1*x4191))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4192=IKsin(j2);
IkReal x4193=IKcos(j2);
IkReal x4194=((0.749999650312296)*sj3);
IkReal x4195=(cj5*r01);
IkReal x4196=(r00*sj5);
IkReal x4197=(cj4*cj5);
IkReal x4198=((1.0)*cj3);
IkReal x4199=(r21*sj3);
IkReal x4200=(cj4*sj5);
IkReal x4201=(cj3*r21);
IkReal x4202=((0.500000349687582)*sj4);
IkReal x4203=((0.433012903784321)*r20);
IkReal x4204=(cj4*r22);
IkReal x4205=((0.433012903784321)*sj3);
IkReal x4206=((0.433012903784321)*cj4);
IkReal x4207=(r01*sj5);
IkReal x4208=(r20*sj5);
IkReal x4209=((0.0160344678271334)*r02);
IkReal x4210=(cj4*r02);
IkReal x4211=((0.00925751294893567)*cj4);
IkReal x4212=((0.0185150129489311)*sj4);
IkReal x4213=(r21*sj5);
IkReal x4214=(cj5*r21);
IkReal x4215=((0.866025201892125)*sj4);
IkReal x4216=(cj5*r20);
IkReal x4217=(cj5*r00);
IkReal x4218=((0.250000349687704)*sj3);
IkReal x4219=(cj1*x4193);
IkReal x4220=(sj1*x4192);
IkReal x4221=(cj1*x4192);
IkReal x4222=(sj1*x4193);
IkReal x4223=(x4219+x4220);
evalcond[0]=(((sj5*x4203))+(((-0.250000349687704)*r22))+((x4213*x4215))+(((0.433012903784321)*x4214))+(((-0.433012903784321)*r21*x4197))+(((-0.749999650312296)*x4204))+x4223+(((-1.0)*x4215*x4216))+(((-1.0)*x4200*x4203)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4222))+(((-1.0)*x4195*x4206))+((x4207*x4215))+x4221+(((-1.0)*x4215*x4217))+(((-1.0)*x4196*x4206))+(((-0.749999650312296)*x4210))+(((0.433012903784321)*x4195))+(((0.433012903784321)*x4196)));
evalcond[2]=((((0.0648043305514941)*x4208))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x4212*x4213))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x4200))+(((0.0648043305514941)*x4214))+((x4212*x4216))+(((0.00925751294893567)*r21*x4197))+(((-0.27144)*x4220))+(((-0.27144)*x4219))+(((0.0160344678271334)*x4204)));
evalcond[3]=(((cj4*x4209))+((x4196*x4211))+(((-1.0)*x4209))+(((-1.0)*x4207*x4212))+(((-0.41)*sj1))+(((-1.0)*px))+((x4212*x4217))+(((-0.27144)*x4221))+(((0.27144)*x4222))+(((0.0648043305514941)*x4195))+(((0.0648043305514941)*x4196))+((x4195*x4211)));
evalcond[4]=(((x4205*x4210))+(((-1.0)*sj3*x4202*x4207))+((cj3*r01*x4200))+((cj4*x4196*x4218))+(((-1.0)*r02*x4205))+((cj3*x4195*x4202))+((cj3*r02*x4215))+(((-1.0)*r00*x4197*x4198))+((sj3*x4202*x4217))+x4223+((x4194*x4195))+((x4194*x4196))+((cj3*x4196*x4202))+((cj4*x4195*x4218)));
evalcond[5]=(((r20*x4200*x4218))+((x4204*x4205))+(((-1.0)*x4221))+((cj3*x4202*x4208))+(((-1.0)*r22*x4205))+(((-1.0)*r20*x4197*x4198))+(((0.250000349687704)*x4197*x4199))+((cj3*r22*x4215))+((sj3*x4202*x4216))+x4222+((x4200*x4201))+(((-1.0)*sj5*x4199*x4202))+((x4194*x4214))+((x4194*x4208))+((cj5*x4201*x4202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4224=(cj5*r21);
IkReal x4225=((0.26409636501044)*cj4);
IkReal x4226=((0.457427895740576)*cj4);
IkReal x4227=((0.528192360616262)*sj4);
IkReal x4228=(cj5*r01);
IkReal x4229=((0.444735007694415)*sj5);
if( IKabs((((r00*sj5*x4225))+(((-0.444735007694415)*x4228))+((cj5*r00*x4227))+((r02*x4226))+(((-1.0)*r00*x4229))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x4227))+((x4225*x4228))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4224*x4225))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x4224))+((cj5*r20*x4227))+((r22*x4226))+((r20*sj5*x4225))+(((-1.0)*r21*sj5*x4227))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4229)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*sj5*x4225))+(((-0.444735007694415)*x4228))+((cj5*r00*x4227))+((r02*x4226))+(((-1.0)*r00*x4229))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x4227))+((x4225*x4228))+(((2.4390243902439)*px))))+IKsqr((((x4224*x4225))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x4224))+((cj5*r20*x4227))+((r22*x4226))+((r20*sj5*x4225))+(((-1.0)*r21*sj5*x4227))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4229))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*sj5*x4225))+(((-0.444735007694415)*x4228))+((cj5*r00*x4227))+((r02*x4226))+(((-1.0)*r00*x4229))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x4227))+((x4225*x4228))+(((2.4390243902439)*px))), (((x4224*x4225))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x4224))+((cj5*r20*x4227))+((r22*x4226))+((r20*sj5*x4225))+(((-1.0)*r21*sj5*x4227))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4229))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4230=((0.187545437253636)*cj4);
IkReal x4231=(cj5*r20);
IkReal x4232=(r01*sj5);
IkReal x4233=(cj5*r21);
IkReal x4234=(cj3*r00);
IkReal x4235=(sj4*sj5);
IkReal x4236=((0.20357990508077)*sj3);
IkReal x4237=(r20*sj5);
IkReal x4238=(cj4*cj5);
IkReal x4239=((0.00925751294893567)*cj4);
IkReal x4240=((0.117537022603216)*sj3);
IkReal x4241=((0.10827950965428)*cj4);
IkReal x4242=(r00*sj5);
IkReal x4243=(cj4*r22);
IkReal x4244=(r21*sj5);
IkReal x4245=((0.216558867852667)*sj4);
IkReal x4246=((0.0185150129489311)*sj4);
IkReal x4247=(cj3*sj4);
IkReal x4248=(cj4*r02);
IkReal x4249=(cj5*r01);
IkReal x4250=((0.41)*(IKcos(j1)));
IkReal x4251=((0.41)*(IKsin(j1)));
IkReal x4252=((0.135720094919197)*sj3*sj4);
IkReal x4253=((0.0678600949192303)*cj4*sj3);
IkReal x4254=(cj5*r00*sj4);
IkReal x4255=((0.27144)*cj3*cj4);
evalcond[0]=(((cj5*r00*x4245))+((x4241*x4242))+((r02*x4230))+(((-1.0)*x4232*x4245))+(((-1.0)*x4251))+px+(((0.10827950965428)*r01*x4238))+(((-0.18234135315471)*x4249))+(((-0.18234135315471)*x4242))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x4231*x4245))+((x4237*x4241))+((r22*x4230))+(((-1.0)*x4250))+pz+(((-0.216558867852667)*r21*x4235))+(((-0.18234135315471)*x4233))+(((-0.18234135315471)*x4237))+(((0.0838945627463637)*r22))+((x4233*x4241)));
evalcond[2]=(((x4240*x4248))+(((-1.0)*x4231*x4246))+(((0.0185150129489311)*r21*x4235))+((x4236*x4242))+((x4236*x4249))+((x4242*x4253))+(((0.135720094919197)*x4234*x4235))+(((0.135720094919197)*x4247*x4249))+(((0.235073880801598)*r02*x4247))+(((-0.27144)*x4234*x4238))+((cj5*r00*x4252))+(((-1.0)*x4233*x4239))+(((-1.0)*x4250))+((x4232*x4255))+(((-0.0648043305514941)*x4237))+(((-0.0648043305514941)*x4233))+pz+(((-1.0)*x4237*x4239))+(((0.0160344678271334)*r22))+(((-1.0)*r02*x4240))+(((0.0678600949192303)*r01*sj3*x4238))+(((-1.0)*x4232*x4252))+(((-0.0160344678271334)*x4243)));
evalcond[3]=(((x4240*x4243))+((cj5*r00*x4246))+((x4239*x4242))+(((0.135720094919197)*x4233*x4247))+((x4236*x4237))+(((0.0648043305514941)*x4242))+(((0.0648043305514941)*x4249))+((x4244*x4255))+(((-0.0160344678271334)*r02))+(((0.0160344678271334)*x4248))+((x4233*x4253))+(((-1.0)*r22*x4240))+((x4231*x4252))+(((-1.0)*x4231*x4255))+(((-1.0)*px))+(((-1.0)*x4232*x4246))+(((-0.135720094919197)*r21*sj3*x4235))+x4251+((x4237*x4253))+((x4233*x4236))+(((0.235073880801598)*r22*x4247))+(((0.135720094919197)*cj3*r20*x4235))+(((0.00925751294893567)*r01*x4238)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4256=(r02*sj1);
IkReal x4257=(cj1*cj4);
IkReal x4258=((0.749999650312296)*r22);
IkReal x4259=(cj4*sj1);
IkReal x4260=((0.250000349687704)*r22);
IkReal x4261=((0.433012903784321)*r00*sj5);
IkReal x4262=((0.433012903784321)*r20*sj5);
IkReal x4263=((0.433012903784321)*cj5*r01);
IkReal x4264=((0.433012903784321)*cj5*r21);
IkReal x4265=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4266=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4267=((0.866025201892125)*r01*sj4*sj5);
IkReal x4268=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x4268))+(((-1.0)*sj1*x4264))+(((-1.0)*sj1*x4262))+((x4258*x4259))+(((-1.0)*r00*x4266))+(((-0.749999650312296)*r02*x4257))+((x4259*x4262))+((x4259*x4264))+((sj1*x4260))+((r20*x4265))+(((-1.0)*x4257*x4261))+(((-1.0)*x4257*x4263))+(((-0.250000349687704)*cj1*r02))+((cj1*x4267))+((cj1*x4263))+((cj1*x4261)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x4267))+(((-1.0)*sj1*x4263))+(((-1.0)*sj1*x4261))+(((0.749999650312296)*cj4*x4256))+(((0.250000349687704)*x4256))+((x4257*x4262))+((x4257*x4264))+((x4259*x4261))+((x4259*x4263))+((r20*x4266))+((x4257*x4258))+(((-1.0)*cj1*x4268))+(((-1.0)*cj1*x4262))+(((-1.0)*cj1*x4264))+((r00*x4265))+((cj1*x4260)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x4268))+(((-1.0)*sj1*x4264))+(((-1.0)*sj1*x4262))+((x4258*x4259))+(((-1.0)*r00*x4266))+(((-0.749999650312296)*r02*x4257))+((x4259*x4262))+((x4259*x4264))+((sj1*x4260))+((r20*x4265))+(((-1.0)*x4257*x4261))+(((-1.0)*x4257*x4263))+(((-0.250000349687704)*cj1*r02))+((cj1*x4267))+((cj1*x4263))+((cj1*x4261))))+IKsqr(((((-1.0)*sj1*x4267))+(((-1.0)*sj1*x4263))+(((-1.0)*sj1*x4261))+(((0.749999650312296)*cj4*x4256))+(((0.250000349687704)*x4256))+((x4257*x4262))+((x4257*x4264))+((x4259*x4261))+((x4259*x4263))+((r20*x4266))+((x4257*x4258))+(((-1.0)*cj1*x4268))+(((-1.0)*cj1*x4262))+(((-1.0)*cj1*x4264))+((r00*x4265))+((cj1*x4260))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x4268))+(((-1.0)*sj1*x4264))+(((-1.0)*sj1*x4262))+((x4258*x4259))+(((-1.0)*r00*x4266))+(((-0.749999650312296)*r02*x4257))+((x4259*x4262))+((x4259*x4264))+((sj1*x4260))+((r20*x4265))+(((-1.0)*x4257*x4261))+(((-1.0)*x4257*x4263))+(((-0.250000349687704)*cj1*r02))+((cj1*x4267))+((cj1*x4263))+((cj1*x4261))), ((((-1.0)*sj1*x4267))+(((-1.0)*sj1*x4263))+(((-1.0)*sj1*x4261))+(((0.749999650312296)*cj4*x4256))+(((0.250000349687704)*x4256))+((x4257*x4262))+((x4257*x4264))+((x4259*x4261))+((x4259*x4263))+((r20*x4266))+((x4257*x4258))+(((-1.0)*cj1*x4268))+(((-1.0)*cj1*x4262))+(((-1.0)*cj1*x4264))+((r00*x4265))+((cj1*x4260))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4269=IKcos(j2);
IkReal x4270=IKsin(j2);
IkReal x4271=((0.433012903784321)*sj3);
IkReal x4272=((0.749999650312296)*sj3);
IkReal x4273=(r00*sj5);
IkReal x4274=(cj4*cj5);
IkReal x4275=((1.0)*cj3);
IkReal x4276=(cj5*r01);
IkReal x4277=(r21*sj3);
IkReal x4278=(cj4*sj5);
IkReal x4279=(cj3*r21);
IkReal x4280=((0.500000349687582)*sj4);
IkReal x4281=((0.433012903784321)*r20);
IkReal x4282=(cj4*r22);
IkReal x4283=(r20*sj5);
IkReal x4284=((0.0160344678271334)*r02);
IkReal x4285=(cj4*r02);
IkReal x4286=(r01*sj5);
IkReal x4287=(cj5*r00);
IkReal x4288=((0.0185150129489311)*sj4);
IkReal x4289=(r21*sj5);
IkReal x4290=(cj5*r21);
IkReal x4291=((0.866025201892125)*sj4);
IkReal x4292=(cj5*r20);
IkReal x4293=((0.250000349687704)*sj3);
IkReal x4294=(sj1*x4269);
IkReal x4295=(cj1*x4269);
IkReal x4296=(sj1*x4270);
IkReal x4297=(cj1*x4270);
IkReal x4298=((1.0)*x4297);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x4274))+(((-1.0)*x4291*x4292))+((x4289*x4291))+((sj5*x4281))+(((-1.0)*x4278*x4281))+x4295+x4296+(((0.433012903784321)*x4290))+(((-0.749999650312296)*x4282)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*cj4*x4273))+(((-0.433012903784321)*r01*x4274))+(((-1.0)*x4298))+(((0.433012903784321)*x4276))+(((0.433012903784321)*x4273))+x4294+(((-1.0)*x4287*x4291))+(((-0.749999650312296)*x4285))+((x4286*x4291)));
evalcond[2]=((((-0.27144)*x4296))+(((-0.27144)*x4295))+((x4288*x4292))+(((0.41)*cj1))+(((0.00925751294893567)*r20*x4278))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r21*x4274))+(((0.0648043305514941)*x4283))+(((-1.0)*pz))+(((-1.0)*x4288*x4289))+(((0.0648043305514941)*x4290))+(((0.0160344678271334)*x4282)));
evalcond[3]=((((-1.0)*x4284))+(((-0.27144)*x4294))+(((-1.0)*x4286*x4288))+(((0.41)*sj1))+((cj4*x4284))+(((0.0648043305514941)*x4276))+(((0.0648043305514941)*x4273))+(((-1.0)*px))+((x4287*x4288))+(((0.00925751294893567)*r01*x4274))+(((0.27144)*x4297))+(((0.00925751294893567)*cj4*x4273)));
evalcond[4]=(((x4278*x4279))+(((-1.0)*sj5*x4277*x4280))+((cj3*x4280*x4283))+(((-1.0)*x4298))+((sj3*x4280*x4292))+(((-1.0)*r20*x4274*x4275))+(((-1.0)*r22*x4271))+((x4272*x4290))+((cj3*r22*x4291))+x4294+((cj5*x4279*x4280))+(((0.250000349687704)*x4274*x4277))+((x4272*x4283))+((r20*x4278*x4293))+((x4271*x4282)));
evalcond[5]=(((sj3*x4280*x4287))+((cj4*x4273*x4293))+(((-1.0)*x4296))+(((-1.0)*x4295))+((cj3*x4276*x4280))+(((-1.0)*r02*x4271))+((cj3*x4273*x4280))+((r01*x4274*x4293))+(((-1.0)*r00*x4274*x4275))+((cj3*r01*x4278))+((x4272*x4276))+((x4272*x4273))+(((-1.0)*sj3*x4280*x4286))+((cj3*r02*x4291))+((x4271*x4285)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4299=(cj4*sj5);
IkReal x4300=(cj0*r00);
IkReal x4301=(cj0*r02);
IkReal x4302=(cj5*r21);
IkReal x4303=((0.216558867852667)*sj4);
IkReal x4304=((0.528192360616262)*sj4);
IkReal x4305=(cj0*cj5*r01);
CheckValue<IkReal> x4306=IKPowWithIntegerCheck(cj0,-2);
if(!x4306.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x4306.value)*(((((-0.187545437253636)*cj4*x4301))+(((0.0098)*cj0*sj0))+(((-1.0)*cj5*x4300*x4303))+(((-0.0838945627463637)*x4301))+(((0.18234135315471)*sj5*x4300))+(((0.18234135315471)*x4305))+(((-0.10827950965428)*cj4*x4305))+((cj0*r01*sj5*x4303))+(((-0.10827950965428)*x4299*x4300))+(((-1.0)*cj0*px)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-0.444735007694415)*x4302))+((cj5*r20*x4304))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4299))+(((-1.0)*r21*sj5*x4304))+(((0.26409636501044)*cj4*x4302))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x4306.value)*(((((-0.187545437253636)*cj4*x4301))+(((0.0098)*cj0*sj0))+(((-1.0)*cj5*x4300*x4303))+(((-0.0838945627463637)*x4301))+(((0.18234135315471)*sj5*x4300))+(((0.18234135315471)*x4305))+(((-0.10827950965428)*cj4*x4305))+((cj0*r01*sj5*x4303))+(((-0.10827950965428)*x4299*x4300))+(((-1.0)*cj0*px))))))+IKsqr(((((0.204620884747229)*r22))+(((-0.444735007694415)*x4302))+((cj5*r20*x4304))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4299))+(((-1.0)*r21*sj5*x4304))+(((0.26409636501044)*cj4*x4302))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x4306.value)*(((((-0.187545437253636)*cj4*x4301))+(((0.0098)*cj0*sj0))+(((-1.0)*cj5*x4300*x4303))+(((-0.0838945627463637)*x4301))+(((0.18234135315471)*sj5*x4300))+(((0.18234135315471)*x4305))+(((-0.10827950965428)*cj4*x4305))+((cj0*r01*sj5*x4303))+(((-0.10827950965428)*x4299*x4300))+(((-1.0)*cj0*px))))), ((((0.204620884747229)*r22))+(((-0.444735007694415)*x4302))+((cj5*r20*x4304))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4299))+(((-1.0)*r21*sj5*x4304))+(((0.26409636501044)*cj4*x4302))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x4307=IKsin(j1);
IkReal x4308=IKcos(j1);
IkReal x4309=sj0*sj0;
IkReal x4310=cj0*cj0;
IkReal x4311=((0.0098)*cj0);
IkReal x4312=(cj0*cj5);
IkReal x4313=(cj5*sj0);
IkReal x4314=((0.0648043305514941)*r21);
IkReal x4315=(r00*sj5);
IkReal x4316=((0.20357990508077)*sj3);
IkReal x4317=((0.135720094919197)*r21);
IkReal x4318=((1.0)*px);
IkReal x4319=((0.117537022603216)*sj3);
IkReal x4320=((0.00925751294893567)*cj4);
IkReal x4321=(r10*sj4);
IkReal x4322=(sj0*sj5);
IkReal x4323=(cj4*sj0);
IkReal x4324=(r20*sj5);
IkReal x4325=((0.10827950965428)*cj4);
IkReal x4326=(cj3*sj4);
IkReal x4327=((0.135720094919197)*sj5);
IkReal x4328=((0.117537022603216)*r11);
IkReal x4329=(cj5*r01);
IkReal x4330=(cj4*r02);
IkReal x4331=((0.117537022603216)*cj4);
IkReal x4332=((0.0160344678271334)*r02);
IkReal x4333=((0.0648043305514941)*r11);
IkReal x4334=((0.0160344678271334)*r12);
IkReal x4335=(cj0*cj4);
IkReal x4336=(cj5*sj3);
IkReal x4337=((0.0678600949192303)*cj4);
IkReal x4338=(r10*sj5);
IkReal x4339=((1.0)*py);
IkReal x4340=(cj5*r00);
IkReal x4341=(cj0*r21);
IkReal x4342=(r11*sj5);
IkReal x4343=((0.0160344678271334)*r22);
IkReal x4344=(r00*sj4);
IkReal x4345=((1.0)*pz);
IkReal x4346=(r22*sj0);
IkReal x4347=(sj3*sj4);
IkReal x4348=(cj5*r21);
IkReal x4349=(r21*sj3);
IkReal x4350=(cj0*r22);
IkReal x4351=((0.0185150129489311)*sj4);
IkReal x4352=(cj5*r11);
IkReal x4353=(r01*sj5);
IkReal x4354=((0.216558867852667)*sj4);
IkReal x4355=((0.135720094919197)*r20);
IkReal x4356=(sj0*x4311);
IkReal x4357=(sj4*x4322);
IkReal x4358=((0.27144)*cj3*cj4);
IkReal x4359=(r11*x4320);
IkReal x4360=((0.41)*x4307);
IkReal x4361=(cj0*x4338);
IkReal x4362=(sj5*x4351);
IkReal x4363=((0.41)*x4308);
IkReal x4364=(cj0*sj0*x4360);
evalcond[0]=((((-0.18234135315471)*x4324))+(((-1.0)*r21*sj5*x4354))+((x4324*x4325))+(((0.187545437253636)*cj4*r22))+(((-1.0)*x4363))+((cj5*r20*x4354))+((x4325*x4348))+pz+(((-0.18234135315471)*x4348))+(((0.0838945627463637)*r22)));
evalcond[1]=((((0.18234135315471)*r10*x4322))+(((0.18234135315471)*r11*x4313))+(((-1.0)*x4356))+(((-1.0)*r10*x4322*x4325))+(((-1.0)*sj0*x4339))+(((-0.187545437253636)*r12*x4323))+(((-1.0)*x4309*x4360))+(((-0.216558867852667)*x4313*x4321))+((r11*x4322*x4354))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*r11*x4313*x4325)));
evalcond[2]=((((-0.187545437253636)*cj0*x4330))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*r01*x4312*x4325))+(((0.18234135315471)*cj0*x4315))+(((-1.0)*x4310*x4360))+((cj0*x4353*x4354))+(((0.18234135315471)*r01*x4312))+(((-1.0)*cj0*x4315*x4325))+(((-1.0)*cj0*x4318))+x4356+(((-0.216558867852667)*x4312*x4344)));
evalcond[3]=((((-1.0)*r11*x4327*x4347))+(((-1.0)*r21*x4322*x4351))+((cj3*x4321*x4327))+((x4342*x4358))+((r21*x4313*x4320))+(((0.135720094919197)*x4326*x4352))+((x4316*x4338))+((sj0*x4363))+(((-1.0)*sj0*x4345))+(((-1.0)*sj0*x4343))+((r20*x4313*x4351))+(((0.235073880801598)*r12*x4326))+((r11*x4336*x4337))+((x4316*x4352))+((cj4*r12*x4319))+(((0.0648043305514941)*r20*x4322))+(((0.135720094919197)*x4321*x4336))+(((-1.0)*r12*x4319))+((r20*x4320*x4322))+((x4323*x4343))+((x4313*x4314))+((sj3*x4337*x4338))+(((-1.0)*cj5*r10*x4358)));
evalcond[4]=((((-1.0)*cj0*x4345))+(((-1.0)*cj0*x4343))+(((0.0648043305514941)*cj0*x4324))+((sj3*x4329*x4337))+(((-1.0)*x4340*x4358))+(((0.235073880801598)*r02*x4326))+((x4319*x4330))+((x4335*x4343))+((x4315*x4316))+(((0.135720094919197)*x4326*x4329))+(((-1.0)*r01*x4327*x4347))+((x4316*x4329))+((x4353*x4358))+((r20*x4312*x4351))+(((-1.0)*x4341*x4362))+((cj0*x4363))+((r21*x4312*x4320))+(((0.135720094919197)*x4336*x4344))+((cj0*x4320*x4324))+(((-1.0)*r02*x4319))+((sj3*x4315*x4337))+(((0.135720094919197)*x4315*x4326))+((x4312*x4314)));
evalcond[5]=(((cj5*x4333))+(((-1.0)*r21*x4322*x4358))+((cj4*x4334))+(((-1.0)*sj0*x4360))+(((-1.0)*r20*sj3*x4322*x4337))+((x4320*x4352))+(((-1.0)*x4334))+(((-1.0)*x4339))+(((-1.0)*x4342*x4351))+(((0.0648043305514941)*x4338))+(((-1.0)*x4311))+((x4320*x4338))+((r20*x4313*x4358))+(((-1.0)*x4313*x4337*x4349))+(((0.0185150129489311)*cj5*x4321))+((x4319*x4346))+((x4317*x4322*x4347))+(((-1.0)*r22*x4319*x4323))+(((-1.0)*x4313*x4317*x4326))+(((-1.0)*r21*x4313*x4316))+(((-1.0)*r20*x4316*x4322))+(((-0.235073880801598)*x4326*x4346))+(((-1.0)*x4313*x4347*x4355))+(((-1.0)*x4322*x4326*x4355)));
evalcond[6]=(((cj0*sj5*x4317*x4347))+(((-1.0)*x4332))+(((-1.0)*cj0*x4316*x4324))+(((-1.0)*x4318))+((x4320*x4329))+(((0.0648043305514941)*x4329))+((x4315*x4320))+((r20*x4312*x4358))+(((-1.0)*x4312*x4337*x4349))+(((-0.0678600949192303)*sj3*x4324*x4335))+(((-1.0)*x4351*x4353))+(((-1.0)*r21*x4312*x4316))+(((-1.0)*r22*x4319*x4335))+(((-1.0)*x4312*x4317*x4326))+(((-0.27144)*cj3*r21*sj5*x4335))+((x4340*x4351))+((x4319*x4350))+(((-1.0)*cj0*x4360))+(((-0.135720094919197)*cj0*x4324*x4326))+(((0.0160344678271334)*x4330))+(((-0.235073880801598)*x4326*x4350))+(((0.0098)*sj0))+(((-1.0)*x4312*x4347*x4355))+(((0.0648043305514941)*x4315)));
evalcond[7]=((((-0.0678600949192303)*cj0*r12))+(((0.235073880801598)*cj0*sj4*x4342))+(((0.0098)*x4309))+(((0.0185150129489311)*x4313*x4344))+(((-1.0)*x4331*x4361))+(((-1.0)*sj0*x4318))+((r01*x4313*x4320))+(((0.0648043305514941)*sj0*x4315))+((sj0*x4315*x4320))+(((-1.0)*sj0*x4332))+(((0.0648043305514941)*r01*x4313))+(((-1.0)*x4364))+((x4323*x4332))+(((-0.20357990508077)*r12*x4335))+((x4312*x4328))+(((0.117537022603216)*x4361))+(((-1.0)*cj4*x4312*x4328))+(((-0.235073880801598)*x4312*x4321))+(((-1.0)*r01*x4322*x4351)));
evalcond[8]=((((0.117537022603216)*sj0*x4315))+((x4334*x4335))+(((-1.0)*r01*x4313*x4331))+(((0.0185150129489311)*x4312*x4321))+(((-1.0)*cj0*x4334))+(((-1.0)*cj0*x4339))+(((0.117537022603216)*r01*x4313))+(((0.235073880801598)*r01*x4357))+(((-1.0)*x4364))+(((-0.0098)*x4310))+((x4312*x4359))+((x4320*x4361))+(((-0.235073880801598)*x4313*x4344))+((x4312*x4333))+(((-0.117537022603216)*x4315*x4323))+(((-0.20357990508077)*r02*x4323))+(((-1.0)*cj0*x4342*x4351))+(((-0.0678600949192303)*r02*sj0))+(((0.0648043305514941)*x4361)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4365=((0.250000349687704)*sj1);
IkReal x4366=(cj1*cj4);
IkReal x4367=((0.749999650312296)*r22);
IkReal x4368=(cj4*sj1);
IkReal x4369=((0.749999650312296)*r02);
IkReal x4370=((0.250000349687704)*cj1);
IkReal x4371=((0.433012903784321)*r00*sj5);
IkReal x4372=((0.433012903784321)*r20*sj5);
IkReal x4373=((0.433012903784321)*cj5*r01);
IkReal x4374=((0.433012903784321)*cj5*r21);
IkReal x4375=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4376=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4377=((0.866025201892125)*r01*sj4*sj5);
IkReal x4378=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r02*x4370))+((x4368*x4374))+((x4368*x4372))+((r20*x4375))+((r00*x4376))+(((-1.0)*sj1*x4372))+(((-1.0)*sj1*x4378))+(((-1.0)*sj1*x4374))+((x4366*x4369))+((x4367*x4368))+((x4366*x4371))+((x4366*x4373))+((r22*x4365))+(((-1.0)*cj1*x4373))+(((-1.0)*cj1*x4371))+(((-1.0)*cj1*x4377)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x4370))+((sj1*x4377))+((sj1*x4371))+((sj1*x4373))+((r20*x4376))+((x4366*x4367))+(((-1.0)*r02*x4365))+(((-1.0)*x4368*x4369))+(((-1.0)*r00*x4375))+((x4366*x4374))+((x4366*x4372))+(((-1.0)*x4368*x4373))+(((-1.0)*x4368*x4371))+(((-1.0)*cj1*x4378))+(((-1.0)*cj1*x4372))+(((-1.0)*cj1*x4374)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r02*x4370))+((x4368*x4374))+((x4368*x4372))+((r20*x4375))+((r00*x4376))+(((-1.0)*sj1*x4372))+(((-1.0)*sj1*x4378))+(((-1.0)*sj1*x4374))+((x4366*x4369))+((x4367*x4368))+((x4366*x4371))+((x4366*x4373))+((r22*x4365))+(((-1.0)*cj1*x4373))+(((-1.0)*cj1*x4371))+(((-1.0)*cj1*x4377))))+IKsqr((((r22*x4370))+((sj1*x4377))+((sj1*x4371))+((sj1*x4373))+((r20*x4376))+((x4366*x4367))+(((-1.0)*r02*x4365))+(((-1.0)*x4368*x4369))+(((-1.0)*r00*x4375))+((x4366*x4374))+((x4366*x4372))+(((-1.0)*x4368*x4373))+(((-1.0)*x4368*x4371))+(((-1.0)*cj1*x4378))+(((-1.0)*cj1*x4372))+(((-1.0)*cj1*x4374))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r02*x4370))+((x4368*x4374))+((x4368*x4372))+((r20*x4375))+((r00*x4376))+(((-1.0)*sj1*x4372))+(((-1.0)*sj1*x4378))+(((-1.0)*sj1*x4374))+((x4366*x4369))+((x4367*x4368))+((x4366*x4371))+((x4366*x4373))+((r22*x4365))+(((-1.0)*cj1*x4373))+(((-1.0)*cj1*x4371))+(((-1.0)*cj1*x4377))), (((r22*x4370))+((sj1*x4377))+((sj1*x4371))+((sj1*x4373))+((r20*x4376))+((x4366*x4367))+(((-1.0)*r02*x4365))+(((-1.0)*x4368*x4369))+(((-1.0)*r00*x4375))+((x4366*x4374))+((x4366*x4372))+(((-1.0)*x4368*x4373))+(((-1.0)*x4368*x4371))+(((-1.0)*cj1*x4378))+(((-1.0)*cj1*x4372))+(((-1.0)*cj1*x4374))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4379=IKsin(j2);
IkReal x4380=IKcos(j2);
IkReal x4381=((0.749999650312296)*sj3);
IkReal x4382=(cj5*r01);
IkReal x4383=(r00*sj5);
IkReal x4384=(cj4*cj5);
IkReal x4385=((1.0)*cj3);
IkReal x4386=(r21*sj3);
IkReal x4387=(cj4*sj5);
IkReal x4388=(cj3*r21);
IkReal x4389=((0.500000349687582)*sj4);
IkReal x4390=((0.433012903784321)*r20);
IkReal x4391=(cj4*r22);
IkReal x4392=((0.433012903784321)*sj3);
IkReal x4393=((0.433012903784321)*cj4);
IkReal x4394=(r01*sj5);
IkReal x4395=(r20*sj5);
IkReal x4396=((0.0160344678271334)*r02);
IkReal x4397=(cj4*r02);
IkReal x4398=((0.00925751294893567)*cj4);
IkReal x4399=((0.0185150129489311)*sj4);
IkReal x4400=(r21*sj5);
IkReal x4401=(cj5*r21);
IkReal x4402=((0.866025201892125)*sj4);
IkReal x4403=(cj5*r20);
IkReal x4404=(cj5*r00);
IkReal x4405=((0.250000349687704)*sj3);
IkReal x4406=(cj1*x4380);
IkReal x4407=(sj1*x4379);
IkReal x4408=(cj1*x4379);
IkReal x4409=(sj1*x4380);
IkReal x4410=(x4406+x4407);
evalcond[0]=(((sj5*x4390))+(((-1.0)*x4387*x4390))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x4384))+(((0.433012903784321)*x4401))+x4410+((x4400*x4402))+(((-0.749999650312296)*x4391))+(((-1.0)*x4402*x4403)));
evalcond[1]=(((x4394*x4402))+(((-0.250000349687704)*r02))+x4408+(((-1.0)*x4382*x4393))+(((-1.0)*x4409))+(((-0.749999650312296)*x4397))+(((-1.0)*x4402*x4404))+(((-1.0)*x4383*x4393))+(((0.433012903784321)*x4382))+(((0.433012903784321)*x4383)));
evalcond[2]=((((0.00925751294893567)*r20*x4387))+(((0.00925751294893567)*r21*x4384))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4395))+(((-0.27144)*x4406))+(((-0.27144)*x4407))+(((-1.0)*pz))+(((0.0160344678271334)*x4391))+(((-1.0)*x4399*x4400))+(((0.0648043305514941)*x4401))+((x4399*x4403)));
evalcond[3]=((((-1.0)*x4396))+((x4383*x4398))+((cj4*x4396))+(((-0.41)*sj1))+(((0.0648043305514941)*x4382))+(((0.0648043305514941)*x4383))+(((-0.27144)*x4408))+(((-1.0)*px))+((x4382*x4398))+(((-1.0)*x4394*x4399))+(((0.27144)*x4409))+((x4399*x4404)));
evalcond[4]=(((cj3*x4382*x4389))+((x4392*x4397))+(((-1.0)*r02*x4392))+x4410+((cj4*x4383*x4405))+((cj4*x4382*x4405))+(((-1.0)*sj3*x4389*x4394))+((sj3*x4389*x4404))+((x4381*x4383))+((x4381*x4382))+((cj3*x4383*x4389))+(((-1.0)*r00*x4384*x4385))+((cj3*r01*x4387))+((cj3*r02*x4402)));
evalcond[5]=(((x4391*x4392))+((cj3*x4389*x4395))+x4409+(((-1.0)*r20*x4384*x4385))+(((0.250000349687704)*x4384*x4386))+((x4381*x4401))+((x4381*x4395))+(((-1.0)*r22*x4392))+(((-1.0)*x4408))+((x4387*x4388))+((sj3*x4389*x4403))+(((-1.0)*sj5*x4386*x4389))+((r20*x4387*x4405))+((cj3*r22*x4402))+((cj5*x4388*x4389)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4411=(r02*sj1);
IkReal x4412=(cj1*cj4);
IkReal x4413=((0.749999650312296)*r22);
IkReal x4414=(cj4*sj1);
IkReal x4415=((0.250000349687704)*r22);
IkReal x4416=((0.433012903784321)*r00*sj5);
IkReal x4417=((0.433012903784321)*r20*sj5);
IkReal x4418=((0.433012903784321)*cj5*r01);
IkReal x4419=((0.433012903784321)*cj5*r21);
IkReal x4420=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4421=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4422=((0.866025201892125)*r01*sj4*sj5);
IkReal x4423=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r20*x4420))+((x4414*x4419))+((x4414*x4417))+(((-1.0)*sj1*x4419))+(((-1.0)*sj1*x4417))+((cj1*x4418))+((cj1*x4416))+((cj1*x4422))+(((-0.749999650312296)*r02*x4412))+((x4413*x4414))+(((-1.0)*x4412*x4418))+(((-1.0)*x4412*x4416))+(((-1.0)*sj1*x4423))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x4421))+((sj1*x4415)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x4421))+((x4414*x4418))+((x4414*x4416))+(((-1.0)*sj1*x4418))+(((-1.0)*sj1*x4416))+((cj1*x4415))+(((0.749999650312296)*cj4*x4411))+((x4412*x4419))+((x4412*x4413))+((x4412*x4417))+((r00*x4420))+(((-1.0)*sj1*x4422))+(((-1.0)*cj1*x4419))+(((-1.0)*cj1*x4417))+(((0.250000349687704)*x4411))+(((-1.0)*cj1*x4423)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r20*x4420))+((x4414*x4419))+((x4414*x4417))+(((-1.0)*sj1*x4419))+(((-1.0)*sj1*x4417))+((cj1*x4418))+((cj1*x4416))+((cj1*x4422))+(((-0.749999650312296)*r02*x4412))+((x4413*x4414))+(((-1.0)*x4412*x4418))+(((-1.0)*x4412*x4416))+(((-1.0)*sj1*x4423))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x4421))+((sj1*x4415))))+IKsqr((((r20*x4421))+((x4414*x4418))+((x4414*x4416))+(((-1.0)*sj1*x4418))+(((-1.0)*sj1*x4416))+((cj1*x4415))+(((0.749999650312296)*cj4*x4411))+((x4412*x4419))+((x4412*x4413))+((x4412*x4417))+((r00*x4420))+(((-1.0)*sj1*x4422))+(((-1.0)*cj1*x4419))+(((-1.0)*cj1*x4417))+(((0.250000349687704)*x4411))+(((-1.0)*cj1*x4423))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r20*x4420))+((x4414*x4419))+((x4414*x4417))+(((-1.0)*sj1*x4419))+(((-1.0)*sj1*x4417))+((cj1*x4418))+((cj1*x4416))+((cj1*x4422))+(((-0.749999650312296)*r02*x4412))+((x4413*x4414))+(((-1.0)*x4412*x4418))+(((-1.0)*x4412*x4416))+(((-1.0)*sj1*x4423))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x4421))+((sj1*x4415))), (((r20*x4421))+((x4414*x4418))+((x4414*x4416))+(((-1.0)*sj1*x4418))+(((-1.0)*sj1*x4416))+((cj1*x4415))+(((0.749999650312296)*cj4*x4411))+((x4412*x4419))+((x4412*x4413))+((x4412*x4417))+((r00*x4420))+(((-1.0)*sj1*x4422))+(((-1.0)*cj1*x4419))+(((-1.0)*cj1*x4417))+(((0.250000349687704)*x4411))+(((-1.0)*cj1*x4423))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4424=IKcos(j2);
IkReal x4425=IKsin(j2);
IkReal x4426=((0.433012903784321)*sj3);
IkReal x4427=((0.749999650312296)*sj3);
IkReal x4428=(r00*sj5);
IkReal x4429=(cj4*cj5);
IkReal x4430=((1.0)*cj3);
IkReal x4431=(cj5*r01);
IkReal x4432=(r21*sj3);
IkReal x4433=(cj4*sj5);
IkReal x4434=(cj3*r21);
IkReal x4435=((0.500000349687582)*sj4);
IkReal x4436=((0.433012903784321)*r20);
IkReal x4437=(cj4*r22);
IkReal x4438=(r20*sj5);
IkReal x4439=((0.0160344678271334)*r02);
IkReal x4440=(cj4*r02);
IkReal x4441=(r01*sj5);
IkReal x4442=(cj5*r00);
IkReal x4443=((0.0185150129489311)*sj4);
IkReal x4444=(r21*sj5);
IkReal x4445=(cj5*r21);
IkReal x4446=((0.866025201892125)*sj4);
IkReal x4447=(cj5*r20);
IkReal x4448=((0.250000349687704)*sj3);
IkReal x4449=(sj1*x4424);
IkReal x4450=(cj1*x4424);
IkReal x4451=(sj1*x4425);
IkReal x4452=(cj1*x4425);
IkReal x4453=((1.0)*x4452);
evalcond[0]=(((sj5*x4436))+(((-0.250000349687704)*r22))+x4451+x4450+(((-1.0)*x4433*x4436))+(((-1.0)*x4446*x4447))+(((0.433012903784321)*x4445))+((x4444*x4446))+(((-0.749999650312296)*x4437))+(((-0.433012903784321)*r21*x4429)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x4428))+(((-1.0)*x4453))+(((-0.433012903784321)*r01*x4429))+(((-0.433012903784321)*cj4*x4428))+x4449+((x4441*x4446))+(((0.433012903784321)*x4431))+(((-1.0)*x4442*x4446))+(((-0.749999650312296)*x4440)));
evalcond[2]=((((0.00925751294893567)*r20*x4433))+(((-1.0)*x4443*x4444))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4445))+(((-1.0)*pz))+(((0.0160344678271334)*x4437))+((x4443*x4447))+(((0.0648043305514941)*x4438))+(((-0.27144)*x4451))+(((-0.27144)*x4450))+(((0.00925751294893567)*r21*x4429)));
evalcond[3]=((((0.00925751294893567)*r01*x4429))+(((-1.0)*x4439))+(((0.41)*sj1))+(((0.00925751294893567)*cj4*x4428))+(((0.0648043305514941)*x4428))+((x4442*x4443))+(((-1.0)*px))+(((0.27144)*x4452))+(((-0.27144)*x4449))+(((0.0648043305514941)*x4431))+(((-1.0)*x4441*x4443))+((cj4*x4439)));
evalcond[4]=(((cj3*r22*x4446))+(((-1.0)*x4453))+x4449+((r20*x4433*x4448))+((sj3*x4435*x4447))+(((0.250000349687704)*x4429*x4432))+(((-1.0)*sj5*x4432*x4435))+(((-1.0)*r22*x4426))+((cj5*x4434*x4435))+((x4426*x4437))+((x4427*x4445))+(((-1.0)*r20*x4429*x4430))+((x4433*x4434))+((x4427*x4438))+((cj3*x4435*x4438)));
evalcond[5]=(((cj4*x4428*x4448))+((sj3*x4435*x4442))+((cj3*x4431*x4435))+(((-1.0)*r00*x4429*x4430))+((x4427*x4428))+(((-1.0)*x4451))+(((-1.0)*x4450))+((cj3*r02*x4446))+((cj3*r01*x4433))+((cj3*x4428*x4435))+(((-1.0)*r02*x4426))+(((-1.0)*sj3*x4435*x4441))+((r01*x4429*x4448))+((x4427*x4431))+((x4426*x4440)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4454=((0.250000349687704)*r12);
IkReal x4455=((0.749999650312296)*cj4);
IkReal x4456=((0.433012903784321)*sj5);
IkReal x4457=(cj1*r10);
IkReal x4458=(cj1*r22);
IkReal x4459=(cj1*r20);
IkReal x4460=((0.866025201892125)*sj4);
IkReal x4461=(r20*sj1);
IkReal x4462=(r22*sj1);
IkReal x4463=(r10*sj1);
IkReal x4464=(r11*sj1);
IkReal x4465=((0.433012903784321)*cj5);
IkReal x4466=(r21*sj1);
IkReal x4467=(cj1*r21);
IkReal x4468=(cj1*r11);
IkReal x4469=(cj5*sj1*x4460);
IkReal x4470=(cj4*r21*x4465);
if( IKabs((((x4455*x4462))+(((-1.0)*x4465*x4466))+(((-1.0)*x4465*x4468))+((cj5*x4460*x4461))+((cj1*x4454))+(((-1.0)*x4456*x4457))+((cj5*x4457*x4460))+(((0.250000349687704)*x4462))+((cj4*x4456*x4457))+((cj4*x4465*x4466))+((cj4*x4465*x4468))+(((-1.0)*sj5*x4460*x4466))+(((-1.0)*sj5*x4460*x4468))+(((-1.0)*x4456*x4461))+((cj4*x4456*x4461))+((cj1*r12*x4455)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj5*x4460*x4464))+(((-1.0)*cj4*x4456*x4463))+(((-1.0)*x4465*x4467))+(((-1.0)*x4456*x4459))+((x4455*x4458))+(((-1.0)*sj1*x4454))+((cj5*x4459*x4460))+(((-1.0)*r12*sj1*x4455))+((cj4*x4456*x4459))+((cj4*x4465*x4467))+(((-1.0)*cj4*x4464*x4465))+((x4464*x4465))+(((-1.0)*sj5*x4460*x4467))+(((-1.0)*cj5*x4460*x4463))+((x4456*x4463))+(((0.250000349687704)*x4458)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x4455*x4462))+(((-1.0)*x4465*x4466))+(((-1.0)*x4465*x4468))+((cj5*x4460*x4461))+((cj1*x4454))+(((-1.0)*x4456*x4457))+((cj5*x4457*x4460))+(((0.250000349687704)*x4462))+((cj4*x4456*x4457))+((cj4*x4465*x4466))+((cj4*x4465*x4468))+(((-1.0)*sj5*x4460*x4466))+(((-1.0)*sj5*x4460*x4468))+(((-1.0)*x4456*x4461))+((cj4*x4456*x4461))+((cj1*r12*x4455))))+IKsqr((((sj5*x4460*x4464))+(((-1.0)*cj4*x4456*x4463))+(((-1.0)*x4465*x4467))+(((-1.0)*x4456*x4459))+((x4455*x4458))+(((-1.0)*sj1*x4454))+((cj5*x4459*x4460))+(((-1.0)*r12*sj1*x4455))+((cj4*x4456*x4459))+((cj4*x4465*x4467))+(((-1.0)*cj4*x4464*x4465))+((x4464*x4465))+(((-1.0)*sj5*x4460*x4467))+(((-1.0)*cj5*x4460*x4463))+((x4456*x4463))+(((0.250000349687704)*x4458))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x4455*x4462))+(((-1.0)*x4465*x4466))+(((-1.0)*x4465*x4468))+((cj5*x4460*x4461))+((cj1*x4454))+(((-1.0)*x4456*x4457))+((cj5*x4457*x4460))+(((0.250000349687704)*x4462))+((cj4*x4456*x4457))+((cj4*x4465*x4466))+((cj4*x4465*x4468))+(((-1.0)*sj5*x4460*x4466))+(((-1.0)*sj5*x4460*x4468))+(((-1.0)*x4456*x4461))+((cj4*x4456*x4461))+((cj1*r12*x4455))), (((sj5*x4460*x4464))+(((-1.0)*cj4*x4456*x4463))+(((-1.0)*x4465*x4467))+(((-1.0)*x4456*x4459))+((x4455*x4458))+(((-1.0)*sj1*x4454))+((cj5*x4459*x4460))+(((-1.0)*r12*sj1*x4455))+((cj4*x4456*x4459))+((cj4*x4465*x4467))+(((-1.0)*cj4*x4464*x4465))+((x4464*x4465))+(((-1.0)*sj5*x4460*x4467))+(((-1.0)*cj5*x4460*x4463))+((x4456*x4463))+(((0.250000349687704)*x4458))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4471=IKsin(j2);
IkReal x4472=IKcos(j2);
IkReal x4473=(cj5*r11);
IkReal x4474=((0.433012903784321)*cj4);
IkReal x4475=(r21*sj5);
IkReal x4476=((0.500000349687582)*sj4);
IkReal x4477=((0.749999650312296)*sj3);
IkReal x4478=(cj3*cj4);
IkReal x4479=(cj5*r10);
IkReal x4480=((0.0185150129489311)*sj4);
IkReal x4481=(r20*sj5);
IkReal x4482=(cj4*r22);
IkReal x4483=(r10*sj5);
IkReal x4484=(r22*sj3);
IkReal x4485=(r11*sj5);
IkReal x4486=((0.00925751294893567)*cj4);
IkReal x4487=(cj5*r21);
IkReal x4488=(r12*sj3);
IkReal x4489=(cj4*r12);
IkReal x4490=(cj5*r20);
IkReal x4491=((0.866025201892125)*sj4);
IkReal x4492=(cj1*x4472);
IkReal x4493=(sj1*x4471);
IkReal x4494=(cj1*x4471);
IkReal x4495=((0.250000349687704)*cj4*sj3);
IkReal x4496=(sj1*x4472);
IkReal x4497=(cj3*x4491);
IkReal x4498=(x4493+x4492);
evalcond[0]=((((-0.250000349687704)*r22))+x4498+(((-0.749999650312296)*x4482))+(((-1.0)*x4474*x4481))+(((-1.0)*x4474*x4487))+(((-1.0)*x4490*x4491))+((x4475*x4491))+(((0.433012903784321)*x4481))+(((0.433012903784321)*x4487)));
evalcond[1]=((((-1.0)*x4496))+(((-0.250000349687704)*r12))+x4494+(((-1.0)*x4473*x4474))+(((-0.749999650312296)*x4489))+(((-1.0)*x4474*x4483))+((x4485*x4491))+(((-1.0)*x4479*x4491))+(((0.433012903784321)*x4473))+(((0.433012903784321)*x4483)));
evalcond[2]=(((x4480*x4490))+(((0.0160344678271334)*x4482))+(((0.41)*cj1))+(((-1.0)*x4475*x4480))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x4481*x4486))+((x4486*x4487))+(((-0.27144)*x4492))+(((-0.27144)*x4493))+(((0.0648043305514941)*x4481))+(((0.0648043305514941)*x4487)));
evalcond[3]=((((0.0160344678271334)*x4489))+(((-0.0160344678271334)*r12))+(((0.27144)*x4496))+(((-1.0)*x4480*x4485))+(((-0.41)*sj1))+((x4479*x4480))+(((-1.0)*py))+((x4483*x4486))+((x4473*x4486))+(((0.0648043305514941)*x4473))+(((-0.27144)*x4494))+(((0.0648043305514941)*x4483)));
evalcond[4]=(((r12*x4497))+(((-0.433012903784321)*x4488))+x4498+((x4477*x4483))+(((-1.0)*sj3*x4476*x4485))+((x4478*x4485))+((cj3*x4476*x4483))+((sj3*x4476*x4479))+((x4473*x4495))+((x4473*x4477))+(((-1.0)*x4478*x4479))+((cj3*x4473*x4476))+((x4474*x4488))+((x4483*x4495)));
evalcond[5]=((((-0.433012903784321)*x4484))+(((-1.0)*x4494))+x4496+((x4477*x4481))+((x4477*x4487))+((x4487*x4495))+(((-1.0)*sj3*x4475*x4476))+((sj3*x4476*x4490))+((x4481*x4495))+((cj3*x4476*x4487))+((cj3*x4476*x4481))+((r22*x4497))+(((-1.0)*x4478*x4490))+((x4475*x4478))+((x4474*x4484)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4499=((0.250000349687704)*r12);
IkReal x4500=((0.749999650312296)*cj4);
IkReal x4501=(cj1*r22);
IkReal x4502=((0.866025201892125)*sj4);
IkReal x4503=(cj1*r20);
IkReal x4504=(sj1*sj5);
IkReal x4505=((0.433012903784321)*r20);
IkReal x4506=((0.433012903784321)*sj5);
IkReal x4507=(cj1*r10);
IkReal x4508=(r22*sj1);
IkReal x4509=((0.433012903784321)*r10);
IkReal x4510=((0.433012903784321)*cj5);
IkReal x4511=(cj1*r21);
IkReal x4512=(cj1*r11);
IkReal x4513=(r11*sj1);
IkReal x4514=(cj1*cj4*x4506);
IkReal x4515=(cj5*sj1*x4502);
IkReal x4516=(cj4*r21*x4510);
if( IKabs(((((-1.0)*cj1*r12*x4500))+((x4506*x4507))+(((-1.0)*cj1*x4499))+((x4510*x4512))+(((-1.0)*r21*x4502*x4504))+((r20*x4515))+((x4500*x4508))+((cj4*x4504*x4505))+((sj5*x4502*x4512))+(((0.250000349687704)*x4508))+(((-1.0)*cj4*x4510*x4512))+((sj1*x4516))+(((-1.0)*cj5*x4502*x4507))+(((-1.0)*x4504*x4505))+(((-1.0)*cj4*x4506*x4507))+(((-1.0)*r21*sj1*x4510)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r10*x4515))+((sj1*x4499))+(((-1.0)*sj5*x4502*x4511))+((x4500*x4501))+((cj4*x4504*x4509))+(((-1.0)*x4503*x4506))+(((0.250000349687704)*x4501))+((cj5*x4502*x4503))+((r12*sj1*x4500))+(((-1.0)*x4510*x4511))+(((-1.0)*x4510*x4513))+(((-1.0)*r11*x4502*x4504))+((cj4*x4510*x4513))+((cj4*x4510*x4511))+(((-1.0)*x4504*x4509))+((cj4*x4503*x4506)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r12*x4500))+((x4506*x4507))+(((-1.0)*cj1*x4499))+((x4510*x4512))+(((-1.0)*r21*x4502*x4504))+((r20*x4515))+((x4500*x4508))+((cj4*x4504*x4505))+((sj5*x4502*x4512))+(((0.250000349687704)*x4508))+(((-1.0)*cj4*x4510*x4512))+((sj1*x4516))+(((-1.0)*cj5*x4502*x4507))+(((-1.0)*x4504*x4505))+(((-1.0)*cj4*x4506*x4507))+(((-1.0)*r21*sj1*x4510))))+IKsqr((((r10*x4515))+((sj1*x4499))+(((-1.0)*sj5*x4502*x4511))+((x4500*x4501))+((cj4*x4504*x4509))+(((-1.0)*x4503*x4506))+(((0.250000349687704)*x4501))+((cj5*x4502*x4503))+((r12*sj1*x4500))+(((-1.0)*x4510*x4511))+(((-1.0)*x4510*x4513))+(((-1.0)*r11*x4502*x4504))+((cj4*x4510*x4513))+((cj4*x4510*x4511))+(((-1.0)*x4504*x4509))+((cj4*x4503*x4506))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r12*x4500))+((x4506*x4507))+(((-1.0)*cj1*x4499))+((x4510*x4512))+(((-1.0)*r21*x4502*x4504))+((r20*x4515))+((x4500*x4508))+((cj4*x4504*x4505))+((sj5*x4502*x4512))+(((0.250000349687704)*x4508))+(((-1.0)*cj4*x4510*x4512))+((sj1*x4516))+(((-1.0)*cj5*x4502*x4507))+(((-1.0)*x4504*x4505))+(((-1.0)*cj4*x4506*x4507))+(((-1.0)*r21*sj1*x4510))), (((r10*x4515))+((sj1*x4499))+(((-1.0)*sj5*x4502*x4511))+((x4500*x4501))+((cj4*x4504*x4509))+(((-1.0)*x4503*x4506))+(((0.250000349687704)*x4501))+((cj5*x4502*x4503))+((r12*sj1*x4500))+(((-1.0)*x4510*x4511))+(((-1.0)*x4510*x4513))+(((-1.0)*r11*x4502*x4504))+((cj4*x4510*x4513))+((cj4*x4510*x4511))+(((-1.0)*x4504*x4509))+((cj4*x4503*x4506))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4517=IKcos(j2);
IkReal x4518=IKsin(j2);
IkReal x4519=(cj5*r11);
IkReal x4520=((0.433012903784321)*cj4);
IkReal x4521=(r21*sj5);
IkReal x4522=((0.500000349687582)*sj4);
IkReal x4523=((0.749999650312296)*sj3);
IkReal x4524=(cj3*cj4);
IkReal x4525=(cj5*r10);
IkReal x4526=((0.0185150129489311)*sj4);
IkReal x4527=(r20*sj5);
IkReal x4528=(cj4*r22);
IkReal x4529=(r10*sj5);
IkReal x4530=(r12*sj3);
IkReal x4531=(r11*sj5);
IkReal x4532=(r22*sj3);
IkReal x4533=((0.27144)*sj1);
IkReal x4534=((0.00925751294893567)*cj4);
IkReal x4535=(cj5*r20);
IkReal x4536=(cj5*r21);
IkReal x4537=(cj4*r12);
IkReal x4538=((0.866025201892125)*sj4);
IkReal x4539=(sj1*x4517);
IkReal x4540=(cj1*x4517);
IkReal x4541=(cj1*x4518);
IkReal x4542=((0.250000349687704)*cj4*sj3);
IkReal x4543=(cj3*x4538);
IkReal x4544=(sj1*x4518);
IkReal x4545=((1.0)*x4541);
evalcond[0]=((((-0.250000349687704)*r22))+x4540+x4544+(((-0.749999650312296)*x4528))+(((-1.0)*x4520*x4527))+((x4521*x4538))+(((-1.0)*x4520*x4536))+(((0.433012903784321)*x4536))+(((0.433012903784321)*x4527))+(((-1.0)*x4535*x4538)));
evalcond[1]=((((-0.250000349687704)*r12))+((x4531*x4538))+x4539+(((0.433012903784321)*x4519))+(((-0.749999650312296)*x4537))+(((-1.0)*x4520*x4529))+(((-1.0)*x4525*x4538))+(((0.433012903784321)*x4529))+(((-1.0)*x4519*x4520))+(((-1.0)*x4545)));
evalcond[2]=(((x4527*x4534))+((x4526*x4535))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4536))+(((0.0160344678271334)*x4528))+(((-1.0)*x4521*x4526))+(((0.0648043305514941)*x4527))+(((-0.27144)*x4540))+(((-1.0)*pz))+(((-1.0)*x4518*x4533))+((x4534*x4536)));
evalcond[3]=(((x4519*x4534))+((x4525*x4526))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x4529*x4534))+(((0.0160344678271334)*x4537))+(((0.27144)*x4541))+(((0.0648043305514941)*x4529))+(((-1.0)*x4517*x4533))+(((-1.0)*py))+(((-1.0)*x4526*x4531))+(((0.0648043305514941)*x4519)));
evalcond[4]=(((r22*x4543))+((x4523*x4527))+(((-1.0)*sj3*x4521*x4522))+x4539+((x4521*x4524))+(((-1.0)*x4524*x4535))+((x4527*x4542))+((cj3*x4522*x4536))+((x4520*x4532))+((x4536*x4542))+((cj3*x4522*x4527))+(((-1.0)*x4545))+((x4523*x4536))+((sj3*x4522*x4535))+(((-0.433012903784321)*x4532)));
evalcond[5]=(((x4523*x4529))+((sj3*x4522*x4525))+((cj3*x4519*x4522))+(((-1.0)*x4524*x4525))+((x4519*x4542))+(((-1.0)*x4540))+(((-1.0)*x4544))+((x4524*x4531))+((r12*x4543))+((x4520*x4530))+(((-1.0)*sj3*x4522*x4531))+((cj3*x4522*x4529))+((x4529*x4542))+((x4519*x4523))+(((-0.433012903784321)*x4530)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4546=(cj4*sj1);
IkReal x4547=((0.433012903784321)*sj0);
IkReal x4548=(cj5*r21);
IkReal x4549=(cj1*r12);
IkReal x4550=(r20*sj5);
IkReal x4551=(r20*sj0);
IkReal x4552=(r10*sj1);
IkReal x4553=((0.749999650312296)*cj4);
IkReal x4554=(r21*sj0);
IkReal x4555=((0.433012903784321)*sj5);
IkReal x4556=(cj1*cj4);
IkReal x4557=(r22*sj0);
IkReal x4558=((0.250000349687704)*x4557);
IkReal x4559=((0.866025201892125)*cj5*sj4);
IkReal x4560=((0.433012903784321)*cj5*r11);
IkReal x4561=(cj1*r10*x4555);
IkReal x4562=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4563=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x4564 = IKatan2WithCheck(IkReal((((x4546*x4547*x4548))+(((-1.0)*sj1*x4547*x4550))+((sj1*x4551*x4559))+(((-1.0)*cj1*x4560))+(((0.749999650312296)*x4546*x4557))+((x4556*x4560))+((r10*x4555*x4556))+((x4546*x4547*x4550))+(((-1.0)*sj1*x4547*x4548))+(((-1.0)*r11*x4563))+(((0.250000349687704)*x4549))+((sj1*x4558))+((x4549*x4553))+((cj1*r10*x4559))+(((-1.0)*x4554*x4562))+(((-1.0)*x4561)))),IkReal(((((-1.0)*cj1*x4547*x4548))+(((-0.250000349687704)*r12*sj1))+((x4552*x4555))+(((-0.749999650312296)*r12*x4546))+((r11*x4562))+(((-1.0)*x4552*x4559))+((x4547*x4550*x4556))+((sj1*x4560))+((cj1*x4558))+(((-1.0)*x4546*x4560))+((x4547*x4548*x4556))+((cj1*x4553*x4557))+(((-1.0)*r10*x4546*x4555))+((cj1*x4551*x4559))+(((-1.0)*cj1*x4547*x4550))+(((-1.0)*x4554*x4563)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4564.valid){
continue;
}
CheckValue<IkReal> x4565=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4565.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4564.value)+(((1.5707963267949)*(x4565.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4566=IKsin(j2);
IkReal x4567=IKcos(j2);
IkReal x4568=(cj4*sj5);
IkReal x4569=(cj3*r21);
IkReal x4570=((0.433012903784321)*r20);
IkReal x4571=((0.749999650312296)*cj4);
IkReal x4572=(cj4*cj5);
IkReal x4573=((1.0)*cj3);
IkReal x4574=((0.433012903784321)*r01);
IkReal x4575=(sj4*sj5);
IkReal x4576=((0.749999650312296)*sj3);
IkReal x4577=(r10*sj5);
IkReal x4578=((0.500000349687582)*sj3);
IkReal x4579=(cj0*sj1);
IkReal x4580=((0.500000349687582)*cj3);
IkReal x4581=((0.0160344678271334)*r22);
IkReal x4582=(r20*sj3);
IkReal x4583=(r00*sj5);
IkReal x4584=(cj3*r11);
IkReal x4585=((0.0160344678271334)*r12);
IkReal x4586=((0.433012903784321)*r11);
IkReal x4587=(cj5*r11);
IkReal x4588=(r10*sj3);
IkReal x4589=(r00*sj3);
IkReal x4590=((0.433012903784321)*sj3);
IkReal x4591=(cj5*sj4);
IkReal x4592=(r20*sj5);
IkReal x4593=((0.433012903784321)*r21);
IkReal x4594=(sj0*sj1);
IkReal x4595=(cj3*r01);
IkReal x4596=(cj5*r21);
IkReal x4597=((0.0160344678271334)*r02);
IkReal x4598=(cj5*r01);
IkReal x4599=((0.250000349687704)*sj3);
IkReal x4600=(cj1*x4566);
IkReal x4601=((0.500000349687582)*x4591);
IkReal x4602=((0.27144)*x4567);
IkReal x4603=(cj4*x4590);
IkReal x4604=(sj1*x4566);
IkReal x4605=((0.866025201892125)*cj3*sj4);
IkReal x4606=(cj1*x4567);
IkReal x4607=((1.0)*x4567);
evalcond[0]=((((-0.250000349687704)*r22))+((cj5*x4593))+x4606+x4604+((sj5*x4570))+(((-1.0)*x4568*x4570))+(((0.866025201892125)*r21*x4575))+(((-1.0)*r22*x4571))+(((-1.0)*x4572*x4593))+(((-0.866025201892125)*r20*x4591)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x4583))+((cj0*x4600))+(((-0.866025201892125)*r00*x4591))+(((-1.0)*r02*x4571))+((cj5*x4574))+(((-1.0)*x4572*x4574))+(((-0.433012903784321)*r00*x4568))+(((-1.0)*x4579*x4607))+(((0.866025201892125)*r01*x4575)));
evalcond[2]=((((-0.433012903784321)*r10*x4568))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x4577))+(((-1.0)*x4594*x4607))+((cj5*x4586))+((sj0*x4600))+(((0.866025201892125)*r11*x4575))+(((-0.866025201892125)*r10*x4591))+(((-1.0)*x4572*x4586))+(((-1.0)*r12*x4571)));
evalcond[3]=((((-1.0)*x4581))+(((0.00925751294893567)*r20*x4568))+(((0.0185150129489311)*r20*x4591))+(((-1.0)*cj1*x4602))+((cj4*x4581))+(((0.41)*cj1))+(((-0.27144)*x4604))+(((0.00925751294893567)*r21*x4572))+(((-1.0)*pz))+(((0.0648043305514941)*x4596))+(((0.0648043305514941)*x4592))+(((-0.0185150129489311)*r21*x4575)));
evalcond[4]=((((-1.0)*x4597))+(((-0.0185150129489311)*r01*x4575))+((cj4*x4597))+(((0.00925751294893567)*r01*x4572))+(((0.0185150129489311)*r00*x4591))+(((-0.41)*x4579))+(((0.00925751294893567)*r00*x4568))+(((-1.0)*px))+((x4579*x4602))+(((0.0648043305514941)*x4598))+(((0.0648043305514941)*x4583))+(((0.0098)*sj0))+(((-0.27144)*cj0*x4600)));
evalcond[5]=((((0.00925751294893567)*r11*x4572))+(((-1.0)*x4585))+(((-0.27144)*sj0*x4600))+((x4594*x4602))+(((-0.0185150129489311)*r11*x4575))+((cj4*x4585))+(((-0.41)*x4594))+(((0.00925751294893567)*r10*x4568))+(((-1.0)*py))+(((0.0648043305514941)*x4577))+(((0.0648043305514941)*x4587))+(((-0.0098)*cj0))+(((0.0185150129489311)*r10*x4591)));
evalcond[6]=(((x4576*x4596))+((x4576*x4592))+((r21*x4572*x4599))+(((-1.0)*r22*x4590))+((x4569*x4601))+(((-1.0)*x4600))+(((-1.0)*r20*x4572*x4573))+(((0.250000349687704)*x4568*x4582))+((sj1*x4567))+(((-1.0)*r21*x4575*x4578))+((x4568*x4569))+((r20*x4575*x4580))+((r22*x4605))+((r22*x4603))+((r20*x4578*x4591)));
evalcond[7]=(((x4576*x4598))+((cj0*x4606))+((x4576*x4583))+((r00*x4578*x4591))+((r00*x4575*x4580))+(((-1.0)*r01*x4575*x4578))+(((0.250000349687704)*x4568*x4589))+((r01*x4580*x4591))+((r02*x4603))+((r02*x4605))+(((-1.0)*r02*x4590))+((x4568*x4595))+((x4566*x4579))+((r01*x4572*x4599))+(((-1.0)*r00*x4572*x4573)));
evalcond[8]=(((sj4*x4580*x4587))+((x4576*x4587))+((r12*x4605))+((r12*x4603))+((r11*x4572*x4599))+(((0.250000349687704)*x4568*x4588))+(((-1.0)*r10*x4572*x4573))+((sj0*x4606))+((x4566*x4594))+((r10*x4578*x4591))+(((-1.0)*r11*x4575*x4578))+(((-1.0)*r12*x4590))+((x4568*x4584))+((r10*x4575*x4580))+((x4576*x4577)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4608=(cj0*r20);
IkReal x4609=(cj1*r00);
IkReal x4610=(r02*sj1);
IkReal x4611=(r00*sj1);
IkReal x4612=((0.433012903784321)*sj5);
IkReal x4613=(cj4*sj1);
IkReal x4614=((0.749999650312296)*cj4);
IkReal x4615=(cj0*r22);
IkReal x4616=(r01*sj1);
IkReal x4617=(cj1*cj4);
IkReal x4618=(cj0*r21);
IkReal x4619=(cj1*r02);
IkReal x4620=((0.866025201892125)*cj5*sj4);
IkReal x4621=((0.866025201892125)*sj4*sj5);
IkReal x4622=((0.433012903784321)*cj5*r01);
IkReal x4623=((0.433012903784321)*cj5*x4618);
CheckValue<IkReal> x4624 = IKatan2WithCheck(IkReal(((((-1.0)*sj1*x4608*x4612))+(((-1.0)*cj1*x4622))+(((-1.0)*sj1*x4618*x4621))+((cj4*x4609*x4612))+(((-1.0)*sj1*x4623))+(((0.250000349687704)*sj1*x4615))+(((0.250000349687704)*x4619))+((x4613*x4623))+((x4609*x4620))+((x4614*x4619))+(((-1.0)*x4609*x4612))+(((-1.0)*cj1*r01*x4621))+((x4608*x4612*x4613))+(((0.749999650312296)*x4613*x4615))+((x4617*x4622))+((sj1*x4608*x4620)))),IkReal(((((-1.0)*cj1*x4608*x4612))+(((-1.0)*cj1*x4618*x4621))+(((0.433012903784321)*cj5*x4616))+(((-1.0)*cj1*x4623))+((cj1*x4608*x4620))+(((-0.250000349687704)*x4610))+((x4611*x4612))+(((0.250000349687704)*cj1*x4615))+((x4616*x4621))+((cj1*x4614*x4615))+((x4608*x4612*x4617))+(((-1.0)*x4613*x4622))+(((-1.0)*x4610*x4614))+((x4617*x4623))+(((-1.0)*x4611*x4620))+(((-1.0)*cj4*x4611*x4612)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4624.valid){
continue;
}
CheckValue<IkReal> x4625=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4625.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4624.value)+(((1.5707963267949)*(x4625.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4626=IKsin(j2);
IkReal x4627=IKcos(j2);
IkReal x4628=(cj4*sj5);
IkReal x4629=(cj3*r21);
IkReal x4630=((0.433012903784321)*r20);
IkReal x4631=((0.749999650312296)*cj4);
IkReal x4632=(cj4*cj5);
IkReal x4633=((1.0)*cj3);
IkReal x4634=((0.433012903784321)*r01);
IkReal x4635=(sj4*sj5);
IkReal x4636=((0.749999650312296)*sj3);
IkReal x4637=(r10*sj5);
IkReal x4638=((0.500000349687582)*sj3);
IkReal x4639=(cj0*sj1);
IkReal x4640=((0.500000349687582)*cj3);
IkReal x4641=((0.0160344678271334)*r22);
IkReal x4642=(r20*sj3);
IkReal x4643=(r00*sj5);
IkReal x4644=(cj3*r11);
IkReal x4645=((0.0160344678271334)*r12);
IkReal x4646=((0.433012903784321)*r11);
IkReal x4647=(cj5*r11);
IkReal x4648=(r10*sj3);
IkReal x4649=(r00*sj3);
IkReal x4650=((0.433012903784321)*sj3);
IkReal x4651=(cj5*sj4);
IkReal x4652=(r20*sj5);
IkReal x4653=((0.433012903784321)*r21);
IkReal x4654=(sj0*sj1);
IkReal x4655=(cj3*r01);
IkReal x4656=(cj5*r21);
IkReal x4657=((0.0160344678271334)*r02);
IkReal x4658=(cj5*r01);
IkReal x4659=((0.250000349687704)*sj3);
IkReal x4660=(cj1*x4626);
IkReal x4661=((0.500000349687582)*x4651);
IkReal x4662=((0.27144)*x4627);
IkReal x4663=(cj4*x4650);
IkReal x4664=(sj1*x4626);
IkReal x4665=((0.866025201892125)*cj3*sj4);
IkReal x4666=(cj1*x4627);
IkReal x4667=((1.0)*x4627);
evalcond[0]=((((-0.866025201892125)*r20*x4651))+(((-0.250000349687704)*r22))+(((0.866025201892125)*r21*x4635))+x4664+x4666+(((-1.0)*x4628*x4630))+((sj5*x4630))+((cj5*x4653))+(((-1.0)*x4632*x4653))+(((-1.0)*r22*x4631)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.866025201892125)*r00*x4651))+(((-1.0)*r02*x4631))+(((0.866025201892125)*r01*x4635))+(((0.433012903784321)*x4643))+((cj5*x4634))+(((-0.433012903784321)*r00*x4628))+(((-1.0)*x4632*x4634))+(((-1.0)*x4639*x4667))+((cj0*x4660)));
evalcond[2]=((((-1.0)*x4654*x4667))+(((0.433012903784321)*x4637))+(((-0.250000349687704)*r12))+((sj0*x4660))+(((-0.433012903784321)*r10*x4628))+(((0.866025201892125)*r11*x4635))+(((-1.0)*r12*x4631))+(((-0.866025201892125)*r10*x4651))+((cj5*x4646))+(((-1.0)*x4632*x4646)));
evalcond[3]=((((-0.0185150129489311)*r21*x4635))+(((0.00925751294893567)*r21*x4632))+(((-0.27144)*x4664))+(((0.41)*cj1))+(((-1.0)*pz))+(((-1.0)*x4641))+((cj4*x4641))+(((0.0648043305514941)*x4652))+(((0.0648043305514941)*x4656))+(((0.0185150129489311)*r20*x4651))+(((-1.0)*cj1*x4662))+(((0.00925751294893567)*r20*x4628)));
evalcond[4]=((((-1.0)*x4657))+((x4639*x4662))+(((-0.0185150129489311)*r01*x4635))+(((-0.27144)*cj0*x4660))+(((-0.41)*x4639))+(((-1.0)*px))+(((0.00925751294893567)*r01*x4632))+((cj4*x4657))+(((0.0185150129489311)*r00*x4651))+(((0.0648043305514941)*x4658))+(((0.00925751294893567)*r00*x4628))+(((0.0098)*sj0))+(((0.0648043305514941)*x4643)));
evalcond[5]=((((0.00925751294893567)*r11*x4632))+(((0.00925751294893567)*r10*x4628))+(((-0.0185150129489311)*r11*x4635))+(((-0.27144)*sj0*x4660))+(((0.0185150129489311)*r10*x4651))+(((-1.0)*py))+(((-0.41)*x4654))+(((-1.0)*x4645))+((cj4*x4645))+((x4654*x4662))+(((0.0648043305514941)*x4637))+(((-0.0098)*cj0))+(((0.0648043305514941)*x4647)));
evalcond[6]=(((sj1*x4627))+((r20*x4638*x4651))+(((-1.0)*x4660))+(((-1.0)*r20*x4632*x4633))+((x4636*x4656))+((x4636*x4652))+(((-1.0)*r22*x4650))+((r21*x4632*x4659))+(((-1.0)*r21*x4635*x4638))+((x4628*x4629))+((r22*x4663))+((r22*x4665))+((r20*x4635*x4640))+((x4629*x4661))+(((0.250000349687704)*x4628*x4642)));
evalcond[7]=(((x4636*x4643))+((r02*x4665))+((r02*x4663))+((r00*x4635*x4640))+((x4626*x4639))+((x4636*x4658))+(((-1.0)*r02*x4650))+((r01*x4640*x4651))+((r00*x4638*x4651))+((x4628*x4655))+((r01*x4632*x4659))+(((-1.0)*r01*x4635*x4638))+(((-1.0)*r00*x4632*x4633))+((cj0*x4666))+(((0.250000349687704)*x4628*x4649)));
evalcond[8]=(((x4636*x4647))+((sj0*x4666))+(((-1.0)*r10*x4632*x4633))+((r12*x4663))+((r12*x4665))+((r10*x4635*x4640))+((x4628*x4644))+((r11*x4632*x4659))+((x4636*x4637))+((sj4*x4640*x4647))+((r10*x4638*x4651))+(((-1.0)*r12*x4650))+((x4626*x4654))+(((-1.0)*r11*x4635*x4638))+(((0.250000349687704)*x4628*x4648)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4668=((0.26409636501044)*cj4);
IkReal x4669=(r20*sj5);
IkReal x4670=(cj5*r21);
IkReal x4671=(r10*sj5);
IkReal x4672=(cj5*r11);
IkReal x4673=((0.528192360616262)*sj4);
IkReal x4674=((0.18234135315471)*sj0);
IkReal x4675=(r12*sj0);
IkReal x4676=((0.10827950965428)*cj4*sj0);
IkReal x4677=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x4678=IKPowWithIntegerCheck(sj0,-2);
if(!x4678.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x4678.value)*(((((-0.0838945627463637)*x4675))+(((-1.0)*cj5*r10*x4677))+((r11*sj5*x4677))+(((-0.0098)*cj0*sj0))+((x4672*x4674))+(((-0.187545437253636)*cj4*x4675))+(((-1.0)*x4671*x4676))+(((-1.0)*x4672*x4676))+(((-1.0)*py*sj0))+((x4671*x4674)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x4673))+(((-0.444735007694415)*x4670))+(((-1.0)*r21*sj5*x4673))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x4668*x4669))+((x4668*x4670))+(((-0.444735007694415)*x4669))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x4678.value)*(((((-0.0838945627463637)*x4675))+(((-1.0)*cj5*r10*x4677))+((r11*sj5*x4677))+(((-0.0098)*cj0*sj0))+((x4672*x4674))+(((-0.187545437253636)*cj4*x4675))+(((-1.0)*x4671*x4676))+(((-1.0)*x4672*x4676))+(((-1.0)*py*sj0))+((x4671*x4674))))))+IKsqr((((cj5*r20*x4673))+(((-0.444735007694415)*x4670))+(((-1.0)*r21*sj5*x4673))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x4668*x4669))+((x4668*x4670))+(((-0.444735007694415)*x4669))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x4678.value)*(((((-0.0838945627463637)*x4675))+(((-1.0)*cj5*r10*x4677))+((r11*sj5*x4677))+(((-0.0098)*cj0*sj0))+((x4672*x4674))+(((-0.187545437253636)*cj4*x4675))+(((-1.0)*x4671*x4676))+(((-1.0)*x4672*x4676))+(((-1.0)*py*sj0))+((x4671*x4674))))), (((cj5*r20*x4673))+(((-0.444735007694415)*x4670))+(((-1.0)*r21*sj5*x4673))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x4668*x4669))+((x4668*x4670))+(((-0.444735007694415)*x4669))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x4679=IKsin(j1);
IkReal x4680=IKcos(j1);
IkReal x4681=sj0*sj0;
IkReal x4682=cj0*cj0;
IkReal x4683=((0.0098)*cj0);
IkReal x4684=(cj0*cj5);
IkReal x4685=(cj5*sj0);
IkReal x4686=((0.0648043305514941)*r21);
IkReal x4687=(r00*sj5);
IkReal x4688=((0.20357990508077)*sj3);
IkReal x4689=((0.135720094919197)*r21);
IkReal x4690=((1.0)*px);
IkReal x4691=((0.117537022603216)*sj3);
IkReal x4692=((0.00925751294893567)*cj4);
IkReal x4693=(r10*sj4);
IkReal x4694=(sj0*sj5);
IkReal x4695=(cj4*sj0);
IkReal x4696=(r20*sj5);
IkReal x4697=((0.10827950965428)*cj4);
IkReal x4698=(cj3*sj4);
IkReal x4699=((0.135720094919197)*sj5);
IkReal x4700=((0.117537022603216)*r11);
IkReal x4701=(cj5*r01);
IkReal x4702=(cj4*r02);
IkReal x4703=((0.117537022603216)*cj4);
IkReal x4704=((0.0160344678271334)*r02);
IkReal x4705=((0.0648043305514941)*r11);
IkReal x4706=((0.0160344678271334)*r12);
IkReal x4707=(cj0*cj4);
IkReal x4708=(cj5*sj3);
IkReal x4709=((0.0678600949192303)*cj4);
IkReal x4710=(r10*sj5);
IkReal x4711=((1.0)*py);
IkReal x4712=(cj5*r00);
IkReal x4713=(cj0*r21);
IkReal x4714=(r11*sj5);
IkReal x4715=((0.0160344678271334)*r22);
IkReal x4716=(r00*sj4);
IkReal x4717=((1.0)*pz);
IkReal x4718=(r22*sj0);
IkReal x4719=(sj3*sj4);
IkReal x4720=(cj5*r21);
IkReal x4721=(r21*sj3);
IkReal x4722=(cj0*r22);
IkReal x4723=((0.0185150129489311)*sj4);
IkReal x4724=(cj5*r11);
IkReal x4725=(r01*sj5);
IkReal x4726=((0.216558867852667)*sj4);
IkReal x4727=((0.135720094919197)*r20);
IkReal x4728=(sj0*x4683);
IkReal x4729=(sj4*x4694);
IkReal x4730=((0.27144)*cj3*cj4);
IkReal x4731=(r11*x4692);
IkReal x4732=((0.41)*x4679);
IkReal x4733=(cj0*x4710);
IkReal x4734=(sj5*x4723);
IkReal x4735=((0.41)*x4680);
IkReal x4736=(cj0*sj0*x4732);
evalcond[0]=((((-0.18234135315471)*x4696))+((x4696*x4697))+(((-0.18234135315471)*x4720))+((x4697*x4720))+((cj5*r20*x4726))+(((0.187545437253636)*cj4*r22))+(((-1.0)*r21*sj5*x4726))+(((-1.0)*x4735))+pz+(((0.0838945627463637)*r22)));
evalcond[1]=(((r11*x4694*x4726))+(((0.18234135315471)*r10*x4694))+(((-1.0)*sj0*x4711))+(((-0.187545437253636)*r12*x4695))+(((-0.216558867852667)*x4685*x4693))+(((-1.0)*r11*x4685*x4697))+(((-1.0)*x4728))+(((0.18234135315471)*r11*x4685))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*x4681*x4732))+(((-1.0)*r10*x4694*x4697)));
evalcond[2]=((((-0.0838945627463637)*cj0*r02))+(((0.18234135315471)*r01*x4684))+x4728+(((-0.216558867852667)*x4684*x4716))+(((-0.187545437253636)*cj0*x4702))+(((0.18234135315471)*cj0*x4687))+((cj0*x4725*x4726))+(((-1.0)*r01*x4684*x4697))+(((-1.0)*x4682*x4732))+(((-1.0)*cj0*x4687*x4697))+(((-1.0)*cj0*x4690)));
evalcond[3]=((((-1.0)*r12*x4691))+((cj4*r12*x4691))+(((0.0648043305514941)*r20*x4694))+(((0.235073880801598)*r12*x4698))+((x4688*x4724))+((r11*x4708*x4709))+(((-1.0)*sj0*x4717))+(((-1.0)*sj0*x4715))+((r20*x4685*x4723))+((sj3*x4709*x4710))+((r20*x4692*x4694))+((sj0*x4735))+((x4714*x4730))+((r21*x4685*x4692))+(((0.135720094919197)*x4693*x4708))+((x4688*x4710))+(((-1.0)*r21*x4694*x4723))+(((-1.0)*cj5*r10*x4730))+((x4695*x4715))+((cj3*x4693*x4699))+(((0.135720094919197)*x4698*x4724))+((x4685*x4686))+(((-1.0)*r11*x4699*x4719)));
evalcond[4]=((((-1.0)*x4713*x4734))+(((-1.0)*cj0*x4717))+(((-1.0)*cj0*x4715))+((cj0*x4735))+((x4725*x4730))+(((0.135720094919197)*x4687*x4698))+(((0.135720094919197)*x4708*x4716))+(((0.135720094919197)*x4698*x4701))+((r21*x4684*x4692))+((sj3*x4701*x4709))+((r20*x4684*x4723))+((x4691*x4702))+(((-1.0)*r02*x4691))+((x4688*x4701))+(((0.235073880801598)*r02*x4698))+(((0.0648043305514941)*cj0*x4696))+((sj3*x4687*x4709))+((x4707*x4715))+((x4687*x4688))+((x4684*x4686))+((cj0*x4692*x4696))+(((-1.0)*r01*x4699*x4719))+(((-1.0)*x4712*x4730)));
evalcond[5]=((((-1.0)*r20*sj3*x4694*x4709))+(((-1.0)*x4685*x4719*x4727))+(((-1.0)*x4685*x4709*x4721))+(((-1.0)*x4694*x4698*x4727))+(((-1.0)*x4714*x4723))+(((-1.0)*sj0*x4732))+(((-1.0)*r21*x4685*x4688))+((r20*x4685*x4730))+((x4692*x4724))+((x4691*x4718))+(((0.0648043305514941)*x4710))+(((-0.235073880801598)*x4698*x4718))+((cj5*x4705))+(((-1.0)*x4685*x4689*x4698))+(((-1.0)*r22*x4691*x4695))+((cj4*x4706))+((x4692*x4710))+((x4689*x4694*x4719))+(((-1.0)*r20*x4688*x4694))+(((-1.0)*r21*x4694*x4730))+(((-1.0)*x4683))+(((-1.0)*x4706))+(((-1.0)*x4711))+(((0.0185150129489311)*cj5*x4693)));
evalcond[6]=((((-1.0)*x4684*x4689*x4698))+((cj0*sj5*x4689*x4719))+(((-1.0)*x4684*x4719*x4727))+(((0.0648043305514941)*x4687))+(((-1.0)*x4723*x4725))+(((-0.27144)*cj3*r21*sj5*x4707))+(((0.0648043305514941)*x4701))+(((-1.0)*cj0*x4688*x4696))+((x4712*x4723))+((r20*x4684*x4730))+(((-0.235073880801598)*x4698*x4722))+(((-1.0)*r21*x4684*x4688))+(((-1.0)*x4684*x4709*x4721))+((x4691*x4722))+(((-1.0)*cj0*x4732))+(((-1.0)*r22*x4691*x4707))+((x4692*x4701))+(((-1.0)*x4690))+(((0.0098)*sj0))+(((0.0160344678271334)*x4702))+(((-1.0)*x4704))+((x4687*x4692))+(((-0.0678600949192303)*sj3*x4696*x4707))+(((-0.135720094919197)*cj0*x4696*x4698)));
evalcond[7]=(((sj0*x4687*x4692))+(((-0.235073880801598)*x4684*x4693))+(((0.117537022603216)*x4733))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*cj4*x4684*x4700))+(((0.0098)*x4681))+(((0.0648043305514941)*sj0*x4687))+(((0.0185150129489311)*x4685*x4716))+((r01*x4685*x4692))+(((-0.20357990508077)*r12*x4707))+(((0.0648043305514941)*r01*x4685))+(((-1.0)*sj0*x4704))+(((-1.0)*x4736))+((x4684*x4700))+(((0.235073880801598)*cj0*sj4*x4714))+((x4695*x4704))+(((-1.0)*sj0*x4690))+(((-1.0)*r01*x4694*x4723))+(((-1.0)*x4703*x4733)));
evalcond[8]=((((-1.0)*cj0*x4711))+(((0.0185150129489311)*x4684*x4693))+(((-1.0)*r01*x4685*x4703))+((x4684*x4731))+((x4692*x4733))+(((-1.0)*cj0*x4706))+(((-1.0)*x4736))+(((-0.20357990508077)*r02*x4695))+((x4684*x4705))+(((0.235073880801598)*r01*x4729))+(((-0.0098)*x4682))+((x4706*x4707))+(((-0.117537022603216)*x4687*x4695))+(((0.117537022603216)*sj0*x4687))+(((-0.235073880801598)*x4685*x4716))+(((0.0648043305514941)*x4733))+(((-0.0678600949192303)*r02*sj0))+(((-1.0)*cj0*x4714*x4723))+(((0.117537022603216)*r01*x4685)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4737=((0.250000349687704)*sj1);
IkReal x4738=(cj1*cj4);
IkReal x4739=((0.749999650312296)*r22);
IkReal x4740=(cj4*sj1);
IkReal x4741=((0.749999650312296)*r02);
IkReal x4742=((0.250000349687704)*cj1);
IkReal x4743=((0.433012903784321)*r00*sj5);
IkReal x4744=((0.433012903784321)*r20*sj5);
IkReal x4745=((0.433012903784321)*cj5*r01);
IkReal x4746=((0.433012903784321)*cj5*r21);
IkReal x4747=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4748=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4749=((0.866025201892125)*r01*sj4*sj5);
IkReal x4750=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x4738*x4743))+((x4738*x4741))+((x4738*x4745))+((x4740*x4746))+((x4740*x4744))+(((-1.0)*sj1*x4744))+(((-1.0)*sj1*x4746))+((r00*x4748))+(((-1.0)*cj1*x4743))+(((-1.0)*cj1*x4749))+(((-1.0)*cj1*x4745))+((r20*x4747))+(((-1.0)*sj1*x4750))+((r02*x4742))+((r22*x4737))+((x4739*x4740)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4738*x4746))+((x4738*x4744))+(((-1.0)*cj1*x4750))+(((-1.0)*cj1*x4746))+(((-1.0)*cj1*x4744))+((r20*x4748))+(((-1.0)*r00*x4747))+((r22*x4742))+(((-1.0)*x4740*x4743))+(((-1.0)*x4740*x4741))+(((-1.0)*x4740*x4745))+((x4738*x4739))+((sj1*x4745))+((sj1*x4743))+((sj1*x4749))+(((-1.0)*r02*x4737)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x4738*x4743))+((x4738*x4741))+((x4738*x4745))+((x4740*x4746))+((x4740*x4744))+(((-1.0)*sj1*x4744))+(((-1.0)*sj1*x4746))+((r00*x4748))+(((-1.0)*cj1*x4743))+(((-1.0)*cj1*x4749))+(((-1.0)*cj1*x4745))+((r20*x4747))+(((-1.0)*sj1*x4750))+((r02*x4742))+((r22*x4737))+((x4739*x4740))))+IKsqr((((x4738*x4746))+((x4738*x4744))+(((-1.0)*cj1*x4750))+(((-1.0)*cj1*x4746))+(((-1.0)*cj1*x4744))+((r20*x4748))+(((-1.0)*r00*x4747))+((r22*x4742))+(((-1.0)*x4740*x4743))+(((-1.0)*x4740*x4741))+(((-1.0)*x4740*x4745))+((x4738*x4739))+((sj1*x4745))+((sj1*x4743))+((sj1*x4749))+(((-1.0)*r02*x4737))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x4738*x4743))+((x4738*x4741))+((x4738*x4745))+((x4740*x4746))+((x4740*x4744))+(((-1.0)*sj1*x4744))+(((-1.0)*sj1*x4746))+((r00*x4748))+(((-1.0)*cj1*x4743))+(((-1.0)*cj1*x4749))+(((-1.0)*cj1*x4745))+((r20*x4747))+(((-1.0)*sj1*x4750))+((r02*x4742))+((r22*x4737))+((x4739*x4740))), (((x4738*x4746))+((x4738*x4744))+(((-1.0)*cj1*x4750))+(((-1.0)*cj1*x4746))+(((-1.0)*cj1*x4744))+((r20*x4748))+(((-1.0)*r00*x4747))+((r22*x4742))+(((-1.0)*x4740*x4743))+(((-1.0)*x4740*x4741))+(((-1.0)*x4740*x4745))+((x4738*x4739))+((sj1*x4745))+((sj1*x4743))+((sj1*x4749))+(((-1.0)*r02*x4737))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4751=IKsin(j2);
IkReal x4752=IKcos(j2);
IkReal x4753=((0.749999650312296)*sj3);
IkReal x4754=(cj5*r01);
IkReal x4755=(r00*sj5);
IkReal x4756=(cj4*cj5);
IkReal x4757=((1.0)*cj3);
IkReal x4758=(r21*sj3);
IkReal x4759=(cj4*sj5);
IkReal x4760=(cj3*r21);
IkReal x4761=((0.500000349687582)*sj4);
IkReal x4762=((0.433012903784321)*r20);
IkReal x4763=(cj4*r22);
IkReal x4764=((0.433012903784321)*sj3);
IkReal x4765=((0.433012903784321)*cj4);
IkReal x4766=(r01*sj5);
IkReal x4767=(r20*sj5);
IkReal x4768=((0.0160344678271334)*r02);
IkReal x4769=(cj4*r02);
IkReal x4770=((0.00925751294893567)*cj4);
IkReal x4771=((0.0185150129489311)*sj4);
IkReal x4772=(r21*sj5);
IkReal x4773=(cj5*r21);
IkReal x4774=((0.866025201892125)*sj4);
IkReal x4775=(cj5*r20);
IkReal x4776=(cj5*r00);
IkReal x4777=((0.250000349687704)*sj3);
IkReal x4778=(cj1*x4752);
IkReal x4779=(sj1*x4751);
IkReal x4780=(cj1*x4751);
IkReal x4781=(sj1*x4752);
IkReal x4782=(x4778+x4779);
evalcond[0]=((((-0.250000349687704)*r22))+((x4772*x4774))+(((-0.433012903784321)*r21*x4756))+(((-1.0)*x4774*x4775))+x4782+(((0.433012903784321)*x4773))+(((-0.749999650312296)*x4763))+(((-1.0)*x4759*x4762))+((sj5*x4762)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4755*x4765))+(((-1.0)*x4754*x4765))+((x4766*x4774))+(((-1.0)*x4774*x4776))+x4780+(((-0.749999650312296)*x4769))+(((-1.0)*x4781))+(((0.433012903784321)*x4754))+(((0.433012903784321)*x4755)));
evalcond[2]=((((0.0160344678271334)*x4763))+(((0.0648043305514941)*x4767))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x4779))+(((-0.27144)*x4778))+(((0.00925751294893567)*r20*x4759))+(((-1.0)*pz))+(((-1.0)*x4771*x4772))+(((0.0648043305514941)*x4773))+(((0.00925751294893567)*r21*x4756))+((x4771*x4775)));
evalcond[3]=((((-1.0)*x4768))+(((-1.0)*x4766*x4771))+(((-0.27144)*x4780))+(((0.27144)*x4781))+(((-0.41)*sj1))+((x4755*x4770))+(((-1.0)*px))+((x4754*x4770))+((cj4*x4768))+(((0.0648043305514941)*x4754))+(((0.0648043305514941)*x4755))+((x4771*x4776)));
evalcond[4]=((((-1.0)*r02*x4764))+((cj3*r01*x4759))+((sj3*x4761*x4776))+((cj3*x4754*x4761))+((x4753*x4755))+((x4753*x4754))+((x4764*x4769))+x4782+(((-1.0)*r00*x4756*x4757))+((cj3*x4755*x4761))+(((-1.0)*sj3*x4761*x4766))+((cj3*r02*x4774))+((cj4*x4755*x4777))+((cj4*x4754*x4777)));
evalcond[5]=((((-1.0)*sj5*x4758*x4761))+((x4753*x4767))+((x4753*x4773))+(((0.250000349687704)*x4756*x4758))+((sj3*x4761*x4775))+(((-1.0)*r22*x4764))+((x4759*x4760))+((cj5*x4760*x4761))+(((-1.0)*r20*x4756*x4757))+((r20*x4759*x4777))+x4781+(((-1.0)*x4780))+((cj3*x4761*x4767))+((x4763*x4764))+((cj3*r22*x4774)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4783=(r02*sj1);
IkReal x4784=(cj1*cj4);
IkReal x4785=((0.749999650312296)*r22);
IkReal x4786=(cj4*sj1);
IkReal x4787=((0.250000349687704)*r22);
IkReal x4788=((0.433012903784321)*r00*sj5);
IkReal x4789=((0.433012903784321)*r20*sj5);
IkReal x4790=((0.433012903784321)*cj5*r01);
IkReal x4791=((0.433012903784321)*cj5*r21);
IkReal x4792=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4793=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4794=((0.866025201892125)*r01*sj4*sj5);
IkReal x4795=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((cj1*x4790))+((cj1*x4794))+((cj1*x4788))+((x4786*x4791))+((x4786*x4789))+(((-1.0)*sj1*x4795))+(((-1.0)*sj1*x4791))+((x4785*x4786))+((r20*x4792))+(((-1.0)*x4784*x4790))+(((-1.0)*sj1*x4789))+(((-0.749999650312296)*r02*x4784))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x4784*x4788))+(((-1.0)*r00*x4793))+((sj1*x4787)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x4787))+(((0.250000349687704)*x4783))+((x4786*x4790))+((x4786*x4788))+(((-1.0)*sj1*x4790))+(((-1.0)*sj1*x4794))+((r00*x4792))+((r20*x4793))+((x4784*x4789))+((x4784*x4785))+(((-1.0)*sj1*x4788))+(((0.749999650312296)*cj4*x4783))+(((-1.0)*cj1*x4789))+(((-1.0)*cj1*x4795))+(((-1.0)*cj1*x4791))+((x4784*x4791)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x4790))+((cj1*x4794))+((cj1*x4788))+((x4786*x4791))+((x4786*x4789))+(((-1.0)*sj1*x4795))+(((-1.0)*sj1*x4791))+((x4785*x4786))+((r20*x4792))+(((-1.0)*x4784*x4790))+(((-1.0)*sj1*x4789))+(((-0.749999650312296)*r02*x4784))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x4784*x4788))+(((-1.0)*r00*x4793))+((sj1*x4787))))+IKsqr((((cj1*x4787))+(((0.250000349687704)*x4783))+((x4786*x4790))+((x4786*x4788))+(((-1.0)*sj1*x4790))+(((-1.0)*sj1*x4794))+((r00*x4792))+((r20*x4793))+((x4784*x4789))+((x4784*x4785))+(((-1.0)*sj1*x4788))+(((0.749999650312296)*cj4*x4783))+(((-1.0)*cj1*x4789))+(((-1.0)*cj1*x4795))+(((-1.0)*cj1*x4791))+((x4784*x4791))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*x4790))+((cj1*x4794))+((cj1*x4788))+((x4786*x4791))+((x4786*x4789))+(((-1.0)*sj1*x4795))+(((-1.0)*sj1*x4791))+((x4785*x4786))+((r20*x4792))+(((-1.0)*x4784*x4790))+(((-1.0)*sj1*x4789))+(((-0.749999650312296)*r02*x4784))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x4784*x4788))+(((-1.0)*r00*x4793))+((sj1*x4787))), (((cj1*x4787))+(((0.250000349687704)*x4783))+((x4786*x4790))+((x4786*x4788))+(((-1.0)*sj1*x4790))+(((-1.0)*sj1*x4794))+((r00*x4792))+((r20*x4793))+((x4784*x4789))+((x4784*x4785))+(((-1.0)*sj1*x4788))+(((0.749999650312296)*cj4*x4783))+(((-1.0)*cj1*x4789))+(((-1.0)*cj1*x4795))+(((-1.0)*cj1*x4791))+((x4784*x4791))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4796=IKcos(j2);
IkReal x4797=IKsin(j2);
IkReal x4798=((0.433012903784321)*sj3);
IkReal x4799=((0.749999650312296)*sj3);
IkReal x4800=(r00*sj5);
IkReal x4801=(cj4*cj5);
IkReal x4802=((1.0)*cj3);
IkReal x4803=(cj5*r01);
IkReal x4804=(r21*sj3);
IkReal x4805=(cj4*sj5);
IkReal x4806=(cj3*r21);
IkReal x4807=((0.500000349687582)*sj4);
IkReal x4808=((0.433012903784321)*r20);
IkReal x4809=(cj4*r22);
IkReal x4810=(r20*sj5);
IkReal x4811=((0.0160344678271334)*r02);
IkReal x4812=(cj4*r02);
IkReal x4813=(r01*sj5);
IkReal x4814=(cj5*r00);
IkReal x4815=((0.0185150129489311)*sj4);
IkReal x4816=(r21*sj5);
IkReal x4817=(cj5*r21);
IkReal x4818=((0.866025201892125)*sj4);
IkReal x4819=(cj5*r20);
IkReal x4820=((0.250000349687704)*sj3);
IkReal x4821=(sj1*x4796);
IkReal x4822=(cj1*x4796);
IkReal x4823=(sj1*x4797);
IkReal x4824=(cj1*x4797);
IkReal x4825=((1.0)*x4824);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x4805*x4808))+((x4816*x4818))+(((-0.433012903784321)*r21*x4801))+(((-0.749999650312296)*x4809))+((sj5*x4808))+x4822+x4823+(((-1.0)*x4818*x4819))+(((0.433012903784321)*x4817)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4814*x4818))+(((-1.0)*x4825))+((x4813*x4818))+(((-0.433012903784321)*r01*x4801))+(((0.433012903784321)*x4800))+(((0.433012903784321)*x4803))+(((-0.433012903784321)*cj4*x4800))+(((-0.749999650312296)*x4812))+x4821);
evalcond[2]=(((x4815*x4819))+(((-1.0)*x4815*x4816))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x4805))+(((0.0160344678271334)*x4809))+(((-0.27144)*x4822))+(((-0.27144)*x4823))+(((0.00925751294893567)*r21*x4801))+(((0.0648043305514941)*x4817))+(((0.0648043305514941)*x4810)));
evalcond[3]=((((0.27144)*x4824))+((cj4*x4811))+(((0.00925751294893567)*r01*x4801))+(((-1.0)*x4811))+(((0.41)*sj1))+(((0.0648043305514941)*x4803))+(((0.0648043305514941)*x4800))+(((-1.0)*px))+(((-1.0)*x4813*x4815))+(((-0.27144)*x4821))+(((0.00925751294893567)*cj4*x4800))+((x4814*x4815)));
evalcond[4]=(((r20*x4805*x4820))+(((-1.0)*x4825))+((cj3*r22*x4818))+((x4805*x4806))+((x4799*x4810))+((x4799*x4817))+(((-1.0)*r22*x4798))+(((0.250000349687704)*x4801*x4804))+(((-1.0)*r20*x4801*x4802))+((sj3*x4807*x4819))+((cj5*x4806*x4807))+(((-1.0)*sj5*x4804*x4807))+((cj3*x4807*x4810))+x4821+((x4798*x4809)));
evalcond[5]=((((-1.0)*r02*x4798))+((x4798*x4812))+(((-1.0)*x4822))+(((-1.0)*x4823))+(((-1.0)*sj3*x4807*x4813))+((cj3*r02*x4818))+((sj3*x4807*x4814))+((cj3*x4803*x4807))+((r01*x4801*x4820))+(((-1.0)*r00*x4801*x4802))+((cj4*x4800*x4820))+((cj3*r01*x4805))+((cj3*x4800*x4807))+((x4799*x4800))+((x4799*x4803)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4826=((0.250000349687704)*r12);
IkReal x4827=((0.749999650312296)*cj4);
IkReal x4828=((0.433012903784321)*sj5);
IkReal x4829=(cj1*r10);
IkReal x4830=(cj1*r22);
IkReal x4831=(cj1*r20);
IkReal x4832=((0.866025201892125)*sj4);
IkReal x4833=(r20*sj1);
IkReal x4834=(r22*sj1);
IkReal x4835=(r10*sj1);
IkReal x4836=(r11*sj1);
IkReal x4837=((0.433012903784321)*cj5);
IkReal x4838=(r21*sj1);
IkReal x4839=(cj1*r21);
IkReal x4840=(cj1*r11);
IkReal x4841=(cj5*sj1*x4832);
IkReal x4842=(cj4*r21*x4837);
if( IKabs(((((-1.0)*x4837*x4840))+((cj4*x4837*x4838))+(((-1.0)*sj5*x4832*x4838))+((cj5*x4832*x4833))+(((-1.0)*sj5*x4832*x4840))+((cj4*x4828*x4833))+((cj4*x4828*x4829))+((cj1*x4826))+((x4827*x4834))+((cj4*x4837*x4840))+(((-1.0)*x4828*x4833))+((cj5*x4829*x4832))+((cj1*r12*x4827))+(((-1.0)*x4828*x4829))+(((-1.0)*x4837*x4838))+(((0.250000349687704)*x4834)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4837*x4839))+(((-1.0)*sj5*x4832*x4839))+(((-1.0)*r12*sj1*x4827))+((x4836*x4837))+(((-1.0)*cj4*x4828*x4835))+(((-1.0)*cj5*x4832*x4835))+((cj4*x4828*x4831))+((sj5*x4832*x4836))+(((-1.0)*sj1*x4826))+((x4827*x4830))+(((-1.0)*x4828*x4831))+(((-1.0)*cj4*x4836*x4837))+((cj5*x4831*x4832))+(((-1.0)*x4837*x4839))+((x4828*x4835))+(((0.250000349687704)*x4830)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4837*x4840))+((cj4*x4837*x4838))+(((-1.0)*sj5*x4832*x4838))+((cj5*x4832*x4833))+(((-1.0)*sj5*x4832*x4840))+((cj4*x4828*x4833))+((cj4*x4828*x4829))+((cj1*x4826))+((x4827*x4834))+((cj4*x4837*x4840))+(((-1.0)*x4828*x4833))+((cj5*x4829*x4832))+((cj1*r12*x4827))+(((-1.0)*x4828*x4829))+(((-1.0)*x4837*x4838))+(((0.250000349687704)*x4834))))+IKsqr((((cj4*x4837*x4839))+(((-1.0)*sj5*x4832*x4839))+(((-1.0)*r12*sj1*x4827))+((x4836*x4837))+(((-1.0)*cj4*x4828*x4835))+(((-1.0)*cj5*x4832*x4835))+((cj4*x4828*x4831))+((sj5*x4832*x4836))+(((-1.0)*sj1*x4826))+((x4827*x4830))+(((-1.0)*x4828*x4831))+(((-1.0)*cj4*x4836*x4837))+((cj5*x4831*x4832))+(((-1.0)*x4837*x4839))+((x4828*x4835))+(((0.250000349687704)*x4830))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4837*x4840))+((cj4*x4837*x4838))+(((-1.0)*sj5*x4832*x4838))+((cj5*x4832*x4833))+(((-1.0)*sj5*x4832*x4840))+((cj4*x4828*x4833))+((cj4*x4828*x4829))+((cj1*x4826))+((x4827*x4834))+((cj4*x4837*x4840))+(((-1.0)*x4828*x4833))+((cj5*x4829*x4832))+((cj1*r12*x4827))+(((-1.0)*x4828*x4829))+(((-1.0)*x4837*x4838))+(((0.250000349687704)*x4834))), (((cj4*x4837*x4839))+(((-1.0)*sj5*x4832*x4839))+(((-1.0)*r12*sj1*x4827))+((x4836*x4837))+(((-1.0)*cj4*x4828*x4835))+(((-1.0)*cj5*x4832*x4835))+((cj4*x4828*x4831))+((sj5*x4832*x4836))+(((-1.0)*sj1*x4826))+((x4827*x4830))+(((-1.0)*x4828*x4831))+(((-1.0)*cj4*x4836*x4837))+((cj5*x4831*x4832))+(((-1.0)*x4837*x4839))+((x4828*x4835))+(((0.250000349687704)*x4830))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4843=IKsin(j2);
IkReal x4844=IKcos(j2);
IkReal x4845=(cj5*r11);
IkReal x4846=((0.433012903784321)*cj4);
IkReal x4847=(r21*sj5);
IkReal x4848=((0.500000349687582)*sj4);
IkReal x4849=((0.749999650312296)*sj3);
IkReal x4850=(cj3*cj4);
IkReal x4851=(cj5*r10);
IkReal x4852=((0.0185150129489311)*sj4);
IkReal x4853=(r20*sj5);
IkReal x4854=(cj4*r22);
IkReal x4855=(r10*sj5);
IkReal x4856=(r22*sj3);
IkReal x4857=(r11*sj5);
IkReal x4858=((0.00925751294893567)*cj4);
IkReal x4859=(cj5*r21);
IkReal x4860=(r12*sj3);
IkReal x4861=(cj4*r12);
IkReal x4862=(cj5*r20);
IkReal x4863=((0.866025201892125)*sj4);
IkReal x4864=(cj1*x4844);
IkReal x4865=(sj1*x4843);
IkReal x4866=(cj1*x4843);
IkReal x4867=((0.250000349687704)*cj4*sj3);
IkReal x4868=(sj1*x4844);
IkReal x4869=(cj3*x4863);
IkReal x4870=(x4864+x4865);
evalcond[0]=((((-1.0)*x4862*x4863))+((x4847*x4863))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x4854))+(((0.433012903784321)*x4859))+(((0.433012903784321)*x4853))+(((-1.0)*x4846*x4859))+(((-1.0)*x4846*x4853))+x4870);
evalcond[1]=((((-0.250000349687704)*r12))+(((0.433012903784321)*x4845))+(((-1.0)*x4851*x4863))+(((-0.749999650312296)*x4861))+(((-1.0)*x4868))+((x4857*x4863))+(((0.433012903784321)*x4855))+(((-1.0)*x4845*x4846))+(((-1.0)*x4846*x4855))+x4866);
evalcond[2]=((((-1.0)*x4847*x4852))+((x4853*x4858))+(((0.0160344678271334)*x4854))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x4864))+(((-0.27144)*x4865))+(((-1.0)*pz))+(((0.0648043305514941)*x4853))+(((0.0648043305514941)*x4859))+((x4852*x4862))+((x4858*x4859)));
evalcond[3]=((((0.0648043305514941)*x4845))+(((0.0160344678271334)*x4861))+(((0.27144)*x4868))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((-0.27144)*x4866))+(((-1.0)*py))+((x4855*x4858))+(((0.0648043305514941)*x4855))+(((-1.0)*x4852*x4857))+((x4845*x4858))+((x4851*x4852)));
evalcond[4]=(((cj3*x4848*x4855))+((r12*x4869))+((sj3*x4848*x4851))+((x4849*x4855))+((x4845*x4849))+(((-0.433012903784321)*x4860))+((cj3*x4845*x4848))+((x4855*x4867))+((x4850*x4857))+(((-1.0)*x4850*x4851))+((x4846*x4860))+((x4845*x4867))+(((-1.0)*sj3*x4848*x4857))+x4870);
evalcond[5]=(((x4853*x4867))+((x4859*x4867))+((cj3*x4848*x4853))+((cj3*x4848*x4859))+((sj3*x4848*x4862))+((x4849*x4853))+((x4849*x4859))+((r22*x4869))+(((-1.0)*sj3*x4847*x4848))+(((-1.0)*x4866))+(((-0.433012903784321)*x4856))+(((-1.0)*x4850*x4862))+((x4846*x4856))+x4868+((x4847*x4850)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4871=((0.250000349687704)*r12);
IkReal x4872=((0.749999650312296)*cj4);
IkReal x4873=(cj1*r22);
IkReal x4874=((0.866025201892125)*sj4);
IkReal x4875=(cj1*r20);
IkReal x4876=(sj1*sj5);
IkReal x4877=((0.433012903784321)*r20);
IkReal x4878=((0.433012903784321)*sj5);
IkReal x4879=(cj1*r10);
IkReal x4880=(r22*sj1);
IkReal x4881=((0.433012903784321)*r10);
IkReal x4882=((0.433012903784321)*cj5);
IkReal x4883=(cj1*r21);
IkReal x4884=(cj1*r11);
IkReal x4885=(r11*sj1);
IkReal x4886=(cj1*cj4*x4878);
IkReal x4887=(cj5*sj1*x4874);
IkReal x4888=(cj4*r21*x4882);
if( IKabs(((((-1.0)*x4876*x4877))+((x4872*x4880))+(((0.250000349687704)*x4880))+((sj5*x4874*x4884))+(((-1.0)*r21*x4874*x4876))+((cj4*x4876*x4877))+(((-1.0)*cj4*x4878*x4879))+(((-1.0)*r21*sj1*x4882))+((r20*x4887))+(((-1.0)*cj5*x4874*x4879))+((sj1*x4888))+(((-1.0)*cj1*r12*x4872))+(((-1.0)*cj1*x4871))+((x4882*x4884))+((x4878*x4879))+(((-1.0)*cj4*x4882*x4884)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x4874*x4883))+(((-1.0)*x4876*x4881))+(((-1.0)*r11*x4874*x4876))+((cj4*x4882*x4883))+((cj4*x4882*x4885))+((sj1*x4871))+((cj5*x4874*x4875))+(((-1.0)*x4882*x4885))+(((-1.0)*x4882*x4883))+(((-1.0)*x4875*x4878))+((x4872*x4873))+((cj4*x4876*x4881))+((cj4*x4875*x4878))+((r10*x4887))+(((0.250000349687704)*x4873))+((r12*sj1*x4872)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4876*x4877))+((x4872*x4880))+(((0.250000349687704)*x4880))+((sj5*x4874*x4884))+(((-1.0)*r21*x4874*x4876))+((cj4*x4876*x4877))+(((-1.0)*cj4*x4878*x4879))+(((-1.0)*r21*sj1*x4882))+((r20*x4887))+(((-1.0)*cj5*x4874*x4879))+((sj1*x4888))+(((-1.0)*cj1*r12*x4872))+(((-1.0)*cj1*x4871))+((x4882*x4884))+((x4878*x4879))+(((-1.0)*cj4*x4882*x4884))))+IKsqr(((((-1.0)*sj5*x4874*x4883))+(((-1.0)*x4876*x4881))+(((-1.0)*r11*x4874*x4876))+((cj4*x4882*x4883))+((cj4*x4882*x4885))+((sj1*x4871))+((cj5*x4874*x4875))+(((-1.0)*x4882*x4885))+(((-1.0)*x4882*x4883))+(((-1.0)*x4875*x4878))+((x4872*x4873))+((cj4*x4876*x4881))+((cj4*x4875*x4878))+((r10*x4887))+(((0.250000349687704)*x4873))+((r12*sj1*x4872))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4876*x4877))+((x4872*x4880))+(((0.250000349687704)*x4880))+((sj5*x4874*x4884))+(((-1.0)*r21*x4874*x4876))+((cj4*x4876*x4877))+(((-1.0)*cj4*x4878*x4879))+(((-1.0)*r21*sj1*x4882))+((r20*x4887))+(((-1.0)*cj5*x4874*x4879))+((sj1*x4888))+(((-1.0)*cj1*r12*x4872))+(((-1.0)*cj1*x4871))+((x4882*x4884))+((x4878*x4879))+(((-1.0)*cj4*x4882*x4884))), ((((-1.0)*sj5*x4874*x4883))+(((-1.0)*x4876*x4881))+(((-1.0)*r11*x4874*x4876))+((cj4*x4882*x4883))+((cj4*x4882*x4885))+((sj1*x4871))+((cj5*x4874*x4875))+(((-1.0)*x4882*x4885))+(((-1.0)*x4882*x4883))+(((-1.0)*x4875*x4878))+((x4872*x4873))+((cj4*x4876*x4881))+((cj4*x4875*x4878))+((r10*x4887))+(((0.250000349687704)*x4873))+((r12*sj1*x4872))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4889=IKcos(j2);
IkReal x4890=IKsin(j2);
IkReal x4891=(cj5*r11);
IkReal x4892=((0.433012903784321)*cj4);
IkReal x4893=(r21*sj5);
IkReal x4894=((0.500000349687582)*sj4);
IkReal x4895=((0.749999650312296)*sj3);
IkReal x4896=(cj3*cj4);
IkReal x4897=(cj5*r10);
IkReal x4898=((0.0185150129489311)*sj4);
IkReal x4899=(r20*sj5);
IkReal x4900=(cj4*r22);
IkReal x4901=(r10*sj5);
IkReal x4902=(r12*sj3);
IkReal x4903=(r11*sj5);
IkReal x4904=(r22*sj3);
IkReal x4905=((0.27144)*sj1);
IkReal x4906=((0.00925751294893567)*cj4);
IkReal x4907=(cj5*r20);
IkReal x4908=(cj5*r21);
IkReal x4909=(cj4*r12);
IkReal x4910=((0.866025201892125)*sj4);
IkReal x4911=(sj1*x4889);
IkReal x4912=(cj1*x4889);
IkReal x4913=(cj1*x4890);
IkReal x4914=((0.250000349687704)*cj4*sj3);
IkReal x4915=(cj3*x4910);
IkReal x4916=(sj1*x4890);
IkReal x4917=((1.0)*x4913);
evalcond[0]=(x4916+x4912+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x4900))+(((0.433012903784321)*x4899))+((x4893*x4910))+(((-1.0)*x4892*x4908))+(((0.433012903784321)*x4908))+(((-1.0)*x4907*x4910))+(((-1.0)*x4892*x4899)));
evalcond[1]=(x4911+(((-0.250000349687704)*r12))+(((-1.0)*x4917))+(((-0.749999650312296)*x4909))+((x4903*x4910))+(((-1.0)*x4897*x4910))+(((0.433012903784321)*x4891))+(((-1.0)*x4891*x4892))+(((-1.0)*x4892*x4901))+(((0.433012903784321)*x4901)));
evalcond[2]=((((0.0648043305514941)*x4899))+(((0.41)*cj1))+(((-1.0)*x4893*x4898))+(((-0.0160344678271334)*r22))+(((-1.0)*x4890*x4905))+(((-1.0)*pz))+((x4906*x4908))+(((-0.27144)*x4912))+(((0.0160344678271334)*x4900))+((x4898*x4907))+((x4899*x4906))+(((0.0648043305514941)*x4908)));
evalcond[3]=((((0.0648043305514941)*x4891))+(((-1.0)*x4898*x4903))+((x4897*x4898))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x4889*x4905))+((x4901*x4906))+(((-1.0)*py))+(((0.27144)*x4913))+(((0.0160344678271334)*x4909))+((x4891*x4906))+(((0.0648043305514941)*x4901)));
evalcond[4]=((((-1.0)*sj3*x4893*x4894))+x4911+((x4895*x4908))+(((-1.0)*x4917))+((x4908*x4914))+((sj3*x4894*x4907))+((x4895*x4899))+(((-1.0)*x4896*x4907))+((cj3*x4894*x4908))+((x4893*x4896))+((x4892*x4904))+((r22*x4915))+(((-0.433012903784321)*x4904))+((cj3*x4894*x4899))+((x4899*x4914)));
evalcond[5]=((((-1.0)*x4896*x4897))+((x4896*x4903))+((sj3*x4894*x4897))+((x4895*x4901))+((x4901*x4914))+(((-1.0)*x4912))+(((-1.0)*x4916))+((x4891*x4895))+(((-1.0)*sj3*x4894*x4903))+((r12*x4915))+((cj3*x4891*x4894))+((cj3*x4894*x4901))+((x4892*x4902))+(((-0.433012903784321)*x4902))+((x4891*x4914)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4918=(cj4*sj1);
IkReal x4919=((0.433012903784321)*sj0);
IkReal x4920=(cj5*r21);
IkReal x4921=(cj1*r12);
IkReal x4922=(r20*sj5);
IkReal x4923=(r20*sj0);
IkReal x4924=(r10*sj1);
IkReal x4925=((0.749999650312296)*cj4);
IkReal x4926=(r21*sj0);
IkReal x4927=((0.433012903784321)*sj5);
IkReal x4928=(cj1*cj4);
IkReal x4929=(r22*sj0);
IkReal x4930=((0.250000349687704)*x4929);
IkReal x4931=((0.866025201892125)*cj5*sj4);
IkReal x4932=((0.433012903784321)*cj5*r11);
IkReal x4933=(cj1*r10*x4927);
IkReal x4934=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4935=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x4936 = IKatan2WithCheck(IkReal((((r10*x4927*x4928))+((cj1*r10*x4931))+((x4921*x4925))+((sj1*x4923*x4931))+(((-1.0)*x4926*x4934))+(((0.749999650312296)*x4918*x4929))+((x4918*x4919*x4922))+((x4918*x4919*x4920))+(((-1.0)*cj1*x4932))+(((-1.0)*r11*x4935))+((x4928*x4932))+((sj1*x4930))+(((-1.0)*x4933))+(((-1.0)*sj1*x4919*x4920))+(((-1.0)*sj1*x4919*x4922))+(((0.250000349687704)*x4921)))),IkReal(((((-0.749999650312296)*r12*x4918))+((x4924*x4927))+(((-0.250000349687704)*r12*sj1))+(((-1.0)*r10*x4918*x4927))+((cj1*x4923*x4931))+(((-1.0)*x4918*x4932))+(((-1.0)*cj1*x4919*x4920))+(((-1.0)*cj1*x4919*x4922))+(((-1.0)*x4924*x4931))+(((-1.0)*x4926*x4935))+((x4919*x4922*x4928))+((x4919*x4920*x4928))+((r11*x4934))+((sj1*x4932))+((cj1*x4925*x4929))+((cj1*x4930)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4936.valid){
continue;
}
CheckValue<IkReal> x4937=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4937.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4936.value)+(((1.5707963267949)*(x4937.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4938=IKsin(j2);
IkReal x4939=IKcos(j2);
IkReal x4940=(cj4*sj5);
IkReal x4941=(cj3*r21);
IkReal x4942=((0.433012903784321)*r20);
IkReal x4943=((0.749999650312296)*cj4);
IkReal x4944=(cj4*cj5);
IkReal x4945=((1.0)*cj3);
IkReal x4946=((0.433012903784321)*r01);
IkReal x4947=(sj4*sj5);
IkReal x4948=((0.749999650312296)*sj3);
IkReal x4949=(r10*sj5);
IkReal x4950=((0.500000349687582)*sj3);
IkReal x4951=(cj0*sj1);
IkReal x4952=((0.500000349687582)*cj3);
IkReal x4953=((0.0160344678271334)*r22);
IkReal x4954=(r20*sj3);
IkReal x4955=(r00*sj5);
IkReal x4956=(cj3*r11);
IkReal x4957=((0.0160344678271334)*r12);
IkReal x4958=((0.433012903784321)*r11);
IkReal x4959=(cj5*r11);
IkReal x4960=(r10*sj3);
IkReal x4961=(r00*sj3);
IkReal x4962=((0.433012903784321)*sj3);
IkReal x4963=(cj5*sj4);
IkReal x4964=(r20*sj5);
IkReal x4965=((0.433012903784321)*r21);
IkReal x4966=(sj0*sj1);
IkReal x4967=(cj3*r01);
IkReal x4968=(cj5*r21);
IkReal x4969=((0.0160344678271334)*r02);
IkReal x4970=(cj5*r01);
IkReal x4971=((0.250000349687704)*sj3);
IkReal x4972=(cj1*x4938);
IkReal x4973=((0.500000349687582)*x4963);
IkReal x4974=((0.27144)*x4939);
IkReal x4975=(cj4*x4962);
IkReal x4976=(sj1*x4938);
IkReal x4977=((0.866025201892125)*cj3*sj4);
IkReal x4978=(cj1*x4939);
IkReal x4979=((1.0)*x4939);
evalcond[0]=(x4978+x4976+(((0.866025201892125)*r21*x4947))+(((-0.250000349687704)*r22))+((sj5*x4942))+(((-1.0)*x4940*x4942))+(((-1.0)*r22*x4943))+(((-1.0)*x4944*x4965))+((cj5*x4965))+(((-0.866025201892125)*r20*x4963)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*r00*x4940))+(((-1.0)*x4944*x4946))+(((0.433012903784321)*x4955))+((cj5*x4946))+(((-1.0)*r02*x4943))+(((0.866025201892125)*r01*x4947))+(((-0.866025201892125)*r00*x4963))+(((-1.0)*x4951*x4979))+((cj0*x4972)));
evalcond[2]=((((-0.250000349687704)*r12))+(((0.433012903784321)*x4949))+((sj0*x4972))+(((-1.0)*r12*x4943))+(((-1.0)*x4944*x4958))+(((-0.866025201892125)*r10*x4963))+(((-1.0)*x4966*x4979))+(((0.866025201892125)*r11*x4947))+((cj5*x4958))+(((-0.433012903784321)*r10*x4940)));
evalcond[3]=((((-0.0185150129489311)*r21*x4947))+(((0.00925751294893567)*r21*x4944))+(((0.41)*cj1))+(((0.00925751294893567)*r20*x4940))+(((-0.27144)*x4976))+(((-1.0)*x4953))+(((-1.0)*pz))+(((0.0185150129489311)*r20*x4963))+((cj4*x4953))+(((-1.0)*cj1*x4974))+(((0.0648043305514941)*x4964))+(((0.0648043305514941)*x4968)));
evalcond[4]=((((-0.27144)*cj0*x4972))+(((-0.41)*x4951))+(((-1.0)*x4969))+(((-1.0)*px))+(((0.00925751294893567)*r01*x4944))+(((0.00925751294893567)*r00*x4940))+(((-0.0185150129489311)*r01*x4947))+((cj4*x4969))+(((0.0185150129489311)*r00*x4963))+((x4951*x4974))+(((0.0098)*sj0))+(((0.0648043305514941)*x4970))+(((0.0648043305514941)*x4955)));
evalcond[5]=((((-0.41)*x4966))+(((0.00925751294893567)*r11*x4944))+(((-0.27144)*sj0*x4972))+((x4966*x4974))+(((-1.0)*x4957))+(((-1.0)*py))+(((0.0185150129489311)*r10*x4963))+(((0.00925751294893567)*r10*x4940))+((cj4*x4957))+(((0.0648043305514941)*x4949))+(((-0.0185150129489311)*r11*x4947))+(((-0.0098)*cj0))+(((0.0648043305514941)*x4959)));
evalcond[6]=(((r22*x4975))+((r22*x4977))+((x4940*x4941))+(((-1.0)*x4972))+(((-1.0)*r22*x4962))+((r20*x4947*x4952))+((r20*x4950*x4963))+(((0.250000349687704)*x4940*x4954))+((x4941*x4973))+(((-1.0)*r20*x4944*x4945))+((r21*x4944*x4971))+((sj1*x4939))+((x4948*x4964))+((x4948*x4968))+(((-1.0)*r21*x4947*x4950)));
evalcond[7]=(((x4938*x4951))+(((-1.0)*r02*x4962))+((x4940*x4967))+((r00*x4950*x4963))+(((-1.0)*r00*x4944*x4945))+((r02*x4977))+((r02*x4975))+((r00*x4947*x4952))+(((0.250000349687704)*x4940*x4961))+((r01*x4944*x4971))+(((-1.0)*r01*x4947*x4950))+((x4948*x4955))+((r01*x4952*x4963))+((x4948*x4970))+((cj0*x4978)));
evalcond[8]=(((sj4*x4952*x4959))+(((-1.0)*r10*x4944*x4945))+((sj0*x4978))+((r12*x4975))+((r12*x4977))+((x4938*x4966))+((r11*x4944*x4971))+(((-1.0)*r12*x4962))+((x4940*x4956))+(((-1.0)*r11*x4947*x4950))+(((0.250000349687704)*x4940*x4960))+((x4948*x4949))+((r10*x4947*x4952))+((x4948*x4959))+((r10*x4950*x4963)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4980=(cj0*r20);
IkReal x4981=(cj1*r00);
IkReal x4982=(r02*sj1);
IkReal x4983=(r00*sj1);
IkReal x4984=((0.433012903784321)*sj5);
IkReal x4985=(cj4*sj1);
IkReal x4986=((0.749999650312296)*cj4);
IkReal x4987=(cj0*r22);
IkReal x4988=(r01*sj1);
IkReal x4989=(cj1*cj4);
IkReal x4990=(cj0*r21);
IkReal x4991=(cj1*r02);
IkReal x4992=((0.866025201892125)*cj5*sj4);
IkReal x4993=((0.866025201892125)*sj4*sj5);
IkReal x4994=((0.433012903784321)*cj5*r01);
IkReal x4995=((0.433012903784321)*cj5*x4990);
CheckValue<IkReal> x4996=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4996.valid){
continue;
}
CheckValue<IkReal> x4997 = IKatan2WithCheck(IkReal((((x4980*x4984*x4985))+((sj1*x4980*x4992))+(((0.250000349687704)*sj1*x4987))+((x4985*x4995))+((cj4*x4981*x4984))+(((-1.0)*sj1*x4980*x4984))+(((-1.0)*sj1*x4995))+(((-1.0)*sj1*x4990*x4993))+((x4989*x4994))+((x4986*x4991))+(((0.250000349687704)*x4991))+(((-1.0)*x4981*x4984))+(((0.749999650312296)*x4985*x4987))+((x4981*x4992))+(((-1.0)*cj1*r01*x4993))+(((-1.0)*cj1*x4994)))),IkReal((((x4980*x4984*x4989))+(((-1.0)*cj1*x4990*x4993))+(((0.250000349687704)*cj1*x4987))+(((0.433012903784321)*cj5*x4988))+(((-1.0)*x4982*x4986))+(((-0.250000349687704)*x4982))+((x4988*x4993))+((x4989*x4995))+((cj1*x4980*x4992))+(((-1.0)*x4983*x4992))+(((-1.0)*x4985*x4994))+(((-1.0)*cj4*x4983*x4984))+(((-1.0)*cj1*x4980*x4984))+(((-1.0)*cj1*x4995))+((cj1*x4986*x4987))+((x4983*x4984)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4997.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4996.value)))+(x4997.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4998=IKsin(j2);
IkReal x4999=IKcos(j2);
IkReal x5000=(cj4*sj5);
IkReal x5001=(cj3*r21);
IkReal x5002=((0.433012903784321)*r20);
IkReal x5003=((0.749999650312296)*cj4);
IkReal x5004=(cj4*cj5);
IkReal x5005=((1.0)*cj3);
IkReal x5006=((0.433012903784321)*r01);
IkReal x5007=(sj4*sj5);
IkReal x5008=((0.749999650312296)*sj3);
IkReal x5009=(r10*sj5);
IkReal x5010=((0.500000349687582)*sj3);
IkReal x5011=(cj0*sj1);
IkReal x5012=((0.500000349687582)*cj3);
IkReal x5013=((0.0160344678271334)*r22);
IkReal x5014=(r20*sj3);
IkReal x5015=(r00*sj5);
IkReal x5016=(cj3*r11);
IkReal x5017=((0.0160344678271334)*r12);
IkReal x5018=((0.433012903784321)*r11);
IkReal x5019=(cj5*r11);
IkReal x5020=(r10*sj3);
IkReal x5021=(r00*sj3);
IkReal x5022=((0.433012903784321)*sj3);
IkReal x5023=(cj5*sj4);
IkReal x5024=(r20*sj5);
IkReal x5025=((0.433012903784321)*r21);
IkReal x5026=(sj0*sj1);
IkReal x5027=(cj3*r01);
IkReal x5028=(cj5*r21);
IkReal x5029=((0.0160344678271334)*r02);
IkReal x5030=(cj5*r01);
IkReal x5031=((0.250000349687704)*sj3);
IkReal x5032=(cj1*x4998);
IkReal x5033=((0.500000349687582)*x5023);
IkReal x5034=((0.27144)*x4999);
IkReal x5035=(cj4*x5022);
IkReal x5036=(sj1*x4998);
IkReal x5037=((0.866025201892125)*cj3*sj4);
IkReal x5038=(cj1*x4999);
IkReal x5039=((1.0)*x4999);
evalcond[0]=(((cj5*x5025))+(((-0.250000349687704)*r22))+(((0.866025201892125)*r21*x5007))+(((-1.0)*x5004*x5025))+x5038+x5036+(((-1.0)*x5000*x5002))+(((-0.866025201892125)*r20*x5023))+((sj5*x5002))+(((-1.0)*r22*x5003)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj5*x5006))+(((0.866025201892125)*r01*x5007))+(((-1.0)*x5004*x5006))+(((-0.433012903784321)*r00*x5000))+(((0.433012903784321)*x5015))+(((-0.866025201892125)*r00*x5023))+((cj0*x5032))+(((-1.0)*r02*x5003))+(((-1.0)*x5011*x5039)));
evalcond[2]=((((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x5000))+(((-1.0)*x5004*x5018))+(((-1.0)*r12*x5003))+((sj0*x5032))+(((-0.866025201892125)*r10*x5023))+(((-1.0)*x5026*x5039))+(((0.866025201892125)*r11*x5007))+(((0.433012903784321)*x5009))+((cj5*x5018)));
evalcond[3]=((((0.00925751294893567)*r21*x5004))+(((0.00925751294893567)*r20*x5000))+(((0.41)*cj1))+(((-1.0)*pz))+(((-1.0)*cj1*x5034))+(((0.0185150129489311)*r20*x5023))+(((-0.0185150129489311)*r21*x5007))+(((-0.27144)*x5036))+(((0.0648043305514941)*x5024))+(((0.0648043305514941)*x5028))+((cj4*x5013))+(((-1.0)*x5013)));
evalcond[4]=((((0.0648043305514941)*x5030))+((cj4*x5029))+(((-0.0185150129489311)*r01*x5007))+(((0.00925751294893567)*r01*x5004))+(((-1.0)*px))+(((0.00925751294893567)*r00*x5000))+(((-0.27144)*cj0*x5032))+(((0.0648043305514941)*x5015))+(((-1.0)*x5029))+(((-0.41)*x5011))+(((0.0098)*sj0))+(((0.0185150129489311)*r00*x5023))+((x5011*x5034)));
evalcond[5]=((((0.0648043305514941)*x5009))+(((-0.41)*x5026))+(((-0.0185150129489311)*r11*x5007))+(((0.00925751294893567)*r10*x5000))+(((0.00925751294893567)*r11*x5004))+(((-0.27144)*sj0*x5032))+((x5026*x5034))+(((-1.0)*py))+(((0.0185150129489311)*r10*x5023))+(((0.0648043305514941)*x5019))+(((-0.0098)*cj0))+((cj4*x5017))+(((-1.0)*x5017)));
evalcond[6]=(((x5001*x5033))+(((-1.0)*r20*x5004*x5005))+((r21*x5004*x5031))+((r20*x5007*x5012))+(((-1.0)*x5032))+(((-1.0)*r21*x5007*x5010))+((sj1*x4999))+(((0.250000349687704)*x5000*x5014))+((x5008*x5024))+((x5008*x5028))+(((-1.0)*r22*x5022))+((r22*x5037))+((r22*x5035))+((x5000*x5001))+((r20*x5010*x5023)));
evalcond[7]=((((-1.0)*r02*x5022))+((r01*x5012*x5023))+(((0.250000349687704)*x5000*x5021))+((r02*x5037))+((r02*x5035))+((x5008*x5030))+((r01*x5004*x5031))+((x4998*x5011))+((x5008*x5015))+(((-1.0)*r01*x5007*x5010))+((r00*x5007*x5012))+((cj0*x5038))+(((-1.0)*r00*x5004*x5005))+((x5000*x5027))+((r00*x5010*x5023)));
evalcond[8]=(((r12*x5037))+((r12*x5035))+((sj4*x5012*x5019))+((r10*x5007*x5012))+(((0.250000349687704)*x5000*x5020))+((x5000*x5016))+(((-1.0)*r12*x5022))+(((-1.0)*r11*x5007*x5010))+((x5008*x5009))+((sj0*x5038))+((x5008*x5019))+((r10*x5010*x5023))+((r11*x5004*x5031))+((x4998*x5026))+(((-1.0)*r10*x5004*x5005)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}
// [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1)] (original are [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)])
static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    // HACK should be 1e-5*norm
    IkReal tol = 1e-2*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        // HACK should be tol*100
        if( IKabs(wi[i]) < 5e-5 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - j2n6s300 (736cf186faf46605b63e413c3f9c12e9)>"; }

IKFAST_API const char* GetIkFastVersion() { return "0x10000049"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
