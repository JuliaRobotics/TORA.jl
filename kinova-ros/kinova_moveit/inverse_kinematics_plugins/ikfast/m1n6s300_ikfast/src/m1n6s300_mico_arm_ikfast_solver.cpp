/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x10000049 generated on 2016-12-20 12:00:56.620089
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x10000049);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70;
x0=IKcos(j[5]);
x1=IKcos(j[4]);
x2=IKsin(j[0]);
x3=IKsin(j[3]);
x4=(x2*x3);
x5=IKcos(j[3]);
x6=IKsin(j[1]);
x7=IKsin(j[2]);
x8=IKcos(j[0]);
x9=(x6*x7*x8);
x10=IKcos(j[1]);
x11=IKcos(j[2]);
x12=(x10*x11*x8);
x13=(x5*(((((-1.0)*(1.0)*x9))+(((-1.0)*(1.0)*x12)))));
x14=IKsin(j[4]);
x15=(x2*x5);
x16=(x11*x6);
x17=((0.866025201892125)*x16);
x18=(x10*x7);
x19=((0.866025201892125)*x18);
x20=(x3*(((((0.500000349687582)*x12))+(((0.500000349687582)*x9)))));
x21=(((x1*(((((-1.0)*(1.0)*x13))+(((-1.0)*(1.0)*x4))))))+((x14*((((x19*x8))+(((-1.0)*(0.500000349687582)*x15))+(((-1.0)*(1.0)*x20))+(((-1.0)*(1.0)*x17*x8)))))));
x22=IKsin(j[5]);
x23=((0.749999650312296)*x15);
x24=((0.433012903784321)*x16);
x25=(x24*x8);
x26=((0.433012903784321)*x18);
x27=(x26*x8);
x28=(x6*x7);
x29=((0.749999650312296)*x28);
x30=(x10*x11);
x31=((0.749999650312296)*x30);
x32=(x3*x8*(((((-1.0)*(1.0)*x29))+(((-1.0)*(1.0)*x31)))));
x33=(x14*(((((0.500000349687582)*x4))+(((0.500000349687582)*x13)))));
x34=(x27+(((-1.0)*(1.0)*x25)));
x35=(x34+(((-1.0)*(0.500000349687582)*x20))+(((-1.0)*(0.250000349687704)*x15)));
x36=((1.0)*x1);
x37=((0.433012903784321)*x15);
x38=(x11*x6*x8);
x39=(x10*x7*x8);
x40=((0.433012903784321)*x28);
x41=((0.433012903784321)*x30);
x42=((0.749999650312296)*x16);
x43=((0.749999650312296)*x18);
x44=((0.29)*x6);
x45=(x3*x8);
x46=(x2*x6*x7);
x47=(x10*x11*x2);
x48=(x5*(((((-1.0)*(1.0)*x47))+(((-1.0)*(1.0)*x46)))));
x49=(x5*x8);
x50=(x3*(((((0.500000349687582)*x47))+(((0.500000349687582)*x46)))));
IkReal x71=((1.0)*x2);
x51=(((x14*(((((1.0)*x50))+((x17*x71))+(((-1.0)*(0.500000349687582)*x49))+(((-1.0)*x19*x71))))))+((x36*(((((1.0)*x48))+(((-1.0)*(1.0)*x45)))))));
x52=(x2*x24);
x53=(x2*x26);
x54=((((-1.0)*(1.0)*x52))+x53);
x55=((0.749999650312296)*x49);
x56=(x2*x3*(((((-1.0)*(1.0)*x29))+(((-1.0)*(1.0)*x31)))));
x57=(x14*(((((0.500000349687582)*x48))+(((-1.0)*(0.500000349687582)*x45)))));
x58=((((-1.0)*(0.500000349687582)*x50))+x54+(((0.250000349687704)*x49)));
x59=((0.433012903784321)*x49);
x60=(x11*x2*x6);
x61=(x10*x2*x7);
x62=((0.500000349687582)*x16);
x63=((0.500000349687582)*x18);
x64=(x3*((x62+(((-1.0)*(1.0)*x63)))));
x65=(((x14*(((((0.866025201892125)*x28))+(((0.866025201892125)*x30))+(((-1.0)*(1.0)*x64))))))+((x1*x5*((x16+(((-1.0)*(1.0)*x18)))))));
x66=(x3*(((((-1.0)*(1.0)*x42))+x43)));
x67=(x14*x5);
x68=(x67*((x63+(((-1.0)*(1.0)*x62)))));
x69=(x40+x41);
x70=(x69+(((-1.0)*(0.500000349687582)*x64)));
eerot[0]=(((x22*(((((-1.0)*(1.0)*x23))+x33+x32+((x1*x35))+x25+(((-1.0)*(1.0)*x27))))))+((x0*x21)));
eerot[1]=(((x0*((x34+x23+(((-1.0)*(1.0)*x35*x36))+(((-1.0)*(1.0)*x32))+(((-1.0)*(1.0)*x33))))))+((x21*x22)));
eerot[2]=(x37+(((-1.0)*(0.250000349687704)*x38))+((x3*((((x41*x8))+((x40*x8))))))+((x1*(((((-1.0)*(1.0)*x42*x8))+((x43*x8))+(((-1.0)*(0.866025201892125)*x20))+(((-1.0)*(1.0)*x37))))))+(((0.250000349687704)*x39))+((x14*(((((0.866025201892125)*x13))+(((0.866025201892125)*x4)))))));
eetrans[0]=(((x1*(((((-1.0)*(0.17559403230274)*x20))+(((0.152068857276033)*x39))+(((-1.0)*(0.0877970775544225)*x15))+(((-1.0)*(0.152068857276033)*x38))))))+((x44*x8))+(((-1.0)*(0.343510078378994)*x38))+(((0.161858921054852)*x15))+((x3*(((((0.161858921054852)*x9))+(((0.161858921054852)*x12))))))+((x14*(((((0.17559403230274)*x13))+(((0.17559403230274)*x4))))))+(((-1.0)*(0.0098)*x2))+(((0.343510078378994)*x39)));
eerot[3]=(((x22*(((((-1.0)*(1.0)*x55))+(((-1.0)*(1.0)*x36*x58))+(((-1.0)*(1.0)*x56))+x54+(((-1.0)*(1.0)*x57))))))+((x0*x51)));
eerot[4]=(((x0*(((((-1.0)*(1.0)*x53))+((x1*x58))+x55+x57+x56+x52))))+((x22*x51)));
IkReal x72=((1.0)*x2);
eerot[5]=(((x14*(((((0.866025201892125)*x45))+(((-1.0)*(0.866025201892125)*x48))))))+(((-1.0)*(0.250000349687704)*x61))+((x1*(((((-1.0)*x43*x72))+(((-1.0)*(1.0)*x59))+((x2*x42))+(((0.866025201892125)*x50))))))+((x3*(((((-1.0)*x41*x72))+(((-1.0)*x40*x72))))))+(((0.250000349687704)*x60))+x59);
eetrans[1]=((((0.161858921054852)*x49))+((x14*(((((0.17559403230274)*x45))+(((-1.0)*(0.17559403230274)*x48))))))+((x3*(((((-1.0)*(0.161858921054852)*x46))+(((-1.0)*(0.161858921054852)*x47))))))+(((-1.0)*(0.343510078378994)*x61))+(((-1.0)*(1.0)*x2*x44))+(((-1.0)*(0.0098)*x8))+(((0.343510078378994)*x60))+((x1*(((((-1.0)*(0.152068857276033)*x61))+(((0.17559403230274)*x50))+(((0.152068857276033)*x60))+(((-1.0)*(0.0877970775544225)*x49)))))));
eerot[6]=(((x0*x65))+((x22*((((x1*x70))+x68+x66+(((-1.0)*(1.0)*x40))+(((-1.0)*(1.0)*x41)))))));
eerot[7]=(((x0*((x69+(((-1.0)*(1.0)*x68))+(((-1.0)*(1.0)*x66))+(((-1.0)*(1.0)*x36*x70))))))+((x22*x65)));
eerot[8]=((((0.250000349687704)*x30))+((x1*((x31+(((-1.0)*(0.866025201892125)*x64))+x29))))+((x3*((x24+(((-1.0)*(1.0)*x26))))))+((x67*((x19+(((-1.0)*(1.0)*x17))))))+(((0.250000349687704)*x28)));
eetrans[2]=((0.2755)+((x1*(((((0.152068857276033)*x30))+(((-1.0)*(0.17559403230274)*x64))+(((0.152068857276033)*x28))))))+((x3*(((((0.161858921054852)*x16))+(((-1.0)*(0.161858921054852)*x18))))))+(((-1.0)*(0.29)*x10))+(((0.343510078378994)*x30))+(((0.343510078378994)*x28))+((x67*(((((-1.0)*(0.17559403230274)*x16))+(((0.17559403230274)*x18)))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j2,cj2,sj2,htj2,j2mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=((-1.0)*(((1.0)*r01)));
new_r02=r02;
new_px=((((-1.0)*(1.0)*px))+(((0.224138935655027)*r02)));
new_r10=((-1.0)*(((1.0)*r10)));
new_r11=r11;
new_r12=((-1.0)*(((1.0)*r12)));
new_py=(py+(((-1.0)*(0.224138935655027)*r12)));
new_r20=r20;
new_r21=((-1.0)*(((1.0)*r21)));
new_r22=r22;
new_pz=((0.2755)+(((-1.0)*(1.0)*pz))+(((0.224138935655027)*r22)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x73=((1.0)*py);
IkReal x74=((1.0)*pz);
IkReal x75=((1.0)*px);
pp=((pz*pz)+(py*py)+(px*px));
npx=(((pz*r20))+((py*r10))+((px*r00)));
npy=(((pz*r21))+((py*r11))+((px*r01)));
npz=(((px*r02))+((pz*r22))+((py*r12)));
rxp0_0=((((-1.0)*r20*x73))+((pz*r10)));
rxp0_1=((((-1.0)*r00*x74))+((px*r20)));
rxp0_2=(((py*r00))+(((-1.0)*r10*x75)));
rxp1_0=((((-1.0)*r21*x73))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x74)));
rxp1_2=((((-1.0)*r11*x75))+((py*r01)));
rxp2_0=((((-1.0)*r22*x73))+((pz*r12)));
rxp2_1=((((-1.0)*r02*x74))+((px*r22)));
rxp2_2=((((-1.0)*r12*x75))+((py*r02)));
IkReal op[72], zeror[48];
int numroots;;
IkReal x76=((0.0429558692302493)*npy);
IkReal x77=((-1.0)*(((0.29)*pp)));
IkReal x78=((0.00145905082382218)+(((-1.0)*(0.1574352)*npz))+x77);
IkReal x79=(x76+x78);
IkReal x80=((0.0859117384604985)*npx);
IkReal x81=((((-1.0)*x76))+x78);
IkReal x82=((0.0740618435004298)*r20);
IkReal x83=((-1.0)*x82);
IkReal x84=((0.0098)*r02);
IkReal x85=((-1.0)*(((1.0)*rxp2_2)));
IkReal x86=(x85+(((-1.0)*x84)));
IkReal x87=((-1.0)*(((0.0098)*r12)));
IkReal x88=((0.14812368700086)*r21);
IkReal x89=(x85+x84);
IkReal x90=((0.251208286709094)*npx);
IkReal x91=((-1.0)*x90);
IkReal x92=((0.502416573418188)*npy);
IkReal x93=((0.0169740939570857)*r00);
IkReal x94=((0.128278845939925)*r22);
IkReal x95=(x94+(((-1.0)*x93)));
IkReal x96=((0.0370300258978623)*r21);
IkReal x97=((1.73205040378425)*rxp0_2);
IkReal x98=((((-1.0)*x97))+x96);
IkReal x99=((0.0169740939570857)*r10);
IkReal x100=((-1.0)*x99);
IkReal x101=((0.0339481879141713)*r01);
IkReal x102=((((0.0740600517957246)*r20))+(((3.4641008075685)*rxp1_2)));
IkReal x103=((0.0339481879141713)*r11);
IkReal x104=(x93+x94);
IkReal x105=(x97+(((-1.0)*x96)));
IkReal x106=((0.168560100429215)*npy);
IkReal x107=((-0.0031923054089297)+(((0.0601175072142181)*npz))+x77);
IkReal x108=(x106+x107);
IkReal x109=((0.337120200858429)*npx);
IkReal x110=(x107+(((-1.0)*x106)));
IkReal x111=((0.00848705291417269)*r01);
IkReal x112=((0.499999300624592)*rxp2_2);
IkReal x113=(x112+x111);
IkReal x114=((0.00489999314612101)*r02);
IkReal x115=((0.0555458958510542)*r20);
IkReal x116=((0.866025807568642)*rxp1_2);
IkReal x117=((0.00848705291417269)*r11);
IkReal x118=((0.00489999314612101)*r12);
IkReal x119=(x118+x117);
IkReal x120=((0.0169741058283454)*r00);
IkReal x121=((((1.73205161513728)*rxp0_2))+(((-1.0)*(0.111091791702108)*r21)));
IkReal x122=((0.0169741058283454)*r10);
IkReal x123=((-1.0)*x115);
IkReal x124=((-1.0)*x116);
IkReal x125=((-1.0)*x111);
IkReal x126=((((-1.0)*x117))+x118);
IkReal x127=((-1.0)*x114);
op[0]=x79;
op[1]=x79;
op[2]=x80;
op[3]=x80;
op[4]=x81;
op[5]=x81;
op[6]=(x86+x83);
op[7]=x87;
op[8]=x88;
op[9]=0;
op[10]=(x86+x82);
op[11]=x87;
op[12]=x87;
op[13]=(x83+x89);
op[14]=0;
op[15]=x88;
op[16]=x87;
op[17]=(x89+x82);
op[18]=0;
op[19]=x79;
op[20]=0;
op[21]=x80;
op[22]=0;
op[23]=x81;
op[24]=x91;
op[25]=x91;
op[26]=x92;
op[27]=x92;
op[28]=x90;
op[29]=x90;
op[30]=(x98+x95);
op[31]=x100;
op[32]=(x102+x101);
op[33]=x103;
op[34]=(x105+x104);
op[35]=x99;
op[36]=x100;
op[37]=(x104+x98);
op[38]=x103;
op[39]=(x102+(((-1.0)*x101)));
op[40]=x99;
op[41]=(x105+x95);
op[42]=0;
op[43]=x91;
op[44]=0;
op[45]=x92;
op[46]=0;
op[47]=x90;
op[48]=x108;
op[49]=x108;
op[50]=x109;
op[51]=x109;
op[52]=x110;
op[53]=x110;
op[54]=(x115+x114+x113+x116);
op[55]=x119;
op[56]=(x120+x121);
op[57]=x122;
op[58]=(x124+x125+x123+x114+x112);
op[59]=x126;
op[60]=x119;
op[61]=(x125+x127+x115+x112+x116);
op[62]=x122;
op[63]=(x121+(((-1.0)*x120)));
op[64]=x126;
op[65]=(x124+x127+x123+x113);
op[66]=0;
op[67]=x108;
op[68]=0;
op[69]=x109;
op[70]=0;
op[71]=x110;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j0array[16], cj0array[16], sj0array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj0 = zeror[ij4+2];
if(isnan(htj4)||isnan(htj5)||isnan(htj0)){
continue;
}
j4array[numsolutions]=((2.0)*(atan(htj4)));
j5array[numsolutions]=((2.0)*(atan(htj5)));
j0array[numsolutions]=((2.0)*(atan(htj0)));
if(isinf(htj4)){
cj4array[numsolutions] = IKcos(j4array[numsolutions]);
sj4array[numsolutions] = IKsin(j4array[numsolutions]);
}
else{
IkReal x128=htj4*htj4;
CheckValue<IkReal> x129=IKPowWithIntegerCheck(((1.0)+x128),-1);
if(!x129.valid){
continue;
}
cj4array[numsolutions]=((x129.value)*(((1.0)+(((-1.0)*x128)))));
CheckValue<IkReal> x130=IKPowWithIntegerCheck(((1.0)+(htj4*htj4)),-1);
if(!x130.valid){
continue;
}
sj4array[numsolutions]=((2.0)*htj4*(x130.value));
}
if(isinf(htj5)){
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
}
else{
IkReal x131=htj5*htj5;
CheckValue<IkReal> x132=IKPowWithIntegerCheck(((1.0)+x131),-1);
if(!x132.valid){
continue;
}
cj5array[numsolutions]=((x132.value)*(((1.0)+(((-1.0)*x131)))));
CheckValue<IkReal> x133=IKPowWithIntegerCheck(((1.0)+(htj5*htj5)),-1);
if(!x133.valid){
continue;
}
sj5array[numsolutions]=((2.0)*htj5*(x133.value));
}
if(isinf(htj0)){
cj0array[numsolutions] = IKcos(j0array[numsolutions]);
sj0array[numsolutions] = IKsin(j0array[numsolutions]);
}
else{
IkReal x134=htj0*htj0;
CheckValue<IkReal> x135=IKPowWithIntegerCheck(((1.0)+x134),-1);
if(!x135.valid){
continue;
}
cj0array[numsolutions]=((x135.value)*(((1.0)+(((-1.0)*x134)))));
CheckValue<IkReal> x136=IKPowWithIntegerCheck(((1.0)+(htj0*htj0)),-1);
if(!x136.valid){
continue;
}
sj0array[numsolutions]=((2.0)*htj0*(x136.value));
}
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj0 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij0[0] = 0; _ij0[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj0array[ij4]-cj0array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij4]-sj0array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij0[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j0 = j0array[ij4]; cj0 = cj0array[ij4]; sj0 = sj0array[ij4];

innerfn(solutions);
    }
}
return solutions.GetNumSolutions()>0;
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
{
IkReal j3eval[4];
IkReal x137=(cj4*r02);
IkReal x138=(cj5*r01);
IkReal x139=((1.73204919243206)*x138);
IkReal x140=(r00*sj5);
IkReal x141=((1.73204919243206)*x140);
IkReal x142=(cj5*r00*sj4);
IkReal x143=(r01*sj4*sj5);
IkReal x144=((0.433012903784321)*x138);
IkReal x145=((0.433012903784321)*x140);
IkReal x146=(cj0*sj4);
IkReal x147=((1.99999860125065)*cj0*cj4);
j3eval[0]=((((2.99999440500457)*x137))+(((-1.0)*x139))+(((-1.0)*x141))+r02+((cj4*x141))+(((-3.46409596216145)*x143))+((cj4*x139))+(((3.46409596216145)*x142)));
j3eval[1]=IKsign((((cj4*x144))+(((0.250000349687704)*r02))+(((-1.0)*x145))+(((0.749999650312296)*x137))+(((0.866025201892125)*x142))+(((-0.866025201892125)*x143))+((cj4*x145))+(((-1.0)*x144))));
j3eval[2]=1.87500043710948e-9;
j3eval[3]=((((1.73204919243206)*r22*x146))+((r21*sj5*x147))+((r20*sj5*x146))+(((-1.0)*cj5*r20*x147))+((cj5*r21*x146)));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[4];
IkReal x148=(cj4*r12);
IkReal x149=(cj5*r11);
IkReal x150=((1.73204919243206)*x149);
IkReal x151=(r10*sj5);
IkReal x152=((1.73204919243206)*x151);
IkReal x153=(cj5*r10*sj4);
IkReal x154=(r11*sj4*sj5);
IkReal x155=((1.99999860125065)*cj4*sj0);
IkReal x156=((1.0)*sj0*sj4);
IkReal x157=((0.433012903784321)*x149);
IkReal x158=((0.433012903784321)*x151);
j3eval[0]=((((-1.0)*cj4*x150))+x150+x152+(((3.46409596216145)*x154))+(((-1.0)*(1.0)*r12))+(((-2.99999440500457)*x148))+(((-1.0)*cj4*x152))+(((-3.46409596216145)*x153)));
j3eval[1]=1.87500043710948e-9;
j3eval[2]=((((-1.0)*r21*sj5*x155))+(((-1.0)*r20*sj5*x156))+(((-1.73204919243206)*r22*sj0*sj4))+((cj5*r20*x155))+(((-1.0)*cj5*r21*x156)));
j3eval[3]=IKsign((x158+x157+(((-0.749999650312296)*x148))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*cj4*x157))+(((-0.866025201892125)*x153))+(((-1.0)*cj4*x158))+(((0.866025201892125)*x154))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x159=(cj4*r22);
IkReal x160=(cj5*r21);
IkReal x161=((1.73204919243206)*x160);
IkReal x162=(r20*sj5);
IkReal x163=((1.73204919243206)*x162);
IkReal x164=(cj5*r20*sj4);
IkReal x165=(r21*sj4*sj5);
IkReal x166=((0.433012903784321)*x160);
IkReal x167=((0.433012903784321)*x162);
j3eval[0]=((((-1.0)*x161))+(((2.99999440500457)*x159))+((cj4*x161))+(((-1.0)*x163))+r22+(((-3.46409596216145)*x165))+((cj4*x163))+(((3.46409596216145)*x164)));
j3eval[1]=IKsign((((cj4*x167))+(((-0.866025201892125)*x165))+((cj4*x166))+(((0.866025201892125)*x164))+(((0.749999650312296)*x159))+(((-1.0)*x167))+(((-1.0)*x166))+(((0.250000349687704)*r22))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x168=(cj4*r02);
IkReal x169=(cj5*r01);
IkReal x170=((1.73204919243206)*x169);
IkReal x171=(r00*sj5);
IkReal x172=((1.73204919243206)*x171);
IkReal x173=(cj5*r00*sj4);
IkReal x174=(r01*sj4*sj5);
IkReal x175=((0.433012903784321)*x169);
IkReal x176=((0.433012903784321)*x171);
j3eval[0]=((((-1.0)*x170))+((cj4*x172))+r02+(((-1.0)*x172))+((cj4*x170))+(((-3.46409596216145)*x174))+(((2.99999440500457)*x168))+(((3.46409596216145)*x173)));
j3eval[1]=IKsign((((cj4*x176))+(((-1.0)*x175))+(((0.250000349687704)*r02))+(((0.866025201892125)*x173))+(((-1.0)*x176))+((cj4*x175))+(((-0.866025201892125)*x174))+(((0.749999650312296)*x168))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x177=(cj4*r22);
IkReal x178=(cj5*r21);
IkReal x179=((1.73204919243206)*x178);
IkReal x180=(r20*sj5);
IkReal x181=((1.73204919243206)*x180);
IkReal x182=(cj5*r20*sj4);
IkReal x183=(r21*sj4*sj5);
IkReal x184=((0.433012903784321)*x178);
IkReal x185=((0.433012903784321)*x180);
j3eval[0]=((((-3.46409596216145)*x182))+(((-1.0)*cj4*x179))+(((-1.0)*cj4*x181))+(((3.46409596216145)*x183))+(((-2.99999440500457)*x177))+(((-1.0)*(1.0)*r22))+x179+x181);
j3eval[1]=IKsign(((((-1.0)*cj4*x184))+(((-0.749999650312296)*x177))+(((-1.0)*cj4*x185))+(((0.866025201892125)*x183))+(((-0.866025201892125)*x182))+(((-1.0)*(0.250000349687704)*r22))+x184+x185));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x186=r10*r10;
IkReal x187=r11*r11;
IkReal x188=r12*r12;
IkReal x189=(cj5*r11*r12);
IkReal x190=(r10*r11*sj4);
IkReal x191=((3.9999972025013)*x190);
IkReal x192=(r10*r12*sj5);
IkReal x193=(cj4*x186);
IkReal x194=((2.0)*x193);
IkReal x195=(cj4*x188);
IkReal x196=(cj4*cj5*r11*r12);
IkReal x197=(cj4*r10*r12*sj5);
IkReal x198=(cj5*r10*r11*sj5);
IkReal x199=(cj5*r10*r12*sj4);
IkReal x200=(r11*r12*sj4*sj5);
IkReal x201=(cj4*cj5*r10*r11*sj5);
IkReal x202=(cj4*cj5*r10*r12*sj4);
IkReal x203=(cj4*r11*r12*sj4*sj5);
IkReal x204=cj4*cj4;
IkReal x205=(x186*x204);
IkReal x206=(x187*x204);
IkReal x207=(x188*x204);
IkReal x208=cj5*cj5;
IkReal x209=(x186*x208);
IkReal x210=(x187*x208);
IkReal x211=(cj5*r11*r12*x204);
IkReal x212=(r10*r12*sj5*x204);
IkReal x213=(cj5*sj4*sj5*x186);
IkReal x214=(cj5*sj4*sj5*x187);
IkReal x215=((3.9999972025013)*x214);
IkReal x216=(r10*r11*sj4*x208);
IkReal x217=((7.99999440500261)*x216);
IkReal x218=(cj4*x187*x208);
IkReal x219=(cj4*cj5*sj4*sj5*x186);
IkReal x220=(cj5*r10*r11*sj5*x204);
IkReal x221=(x186*x204*x208);
IkReal x222=(x187*x204*x208);
IkReal x223=((0.750000174843424)*x190);
IkReal x224=((0.375000349687459)*x193);
IkReal x225=((0.750000174843424)*x214);
IkReal x226=((1.50000034968685)*x216);
j3eval[0]=((((-2.99999440500457)*x209))+(((2.309396769726)*x197))+(((6.9281919243229)*x203))+(((-6.9281919243229)*x202))+(((-4.99999440500457)*x222))+(((-1.0)*x215))+((cj4*x215))+(((1.15470161513813)*x192))+(((-2.99999440500457)*x207))+(((-9.99998881000913)*x220))+(((3.99999440500457)*x206))+(((-1.0)*x205))+(((-3.9999972025013)*x219))+((cj4*x191))+(((2.309396769726)*x196))+(((-1.0)*x191))+(((5.99998881000913)*x198))+(((2.0)*x218))+(((1.33333395500065)*x187))+(((-2.0)*x195))+(((4.99999440500457)*x221))+(((1.15470161513813)*x189))+(((2.30940161513813)*x200))+(((-3.46409838486413)*x212))+(((3.9999972025013)*x213))+(((-1.0)*x194*x208))+(((2.99999440500457)*x210))+(((4.0)*x201))+x217+(((-3.46409838486413)*x211))+x194+(((-1.0)*cj4*x217))+(((4.99999440500457)*x188))+(((-2.30940161513813)*x199))+(((4.33332836000522)*x186)));
j3eval[1]=IKsign(((((-0.750000174843424)*x219))+(((0.433013206622791)*x200))+(((1.29903719716146)*x203))+(((0.562499475468567)*x210))+(((0.750000699374918)*x201))+(((-1.29903719716146)*x202))+(((-1.0)*x208*x224))+(((0.433012298107169)*x196))+(((-0.562499475468567)*x209))+(((0.749999650312296)*x206))+((cj4*x223))+(((-1.0)*x223))+(((-0.18750017484373)*x205))+(((0.433012298107169)*x197))+((cj4*x225))+(((-1.0)*x225))+(((0.216506754730737)*x189))+(((0.750000174843424)*x213))+(((-0.937499825156026)*x222))+(((-0.649519052837905)*x211))+(((1.12499895093713)*x198))+(((-0.433013206622791)*x199))+(((-0.375000349687459)*x195))+(((0.250000349687704)*x187))+(((0.216506754730737)*x192))+x226+x224+(((-1.87499965031205)*x220))+(((0.937499825156026)*x188))+(((0.937499825156026)*x221))+(((-0.649519052837905)*x212))+(((0.375000349687459)*x218))+(((-0.562499475468567)*x207))+(((-1.0)*cj4*x226))+(((0.81249982515627)*x186))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x227=(cj5*r10);
IkReal x228=(cj4*x227);
IkReal x229=(cj4*r11*sj5);
IkReal x230=((0.500000349687582)*sj4);
IkReal x231=(cj5*r11);
IkReal x232=(r10*sj5);
IkReal x233=((0.433012903784321)*r12);
IkReal x234=((0.250000349687704)*cj4);
IkReal x235=(r11*sj5);
IkReal x236=r10*r10;
IkReal x237=r11*r11;
IkReal x238=r12*r12;
IkReal x239=((0.216506754730737)*r12);
IkReal x240=((0.750000174843424)*r10*r11*sj4);
IkReal x241=((0.375000349687459)*cj4);
IkReal x242=(x236*x241);
IkReal x243=((0.433012298107169)*cj4*r12);
IkReal x244=(cj5*r10*r11*sj5);
IkReal x245=((0.433013206622791)*r12*sj4);
IkReal x246=((1.29903719716146)*r12*sj4);
IkReal x247=cj4*cj4;
IkReal x248=(x236*x247);
IkReal x249=(x237*x247);
IkReal x250=cj5*cj5;
IkReal x251=((0.562499475468567)*x250);
IkReal x252=((0.649519052837905)*r12*x247);
IkReal x253=((0.750000174843424)*cj5*sj4*sj5);
IkReal x254=(x236*x253);
IkReal x255=(x237*x253);
IkReal x256=((1.50000034968685)*r10*r11*sj4*x250);
IkReal x257=((0.937499825156026)*x250);
CheckValue<IkReal> x258 = IKatan2WithCheck(IkReal(((((-0.866025201892125)*r12*sj4))+(((-1.0)*x229))+(((-1.0)*x230*x231))+(((-1.0)*x230*x232))+x228)),IkReal(((((0.749999650312296)*x232))+(((-1.0)*x233))+(((0.749999650312296)*x231))+((x232*x234))+((cj4*x233))+((x231*x234))+((x227*x230))+(((-1.0)*x230*x235)))),IKFAST_ATAN2_MAGTHRESH);
if(!x258.valid){
continue;
}
CheckValue<IkReal> x259=IKPowWithIntegerCheck(IKsign((((x232*x239))+(((-1.0)*x227*x245))+(((-1.0)*cj4*x254))+(((0.750000699374918)*cj4*x244))+((x232*x243))+(((-1.87499965031205)*x244*x247))+((x229*x246))+(((-1.0)*x255))+((x231*x239))+x242+(((-0.18750017484373)*x248))+(((0.81249982515627)*x236))+((x235*x245))+((cj4*x255))+(((0.937499825156026)*x238))+(((-1.0)*x249*x257))+((x237*x251))+(((-1.0)*x228*x246))+((x231*x243))+(((1.12499895093713)*x244))+(((0.749999650312296)*x249))+x256+x254+((x248*x257))+(((-1.0)*x236*x251))+((cj4*x240))+(((-1.0)*x232*x252))+((x237*x241*x250))+(((-1.0)*x240))+(((-0.562499475468567)*x238*x247))+(((-1.0)*x231*x252))+(((-1.0)*x242*x250))+(((0.250000349687704)*x237))+(((-1.0)*x238*x241))+(((-1.0)*cj4*x256)))),-1);
if(!x259.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x258.value)+(((1.5707963267949)*(x259.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x260=IKcos(j3);
IkReal x261=((0.433012903784321)*x260);
IkReal x262=(r22*x261);
IkReal x263=((0.749999650312296)*cj5*x260);
IkReal x264=((0.749999650312296)*sj5*x260);
IkReal x265=IKsin(j3);
IkReal x266=((0.866025201892125)*sj4*x265);
IkReal x267=(cj4*sj5*x265);
IkReal x268=((1.0)*cj4*cj5*x265);
IkReal x269=((0.250000349687704)*cj4*cj5*x260);
IkReal x270=((0.250000349687704)*cj4*sj5*x260);
IkReal x271=((0.500000349687582)*cj5*sj4*x260);
IkReal x272=((0.500000349687582)*cj5*sj4*x265);
IkReal x273=((0.500000349687582)*sj4*sj5*x265);
IkReal x274=((0.500000349687582)*sj4*sj5*x260);
IkReal x275=(r02*x261);
IkReal x276=((0.433012903784321)*r12*x265);
IkReal x277=(r11*x265);
IkReal x278=(r10*x265);
IkReal x279=(cj4*sj5);
IkReal x280=(r11*x260);
IkReal x281=((1.0)*cj4*cj5);
IkReal x282=(r10*x260);
IkReal x283=((0.250000349687704)*cj4*cj5);
IkReal x284=((0.250000349687704)*cj4*sj5);
IkReal x285=((0.500000349687582)*cj5*sj4);
IkReal x286=((0.500000349687582)*sj4*sj5);
IkReal x287=(r12*x261);
evalcond[0]=((((-1.0)*r20*x268))+(((-1.0)*cj4*x262))+x262+(((-1.0)*r20*x264))+((r21*x272))+(((-1.0)*r21*x269))+(((-1.0)*r20*x270))+(((-1.0)*r21*x263))+((r21*x267))+((r22*x266))+(((-1.0)*r20*x271))+((r20*x273))+((r21*x274)));
evalcond[1]=(((r02*x266))+(((-1.0)*r00*x271))+((r00*x273))+(((-1.0)*cj4*x275))+(((-1.0)*r01*x269))+(((-1.0)*r01*x263))+((r01*x274))+x275+((r01*x272))+((r01*x267))+(((-1.0)*r00*x268))+(((-1.0)*r00*x264))+(((-1.0)*r00*x270)));
evalcond[2]=(((x278*x285))+((cj4*x276))+(((-1.0)*x276))+((x279*x280))+((x277*x283))+((r10*x274))+((r11*x271))+(((-1.0)*x277*x286))+((x278*x284))+(((0.866025201892125)*r12*sj4*x260))+(((-1.0)*x281*x282))+(((0.749999650312296)*cj5*x277))+(((0.749999650312296)*sj5*x278)));
evalcond[3]=((1.0)+(((-1.0)*x282*x284))+((x277*x285))+((r11*x274))+(((-1.0)*cj4*x287))+(((-1.0)*r10*x264))+(((-1.0)*r11*x263))+((x277*x279))+(((-1.0)*x280*x283))+((r12*x266))+(((-1.0)*r10*x271))+(((-1.0)*x278*x281))+((x278*x286))+x287);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x288=((0.646708404322884)*cj4);
IkReal x289=((0.62876328674038)*cj5);
IkReal x290=((0.62876328674038)*sj5);
IkReal x291=((0.373377619497519)*cj4*cj5);
IkReal x292=((0.373377619497519)*cj4*sj5);
IkReal x293=((0.746754716733336)*cj5*sj4);
IkReal x294=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r00*x293))+(((-1.0)*r02*x288))+(((-1.0)*r00*x292))+((r01*x294))+((r01*x289))+((r00*x290))+(((-1.0)*r01*x291))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x292))+(((3.44827586206897)*pz))+((r20*x293))+(((-1.0)*r21*x289))+(((0.289291595677116)*r22))+((r22*x288))+((r21*x291))+(((-1.0)*r20*x290))+(((-1.0)*r21*x294)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x293))+(((-1.0)*r02*x288))+(((-1.0)*r00*x292))+((r01*x294))+((r01*x289))+((r00*x290))+(((-1.0)*r01*x291))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))))+IKsqr((((r20*x292))+(((3.44827586206897)*pz))+((r20*x293))+(((-1.0)*r21*x289))+(((0.289291595677116)*r22))+((r22*x288))+((r21*x291))+(((-1.0)*r20*x290))+(((-1.0)*r21*x294))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r00*x293))+(((-1.0)*r02*x288))+(((-1.0)*r00*x292))+((r01*x294))+((r01*x289))+((r00*x290))+(((-1.0)*r01*x291))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))), (((r20*x292))+(((3.44827586206897)*pz))+((r20*x293))+(((-1.0)*r21*x289))+(((0.289291595677116)*r22))+((r22*x288))+((r21*x291))+(((-1.0)*r20*x290))+(((-1.0)*r21*x294))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x295=((0.187545437253636)*cj4);
IkReal x296=(cj5*r21);
IkReal x297=(r20*sj5);
IkReal x298=((0.29)*(IKcos(j1)));
IkReal x299=(cj4*cj5*r21);
IkReal x300=(cj4*r20*sj5);
IkReal x301=(cj5*r20*sj4);
IkReal x302=(r21*sj4*sj5);
IkReal x303=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*px)));
IkReal x304=(cj5*r01);
IkReal x305=(r00*sj5);
IkReal x306=(cj4*cj5*r01);
IkReal x307=(cj4*r00*sj5);
IkReal x308=(cj5*r00*sj4);
IkReal x309=(r01*sj4*sj5);
IkReal x310=((0.0160344678271334)*r02);
IkReal x311=((0.117537022603216)*sj3);
IkReal x312=(r22*x311);
IkReal x313=((0.235073880801598)*cj3*sj4);
IkReal x314=((0.20357990508077)*sj3);
IkReal x315=((0.27144)*cj3*cj4*cj5);
IkReal x316=((0.27144)*cj3*cj4*sj5);
IkReal x317=((0.135720094919197)*cj3*sj4);
IkReal x318=((0.0678600949192303)*sj3);
IkReal x319=((0.135720094919197)*sj3);
IkReal x320=((0.0160344678271334)*r22);
IkReal x321=(r02*x311);
evalcond[0]=((((0.10827950965428)*x299))+(((-0.18234135315471)*x296))+((r22*x295))+(((0.216558867852667)*x301))+(((-0.18234135315471)*x297))+pz+(((0.10827950965428)*x300))+(((-1.0)*x298))+(((0.0838945627463637)*r22))+(((-0.216558867852667)*x302)));
evalcond[1]=(x303+(((0.18234135315471)*x305))+(((-0.216558867852667)*x308))+(((-1.0)*(0.0838945627463637)*r02))+(((-0.10827950965428)*x307))+(((-1.0)*r02*x295))+(((-0.10827950965428)*x306))+(((0.216558867852667)*x309))+(((0.18234135315471)*x304)));
evalcond[2]=((((0.00925751294893567)*x307))+(((-1.0)*x310))+(((-1.0)*x300*x318))+(((-0.0185150129489311)*x309))+x303+(((-1.0)*r21*x316))+((x302*x319))+(((-1.0)*x297*x317))+(((0.0185150129489311)*x308))+((cj4*x310))+(((-1.0)*cj4*x312))+(((0.0648043305514941)*x304))+(((-1.0)*x296*x314))+(((-1.0)*x301*x319))+x312+(((-1.0)*x297*x314))+(((-1.0)*r22*x313))+(((-1.0)*x296*x317))+(((-1.0)*x299*x318))+((r20*x315))+(((0.0648043305514941)*x305))+(((0.00925751294893567)*x306)));
evalcond[3]=((((-1.0)*x309*x319))+(((-1.0)*r00*x315))+((x308*x319))+(((-0.0185150129489311)*x302))+((x304*x314))+x298+((x304*x317))+(((-1.0)*(1.0)*pz))+((r01*x316))+(((0.0185150129489311)*x301))+(((0.0648043305514941)*x296))+((cj4*x321))+((cj4*x320))+((x305*x314))+(((0.00925751294893567)*x300))+((x306*x318))+((r02*x313))+((x307*x318))+(((0.00925751294893567)*x299))+(((-1.0)*x321))+(((0.0648043305514941)*x297))+(((-1.0)*x320))+((x305*x317)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x322=((0.250000349687704)*cj1);
IkReal x323=((0.250000349687704)*sj1);
IkReal x324=((0.749999650312296)*cj1*cj4);
IkReal x325=((0.433012903784321)*cj1*cj5);
IkReal x326=(r01*x325);
IkReal x327=((0.433012903784321)*cj1*sj5);
IkReal x328=(r00*x327);
IkReal x329=((0.749999650312296)*cj4*sj1);
IkReal x330=((0.433012903784321)*cj5*sj1);
IkReal x331=(r21*x330);
IkReal x332=((0.433012903784321)*sj1*sj5);
IkReal x333=(r20*x332);
IkReal x334=((0.866025201892125)*cj1*cj5*sj4);
IkReal x335=((0.866025201892125)*cj1*sj4*sj5);
IkReal x336=((0.866025201892125)*cj5*sj1*sj4);
IkReal x337=((0.866025201892125)*sj1*sj4*sj5);
IkReal x338=(r21*x325);
IkReal x339=(r20*x327);
IkReal x340=(r01*x330);
IkReal x341=(r00*x332);
if( IKabs((((r00*x334))+(((-1.0)*x326))+(((-1.0)*x328))+(((-1.0)*x333))+((r02*x322))+((cj4*x333))+((r02*x324))+((r20*x336))+((cj4*x326))+((cj4*x328))+(((-1.0)*r01*x335))+((r22*x323))+(((-1.0)*r21*x337))+(((-1.0)*x331))+((r22*x329))+((cj4*x331)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x335))+((r22*x324))+((r01*x337))+((r22*x322))+(((-1.0)*cj4*x341))+(((-1.0)*cj4*x340))+(((-1.0)*r02*x323))+(((-1.0)*r02*x329))+(((-1.0)*r00*x336))+((cj4*x338))+(((-1.0)*x338))+x340+x341+(((-1.0)*x339))+((cj4*x339))+((r20*x334)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x334))+(((-1.0)*x326))+(((-1.0)*x328))+(((-1.0)*x333))+((r02*x322))+((cj4*x333))+((r02*x324))+((r20*x336))+((cj4*x326))+((cj4*x328))+(((-1.0)*r01*x335))+((r22*x323))+(((-1.0)*r21*x337))+(((-1.0)*x331))+((r22*x329))+((cj4*x331))))+IKsqr(((((-1.0)*r21*x335))+((r22*x324))+((r01*x337))+((r22*x322))+(((-1.0)*cj4*x341))+(((-1.0)*cj4*x340))+(((-1.0)*r02*x323))+(((-1.0)*r02*x329))+(((-1.0)*r00*x336))+((cj4*x338))+(((-1.0)*x338))+x340+x341+(((-1.0)*x339))+((cj4*x339))+((r20*x334))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r00*x334))+(((-1.0)*x326))+(((-1.0)*x328))+(((-1.0)*x333))+((r02*x322))+((cj4*x333))+((r02*x324))+((r20*x336))+((cj4*x326))+((cj4*x328))+(((-1.0)*r01*x335))+((r22*x323))+(((-1.0)*r21*x337))+(((-1.0)*x331))+((r22*x329))+((cj4*x331))), ((((-1.0)*r21*x335))+((r22*x324))+((r01*x337))+((r22*x322))+(((-1.0)*cj4*x341))+(((-1.0)*cj4*x340))+(((-1.0)*r02*x323))+(((-1.0)*r02*x329))+(((-1.0)*r00*x336))+((cj4*x338))+(((-1.0)*x338))+x340+x341+(((-1.0)*x339))+((cj4*x339))+((r20*x334))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x342=IKcos(j2);
IkReal x343=(cj1*x342);
IkReal x344=IKsin(j2);
IkReal x345=(sj1*x344);
IkReal x346=(x345+x343);
IkReal x347=((0.749999650312296)*cj4);
IkReal x348=(cj5*r21);
IkReal x349=((0.433012903784321)*x348);
IkReal x350=(r20*sj5);
IkReal x351=((0.433012903784321)*x350);
IkReal x352=(cj5*r20*sj4);
IkReal x353=(r21*sj4*sj5);
IkReal x354=(cj1*x344);
IkReal x355=(cj5*r01);
IkReal x356=((0.433012903784321)*x355);
IkReal x357=(r00*sj5);
IkReal x358=((0.433012903784321)*x357);
IkReal x359=(sj1*x342);
IkReal x360=(cj5*r00*sj4);
IkReal x361=(r01*sj4*sj5);
IkReal x362=((0.0160344678271334)*r22);
IkReal x363=((0.00925751294893567)*cj4);
IkReal x364=((0.0160344678271334)*r02);
IkReal x365=((0.433012903784321)*sj3);
IkReal x366=(r02*x365);
IkReal x367=((0.866025201892125)*cj3*sj4);
IkReal x368=((0.749999650312296)*sj3);
IkReal x369=(cj3*cj4*sj5);
IkReal x370=((1.0)*cj3*cj4*cj5);
IkReal x371=((0.500000349687582)*cj3*sj4);
IkReal x372=((0.250000349687704)*cj4*sj3);
IkReal x373=((0.500000349687582)*sj3);
IkReal x374=(r22*x365);
evalcond[0]=((((-1.0)*cj4*x351))+x351+(((-0.866025201892125)*x352))+(((-1.0)*cj4*x349))+(((-1.0)*r22*x347))+x349+x346+(((-1.0)*(0.250000349687704)*r22))+(((0.866025201892125)*x353)));
evalcond[1]=((((-1.0)*cj4*x356))+x358+x356+x354+(((0.866025201892125)*x361))+(((-1.0)*r02*x347))+(((-0.866025201892125)*x360))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x358))+(((-1.0)*x359)));
evalcond[2]=((((0.0648043305514941)*x350))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x343))+((cj4*x362))+(((0.29)*cj1))+(((0.0648043305514941)*x348))+((x350*x363))+(((-0.0185150129489311)*x353))+(((-1.0)*x362))+(((-0.27144)*x345))+((x348*x363))+(((0.0185150129489311)*x352)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((-1.0)*(0.29)*sj1))+((x355*x363))+(((0.0648043305514941)*x357))+(((-0.0185150129489311)*x361))+(((0.27144)*x359))+(((-0.27144)*x354))+((x357*x363))+((cj4*x364))+(((0.0648043305514941)*x355))+(((0.0185150129489311)*x360))+(((-1.0)*x364)));
evalcond[4]=(((r02*x367))+((x360*x373))+((x357*x372))+((r01*x369))+((x357*x368))+((x355*x371))+((cj4*x366))+((x355*x372))+(((-1.0)*x361*x373))+x346+((x355*x368))+(((-1.0)*r00*x370))+(((-1.0)*x366))+((x357*x371)));
evalcond[5]=(((r22*x367))+((x348*x372))+((x350*x372))+(((-1.0)*x374))+((x348*x368))+((x352*x373))+(((-1.0)*r20*x370))+((x348*x371))+((x350*x371))+((r21*x369))+x359+((x350*x368))+(((-1.0)*x354))+(((-1.0)*x353*x373))+((cj4*x374)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x375=((0.433012903784321)*sj5);
IkReal x376=((0.866025201892125)*sj4);
IkReal x377=((0.433012903784321)*cj5);
IkReal x378=((0.433012903784321)*r02);
IkReal x379=(cj5*r01);
IkReal x380=(r00*sj5);
IkReal x381=((0.250000349687704)*cj4);
IkReal x382=((0.500000349687582)*sj4);
IkReal x383=(cj5*r00);
IkReal x384=(r01*sj5);
CheckValue<IkReal> x385 = IKatan2WithCheck(IkReal((((x380*x381))+(((0.749999650312296)*x380))+((x379*x381))+((cj4*x378))+(((0.749999650312296)*x379))+(((-1.0)*x378))+(((-1.0)*x382*x384))+((x382*x383)))),IkReal((((cj4*x384))+((x379*x382))+((r02*x376))+(((-1.0)*cj4*x383))+((x380*x382)))),IKFAST_ATAN2_MAGTHRESH);
if(!x385.valid){
continue;
}
CheckValue<IkReal> x386=IKPowWithIntegerCheck(IKsign((((r21*((((sj5*x376))+(((-1.0)*cj4*x377))+x377))))+((r22*(((-0.250000349687704)+(((-1.0)*(0.749999650312296)*cj4))))))+((r20*(((((-1.0)*cj4*x375))+(((-1.0)*cj5*x376))+x375)))))),-1);
if(!x386.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x385.value)+(((1.5707963267949)*(x386.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x387=IKcos(j3);
IkReal x388=((0.433012903784321)*x387);
IkReal x389=(r22*x388);
IkReal x390=((0.749999650312296)*cj5*x387);
IkReal x391=((0.749999650312296)*sj5*x387);
IkReal x392=IKsin(j3);
IkReal x393=((0.866025201892125)*sj4*x392);
IkReal x394=(cj4*sj5*x392);
IkReal x395=((1.0)*cj4*cj5*x392);
IkReal x396=((0.250000349687704)*cj4*cj5*x387);
IkReal x397=((0.250000349687704)*cj4*sj5*x387);
IkReal x398=((0.500000349687582)*cj5*sj4*x387);
IkReal x399=((0.500000349687582)*cj5*sj4*x392);
IkReal x400=((0.500000349687582)*sj4*sj5*x392);
IkReal x401=((0.500000349687582)*sj4*sj5*x387);
IkReal x402=(r02*x388);
IkReal x403=((0.433012903784321)*r12*x392);
IkReal x404=(r11*x392);
IkReal x405=(r10*x392);
IkReal x406=(cj4*sj5);
IkReal x407=(r11*x387);
IkReal x408=((1.0)*cj4*cj5);
IkReal x409=(r10*x387);
IkReal x410=((0.250000349687704)*cj4*cj5);
IkReal x411=((0.250000349687704)*cj4*sj5);
IkReal x412=((0.500000349687582)*cj5*sj4);
IkReal x413=((0.500000349687582)*sj4*sj5);
IkReal x414=(r12*x388);
evalcond[0]=((((-1.0)*r20*x391))+(((-1.0)*cj4*x389))+(((-1.0)*r20*x395))+(((-1.0)*r20*x398))+x389+((r22*x393))+((r20*x400))+((r21*x401))+(((-1.0)*r21*x390))+(((-1.0)*r21*x396))+(((-1.0)*r20*x397))+((r21*x399))+((r21*x394)));
evalcond[1]=(((r01*x401))+((r00*x400))+(((-1.0)*r00*x391))+(((-1.0)*cj4*x402))+((r01*x399))+x402+((r01*x394))+(((-1.0)*r01*x396))+((r02*x393))+(((-1.0)*r01*x390))+(((-1.0)*r00*x395))+(((-1.0)*r00*x398))+(((-1.0)*r00*x397)));
evalcond[2]=(((r10*x401))+((cj4*x403))+(((-1.0)*x403))+((x404*x410))+((x405*x412))+(((0.749999650312296)*cj5*x404))+(((-1.0)*x404*x413))+((r11*x398))+((x405*x411))+(((0.749999650312296)*sj5*x405))+((x406*x407))+(((0.866025201892125)*r12*sj4*x387))+(((-1.0)*x408*x409)));
evalcond[3]=((1.0)+((r12*x393))+(((-1.0)*r10*x398))+((x404*x412))+((r11*x401))+(((-1.0)*x405*x408))+(((-1.0)*r11*x390))+x414+(((-1.0)*x409*x411))+(((-1.0)*r10*x391))+((x405*x413))+(((-1.0)*cj4*x414))+((x404*x406))+(((-1.0)*x407*x410)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x415=((0.646708404322884)*cj4);
IkReal x416=((0.62876328674038)*cj5);
IkReal x417=((0.62876328674038)*sj5);
IkReal x418=((0.373377619497519)*cj4*cj5);
IkReal x419=((0.373377619497519)*cj4*sj5);
IkReal x420=((0.746754716733336)*cj5*sj4);
IkReal x421=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r01*x418))+(((-1.0)*r00*x420))+((r01*x421))+(((-1.0)*r02*x415))+((r00*x417))+(((-1.0)*r00*x419))+((r01*x416))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x416))+(((3.44827586206897)*pz))+(((-1.0)*r21*x421))+(((-1.0)*r20*x417))+((r20*x420))+((r22*x415))+(((0.289291595677116)*r22))+((r20*x419))+((r21*x418)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x418))+(((-1.0)*r00*x420))+((r01*x421))+(((-1.0)*r02*x415))+((r00*x417))+(((-1.0)*r00*x419))+((r01*x416))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))))+IKsqr(((((-1.0)*r21*x416))+(((3.44827586206897)*pz))+(((-1.0)*r21*x421))+(((-1.0)*r20*x417))+((r20*x420))+((r22*x415))+(((0.289291595677116)*r22))+((r20*x419))+((r21*x418))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r01*x418))+(((-1.0)*r00*x420))+((r01*x421))+(((-1.0)*r02*x415))+((r00*x417))+(((-1.0)*r00*x419))+((r01*x416))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))), ((((-1.0)*r21*x416))+(((3.44827586206897)*pz))+(((-1.0)*r21*x421))+(((-1.0)*r20*x417))+((r20*x420))+((r22*x415))+(((0.289291595677116)*r22))+((r20*x419))+((r21*x418))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x422=((0.187545437253636)*cj4);
IkReal x423=(cj5*r21);
IkReal x424=(r20*sj5);
IkReal x425=((0.29)*(IKcos(j1)));
IkReal x426=(cj4*cj5*r21);
IkReal x427=(cj4*r20*sj5);
IkReal x428=(cj5*r20*sj4);
IkReal x429=(r21*sj4*sj5);
IkReal x430=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*px)));
IkReal x431=(cj5*r01);
IkReal x432=(r00*sj5);
IkReal x433=(cj4*cj5*r01);
IkReal x434=(cj4*r00*sj5);
IkReal x435=(cj5*r00*sj4);
IkReal x436=(r01*sj4*sj5);
IkReal x437=((0.0160344678271334)*r02);
IkReal x438=((0.117537022603216)*sj3);
IkReal x439=(r22*x438);
IkReal x440=((0.235073880801598)*cj3*sj4);
IkReal x441=((0.20357990508077)*sj3);
IkReal x442=((0.27144)*cj3*cj4*cj5);
IkReal x443=((0.27144)*cj3*cj4*sj5);
IkReal x444=((0.135720094919197)*cj3*sj4);
IkReal x445=((0.0678600949192303)*sj3);
IkReal x446=((0.135720094919197)*sj3);
IkReal x447=((0.0160344678271334)*r22);
IkReal x448=(r02*x438);
evalcond[0]=(((r22*x422))+(((-1.0)*x425))+(((0.216558867852667)*x428))+(((-0.216558867852667)*x429))+(((0.10827950965428)*x426))+(((0.10827950965428)*x427))+pz+(((-0.18234135315471)*x423))+(((-0.18234135315471)*x424))+(((0.0838945627463637)*r22)));
evalcond[1]=((((0.18234135315471)*x432))+(((-0.10827950965428)*x434))+(((-1.0)*(0.0838945627463637)*r02))+(((0.216558867852667)*x436))+(((0.18234135315471)*x431))+(((-0.10827950965428)*x433))+x430+(((-1.0)*r02*x422))+(((-0.216558867852667)*x435)));
evalcond[2]=((((0.0185150129489311)*x435))+(((-1.0)*x426*x445))+(((-1.0)*x424*x441))+((r20*x442))+(((0.00925751294893567)*x433))+(((-1.0)*r21*x443))+(((-1.0)*x437))+(((0.00925751294893567)*x434))+(((-1.0)*x423*x441))+((cj4*x437))+(((-1.0)*x424*x444))+(((-0.0185150129489311)*x436))+((x429*x446))+(((-1.0)*x428*x446))+x439+x430+(((-1.0)*r22*x440))+(((0.0648043305514941)*x431))+(((-1.0)*cj4*x439))+(((0.0648043305514941)*x432))+(((-1.0)*x427*x445))+(((-1.0)*x423*x444)));
evalcond[3]=(((x431*x444))+((cj4*x448))+(((-1.0)*x447))+((x432*x444))+(((0.0648043305514941)*x424))+(((-1.0)*(1.0)*pz))+((x432*x441))+(((-1.0)*x436*x446))+x425+((x435*x446))+(((0.0185150129489311)*x428))+(((-1.0)*x448))+(((0.0648043305514941)*x423))+((r01*x443))+((cj4*x447))+((x434*x445))+(((-0.0185150129489311)*x429))+(((-1.0)*r00*x442))+((x431*x441))+((r02*x440))+(((0.00925751294893567)*x427))+((x433*x445))+(((0.00925751294893567)*x426)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x449=((0.250000349687704)*cj1);
IkReal x450=((0.250000349687704)*sj1);
IkReal x451=((0.749999650312296)*cj1*cj4);
IkReal x452=((0.433012903784321)*cj1*cj5);
IkReal x453=(r01*x452);
IkReal x454=((0.433012903784321)*cj1*sj5);
IkReal x455=(r00*x454);
IkReal x456=((0.749999650312296)*cj4*sj1);
IkReal x457=((0.433012903784321)*cj5*sj1);
IkReal x458=(r21*x457);
IkReal x459=((0.433012903784321)*sj1*sj5);
IkReal x460=(r20*x459);
IkReal x461=((0.866025201892125)*cj1*cj5*sj4);
IkReal x462=((0.866025201892125)*cj1*sj4*sj5);
IkReal x463=((0.866025201892125)*cj5*sj1*sj4);
IkReal x464=((0.866025201892125)*sj1*sj4*sj5);
IkReal x465=(r21*x452);
IkReal x466=(r20*x454);
IkReal x467=(r01*x457);
IkReal x468=(r00*x459);
if( IKabs(((((-1.0)*r01*x462))+((cj4*x460))+(((-1.0)*x460))+((cj4*x455))+((r22*x456))+(((-1.0)*x453))+(((-1.0)*x458))+((r00*x461))+((r02*x449))+(((-1.0)*r21*x464))+((r20*x463))+(((-1.0)*x455))+((r02*x451))+((r22*x450))+((cj4*x453))+((cj4*x458)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x466))+((r01*x464))+((r22*x449))+((r22*x451))+(((-1.0)*x466))+(((-1.0)*r02*x456))+((r20*x461))+(((-1.0)*r21*x462))+(((-1.0)*cj4*x467))+(((-1.0)*r02*x450))+((cj4*x465))+(((-1.0)*r00*x463))+(((-1.0)*cj4*x468))+x467+x468+(((-1.0)*x465)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x462))+((cj4*x460))+(((-1.0)*x460))+((cj4*x455))+((r22*x456))+(((-1.0)*x453))+(((-1.0)*x458))+((r00*x461))+((r02*x449))+(((-1.0)*r21*x464))+((r20*x463))+(((-1.0)*x455))+((r02*x451))+((r22*x450))+((cj4*x453))+((cj4*x458))))+IKsqr((((cj4*x466))+((r01*x464))+((r22*x449))+((r22*x451))+(((-1.0)*x466))+(((-1.0)*r02*x456))+((r20*x461))+(((-1.0)*r21*x462))+(((-1.0)*cj4*x467))+(((-1.0)*r02*x450))+((cj4*x465))+(((-1.0)*r00*x463))+(((-1.0)*cj4*x468))+x467+x468+(((-1.0)*x465))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r01*x462))+((cj4*x460))+(((-1.0)*x460))+((cj4*x455))+((r22*x456))+(((-1.0)*x453))+(((-1.0)*x458))+((r00*x461))+((r02*x449))+(((-1.0)*r21*x464))+((r20*x463))+(((-1.0)*x455))+((r02*x451))+((r22*x450))+((cj4*x453))+((cj4*x458))), (((cj4*x466))+((r01*x464))+((r22*x449))+((r22*x451))+(((-1.0)*x466))+(((-1.0)*r02*x456))+((r20*x461))+(((-1.0)*r21*x462))+(((-1.0)*cj4*x467))+(((-1.0)*r02*x450))+((cj4*x465))+(((-1.0)*r00*x463))+(((-1.0)*cj4*x468))+x467+x468+(((-1.0)*x465))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x469=IKcos(j2);
IkReal x470=(cj1*x469);
IkReal x471=IKsin(j2);
IkReal x472=(sj1*x471);
IkReal x473=(x470+x472);
IkReal x474=((0.749999650312296)*cj4);
IkReal x475=(cj5*r21);
IkReal x476=((0.433012903784321)*x475);
IkReal x477=(r20*sj5);
IkReal x478=((0.433012903784321)*x477);
IkReal x479=(cj5*r20*sj4);
IkReal x480=(r21*sj4*sj5);
IkReal x481=(cj1*x471);
IkReal x482=(cj5*r01);
IkReal x483=((0.433012903784321)*x482);
IkReal x484=(r00*sj5);
IkReal x485=((0.433012903784321)*x484);
IkReal x486=(sj1*x469);
IkReal x487=(cj5*r00*sj4);
IkReal x488=(r01*sj4*sj5);
IkReal x489=((0.0160344678271334)*r22);
IkReal x490=((0.00925751294893567)*cj4);
IkReal x491=((0.0160344678271334)*r02);
IkReal x492=((0.433012903784321)*sj3);
IkReal x493=(r02*x492);
IkReal x494=((0.866025201892125)*cj3*sj4);
IkReal x495=((0.749999650312296)*sj3);
IkReal x496=(cj3*cj4*sj5);
IkReal x497=((1.0)*cj3*cj4*cj5);
IkReal x498=((0.500000349687582)*cj3*sj4);
IkReal x499=((0.250000349687704)*cj4*sj3);
IkReal x500=((0.500000349687582)*sj3);
IkReal x501=(r22*x492);
evalcond[0]=(x478+x476+x473+(((-1.0)*r22*x474))+(((-1.0)*cj4*x478))+(((-1.0)*cj4*x476))+(((-1.0)*(0.250000349687704)*r22))+(((-0.866025201892125)*x479))+(((0.866025201892125)*x480)));
evalcond[1]=((((-1.0)*cj4*x483))+(((-1.0)*r02*x474))+(((-1.0)*cj4*x485))+(((0.866025201892125)*x488))+(((-1.0)*x486))+(((-1.0)*(0.250000349687704)*r02))+x481+x485+x483+(((-0.866025201892125)*x487)));
evalcond[2]=(((x477*x490))+(((0.0185150129489311)*x479))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x472))+(((0.0648043305514941)*x475))+(((0.29)*cj1))+((x475*x490))+(((-0.0185150129489311)*x480))+(((0.0648043305514941)*x477))+(((-1.0)*x489))+((cj4*x489))+(((-0.27144)*x470)));
evalcond[3]=((((-1.0)*x491))+((x482*x490))+(((-1.0)*(1.0)*px))+(((0.0648043305514941)*x482))+(((-1.0)*(0.29)*sj1))+((cj4*x491))+(((-0.0185150129489311)*x488))+(((0.0185150129489311)*x487))+((x484*x490))+(((0.0648043305514941)*x484))+(((-0.27144)*x481))+(((0.27144)*x486)));
evalcond[4]=(((cj4*x493))+x473+((x487*x500))+((r02*x494))+((x484*x499))+((x482*x498))+((x482*x499))+((x484*x498))+(((-1.0)*r00*x497))+((x482*x495))+((r01*x496))+(((-1.0)*x488*x500))+((x484*x495))+(((-1.0)*x493)));
evalcond[5]=(((r21*x496))+(((-1.0)*r20*x497))+(((-1.0)*x481))+((x475*x498))+((cj4*x501))+(((-1.0)*x501))+((x475*x495))+((r22*x494))+((x477*x499))+((x479*x500))+((x477*x498))+((x475*x499))+x486+(((-1.0)*x480*x500))+((x477*x495)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x502=((0.433012903784321)*sj5);
IkReal x503=((0.866025201892125)*sj4);
IkReal x504=((0.433012903784321)*cj5);
IkReal x505=((0.433012903784321)*r22);
IkReal x506=(cj5*r21);
IkReal x507=(r20*sj5);
IkReal x508=((0.250000349687704)*cj4);
IkReal x509=((0.500000349687582)*sj4);
IkReal x510=(cj5*r20);
IkReal x511=(r21*sj5);
CheckValue<IkReal> x512 = IKatan2WithCheck(IkReal((((x506*x508))+((x509*x510))+((x507*x508))+(((-1.0)*x509*x511))+(((0.749999650312296)*x507))+((cj4*x505))+(((0.749999650312296)*x506))+(((-1.0)*x505)))),IkReal(((((-1.0)*cj4*x510))+((r22*x503))+((cj4*x511))+((x507*x509))+((x506*x509)))),IKFAST_ATAN2_MAGTHRESH);
if(!x512.valid){
continue;
}
CheckValue<IkReal> x513=IKPowWithIntegerCheck(IKsign((((r01*(((((-1.0)*sj5*x503))+((cj4*x504))+(((-1.0)*x504))))))+((r02*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r00*((((cj4*x502))+(((-1.0)*x502))+((cj5*x503)))))))),-1);
if(!x513.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x512.value)+(((1.5707963267949)*(x513.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x514=IKcos(j3);
IkReal x515=((0.433012903784321)*x514);
IkReal x516=(r22*x515);
IkReal x517=((0.749999650312296)*cj5*x514);
IkReal x518=((0.749999650312296)*sj5*x514);
IkReal x519=IKsin(j3);
IkReal x520=((0.866025201892125)*sj4*x519);
IkReal x521=(cj4*sj5*x519);
IkReal x522=((1.0)*cj4*cj5*x519);
IkReal x523=((0.250000349687704)*cj4*cj5*x514);
IkReal x524=((0.250000349687704)*cj4*sj5*x514);
IkReal x525=((0.500000349687582)*cj5*sj4*x514);
IkReal x526=((0.500000349687582)*cj5*sj4*x519);
IkReal x527=((0.500000349687582)*sj4*sj5*x519);
IkReal x528=((0.500000349687582)*sj4*sj5*x514);
IkReal x529=(r02*x515);
IkReal x530=((0.433012903784321)*r12*x519);
IkReal x531=(r11*x519);
IkReal x532=(r10*x519);
IkReal x533=(cj4*sj5);
IkReal x534=(r11*x514);
IkReal x535=((1.0)*cj4*cj5);
IkReal x536=(r10*x514);
IkReal x537=((0.250000349687704)*cj4*cj5);
IkReal x538=((0.250000349687704)*cj4*sj5);
IkReal x539=((0.500000349687582)*cj5*sj4);
IkReal x540=((0.500000349687582)*sj4*sj5);
IkReal x541=(r12*x515);
evalcond[0]=(((r22*x520))+(((-1.0)*r20*x522))+(((-1.0)*r20*x525))+(((-1.0)*r20*x518))+((r21*x528))+(((-1.0)*cj4*x516))+(((-1.0)*r20*x524))+((r21*x521))+((r20*x527))+x516+((r21*x526))+(((-1.0)*r21*x517))+(((-1.0)*r21*x523)));
evalcond[1]=(((r02*x520))+((r00*x527))+(((-1.0)*r01*x523))+((r01*x528))+(((-1.0)*r00*x524))+(((-1.0)*r00*x518))+(((-1.0)*r00*x525))+(((-1.0)*r01*x517))+((r01*x526))+(((-1.0)*r00*x522))+(((-1.0)*cj4*x529))+((r01*x521))+x529);
evalcond[2]=(((x533*x534))+((x531*x537))+((cj4*x530))+(((-1.0)*x530))+((x532*x538))+(((0.749999650312296)*cj5*x531))+(((0.866025201892125)*r12*sj4*x514))+((r10*x528))+(((0.749999650312296)*sj5*x532))+((r11*x525))+(((-1.0)*x531*x540))+(((-1.0)*x535*x536))+((x532*x539)));
evalcond[3]=((1.0)+((r11*x528))+(((-1.0)*x532*x535))+(((-1.0)*r10*x518))+(((-1.0)*x536*x538))+(((-1.0)*r11*x517))+((x532*x540))+((x531*x539))+(((-1.0)*r10*x525))+((x531*x533))+(((-1.0)*x534*x537))+((r12*x520))+(((-1.0)*cj4*x541))+x541);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x542=((0.646708404322884)*cj4);
IkReal x543=((0.62876328674038)*cj5);
IkReal x544=((0.62876328674038)*sj5);
IkReal x545=((0.373377619497519)*cj4*cj5);
IkReal x546=((0.373377619497519)*cj4*sj5);
IkReal x547=((0.746754716733336)*cj5*sj4);
IkReal x548=((0.746754716733336)*sj4*sj5);
if( IKabs((((r00*x544))+((r01*x548))+(((-1.0)*r00*x546))+(((-1.0)*r01*x545))+(((-1.0)*r02*x542))+((r01*x543))+(((-1.0)*r00*x547))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*x544))+(((3.44827586206897)*pz))+((r21*x545))+((r20*x546))+(((-1.0)*r21*x548))+(((0.289291595677116)*r22))+((r22*x542))+((r20*x547))+(((-1.0)*r21*x543)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x544))+((r01*x548))+(((-1.0)*r00*x546))+(((-1.0)*r01*x545))+(((-1.0)*r02*x542))+((r01*x543))+(((-1.0)*r00*x547))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))))+IKsqr(((((-1.0)*r20*x544))+(((3.44827586206897)*pz))+((r21*x545))+((r20*x546))+(((-1.0)*r21*x548))+(((0.289291595677116)*r22))+((r22*x542))+((r20*x547))+(((-1.0)*r21*x543))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*x544))+((r01*x548))+(((-1.0)*r00*x546))+(((-1.0)*r01*x545))+(((-1.0)*r02*x542))+((r01*x543))+(((-1.0)*r00*x547))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))), ((((-1.0)*r20*x544))+(((3.44827586206897)*pz))+((r21*x545))+((r20*x546))+(((-1.0)*r21*x548))+(((0.289291595677116)*r22))+((r22*x542))+((r20*x547))+(((-1.0)*r21*x543))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x549=((0.187545437253636)*cj4);
IkReal x550=(cj5*r21);
IkReal x551=(r20*sj5);
IkReal x552=((0.29)*(IKcos(j1)));
IkReal x553=(cj4*cj5*r21);
IkReal x554=(cj4*r20*sj5);
IkReal x555=(cj5*r20*sj4);
IkReal x556=(r21*sj4*sj5);
IkReal x557=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*px)));
IkReal x558=(cj5*r01);
IkReal x559=(r00*sj5);
IkReal x560=(cj4*cj5*r01);
IkReal x561=(cj4*r00*sj5);
IkReal x562=(cj5*r00*sj4);
IkReal x563=(r01*sj4*sj5);
IkReal x564=((0.0160344678271334)*r02);
IkReal x565=((0.117537022603216)*sj3);
IkReal x566=(r22*x565);
IkReal x567=((0.235073880801598)*cj3*sj4);
IkReal x568=((0.20357990508077)*sj3);
IkReal x569=((0.27144)*cj3*cj4*cj5);
IkReal x570=((0.27144)*cj3*cj4*sj5);
IkReal x571=((0.135720094919197)*cj3*sj4);
IkReal x572=((0.0678600949192303)*sj3);
IkReal x573=((0.135720094919197)*sj3);
IkReal x574=((0.0160344678271334)*r22);
IkReal x575=(r02*x565);
evalcond[0]=((((-0.216558867852667)*x556))+(((0.216558867852667)*x555))+(((-0.18234135315471)*x550))+(((0.10827950965428)*x554))+pz+((r22*x549))+(((-1.0)*x552))+(((-0.18234135315471)*x551))+(((0.0838945627463637)*r22))+(((0.10827950965428)*x553)));
evalcond[1]=((((-1.0)*(0.0838945627463637)*r02))+(((0.18234135315471)*x558))+(((-0.10827950965428)*x560))+(((-1.0)*r02*x549))+x557+(((-0.216558867852667)*x562))+(((0.18234135315471)*x559))+(((-0.10827950965428)*x561))+(((0.216558867852667)*x563)));
evalcond[2]=((((0.00925751294893567)*x561))+(((-1.0)*x553*x572))+((r20*x569))+(((-1.0)*x555*x573))+(((-1.0)*x551*x568))+((x556*x573))+(((-1.0)*x564))+(((-1.0)*cj4*x566))+(((-1.0)*x550*x568))+(((0.0648043305514941)*x559))+(((-1.0)*r21*x570))+(((0.00925751294893567)*x560))+x557+(((0.0648043305514941)*x558))+(((-1.0)*x550*x571))+(((-1.0)*x551*x571))+(((0.0185150129489311)*x562))+(((-1.0)*x554*x572))+((cj4*x564))+(((-1.0)*r22*x567))+x566+(((-0.0185150129489311)*x563)));
evalcond[3]=(((cj4*x575))+((x558*x568))+((x558*x571))+(((-1.0)*r00*x569))+(((0.0648043305514941)*x550))+(((-1.0)*(1.0)*pz))+((x562*x573))+((x559*x568))+(((0.0648043305514941)*x551))+(((-1.0)*x563*x573))+((r02*x567))+(((0.0185150129489311)*x555))+(((-0.0185150129489311)*x556))+x552+(((0.00925751294893567)*x554))+((x561*x572))+(((-1.0)*x574))+(((-1.0)*x575))+((x559*x571))+((r01*x570))+((x560*x572))+((cj4*x574))+(((0.00925751294893567)*x553)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x576=((0.250000349687704)*cj1);
IkReal x577=((0.250000349687704)*sj1);
IkReal x578=((0.749999650312296)*cj1*cj4);
IkReal x579=((0.433012903784321)*cj1*cj5);
IkReal x580=(r01*x579);
IkReal x581=((0.433012903784321)*cj1*sj5);
IkReal x582=(r00*x581);
IkReal x583=((0.749999650312296)*cj4*sj1);
IkReal x584=((0.433012903784321)*cj5*sj1);
IkReal x585=(r21*x584);
IkReal x586=((0.433012903784321)*sj1*sj5);
IkReal x587=(r20*x586);
IkReal x588=((0.866025201892125)*cj1*cj5*sj4);
IkReal x589=((0.866025201892125)*cj1*sj4*sj5);
IkReal x590=((0.866025201892125)*cj5*sj1*sj4);
IkReal x591=((0.866025201892125)*sj1*sj4*sj5);
IkReal x592=(r21*x579);
IkReal x593=(r20*x581);
IkReal x594=(r01*x584);
IkReal x595=(r00*x586);
if( IKabs(((((-1.0)*x580))+(((-1.0)*x585))+((r22*x577))+(((-1.0)*r21*x591))+((cj4*x582))+(((-1.0)*x587))+((r02*x576))+((r20*x590))+((cj4*x580))+(((-1.0)*r01*x589))+((cj4*x585))+((r00*x588))+((r02*x578))+(((-1.0)*x582))+((cj4*x587))+((r22*x583)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x592))+(((-1.0)*r21*x589))+(((-1.0)*cj4*x594))+(((-1.0)*cj4*x595))+((r20*x588))+(((-1.0)*r02*x577))+(((-1.0)*r02*x583))+(((-1.0)*x593))+(((-1.0)*r00*x590))+((cj4*x592))+((r01*x591))+((r22*x576))+((r22*x578))+x594+x595+((cj4*x593)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x580))+(((-1.0)*x585))+((r22*x577))+(((-1.0)*r21*x591))+((cj4*x582))+(((-1.0)*x587))+((r02*x576))+((r20*x590))+((cj4*x580))+(((-1.0)*r01*x589))+((cj4*x585))+((r00*x588))+((r02*x578))+(((-1.0)*x582))+((cj4*x587))+((r22*x583))))+IKsqr(((((-1.0)*x592))+(((-1.0)*r21*x589))+(((-1.0)*cj4*x594))+(((-1.0)*cj4*x595))+((r20*x588))+(((-1.0)*r02*x577))+(((-1.0)*r02*x583))+(((-1.0)*x593))+(((-1.0)*r00*x590))+((cj4*x592))+((r01*x591))+((r22*x576))+((r22*x578))+x594+x595+((cj4*x593))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x580))+(((-1.0)*x585))+((r22*x577))+(((-1.0)*r21*x591))+((cj4*x582))+(((-1.0)*x587))+((r02*x576))+((r20*x590))+((cj4*x580))+(((-1.0)*r01*x589))+((cj4*x585))+((r00*x588))+((r02*x578))+(((-1.0)*x582))+((cj4*x587))+((r22*x583))), ((((-1.0)*x592))+(((-1.0)*r21*x589))+(((-1.0)*cj4*x594))+(((-1.0)*cj4*x595))+((r20*x588))+(((-1.0)*r02*x577))+(((-1.0)*r02*x583))+(((-1.0)*x593))+(((-1.0)*r00*x590))+((cj4*x592))+((r01*x591))+((r22*x576))+((r22*x578))+x594+x595+((cj4*x593))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x596=IKcos(j2);
IkReal x597=(cj1*x596);
IkReal x598=IKsin(j2);
IkReal x599=(sj1*x598);
IkReal x600=(x599+x597);
IkReal x601=((0.749999650312296)*cj4);
IkReal x602=(cj5*r21);
IkReal x603=((0.433012903784321)*x602);
IkReal x604=(r20*sj5);
IkReal x605=((0.433012903784321)*x604);
IkReal x606=(cj5*r20*sj4);
IkReal x607=(r21*sj4*sj5);
IkReal x608=(cj1*x598);
IkReal x609=(cj5*r01);
IkReal x610=((0.433012903784321)*x609);
IkReal x611=(r00*sj5);
IkReal x612=((0.433012903784321)*x611);
IkReal x613=(sj1*x596);
IkReal x614=(cj5*r00*sj4);
IkReal x615=(r01*sj4*sj5);
IkReal x616=((0.0160344678271334)*r22);
IkReal x617=((0.00925751294893567)*cj4);
IkReal x618=((0.0160344678271334)*r02);
IkReal x619=((0.433012903784321)*sj3);
IkReal x620=(r02*x619);
IkReal x621=((0.866025201892125)*cj3*sj4);
IkReal x622=((0.749999650312296)*sj3);
IkReal x623=(cj3*cj4*sj5);
IkReal x624=((1.0)*cj3*cj4*cj5);
IkReal x625=((0.500000349687582)*cj3*sj4);
IkReal x626=((0.250000349687704)*cj4*sj3);
IkReal x627=((0.500000349687582)*sj3);
IkReal x628=(r22*x619);
evalcond[0]=((((-0.866025201892125)*x606))+(((-1.0)*r22*x601))+(((-1.0)*cj4*x603))+(((-1.0)*cj4*x605))+(((-1.0)*(0.250000349687704)*r22))+(((0.866025201892125)*x607))+x603+x600+x605);
evalcond[1]=(x612+x610+(((-1.0)*cj4*x612))+(((-1.0)*r02*x601))+(((-1.0)*cj4*x610))+(((0.866025201892125)*x615))+(((-0.866025201892125)*x614))+(((-1.0)*x613))+(((-1.0)*(0.250000349687704)*r02))+x608);
evalcond[2]=((((-0.27144)*x597))+(((0.0648043305514941)*x604))+(((-0.0185150129489311)*x607))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x599))+(((0.0648043305514941)*x602))+(((0.29)*cj1))+(((-1.0)*x616))+((cj4*x616))+(((0.0185150129489311)*x606))+((x604*x617))+((x602*x617)));
evalcond[3]=((((0.27144)*x613))+(((-1.0)*(1.0)*px))+(((0.0648043305514941)*x609))+(((-1.0)*(0.29)*sj1))+((x609*x617))+(((-0.27144)*x608))+(((-0.0185150129489311)*x615))+((x611*x617))+(((0.0185150129489311)*x614))+(((-1.0)*x618))+((cj4*x618))+(((0.0648043305514941)*x611)));
evalcond[4]=((((-1.0)*x615*x627))+((r01*x623))+((r02*x621))+((x609*x622))+((cj4*x620))+((x614*x627))+((x609*x625))+((x611*x622))+((x609*x626))+(((-1.0)*r00*x624))+((x611*x626))+(((-1.0)*x620))+((x611*x625))+x600);
evalcond[5]=(x613+(((-1.0)*x607*x627))+((r22*x621))+((x602*x626))+((x602*x622))+((cj4*x628))+((x602*x625))+((r21*x623))+((x606*x627))+(((-1.0)*x608))+(((-1.0)*r20*x624))+((x604*x626))+((x604*x622))+((x604*x625))+(((-1.0)*x628)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x629=(cj4*r02);
IkReal x630=(cj5*r01);
IkReal x631=((1.73204919243206)*x630);
IkReal x632=(r00*sj5);
IkReal x633=((1.73204919243206)*x632);
IkReal x634=(cj5*r00*sj4);
IkReal x635=(r01*sj4*sj5);
IkReal x636=((0.433012903784321)*x630);
IkReal x637=((0.433012903784321)*x632);
j3eval[0]=(((cj4*x633))+(((3.46409596216145)*x634))+(((-1.0)*x631))+((cj4*x631))+(((-3.46409596216145)*x635))+(((2.99999440500457)*x629))+r02+(((-1.0)*x633)));
j3eval[1]=IKsign((((cj4*x636))+(((0.866025201892125)*x634))+(((-1.0)*x637))+(((0.250000349687704)*r02))+(((0.749999650312296)*x629))+(((-1.0)*x636))+((cj4*x637))+(((-0.866025201892125)*x635))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x638=(cj4*r22);
IkReal x639=(cj5*r21);
IkReal x640=((1.73204919243206)*x639);
IkReal x641=(r20*sj5);
IkReal x642=((1.73204919243206)*x641);
IkReal x643=(cj5*r20*sj4);
IkReal x644=(r21*sj4*sj5);
IkReal x645=((0.433012903784321)*x639);
IkReal x646=((0.433012903784321)*x641);
j3eval[0]=((((-1.0)*cj4*x642))+(((-2.99999440500457)*x638))+(((-1.0)*cj4*x640))+(((-1.0)*(1.0)*r22))+(((3.46409596216145)*x644))+x642+x640+(((-3.46409596216145)*x643)));
j3eval[1]=IKsign(((((0.866025201892125)*x644))+(((-0.749999650312296)*x638))+(((-1.0)*cj4*x646))+(((-0.866025201892125)*x643))+(((-1.0)*cj4*x645))+x646+x645+(((-1.0)*(0.250000349687704)*r22))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x647=r10*r10;
IkReal x648=r11*r11;
IkReal x649=r12*r12;
IkReal x650=(cj5*r11*r12);
IkReal x651=(r10*r11*sj4);
IkReal x652=((3.9999972025013)*x651);
IkReal x653=(r10*r12*sj5);
IkReal x654=(cj4*x647);
IkReal x655=((2.0)*x654);
IkReal x656=(cj4*x649);
IkReal x657=(cj4*cj5*r11*r12);
IkReal x658=(cj4*r10*r12*sj5);
IkReal x659=(cj5*r10*r11*sj5);
IkReal x660=(cj5*r10*r12*sj4);
IkReal x661=(r11*r12*sj4*sj5);
IkReal x662=(cj4*cj5*r10*r11*sj5);
IkReal x663=(cj4*cj5*r10*r12*sj4);
IkReal x664=(cj4*r11*r12*sj4*sj5);
IkReal x665=cj4*cj4;
IkReal x666=(x647*x665);
IkReal x667=(x648*x665);
IkReal x668=(x649*x665);
IkReal x669=cj5*cj5;
IkReal x670=(x647*x669);
IkReal x671=(x648*x669);
IkReal x672=(cj5*r11*r12*x665);
IkReal x673=(r10*r12*sj5*x665);
IkReal x674=(cj5*sj4*sj5*x647);
IkReal x675=(cj5*sj4*sj5*x648);
IkReal x676=((3.9999972025013)*x675);
IkReal x677=(r10*r11*sj4*x669);
IkReal x678=((7.99999440500261)*x677);
IkReal x679=(cj4*x648*x669);
IkReal x680=(cj4*cj5*sj4*sj5*x647);
IkReal x681=(cj5*r10*r11*sj5*x665);
IkReal x682=(x647*x665*x669);
IkReal x683=(x648*x665*x669);
IkReal x684=((0.750000174843424)*x651);
IkReal x685=((0.375000349687459)*x654);
IkReal x686=((0.750000174843424)*x675);
IkReal x687=((1.50000034968685)*x677);
j3eval[0]=((((3.9999972025013)*x674))+(((-9.99998881000913)*x681))+((cj4*x652))+(((-3.46409838486413)*x672))+(((4.99999440500457)*x682))+(((2.0)*x679))+(((-2.30940161513813)*x660))+(((-1.0)*x652))+(((4.33332836000522)*x647))+(((6.9281919243229)*x664))+(((1.15470161513813)*x650))+(((1.15470161513813)*x653))+(((-3.9999972025013)*x680))+(((1.33333395500065)*x648))+(((-1.0)*cj4*x678))+(((2.30940161513813)*x661))+(((-2.99999440500457)*x668))+(((-1.0)*x666))+(((-1.0)*x676))+x655+(((3.99999440500457)*x667))+(((-1.0)*x655*x669))+(((2.309396769726)*x658))+((cj4*x676))+(((4.99999440500457)*x649))+(((5.99998881000913)*x659))+(((-2.99999440500457)*x670))+(((-2.0)*x656))+x678+(((2.309396769726)*x657))+(((-6.9281919243229)*x663))+(((2.99999440500457)*x671))+(((-3.46409838486413)*x673))+(((4.0)*x662))+(((-4.99999440500457)*x683)));
j3eval[1]=IKsign(((((1.12499895093713)*x659))+(((-1.29903719716146)*x663))+(((-1.0)*x684))+(((0.433013206622791)*x661))+(((0.749999650312296)*x667))+(((-0.649519052837905)*x672))+(((0.81249982515627)*x647))+(((-0.937499825156026)*x683))+(((0.750000699374918)*x662))+(((0.562499475468567)*x671))+(((-1.0)*x686))+(((-1.87499965031205)*x681))+(((-0.375000349687459)*x656))+(((-0.562499475468567)*x670))+(((0.433012298107169)*x657))+(((1.29903719716146)*x664))+((cj4*x684))+(((-0.750000174843424)*x680))+(((0.216506754730737)*x653))+(((-0.18750017484373)*x666))+(((0.216506754730737)*x650))+(((-0.433013206622791)*x660))+(((0.937499825156026)*x682))+(((0.250000349687704)*x648))+(((-1.0)*x669*x685))+(((-0.649519052837905)*x673))+(((0.937499825156026)*x649))+x685+x687+(((0.433012298107169)*x658))+(((-0.562499475468567)*x668))+((cj4*x686))+(((0.375000349687459)*x679))+(((0.750000174843424)*x674))+(((-1.0)*cj4*x687))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x688=(r11*sj5);
IkReal x689=(cj4*x688);
IkReal x690=(cj4*cj5*r10);
IkReal x691=((0.500000349687582)*sj4);
IkReal x692=(cj5*r11);
IkReal x693=(r10*sj5);
IkReal x694=((0.433012903784321)*r12);
IkReal x695=((0.250000349687704)*cj4);
IkReal x696=(cj5*r10);
IkReal x697=r10*r10;
IkReal x698=r11*r11;
IkReal x699=r12*r12;
IkReal x700=((0.216506754730737)*r12);
IkReal x701=((0.750000174843424)*r10*r11*sj4);
IkReal x702=((0.375000349687459)*cj4);
IkReal x703=(x697*x702);
IkReal x704=((0.433012298107169)*cj4*r12);
IkReal x705=(cj5*r10*r11*sj5);
IkReal x706=((0.433013206622791)*r12*sj4);
IkReal x707=((1.29903719716146)*r12*sj4);
IkReal x708=cj4*cj4;
IkReal x709=(x697*x708);
IkReal x710=(x698*x708);
IkReal x711=cj5*cj5;
IkReal x712=((0.562499475468567)*x711);
IkReal x713=((0.649519052837905)*r12*x708);
IkReal x714=((0.750000174843424)*cj5*sj4*sj5);
IkReal x715=(x697*x714);
IkReal x716=(x698*x714);
IkReal x717=((1.50000034968685)*r10*r11*sj4*x711);
IkReal x718=((0.937499825156026)*x711);
CheckValue<IkReal> x719=IKPowWithIntegerCheck(IKsign(((((-1.87499965031205)*x705*x708))+(((0.937499825156026)*x699))+(((1.12499895093713)*x705))+(((-0.562499475468567)*x699*x708))+((cj4*x701))+((x689*x707))+((x693*x700))+((cj4*x716))+(((-1.0)*x697*x712))+(((-1.0)*cj4*x717))+((x698*x702*x711))+((x692*x700))+(((-0.18750017484373)*x709))+(((-1.0)*cj4*x715))+(((0.749999650312296)*x710))+x703+(((0.750000699374918)*cj4*x705))+x717+x715+(((-1.0)*x710*x718))+(((-1.0)*x699*x702))+(((-1.0)*x703*x711))+(((0.250000349687704)*x698))+((x692*x704))+((x709*x718))+(((0.81249982515627)*x697))+(((-1.0)*x716))+(((-1.0)*x693*x713))+(((-1.0)*x690*x707))+(((-1.0)*x701))+(((-1.0)*x696*x706))+((x688*x706))+(((-1.0)*x692*x713))+((x693*x704))+((x698*x712)))),-1);
if(!x719.valid){
continue;
}
CheckValue<IkReal> x720 = IKatan2WithCheck(IkReal(((((0.866025201892125)*r12*sj4))+(((-1.0)*x690))+((x691*x692))+((x691*x693))+x689)),IkReal((((x688*x691))+(((-0.749999650312296)*x693))+(((-0.749999650312296)*x692))+(((-1.0)*x692*x695))+(((-1.0)*x693*x695))+x694+(((-1.0)*cj4*x694))+(((-1.0)*x691*x696)))),IKFAST_ATAN2_MAGTHRESH);
if(!x720.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x719.value)))+(x720.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x721=IKcos(j3);
IkReal x722=((0.433012903784321)*x721);
IkReal x723=(r22*x722);
IkReal x724=((0.749999650312296)*cj5*x721);
IkReal x725=((0.749999650312296)*sj5*x721);
IkReal x726=IKsin(j3);
IkReal x727=((0.866025201892125)*sj4*x726);
IkReal x728=(cj4*sj5*x726);
IkReal x729=((1.0)*cj4*cj5*x726);
IkReal x730=((0.250000349687704)*cj4*cj5*x721);
IkReal x731=((0.250000349687704)*cj4*sj5*x721);
IkReal x732=((0.500000349687582)*cj5*sj4*x721);
IkReal x733=((0.500000349687582)*cj5*sj4*x726);
IkReal x734=((0.500000349687582)*sj4*sj5*x726);
IkReal x735=((0.500000349687582)*sj4*sj5*x721);
IkReal x736=(r02*x722);
IkReal x737=((0.433012903784321)*r12*x726);
IkReal x738=(r11*x726);
IkReal x739=(r10*x726);
IkReal x740=(cj4*sj5);
IkReal x741=(r11*x721);
IkReal x742=((1.0)*cj4*cj5);
IkReal x743=(r10*x721);
IkReal x744=((0.250000349687704)*cj4*cj5);
IkReal x745=((0.250000349687704)*cj4*sj5);
IkReal x746=((0.500000349687582)*cj5*sj4);
IkReal x747=((0.500000349687582)*sj4*sj5);
IkReal x748=(r12*x722);
evalcond[0]=((((-1.0)*r20*x732))+((r20*x734))+(((-1.0)*cj4*x723))+(((-1.0)*r20*x731))+((r22*x727))+(((-1.0)*r21*x724))+(((-1.0)*r20*x725))+((r21*x733))+((r21*x728))+(((-1.0)*r21*x730))+(((-1.0)*r20*x729))+((r21*x735))+x723);
evalcond[1]=(((r01*x735))+(((-1.0)*r00*x732))+((r02*x727))+(((-1.0)*r00*x731))+(((-1.0)*r01*x730))+(((-1.0)*r01*x724))+(((-1.0)*r00*x729))+((r01*x728))+((r01*x733))+((r00*x734))+x736+(((-1.0)*r00*x725))+(((-1.0)*cj4*x736)));
evalcond[2]=(((x739*x746))+(((-1.0)*x737))+((x739*x745))+(((0.749999650312296)*sj5*x739))+((x738*x744))+(((-1.0)*x738*x747))+(((-1.0)*x742*x743))+((cj4*x737))+(((0.866025201892125)*r12*sj4*x721))+((x740*x741))+((r10*x735))+((r11*x732))+(((0.749999650312296)*cj5*x738)));
evalcond[3]=((-1.0)+(((-1.0)*x739*x742))+((x738*x740))+(((-1.0)*r10*x725))+((x739*x747))+((r11*x735))+(((-1.0)*r11*x724))+(((-1.0)*x743*x745))+(((-1.0)*cj4*x748))+((r12*x727))+(((-1.0)*x741*x744))+(((-1.0)*r10*x732))+x748+((x738*x746)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x749=((0.646708404322884)*cj4);
IkReal x750=((0.62876328674038)*cj5);
IkReal x751=((0.62876328674038)*sj5);
IkReal x752=((0.373377619497519)*cj4*cj5);
IkReal x753=((0.373377619497519)*cj4*sj5);
IkReal x754=((0.746754716733336)*cj5*sj4);
IkReal x755=((0.746754716733336)*sj4*sj5);
if( IKabs(((((0.289291595677116)*r02))+(((3.44827586206897)*px))+((r01*x752))+((r00*x753))+((r02*x749))+(((-1.0)*r01*x755))+(((-1.0)*r01*x750))+(((-1.0)*r00*x751))+((r00*x754)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x750))+(((3.44827586206897)*pz))+((r22*x749))+(((-1.0)*r20*x751))+((r20*x754))+((r21*x752))+(((-1.0)*r21*x755))+(((0.289291595677116)*r22))+((r20*x753)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((0.289291595677116)*r02))+(((3.44827586206897)*px))+((r01*x752))+((r00*x753))+((r02*x749))+(((-1.0)*r01*x755))+(((-1.0)*r01*x750))+(((-1.0)*r00*x751))+((r00*x754))))+IKsqr(((((-1.0)*r21*x750))+(((3.44827586206897)*pz))+((r22*x749))+(((-1.0)*r20*x751))+((r20*x754))+((r21*x752))+(((-1.0)*r21*x755))+(((0.289291595677116)*r22))+((r20*x753))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((0.289291595677116)*r02))+(((3.44827586206897)*px))+((r01*x752))+((r00*x753))+((r02*x749))+(((-1.0)*r01*x755))+(((-1.0)*r01*x750))+(((-1.0)*r00*x751))+((r00*x754))), ((((-1.0)*r21*x750))+(((3.44827586206897)*pz))+((r22*x749))+(((-1.0)*r20*x751))+((r20*x754))+((r21*x752))+(((-1.0)*r21*x755))+(((0.289291595677116)*r22))+((r20*x753))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x756=((0.187545437253636)*cj4);
IkReal x757=(cj5*r01);
IkReal x758=(r00*sj5);
IkReal x759=((0.29)*(IKsin(j1)));
IkReal x760=(cj4*cj5*r01);
IkReal x761=(cj4*r00*sj5);
IkReal x762=(cj5*r00*sj4);
IkReal x763=(r01*sj4*sj5);
IkReal x764=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x765=(cj5*r21);
IkReal x766=(r20*sj5);
IkReal x767=(cj4*cj5*r21);
IkReal x768=(cj4*r20*sj5);
IkReal x769=(cj5*r20*sj4);
IkReal x770=(r21*sj4*sj5);
IkReal x771=((0.0160344678271334)*r22);
IkReal x772=((0.117537022603216)*sj3);
IkReal x773=(r02*x772);
IkReal x774=((0.235073880801598)*cj3*sj4);
IkReal x775=((0.20357990508077)*sj3);
IkReal x776=((0.27144)*cj3*cj4*cj5);
IkReal x777=((0.27144)*cj3*cj4*sj5);
IkReal x778=((0.135720094919197)*cj3*sj4);
IkReal x779=((0.0678600949192303)*sj3);
IkReal x780=((0.135720094919197)*sj3);
IkReal x781=((0.0160344678271334)*r02);
IkReal x782=(r22*x772);
evalcond[0]=((((-0.18234135315471)*x758))+px+(((0.10827950965428)*x760))+(((0.216558867852667)*x762))+(((-0.18234135315471)*x757))+(((0.0838945627463637)*r02))+((r02*x756))+(((0.10827950965428)*x761))+(((-0.216558867852667)*x763))+(((-1.0)*x759)));
evalcond[1]=((((0.10827950965428)*x768))+(((-0.18234135315471)*x766))+(((0.216558867852667)*x769))+(((0.10827950965428)*x767))+x764+((r22*x756))+(((-0.18234135315471)*x765))+(((-0.216558867852667)*x770))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-1.0)*r00*x776))+(((-1.0)*cj4*x771))+((x757*x778))+((x758*x778))+(((-0.00925751294893567)*x767))+((x758*x775))+(((-0.0648043305514941)*x765))+((x757*x775))+(((-1.0)*x773))+x764+((x761*x779))+((r02*x774))+(((-0.0648043305514941)*x766))+(((-1.0)*x763*x780))+x771+((x760*x779))+(((0.0185150129489311)*x770))+((x762*x780))+(((-0.0185150129489311)*x769))+(((-0.00925751294893567)*x768))+((cj4*x773))+((r01*x777)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((0.0648043305514941)*x758))+((x767*x779))+((r21*x777))+((x765*x775))+((x766*x775))+(((0.00925751294893567)*x760))+(((-1.0)*x781))+(((0.0185150129489311)*x762))+((cj4*x782))+(((-1.0)*x770*x780))+((r22*x774))+(((0.0648043305514941)*x757))+(((-0.0185150129489311)*x763))+((x769*x780))+(((0.00925751294893567)*x761))+((x768*x779))+((x766*x778))+(((-1.0)*x782))+x759+((cj4*x781))+((x765*x778))+(((-1.0)*r20*x776)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x783=((0.250000349687704)*cj1);
IkReal x784=((0.250000349687704)*sj1);
IkReal x785=((0.749999650312296)*cj1*cj4);
IkReal x786=((0.433012903784321)*cj1*cj5);
IkReal x787=(r01*x786);
IkReal x788=((0.433012903784321)*cj1*sj5);
IkReal x789=(r00*x788);
IkReal x790=((0.749999650312296)*cj4*sj1);
IkReal x791=((0.433012903784321)*cj5*sj1);
IkReal x792=(r21*x791);
IkReal x793=((0.433012903784321)*sj1*sj5);
IkReal x794=(r20*x793);
IkReal x795=((0.866025201892125)*cj1*cj5*sj4);
IkReal x796=((0.866025201892125)*cj1*sj4*sj5);
IkReal x797=((0.866025201892125)*cj5*sj1*sj4);
IkReal x798=((0.866025201892125)*sj1*sj4*sj5);
IkReal x799=(r21*x786);
IkReal x800=(r20*x788);
IkReal x801=(r01*x791);
IkReal x802=(r00*x793);
if( IKabs((x789+x787+((r22*x790))+(((-1.0)*x794))+(((-1.0)*r02*x783))+((cj4*x792))+(((-1.0)*r00*x795))+(((-1.0)*r21*x798))+((r01*x796))+((r20*x797))+((cj4*x794))+(((-1.0)*x792))+((r22*x784))+(((-1.0)*cj4*x789))+(((-1.0)*r02*x785))+(((-1.0)*cj4*x787)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x797))+((r02*x784))+(((-1.0)*x801))+(((-1.0)*x799))+((cj4*x801))+(((-1.0)*r01*x798))+(((-1.0)*x800))+(((-1.0)*r21*x796))+((r22*x783))+(((-1.0)*x802))+((cj4*x800))+((cj4*x802))+((r02*x790))+((r20*x795))+((cj4*x799))+((r22*x785)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x789+x787+((r22*x790))+(((-1.0)*x794))+(((-1.0)*r02*x783))+((cj4*x792))+(((-1.0)*r00*x795))+(((-1.0)*r21*x798))+((r01*x796))+((r20*x797))+((cj4*x794))+(((-1.0)*x792))+((r22*x784))+(((-1.0)*cj4*x789))+(((-1.0)*r02*x785))+(((-1.0)*cj4*x787))))+IKsqr((((r00*x797))+((r02*x784))+(((-1.0)*x801))+(((-1.0)*x799))+((cj4*x801))+(((-1.0)*r01*x798))+(((-1.0)*x800))+(((-1.0)*r21*x796))+((r22*x783))+(((-1.0)*x802))+((cj4*x800))+((cj4*x802))+((r02*x790))+((r20*x795))+((cj4*x799))+((r22*x785))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((x789+x787+((r22*x790))+(((-1.0)*x794))+(((-1.0)*r02*x783))+((cj4*x792))+(((-1.0)*r00*x795))+(((-1.0)*r21*x798))+((r01*x796))+((r20*x797))+((cj4*x794))+(((-1.0)*x792))+((r22*x784))+(((-1.0)*cj4*x789))+(((-1.0)*r02*x785))+(((-1.0)*cj4*x787))), (((r00*x797))+((r02*x784))+(((-1.0)*x801))+(((-1.0)*x799))+((cj4*x801))+(((-1.0)*r01*x798))+(((-1.0)*x800))+(((-1.0)*r21*x796))+((r22*x783))+(((-1.0)*x802))+((cj4*x800))+((cj4*x802))+((r02*x790))+((r20*x795))+((cj4*x799))+((r22*x785))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x803=IKcos(j2);
IkReal x804=(cj1*x803);
IkReal x805=((0.749999650312296)*cj4);
IkReal x806=(cj5*r21);
IkReal x807=((0.433012903784321)*x806);
IkReal x808=(r20*sj5);
IkReal x809=((0.433012903784321)*x808);
IkReal x810=IKsin(j2);
IkReal x811=(sj1*x810);
IkReal x812=(cj5*r20*sj4);
IkReal x813=(r21*sj4*sj5);
IkReal x814=(sj1*x803);
IkReal x815=(cj1*x810);
IkReal x816=((((-1.0)*x815))+x814);
IkReal x817=(cj5*r01);
IkReal x818=((0.433012903784321)*x817);
IkReal x819=(r00*sj5);
IkReal x820=((0.433012903784321)*x819);
IkReal x821=(cj5*r00*sj4);
IkReal x822=(r01*sj4*sj5);
IkReal x823=((0.0160344678271334)*r22);
IkReal x824=((0.00925751294893567)*cj4);
IkReal x825=((0.0160344678271334)*r02);
IkReal x826=((0.433012903784321)*sj3);
IkReal x827=(r22*x826);
IkReal x828=((0.866025201892125)*cj3*sj4);
IkReal x829=((0.749999650312296)*sj3);
IkReal x830=(cj3*cj4*sj5);
IkReal x831=((1.0)*cj3*cj4*cj5);
IkReal x832=((0.500000349687582)*cj3*sj4);
IkReal x833=((0.250000349687704)*cj4*sj3);
IkReal x834=((0.500000349687582)*sj3);
IkReal x835=(r02*x826);
evalcond[0]=((((0.866025201892125)*x813))+x804+x807+x809+(((-1.0)*r22*x805))+(((-1.0)*cj4*x809))+(((-1.0)*cj4*x807))+x811+(((-1.0)*(0.250000349687704)*r22))+(((-0.866025201892125)*x812)));
evalcond[1]=((((-1.0)*cj4*x818))+(((0.866025201892125)*x822))+(((-0.866025201892125)*x821))+x816+x818+(((-1.0)*(0.250000349687704)*r02))+x820+(((-1.0)*cj4*x820))+(((-1.0)*r02*x805)));
evalcond[2]=(((x808*x824))+(((-0.27144)*x804))+(((-1.0)*(1.0)*pz))+((cj4*x823))+(((0.0185150129489311)*x812))+(((-0.0185150129489311)*x813))+(((0.29)*cj1))+(((-0.27144)*x811))+(((0.0648043305514941)*x808))+(((-1.0)*x823))+((x806*x824))+(((0.0648043305514941)*x806)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((0.0185150129489311)*x821))+(((-1.0)*x825))+((x819*x824))+(((-0.0185150129489311)*x822))+(((0.27144)*x815))+(((-0.27144)*x814))+((x817*x824))+((cj4*x825))+(((0.0648043305514941)*x819))+(((0.0648043305514941)*x817))+(((0.29)*sj1)));
evalcond[4]=((((-1.0)*x813*x834))+((x808*x833))+(((-1.0)*x827))+((x806*x833))+((cj4*x827))+((x812*x834))+(((-1.0)*r20*x831))+((x808*x832))+x816+((x806*x832))+((r21*x830))+((r22*x828))+((x808*x829))+((x806*x829)));
evalcond[5]=(((r02*x828))+((r01*x830))+(((-1.0)*x822*x834))+((x819*x829))+((x817*x833))+((x819*x833))+((x821*x834))+((x819*x832))+((cj4*x835))+(((-1.0)*x835))+(((-1.0)*x811))+(((-1.0)*x804))+(((-1.0)*r00*x831))+((x817*x832))+((x817*x829)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x836=((0.433012903784321)*sj5);
IkReal x837=((0.866025201892125)*sj4);
IkReal x838=((0.433012903784321)*cj5);
IkReal x839=((0.433012903784321)*r02);
IkReal x840=(cj5*r01);
IkReal x841=(r00*sj5);
IkReal x842=((0.250000349687704)*cj4);
IkReal x843=((0.500000349687582)*sj4);
IkReal x844=(cj5*r00);
IkReal x845=(r01*sj5);
CheckValue<IkReal> x846 = IKatan2WithCheck(IkReal((x839+(((-0.749999650312296)*x840))+((x843*x845))+(((-0.749999650312296)*x841))+(((-1.0)*x841*x842))+(((-1.0)*x840*x842))+(((-1.0)*x843*x844))+(((-1.0)*cj4*x839)))),IkReal(((((-1.0)*x840*x843))+((cj4*x844))+(((-1.0)*x841*x843))+(((-1.0)*r02*x837))+(((-1.0)*cj4*x845)))),IKFAST_ATAN2_MAGTHRESH);
if(!x846.valid){
continue;
}
CheckValue<IkReal> x847=IKPowWithIntegerCheck(IKsign((((r20*(((((-1.0)*cj4*x836))+x836+(((-1.0)*cj5*x837))))))+((r22*(((-0.250000349687704)+(((-1.0)*(0.749999650312296)*cj4))))))+((r21*((x838+(((-1.0)*cj4*x838))+((sj5*x837)))))))),-1);
if(!x847.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x846.value)+(((1.5707963267949)*(x847.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x848=IKcos(j3);
IkReal x849=((0.433012903784321)*x848);
IkReal x850=(r22*x849);
IkReal x851=((0.749999650312296)*cj5*x848);
IkReal x852=((0.749999650312296)*sj5*x848);
IkReal x853=IKsin(j3);
IkReal x854=((0.866025201892125)*sj4*x853);
IkReal x855=(cj4*sj5*x853);
IkReal x856=((1.0)*cj4*cj5*x853);
IkReal x857=((0.250000349687704)*cj4*cj5*x848);
IkReal x858=((0.250000349687704)*cj4*sj5*x848);
IkReal x859=((0.500000349687582)*cj5*sj4*x848);
IkReal x860=((0.500000349687582)*cj5*sj4*x853);
IkReal x861=((0.500000349687582)*sj4*sj5*x853);
IkReal x862=((0.500000349687582)*sj4*sj5*x848);
IkReal x863=(r02*x849);
IkReal x864=((0.433012903784321)*r12*x853);
IkReal x865=(r11*x853);
IkReal x866=(r10*x853);
IkReal x867=(cj4*sj5);
IkReal x868=(r11*x848);
IkReal x869=((1.0)*cj4*cj5);
IkReal x870=(r10*x848);
IkReal x871=((0.250000349687704)*cj4*cj5);
IkReal x872=((0.250000349687704)*cj4*sj5);
IkReal x873=((0.500000349687582)*cj5*sj4);
IkReal x874=((0.500000349687582)*sj4*sj5);
IkReal x875=(r12*x849);
evalcond[0]=((((-1.0)*r20*x858))+(((-1.0)*r20*x856))+(((-1.0)*r20*x859))+x850+(((-1.0)*r21*x851))+(((-1.0)*r21*x857))+(((-1.0)*cj4*x850))+((r21*x860))+(((-1.0)*r20*x852))+((r21*x862))+((r20*x861))+((r22*x854))+((r21*x855)));
evalcond[1]=(((r01*x860))+(((-1.0)*r00*x852))+((r01*x862))+(((-1.0)*r00*x859))+((r01*x855))+x863+(((-1.0)*r00*x858))+((r00*x861))+(((-1.0)*r00*x856))+(((-1.0)*cj4*x863))+(((-1.0)*r01*x851))+(((-1.0)*r01*x857))+((r02*x854)));
evalcond[2]=((((0.749999650312296)*cj5*x865))+((x866*x873))+((r10*x862))+((x866*x872))+(((0.749999650312296)*sj5*x866))+(((-1.0)*x864))+(((-1.0)*x865*x874))+((x867*x868))+((r11*x859))+(((-1.0)*x869*x870))+(((0.866025201892125)*r12*sj4*x848))+((x865*x871))+((cj4*x864)));
evalcond[3]=((-1.0)+(((-1.0)*r11*x851))+((r12*x854))+(((-1.0)*x866*x869))+(((-1.0)*r10*x852))+((x865*x873))+(((-1.0)*cj4*x875))+(((-1.0)*x868*x871))+(((-1.0)*r10*x859))+((x865*x867))+(((-1.0)*x870*x872))+x875+((r11*x862))+((x866*x874)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x876=((0.646708404322884)*cj4);
IkReal x877=((0.62876328674038)*cj5);
IkReal x878=((0.62876328674038)*sj5);
IkReal x879=((0.373377619497519)*cj4*cj5);
IkReal x880=((0.373377619497519)*cj4*sj5);
IkReal x881=((0.746754716733336)*cj5*sj4);
IkReal x882=((0.746754716733336)*sj4*sj5);
if( IKabs((((r02*x876))+(((0.289291595677116)*r02))+(((3.44827586206897)*px))+((r01*x879))+(((-1.0)*r00*x878))+(((-1.0)*r01*x877))+((r00*x881))+((r00*x880))+(((-1.0)*r01*x882)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+((r22*x876))+(((-1.0)*r21*x877))+(((-1.0)*r21*x882))+((r20*x881))+((r21*x879))+((r20*x880))+(((0.289291595677116)*r22))+(((-1.0)*r20*x878)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r02*x876))+(((0.289291595677116)*r02))+(((3.44827586206897)*px))+((r01*x879))+(((-1.0)*r00*x878))+(((-1.0)*r01*x877))+((r00*x881))+((r00*x880))+(((-1.0)*r01*x882))))+IKsqr(((((3.44827586206897)*pz))+((r22*x876))+(((-1.0)*r21*x877))+(((-1.0)*r21*x882))+((r20*x881))+((r21*x879))+((r20*x880))+(((0.289291595677116)*r22))+(((-1.0)*r20*x878))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r02*x876))+(((0.289291595677116)*r02))+(((3.44827586206897)*px))+((r01*x879))+(((-1.0)*r00*x878))+(((-1.0)*r01*x877))+((r00*x881))+((r00*x880))+(((-1.0)*r01*x882))), ((((3.44827586206897)*pz))+((r22*x876))+(((-1.0)*r21*x877))+(((-1.0)*r21*x882))+((r20*x881))+((r21*x879))+((r20*x880))+(((0.289291595677116)*r22))+(((-1.0)*r20*x878))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x883=((0.187545437253636)*cj4);
IkReal x884=(cj5*r01);
IkReal x885=(r00*sj5);
IkReal x886=((0.29)*(IKsin(j1)));
IkReal x887=(cj4*cj5*r01);
IkReal x888=(cj4*r00*sj5);
IkReal x889=(cj5*r00*sj4);
IkReal x890=(r01*sj4*sj5);
IkReal x891=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x892=(cj5*r21);
IkReal x893=(r20*sj5);
IkReal x894=(cj4*cj5*r21);
IkReal x895=(cj4*r20*sj5);
IkReal x896=(cj5*r20*sj4);
IkReal x897=(r21*sj4*sj5);
IkReal x898=((0.0160344678271334)*r22);
IkReal x899=((0.117537022603216)*sj3);
IkReal x900=(r02*x899);
IkReal x901=((0.235073880801598)*cj3*sj4);
IkReal x902=((0.20357990508077)*sj3);
IkReal x903=((0.27144)*cj3*cj4*cj5);
IkReal x904=((0.27144)*cj3*cj4*sj5);
IkReal x905=((0.135720094919197)*cj3*sj4);
IkReal x906=((0.0678600949192303)*sj3);
IkReal x907=((0.135720094919197)*sj3);
IkReal x908=((0.0160344678271334)*r02);
IkReal x909=(r22*x899);
evalcond[0]=((((0.10827950965428)*x888))+(((-0.216558867852667)*x890))+(((0.10827950965428)*x887))+(((-1.0)*x886))+((r02*x883))+(((0.216558867852667)*x889))+(((-0.18234135315471)*x884))+px+(((-0.18234135315471)*x885))+(((0.0838945627463637)*r02)));
evalcond[1]=((((0.10827950965428)*x894))+(((0.216558867852667)*x896))+(((0.10827950965428)*x895))+(((-0.216558867852667)*x897))+((r22*x883))+(((-0.18234135315471)*x892))+(((0.0838945627463637)*r22))+x891+(((-0.18234135315471)*x893)));
evalcond[2]=((((-0.00925751294893567)*x895))+((x884*x902))+((r01*x904))+(((-1.0)*r00*x903))+((x884*x905))+((x887*x906))+(((-1.0)*cj4*x898))+(((-0.0185150129489311)*x896))+(((-1.0)*x890*x907))+((x889*x907))+(((0.0185150129489311)*x897))+((x888*x906))+(((-0.0648043305514941)*x892))+((cj4*x900))+((r02*x901))+((x885*x902))+(((-1.0)*x900))+(((-0.0648043305514941)*x893))+((x885*x905))+x898+x891+(((-0.00925751294893567)*x894)));
evalcond[3]=((((0.00925751294893567)*x888))+(((-1.0)*(1.0)*px))+((x892*x905))+((x892*x902))+(((-0.0185150129489311)*x890))+((cj4*x908))+(((-1.0)*x908))+((r22*x901))+(((-1.0)*x897*x907))+((r21*x904))+((x894*x906))+x886+(((-1.0)*r20*x903))+((x893*x902))+((cj4*x909))+(((-1.0)*x909))+(((0.0648043305514941)*x884))+((x893*x905))+(((0.0185150129489311)*x889))+((x896*x907))+(((0.00925751294893567)*x887))+((x895*x906))+(((0.0648043305514941)*x885)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x910=((0.250000349687704)*cj1);
IkReal x911=((0.250000349687704)*sj1);
IkReal x912=((0.749999650312296)*cj1*cj4);
IkReal x913=((0.433012903784321)*cj1*cj5);
IkReal x914=(r01*x913);
IkReal x915=((0.433012903784321)*cj1*sj5);
IkReal x916=(r00*x915);
IkReal x917=((0.749999650312296)*cj4*sj1);
IkReal x918=((0.433012903784321)*cj5*sj1);
IkReal x919=(r21*x918);
IkReal x920=((0.433012903784321)*sj1*sj5);
IkReal x921=(r20*x920);
IkReal x922=((0.866025201892125)*cj1*cj5*sj4);
IkReal x923=((0.866025201892125)*cj1*sj4*sj5);
IkReal x924=((0.866025201892125)*cj5*sj1*sj4);
IkReal x925=((0.866025201892125)*sj1*sj4*sj5);
IkReal x926=(r21*x913);
IkReal x927=(r20*x915);
IkReal x928=(r01*x918);
IkReal x929=(r00*x920);
if( IKabs(((((-1.0)*x921))+((cj4*x921))+((r01*x923))+x916+x914+((r20*x924))+(((-1.0)*r02*x912))+((r22*x911))+((cj4*x919))+(((-1.0)*r21*x925))+(((-1.0)*cj4*x916))+(((-1.0)*r02*x910))+(((-1.0)*cj4*x914))+(((-1.0)*r00*x922))+(((-1.0)*x919))+((r22*x917)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x925))+(((-1.0)*x928))+(((-1.0)*r21*x923))+((cj4*x928))+((r02*x911))+((r02*x917))+(((-1.0)*x926))+((cj4*x926))+((r00*x924))+((r22*x910))+((r20*x922))+((r22*x912))+(((-1.0)*x929))+((cj4*x929))+((cj4*x927))+(((-1.0)*x927)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x921))+((cj4*x921))+((r01*x923))+x916+x914+((r20*x924))+(((-1.0)*r02*x912))+((r22*x911))+((cj4*x919))+(((-1.0)*r21*x925))+(((-1.0)*cj4*x916))+(((-1.0)*r02*x910))+(((-1.0)*cj4*x914))+(((-1.0)*r00*x922))+(((-1.0)*x919))+((r22*x917))))+IKsqr(((((-1.0)*r01*x925))+(((-1.0)*x928))+(((-1.0)*r21*x923))+((cj4*x928))+((r02*x911))+((r02*x917))+(((-1.0)*x926))+((cj4*x926))+((r00*x924))+((r22*x910))+((r20*x922))+((r22*x912))+(((-1.0)*x929))+((cj4*x929))+((cj4*x927))+(((-1.0)*x927))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x921))+((cj4*x921))+((r01*x923))+x916+x914+((r20*x924))+(((-1.0)*r02*x912))+((r22*x911))+((cj4*x919))+(((-1.0)*r21*x925))+(((-1.0)*cj4*x916))+(((-1.0)*r02*x910))+(((-1.0)*cj4*x914))+(((-1.0)*r00*x922))+(((-1.0)*x919))+((r22*x917))), ((((-1.0)*r01*x925))+(((-1.0)*x928))+(((-1.0)*r21*x923))+((cj4*x928))+((r02*x911))+((r02*x917))+(((-1.0)*x926))+((cj4*x926))+((r00*x924))+((r22*x910))+((r20*x922))+((r22*x912))+(((-1.0)*x929))+((cj4*x929))+((cj4*x927))+(((-1.0)*x927))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x930=IKcos(j2);
IkReal x931=(cj1*x930);
IkReal x932=((0.749999650312296)*cj4);
IkReal x933=(cj5*r21);
IkReal x934=((0.433012903784321)*x933);
IkReal x935=(r20*sj5);
IkReal x936=((0.433012903784321)*x935);
IkReal x937=IKsin(j2);
IkReal x938=(sj1*x937);
IkReal x939=(cj5*r20*sj4);
IkReal x940=(r21*sj4*sj5);
IkReal x941=(sj1*x930);
IkReal x942=(cj1*x937);
IkReal x943=((((-1.0)*x942))+x941);
IkReal x944=(cj5*r01);
IkReal x945=((0.433012903784321)*x944);
IkReal x946=(r00*sj5);
IkReal x947=((0.433012903784321)*x946);
IkReal x948=(cj5*r00*sj4);
IkReal x949=(r01*sj4*sj5);
IkReal x950=((0.0160344678271334)*r22);
IkReal x951=((0.00925751294893567)*cj4);
IkReal x952=((0.0160344678271334)*r02);
IkReal x953=((0.433012903784321)*sj3);
IkReal x954=(r22*x953);
IkReal x955=((0.866025201892125)*cj3*sj4);
IkReal x956=((0.749999650312296)*sj3);
IkReal x957=(cj3*cj4*sj5);
IkReal x958=((1.0)*cj3*cj4*cj5);
IkReal x959=((0.500000349687582)*cj3*sj4);
IkReal x960=((0.250000349687704)*cj4*sj3);
IkReal x961=((0.500000349687582)*sj3);
IkReal x962=(r02*x953);
evalcond[0]=((((-1.0)*cj4*x934))+(((0.866025201892125)*x940))+(((-1.0)*cj4*x936))+(((-0.866025201892125)*x939))+x931+x938+x936+x934+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x932)));
evalcond[1]=((((-0.866025201892125)*x948))+(((-1.0)*cj4*x947))+(((0.866025201892125)*x949))+(((-1.0)*cj4*x945))+(((-1.0)*r02*x932))+(((-1.0)*(0.250000349687704)*r02))+x943+x947+x945);
evalcond[2]=((((-1.0)*(1.0)*pz))+(((-0.27144)*x938))+(((-0.0185150129489311)*x940))+(((0.29)*cj1))+(((-1.0)*x950))+(((-0.27144)*x931))+((x933*x951))+((cj4*x950))+(((0.0185150129489311)*x939))+(((0.0648043305514941)*x933))+(((0.0648043305514941)*x935))+((x935*x951)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((0.0648043305514941)*x944))+((x944*x951))+((x946*x951))+(((0.0648043305514941)*x946))+(((-0.27144)*x941))+(((0.27144)*x942))+(((-1.0)*x952))+(((-0.0185150129489311)*x949))+((cj4*x952))+(((0.0185150129489311)*x948))+(((0.29)*sj1)));
evalcond[4]=(((r22*x955))+(((-1.0)*r20*x958))+(((-1.0)*x954))+((x939*x961))+((cj4*x954))+((x933*x959))+((x933*x956))+((r21*x957))+((x933*x960))+(((-1.0)*x940*x961))+((x935*x959))+((x935*x956))+((x935*x960))+x943);
evalcond[5]=(((x948*x961))+((x944*x960))+((x946*x960))+(((-1.0)*x949*x961))+(((-1.0)*x931))+((r02*x955))+((r01*x957))+((x944*x959))+(((-1.0)*r00*x958))+((x944*x956))+((cj4*x962))+((x946*x959))+(((-1.0)*x962))+((x946*x956))+(((-1.0)*x938)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x963=((0.433012903784321)*sj5);
IkReal x964=((0.866025201892125)*sj4);
IkReal x965=((0.433012903784321)*cj5);
IkReal x966=((0.433012903784321)*r22);
IkReal x967=(cj5*r21);
IkReal x968=(r20*sj5);
IkReal x969=((0.250000349687704)*cj4);
IkReal x970=((0.500000349687582)*sj4);
IkReal x971=(cj5*r20);
IkReal x972=(r21*sj5);
CheckValue<IkReal> x973=IKPowWithIntegerCheck(IKsign((((r02*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r01*(((((-1.0)*sj5*x964))+((cj4*x965))+(((-1.0)*x965))))))+((r00*((((cj5*x964))+((cj4*x963))+(((-1.0)*x963)))))))),-1);
if(!x973.valid){
continue;
}
CheckValue<IkReal> x974 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x968))+(((-0.749999650312296)*x967))+((x970*x972))+(((-1.0)*x968*x969))+(((-1.0)*cj4*x966))+x966+(((-1.0)*x970*x971))+(((-1.0)*x967*x969)))),IkReal(((((-1.0)*x967*x970))+((cj4*x971))+(((-1.0)*x968*x970))+(((-1.0)*cj4*x972))+(((-1.0)*r22*x964)))),IKFAST_ATAN2_MAGTHRESH);
if(!x974.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x973.value)))+(x974.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x975=IKcos(j3);
IkReal x976=((0.433012903784321)*x975);
IkReal x977=(r22*x976);
IkReal x978=((0.749999650312296)*cj5*x975);
IkReal x979=((0.749999650312296)*sj5*x975);
IkReal x980=IKsin(j3);
IkReal x981=((0.866025201892125)*sj4*x980);
IkReal x982=(cj4*sj5*x980);
IkReal x983=((1.0)*cj4*cj5*x980);
IkReal x984=((0.250000349687704)*cj4*cj5*x975);
IkReal x985=((0.250000349687704)*cj4*sj5*x975);
IkReal x986=((0.500000349687582)*cj5*sj4*x975);
IkReal x987=((0.500000349687582)*cj5*sj4*x980);
IkReal x988=((0.500000349687582)*sj4*sj5*x980);
IkReal x989=((0.500000349687582)*sj4*sj5*x975);
IkReal x990=(r02*x976);
IkReal x991=((0.433012903784321)*r12*x980);
IkReal x992=(r11*x980);
IkReal x993=(r10*x980);
IkReal x994=(cj4*sj5);
IkReal x995=(r11*x975);
IkReal x996=((1.0)*cj4*cj5);
IkReal x997=(r10*x975);
IkReal x998=((0.250000349687704)*cj4*cj5);
IkReal x999=((0.250000349687704)*cj4*sj5);
IkReal x1000=((0.500000349687582)*cj5*sj4);
IkReal x1001=((0.500000349687582)*sj4*sj5);
IkReal x1002=(r12*x976);
evalcond[0]=(((r20*x988))+((r21*x987))+(((-1.0)*r20*x983))+(((-1.0)*r20*x986))+(((-1.0)*r20*x985))+(((-1.0)*r20*x979))+(((-1.0)*r21*x978))+((r21*x989))+(((-1.0)*cj4*x977))+((r22*x981))+(((-1.0)*r21*x984))+x977+((r21*x982)));
evalcond[1]=((((-1.0)*r00*x979))+((r01*x982))+((r01*x989))+((r01*x987))+(((-1.0)*r00*x985))+(((-1.0)*cj4*x990))+(((-1.0)*r01*x984))+((r00*x988))+x990+(((-1.0)*r00*x983))+(((-1.0)*r01*x978))+(((-1.0)*r00*x986))+((r02*x981)));
evalcond[2]=(((r10*x989))+((r11*x986))+(((-1.0)*x991))+((cj4*x991))+(((-1.0)*x1001*x992))+((x1000*x993))+(((-1.0)*x996*x997))+((x994*x995))+(((0.749999650312296)*sj5*x993))+((x992*x998))+(((0.749999650312296)*cj5*x992))+((x993*x999))+(((0.866025201892125)*r12*sj4*x975)));
evalcond[3]=((-1.0)+((x992*x994))+(((-1.0)*x995*x998))+(((-1.0)*r11*x978))+(((-1.0)*x997*x999))+((x1000*x992))+((r12*x981))+((r11*x989))+(((-1.0)*r10*x986))+((x1001*x993))+x1002+(((-1.0)*cj4*x1002))+(((-1.0)*r10*x979))+(((-1.0)*x993*x996)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1003=((0.646708404322884)*cj4);
IkReal x1004=((0.62876328674038)*cj5);
IkReal x1005=((0.62876328674038)*sj5);
IkReal x1006=((0.373377619497519)*cj4*cj5);
IkReal x1007=((0.373377619497519)*cj4*sj5);
IkReal x1008=((0.746754716733336)*cj5*sj4);
IkReal x1009=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r00*x1005))+(((0.289291595677116)*r02))+((r01*x1006))+(((3.44827586206897)*px))+((r00*x1008))+((r00*x1007))+(((-1.0)*r01*x1009))+(((-1.0)*r01*x1004))+((r02*x1003)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+(((-1.0)*r20*x1005))+((r20*x1008))+((r20*x1007))+(((-1.0)*r21*x1004))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1009))+((r22*x1003))+((r21*x1006)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x1005))+(((0.289291595677116)*r02))+((r01*x1006))+(((3.44827586206897)*px))+((r00*x1008))+((r00*x1007))+(((-1.0)*r01*x1009))+(((-1.0)*r01*x1004))+((r02*x1003))))+IKsqr(((((3.44827586206897)*pz))+(((-1.0)*r20*x1005))+((r20*x1008))+((r20*x1007))+(((-1.0)*r21*x1004))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1009))+((r22*x1003))+((r21*x1006))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r00*x1005))+(((0.289291595677116)*r02))+((r01*x1006))+(((3.44827586206897)*px))+((r00*x1008))+((r00*x1007))+(((-1.0)*r01*x1009))+(((-1.0)*r01*x1004))+((r02*x1003))), ((((3.44827586206897)*pz))+(((-1.0)*r20*x1005))+((r20*x1008))+((r20*x1007))+(((-1.0)*r21*x1004))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1009))+((r22*x1003))+((r21*x1006))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1010=((0.187545437253636)*cj4);
IkReal x1011=(cj5*r01);
IkReal x1012=(r00*sj5);
IkReal x1013=((0.29)*(IKsin(j1)));
IkReal x1014=(cj4*cj5*r01);
IkReal x1015=(cj4*r00*sj5);
IkReal x1016=(cj5*r00*sj4);
IkReal x1017=(r01*sj4*sj5);
IkReal x1018=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x1019=(cj5*r21);
IkReal x1020=(r20*sj5);
IkReal x1021=(cj4*cj5*r21);
IkReal x1022=(cj4*r20*sj5);
IkReal x1023=(cj5*r20*sj4);
IkReal x1024=(r21*sj4*sj5);
IkReal x1025=((0.0160344678271334)*r22);
IkReal x1026=((0.117537022603216)*sj3);
IkReal x1027=(r02*x1026);
IkReal x1028=((0.235073880801598)*cj3*sj4);
IkReal x1029=((0.20357990508077)*sj3);
IkReal x1030=((0.27144)*cj3*cj4*cj5);
IkReal x1031=((0.27144)*cj3*cj4*sj5);
IkReal x1032=((0.135720094919197)*cj3*sj4);
IkReal x1033=((0.0678600949192303)*sj3);
IkReal x1034=((0.135720094919197)*sj3);
IkReal x1035=((0.0160344678271334)*r02);
IkReal x1036=(r22*x1026);
evalcond[0]=(((r02*x1010))+(((-1.0)*x1013))+(((-0.18234135315471)*x1011))+(((-0.18234135315471)*x1012))+px+(((-0.216558867852667)*x1017))+(((0.0838945627463637)*r02))+(((0.10827950965428)*x1015))+(((0.10827950965428)*x1014))+(((0.216558867852667)*x1016)));
evalcond[1]=((((0.10827950965428)*x1022))+(((-0.18234135315471)*x1020))+x1018+(((0.216558867852667)*x1023))+(((-0.18234135315471)*x1019))+(((-0.216558867852667)*x1024))+(((0.0838945627463637)*r22))+(((0.10827950965428)*x1021))+((r22*x1010)));
evalcond[2]=(((x1011*x1032))+((x1016*x1034))+((x1012*x1029))+((r02*x1028))+((x1014*x1033))+((x1015*x1033))+x1025+((r01*x1031))+x1018+(((-1.0)*x1017*x1034))+(((-0.0648043305514941)*x1019))+((x1011*x1029))+(((-1.0)*x1027))+(((-1.0)*cj4*x1025))+((cj4*x1027))+((x1012*x1032))+(((-0.0648043305514941)*x1020))+(((-0.00925751294893567)*x1021))+(((-0.0185150129489311)*x1023))+(((0.0185150129489311)*x1024))+(((-0.00925751294893567)*x1022))+(((-1.0)*r00*x1030)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((-1.0)*r20*x1030))+((x1023*x1034))+(((0.0648043305514941)*x1012))+((x1020*x1032))+((x1022*x1033))+(((-1.0)*x1036))+(((-0.0185150129489311)*x1017))+(((0.0185150129489311)*x1016))+((x1019*x1029))+((r21*x1031))+((cj4*x1035))+((x1020*x1029))+x1013+((x1019*x1032))+(((-1.0)*x1024*x1034))+((r22*x1028))+(((0.00925751294893567)*x1015))+(((-1.0)*x1035))+((cj4*x1036))+((x1021*x1033))+(((0.0648043305514941)*x1011))+(((0.00925751294893567)*x1014)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1037=((0.250000349687704)*cj1);
IkReal x1038=((0.250000349687704)*sj1);
IkReal x1039=((0.749999650312296)*cj1*cj4);
IkReal x1040=((0.433012903784321)*cj1*cj5);
IkReal x1041=(r01*x1040);
IkReal x1042=((0.433012903784321)*cj1*sj5);
IkReal x1043=(r00*x1042);
IkReal x1044=((0.749999650312296)*cj4*sj1);
IkReal x1045=((0.433012903784321)*cj5*sj1);
IkReal x1046=(r21*x1045);
IkReal x1047=((0.433012903784321)*sj1*sj5);
IkReal x1048=(r20*x1047);
IkReal x1049=((0.866025201892125)*cj1*cj5*sj4);
IkReal x1050=((0.866025201892125)*cj1*sj4*sj5);
IkReal x1051=((0.866025201892125)*cj5*sj1*sj4);
IkReal x1052=((0.866025201892125)*sj1*sj4*sj5);
IkReal x1053=(r21*x1040);
IkReal x1054=(r20*x1042);
IkReal x1055=(r01*x1045);
IkReal x1056=(r00*x1047);
if( IKabs(((((-1.0)*r00*x1049))+((cj4*x1048))+((r22*x1038))+((r01*x1050))+((r20*x1051))+x1043+x1041+(((-1.0)*x1048))+(((-1.0)*r21*x1052))+(((-1.0)*r02*x1037))+((r22*x1044))+(((-1.0)*cj4*x1043))+(((-1.0)*cj4*x1041))+((cj4*x1046))+(((-1.0)*r02*x1039))+(((-1.0)*x1046)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1054))+((r20*x1049))+(((-1.0)*r21*x1050))+((r02*x1038))+((cj4*x1053))+((cj4*x1056))+(((-1.0)*x1053))+((r00*x1051))+((cj4*x1055))+((r02*x1044))+(((-1.0)*x1056))+(((-1.0)*x1055))+((r22*x1039))+((r22*x1037))+(((-1.0)*r01*x1052))+((cj4*x1054)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x1049))+((cj4*x1048))+((r22*x1038))+((r01*x1050))+((r20*x1051))+x1043+x1041+(((-1.0)*x1048))+(((-1.0)*r21*x1052))+(((-1.0)*r02*x1037))+((r22*x1044))+(((-1.0)*cj4*x1043))+(((-1.0)*cj4*x1041))+((cj4*x1046))+(((-1.0)*r02*x1039))+(((-1.0)*x1046))))+IKsqr(((((-1.0)*x1054))+((r20*x1049))+(((-1.0)*r21*x1050))+((r02*x1038))+((cj4*x1053))+((cj4*x1056))+(((-1.0)*x1053))+((r00*x1051))+((cj4*x1055))+((r02*x1044))+(((-1.0)*x1056))+(((-1.0)*x1055))+((r22*x1039))+((r22*x1037))+(((-1.0)*r01*x1052))+((cj4*x1054))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r00*x1049))+((cj4*x1048))+((r22*x1038))+((r01*x1050))+((r20*x1051))+x1043+x1041+(((-1.0)*x1048))+(((-1.0)*r21*x1052))+(((-1.0)*r02*x1037))+((r22*x1044))+(((-1.0)*cj4*x1043))+(((-1.0)*cj4*x1041))+((cj4*x1046))+(((-1.0)*r02*x1039))+(((-1.0)*x1046))), ((((-1.0)*x1054))+((r20*x1049))+(((-1.0)*r21*x1050))+((r02*x1038))+((cj4*x1053))+((cj4*x1056))+(((-1.0)*x1053))+((r00*x1051))+((cj4*x1055))+((r02*x1044))+(((-1.0)*x1056))+(((-1.0)*x1055))+((r22*x1039))+((r22*x1037))+(((-1.0)*r01*x1052))+((cj4*x1054))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1057=IKcos(j2);
IkReal x1058=(cj1*x1057);
IkReal x1059=((0.749999650312296)*cj4);
IkReal x1060=(cj5*r21);
IkReal x1061=((0.433012903784321)*x1060);
IkReal x1062=(r20*sj5);
IkReal x1063=((0.433012903784321)*x1062);
IkReal x1064=IKsin(j2);
IkReal x1065=(sj1*x1064);
IkReal x1066=(cj5*r20*sj4);
IkReal x1067=(r21*sj4*sj5);
IkReal x1068=(sj1*x1057);
IkReal x1069=(cj1*x1064);
IkReal x1070=(x1068+(((-1.0)*x1069)));
IkReal x1071=(cj5*r01);
IkReal x1072=((0.433012903784321)*x1071);
IkReal x1073=(r00*sj5);
IkReal x1074=((0.433012903784321)*x1073);
IkReal x1075=(cj5*r00*sj4);
IkReal x1076=(r01*sj4*sj5);
IkReal x1077=((0.0160344678271334)*r22);
IkReal x1078=((0.00925751294893567)*cj4);
IkReal x1079=((0.0160344678271334)*r02);
IkReal x1080=((0.433012903784321)*sj3);
IkReal x1081=(r22*x1080);
IkReal x1082=((0.866025201892125)*cj3*sj4);
IkReal x1083=((0.749999650312296)*sj3);
IkReal x1084=(cj3*cj4*sj5);
IkReal x1085=((1.0)*cj3*cj4*cj5);
IkReal x1086=((0.500000349687582)*cj3*sj4);
IkReal x1087=((0.250000349687704)*cj4*sj3);
IkReal x1088=((0.500000349687582)*sj3);
IkReal x1089=(r02*x1080);
evalcond[0]=((((-1.0)*cj4*x1063))+x1065+x1063+x1061+x1058+(((0.866025201892125)*x1067))+(((-1.0)*cj4*x1061))+(((-0.866025201892125)*x1066))+(((-1.0)*r22*x1059))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*cj4*x1072))+x1070+x1072+x1074+(((-0.866025201892125)*x1075))+(((-1.0)*cj4*x1074))+(((0.866025201892125)*x1076))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*r02*x1059)));
evalcond[2]=(((cj4*x1077))+(((-0.0185150129489311)*x1067))+(((0.0648043305514941)*x1060))+(((0.0185150129489311)*x1066))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x1062))+(((-0.27144)*x1065))+(((-0.27144)*x1058))+(((0.29)*cj1))+((x1062*x1078))+((x1060*x1078))+(((-1.0)*x1077)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((-0.27144)*x1068))+((x1071*x1078))+(((0.0185150129489311)*x1075))+(((0.0648043305514941)*x1071))+(((-0.0185150129489311)*x1076))+(((0.0648043305514941)*x1073))+((x1073*x1078))+(((0.27144)*x1069))+(((-1.0)*x1079))+(((0.29)*sj1))+((cj4*x1079)));
evalcond[4]=(((x1060*x1086))+((x1062*x1083))+((x1066*x1088))+((x1060*x1087))+x1070+(((-1.0)*x1081))+((r21*x1084))+((x1062*x1086))+((x1062*x1087))+((r22*x1082))+(((-1.0)*x1067*x1088))+((x1060*x1083))+(((-1.0)*r20*x1085))+((cj4*x1081)));
evalcond[5]=((((-1.0)*r00*x1085))+((x1071*x1083))+(((-1.0)*x1089))+((x1071*x1087))+(((-1.0)*x1065))+((x1075*x1088))+(((-1.0)*x1076*x1088))+((x1071*x1086))+((cj4*x1089))+((r02*x1082))+(((-1.0)*x1058))+((x1073*x1083))+((x1073*x1086))+((x1073*x1087))+((r01*x1084)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x1090=(cj4*r12);
IkReal x1091=(cj5*r11);
IkReal x1092=((1.73204919243206)*x1091);
IkReal x1093=(r10*sj5);
IkReal x1094=((1.73204919243206)*x1093);
IkReal x1095=(cj5*r10*sj4);
IkReal x1096=(r11*sj4*sj5);
IkReal x1097=((0.433012903784321)*x1091);
IkReal x1098=((0.433012903784321)*x1093);
j3eval[0]=((((-2.99999440500457)*x1090))+(((-1.0)*(1.0)*r12))+(((-1.0)*cj4*x1094))+(((-1.0)*cj4*x1092))+x1094+x1092+(((-3.46409596216145)*x1095))+(((3.46409596216145)*x1096)));
j3eval[1]=IKsign(((((-1.0)*cj4*x1097))+(((-0.866025201892125)*x1095))+(((-1.0)*cj4*x1098))+(((-1.0)*(0.250000349687704)*r12))+(((-0.749999650312296)*x1090))+(((0.866025201892125)*x1096))+x1098+x1097));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x1099=(cj4*r22);
IkReal x1100=(cj5*r21);
IkReal x1101=((1.73204919243206)*x1100);
IkReal x1102=(r20*sj5);
IkReal x1103=((1.73204919243206)*x1102);
IkReal x1104=(cj5*r20*sj4);
IkReal x1105=(r21*sj4*sj5);
IkReal x1106=((0.433012903784321)*x1100);
IkReal x1107=((0.433012903784321)*x1102);
j3eval[0]=((((-3.46409596216145)*x1105))+(((3.46409596216145)*x1104))+((cj4*x1103))+((cj4*x1101))+r22+(((2.99999440500457)*x1099))+(((-1.0)*x1103))+(((-1.0)*x1101)));
j3eval[1]=IKsign((((cj4*x1106))+(((-0.866025201892125)*x1105))+(((-1.0)*x1107))+(((-1.0)*x1106))+(((0.866025201892125)*x1104))+(((0.749999650312296)*x1099))+((cj4*x1107))+(((0.250000349687704)*r22))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x1108=r00*r00;
IkReal x1109=r01*r01;
IkReal x1110=r02*r02;
IkReal x1111=(cj5*r01*r02);
IkReal x1112=(r00*r01*sj4);
IkReal x1113=((3.9999972025013)*x1112);
IkReal x1114=(r00*r02*sj5);
IkReal x1115=(cj4*x1108);
IkReal x1116=((2.0)*x1115);
IkReal x1117=(cj4*x1110);
IkReal x1118=(cj4*cj5*r01*r02);
IkReal x1119=(cj4*r00*r02*sj5);
IkReal x1120=(cj5*r00*r01*sj5);
IkReal x1121=(cj5*r00*r02*sj4);
IkReal x1122=(r01*r02*sj4*sj5);
IkReal x1123=(cj4*cj5*r00*r01*sj5);
IkReal x1124=(cj4*cj5*r00*r02*sj4);
IkReal x1125=(cj4*r01*r02*sj4*sj5);
IkReal x1126=cj4*cj4;
IkReal x1127=(x1108*x1126);
IkReal x1128=(x1109*x1126);
IkReal x1129=(x1110*x1126);
IkReal x1130=cj5*cj5;
IkReal x1131=(x1108*x1130);
IkReal x1132=(x1109*x1130);
IkReal x1133=(cj5*r01*r02*x1126);
IkReal x1134=(r00*r02*sj5*x1126);
IkReal x1135=(cj5*sj4*sj5*x1108);
IkReal x1136=(cj5*sj4*sj5*x1109);
IkReal x1137=((3.9999972025013)*x1136);
IkReal x1138=(r00*r01*sj4*x1130);
IkReal x1139=((7.99999440500261)*x1138);
IkReal x1140=(cj4*x1109*x1130);
IkReal x1141=(cj4*cj5*sj4*sj5*x1108);
IkReal x1142=(cj5*r00*r01*sj5*x1126);
IkReal x1143=(x1108*x1126*x1130);
IkReal x1144=(x1109*x1126*x1130);
IkReal x1145=((0.750000174843424)*x1112);
IkReal x1146=((0.375000349687459)*x1115);
IkReal x1147=((0.750000174843424)*x1136);
IkReal x1148=((1.50000034968685)*x1138);
j3eval[0]=((((-3.46409838486413)*x1133))+(((-1.0)*cj4*x1139))+(((-2.30940161513813)*x1121))+(((4.33332836000522)*x1108))+((cj4*x1113))+x1116+(((3.99999440500457)*x1128))+(((-9.99998881000913)*x1142))+(((4.99999440500457)*x1110))+((cj4*x1137))+(((6.9281919243229)*x1125))+(((2.309396769726)*x1119))+(((-4.99999440500457)*x1144))+(((-6.9281919243229)*x1124))+(((2.30940161513813)*x1122))+(((-2.0)*x1117))+(((-3.46409838486413)*x1134))+(((5.99998881000913)*x1120))+(((2.309396769726)*x1118))+(((-1.0)*x1113))+(((1.15470161513813)*x1111))+(((4.99999440500457)*x1143))+(((4.0)*x1123))+x1139+(((-1.0)*x1137))+(((3.9999972025013)*x1135))+(((-3.9999972025013)*x1141))+(((1.33333395500065)*x1109))+(((1.15470161513813)*x1114))+(((-1.0)*x1127))+(((-1.0)*x1116*x1130))+(((-2.99999440500457)*x1129))+(((2.99999440500457)*x1132))+(((-2.99999440500457)*x1131))+(((2.0)*x1140)));
j3eval[1]=IKsign(((((-0.937499825156026)*x1144))+((cj4*x1147))+(((-0.18750017484373)*x1127))+(((-0.562499475468567)*x1129))+((cj4*x1145))+(((0.433012298107169)*x1118))+(((0.216506754730737)*x1111))+(((0.749999650312296)*x1128))+(((-0.750000174843424)*x1141))+(((-0.375000349687459)*x1117))+(((-0.562499475468567)*x1131))+(((0.433012298107169)*x1119))+(((-0.649519052837905)*x1133))+x1148+x1146+(((0.562499475468567)*x1132))+(((0.937499825156026)*x1110))+(((0.375000349687459)*x1140))+(((0.750000699374918)*x1123))+(((-1.0)*cj4*x1148))+(((-0.433013206622791)*x1121))+(((0.250000349687704)*x1109))+(((0.216506754730737)*x1114))+(((1.12499895093713)*x1120))+(((-1.0)*x1147))+(((0.81249982515627)*x1108))+(((-0.649519052837905)*x1134))+(((-1.29903719716146)*x1124))+(((0.750000174843424)*x1135))+(((-1.0)*x1130*x1146))+(((0.433013206622791)*x1122))+(((-1.0)*x1145))+(((0.937499825156026)*x1143))+(((-1.87499965031205)*x1142))+(((1.29903719716146)*x1125))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1149=(r01*sj5);
IkReal x1150=(cj4*x1149);
IkReal x1151=(cj4*cj5*r00);
IkReal x1152=((0.500000349687582)*sj4);
IkReal x1153=(cj5*r01);
IkReal x1154=(r00*sj5);
IkReal x1155=((0.433012903784321)*r02);
IkReal x1156=((0.250000349687704)*cj4);
IkReal x1157=(cj5*r00);
IkReal x1158=r00*r00;
IkReal x1159=r01*r01;
IkReal x1160=r02*r02;
IkReal x1161=((0.216506754730737)*r02);
IkReal x1162=((0.750000174843424)*r00*r01*sj4);
IkReal x1163=((0.375000349687459)*cj4);
IkReal x1164=(x1158*x1163);
IkReal x1165=((0.433012298107169)*cj4*r02);
IkReal x1166=(cj5*r00*r01*sj5);
IkReal x1167=((0.433013206622791)*r02*sj4);
IkReal x1168=((1.29903719716146)*r02*sj4);
IkReal x1169=cj4*cj4;
IkReal x1170=(x1158*x1169);
IkReal x1171=(x1159*x1169);
IkReal x1172=cj5*cj5;
IkReal x1173=((0.562499475468567)*x1172);
IkReal x1174=((0.649519052837905)*r02*x1169);
IkReal x1175=((0.750000174843424)*cj5*sj4*sj5);
IkReal x1176=(x1158*x1175);
IkReal x1177=(x1159*x1175);
IkReal x1178=((1.50000034968685)*r00*r01*sj4*x1172);
IkReal x1179=((0.937499825156026)*x1172);
CheckValue<IkReal> x1180 = IKatan2WithCheck(IkReal(((((-1.0)*x1151))+x1150+(((0.866025201892125)*r02*sj4))+((x1152*x1154))+((x1152*x1153)))),IkReal(((((-0.749999650312296)*x1154))+x1155+(((-1.0)*x1153*x1156))+(((-1.0)*x1154*x1156))+((x1149*x1152))+(((-1.0)*x1152*x1157))+(((-1.0)*cj4*x1155))+(((-0.749999650312296)*x1153)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1180.valid){
continue;
}
CheckValue<IkReal> x1181=IKPowWithIntegerCheck(IKsign((((x1150*x1168))+(((-1.0)*cj4*x1176))+((x1170*x1179))+(((-1.87499965031205)*x1166*x1169))+(((-1.0)*x1171*x1179))+(((-1.0)*x1160*x1163))+(((-1.0)*x1151*x1168))+(((0.250000349687704)*x1159))+(((0.81249982515627)*x1158))+((x1149*x1167))+((x1159*x1173))+(((-1.0)*x1157*x1167))+(((-1.0)*x1162))+((x1153*x1165))+(((0.937499825156026)*x1160))+((x1154*x1161))+((cj4*x1177))+x1164+(((-0.562499475468567)*x1160*x1169))+((x1153*x1161))+(((0.750000699374918)*cj4*x1166))+(((-1.0)*x1177))+x1178+x1176+(((-1.0)*x1153*x1174))+(((1.12499895093713)*x1166))+(((-1.0)*x1164*x1172))+(((-0.18750017484373)*x1170))+(((0.749999650312296)*x1171))+((x1154*x1165))+((cj4*x1162))+(((-1.0)*x1154*x1174))+((x1159*x1163*x1172))+(((-1.0)*cj4*x1178))+(((-1.0)*x1158*x1173)))),-1);
if(!x1181.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1180.value)+(((1.5707963267949)*(x1181.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1182=IKcos(j3);
IkReal x1183=((0.433012903784321)*x1182);
IkReal x1184=(r22*x1183);
IkReal x1185=((0.749999650312296)*cj5*x1182);
IkReal x1186=((0.749999650312296)*sj5*x1182);
IkReal x1187=IKsin(j3);
IkReal x1188=((0.866025201892125)*sj4*x1187);
IkReal x1189=(cj4*sj5*x1187);
IkReal x1190=((1.0)*cj4*cj5*x1187);
IkReal x1191=((0.250000349687704)*cj4*cj5*x1182);
IkReal x1192=((0.250000349687704)*cj4*sj5*x1182);
IkReal x1193=((0.500000349687582)*cj5*sj4*x1182);
IkReal x1194=((0.500000349687582)*cj5*sj4*x1187);
IkReal x1195=((0.500000349687582)*sj4*sj5*x1187);
IkReal x1196=((0.500000349687582)*sj4*sj5*x1182);
IkReal x1197=(r12*x1183);
IkReal x1198=((0.433012903784321)*r02);
IkReal x1199=(x1187*x1198);
IkReal x1200=((0.749999650312296)*cj5*r01);
IkReal x1201=((0.749999650312296)*r00*sj5);
IkReal x1202=((0.866025201892125)*r02*sj4);
IkReal x1203=(cj4*r01*sj5);
IkReal x1204=((1.0)*cj4*cj5*r00);
IkReal x1205=((0.250000349687704)*cj4*cj5*r01);
IkReal x1206=((0.250000349687704)*r00);
IkReal x1207=((0.500000349687582)*cj5*r00*sj4);
IkReal x1208=((0.500000349687582)*cj5*r01*sj4);
IkReal x1209=((0.500000349687582)*r00*sj4*sj5);
IkReal x1210=((0.500000349687582)*r01*sj4*sj5);
IkReal x1211=(x1182*x1198);
evalcond[0]=((((-1.0)*r20*x1193))+(((-1.0)*cj4*x1184))+(((-1.0)*r20*x1190))+(((-1.0)*r21*x1185))+(((-1.0)*r20*x1192))+((r21*x1196))+x1184+(((-1.0)*r20*x1186))+((r20*x1195))+((r21*x1189))+(((-1.0)*r21*x1191))+((r21*x1194))+((r22*x1188)));
evalcond[1]=((((-1.0)*r10*x1192))+((r11*x1196))+(((-1.0)*r11*x1191))+(((-1.0)*r10*x1193))+((r11*x1189))+(((-1.0)*cj4*x1197))+(((-1.0)*r11*x1185))+((r10*x1195))+x1197+((r12*x1188))+(((-1.0)*r10*x1186))+((r11*x1194))+(((-1.0)*r10*x1190)));
evalcond[2]=((((-1.0)*x1187*x1210))+((x1187*x1200))+((x1182*x1208))+((x1189*x1206))+((x1182*x1209))+((x1182*x1203))+((x1187*x1201))+((x1187*x1207))+((x1187*x1205))+((x1182*x1202))+(((-1.0)*x1199))+((cj4*x1199))+(((-1.0)*x1182*x1204)));
evalcond[3]=((-1.0)+(((-1.0)*cj4*sj5*x1182*x1206))+(((-1.0)*x1182*x1200))+((x1187*x1203))+(((-1.0)*x1182*x1205))+(((-1.0)*x1187*x1204))+((x1187*x1209))+((x1187*x1202))+((x1187*x1208))+((x1182*x1210))+(((-1.0)*x1182*x1207))+x1211+(((-1.0)*cj4*x1211))+(((-1.0)*x1182*x1201)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1212=((0.646708404322884)*cj4);
IkReal x1213=((0.62876328674038)*cj5);
IkReal x1214=((0.62876328674038)*sj5);
IkReal x1215=((0.373377619497519)*cj4*cj5);
IkReal x1216=((0.373377619497519)*cj4*sj5);
IkReal x1217=((0.746754716733336)*cj5*sj4);
IkReal x1218=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r10*x1217))+(((-1.0)*r10*x1216))+((r11*x1213))+((r10*x1214))+(((-1.0)*r12*x1212))+(((-1.0)*(3.44827586206897)*py))+((r11*x1218))+(((-1.0)*r11*x1215)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1218))+(((3.44827586206897)*pz))+((r20*x1217))+((r21*x1215))+(((-1.0)*r20*x1214))+((r22*x1212))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1213))+((r20*x1216)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r10*x1217))+(((-1.0)*r10*x1216))+((r11*x1213))+((r10*x1214))+(((-1.0)*r12*x1212))+(((-1.0)*(3.44827586206897)*py))+((r11*x1218))+(((-1.0)*r11*x1215))))+IKsqr(((((-1.0)*r21*x1218))+(((3.44827586206897)*pz))+((r20*x1217))+((r21*x1215))+(((-1.0)*r20*x1214))+((r22*x1212))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1213))+((r20*x1216))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r10*x1217))+(((-1.0)*r10*x1216))+((r11*x1213))+((r10*x1214))+(((-1.0)*r12*x1212))+(((-1.0)*(3.44827586206897)*py))+((r11*x1218))+(((-1.0)*r11*x1215))), ((((-1.0)*r21*x1218))+(((3.44827586206897)*pz))+((r20*x1217))+((r21*x1215))+(((-1.0)*r20*x1214))+((r22*x1212))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1213))+((r20*x1216))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1219=((0.187545437253636)*cj4);
IkReal x1220=(cj5*r21);
IkReal x1221=(r20*sj5);
IkReal x1222=((0.29)*(IKcos(j1)));
IkReal x1223=(cj4*cj5*r21);
IkReal x1224=(cj4*r20*sj5);
IkReal x1225=(cj5*r20*sj4);
IkReal x1226=(r21*sj4*sj5);
IkReal x1227=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*py)));
IkReal x1228=(cj5*r11);
IkReal x1229=(r10*sj5);
IkReal x1230=(cj4*cj5*r11);
IkReal x1231=(cj4*r10*sj5);
IkReal x1232=(cj5*r10*sj4);
IkReal x1233=(r11*sj4*sj5);
IkReal x1234=((0.0160344678271334)*r12);
IkReal x1235=((0.117537022603216)*sj3);
IkReal x1236=(r22*x1235);
IkReal x1237=((0.235073880801598)*cj3*sj4);
IkReal x1238=((0.20357990508077)*sj3);
IkReal x1239=((0.27144)*cj3*cj4*cj5);
IkReal x1240=((0.27144)*cj3*cj4*sj5);
IkReal x1241=((0.135720094919197)*cj3*sj4);
IkReal x1242=((0.0678600949192303)*sj3);
IkReal x1243=((0.135720094919197)*sj3);
IkReal x1244=((0.0160344678271334)*r22);
IkReal x1245=(r12*x1235);
evalcond[0]=((((0.216558867852667)*x1225))+((r22*x1219))+(((0.10827950965428)*x1223))+(((0.10827950965428)*x1224))+(((-0.18234135315471)*x1220))+pz+(((-1.0)*x1222))+(((-0.216558867852667)*x1226))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x1221)));
evalcond[1]=((((-1.0)*(0.0838945627463637)*r12))+(((-0.216558867852667)*x1232))+(((0.18234135315471)*x1228))+(((0.216558867852667)*x1233))+(((-0.10827950965428)*x1230))+x1227+(((-1.0)*r12*x1219))+(((-0.10827950965428)*x1231))+(((0.18234135315471)*x1229)));
evalcond[2]=(((r20*x1239))+(((-1.0)*x1234))+(((-1.0)*x1223*x1242))+(((-1.0)*x1220*x1238))+(((-1.0)*x1220*x1241))+(((-1.0)*r21*x1240))+(((-1.0)*x1225*x1243))+(((0.00925751294893567)*x1231))+x1236+((x1226*x1243))+(((0.0648043305514941)*x1228))+(((-1.0)*x1221*x1241))+(((-1.0)*r22*x1237))+(((-1.0)*cj4*x1236))+(((-1.0)*x1224*x1242))+(((0.0185150129489311)*x1232))+((cj4*x1234))+x1227+(((-1.0)*x1221*x1238))+(((0.00925751294893567)*x1230))+(((-0.0185150129489311)*x1233))+(((0.0648043305514941)*x1229)));
evalcond[3]=((((-1.0)*x1244))+(((-1.0)*x1245))+(((0.0648043305514941)*x1220))+((x1229*x1241))+(((-1.0)*(1.0)*pz))+(((0.00925751294893567)*x1224))+((x1232*x1243))+((x1228*x1238))+(((-1.0)*x1233*x1243))+((r11*x1240))+((x1228*x1241))+(((0.00925751294893567)*x1223))+(((0.0185150129489311)*x1225))+(((-0.0185150129489311)*x1226))+(((-1.0)*r10*x1239))+(((0.0648043305514941)*x1221))+((cj4*x1244))+((cj4*x1245))+((x1231*x1242))+((r12*x1237))+((x1230*x1242))+((x1229*x1238))+x1222);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1246=((0.250000349687704)*cj1);
IkReal x1247=((0.250000349687704)*sj1);
IkReal x1248=((0.749999650312296)*cj1*cj4);
IkReal x1249=((0.433012903784321)*cj1*cj5);
IkReal x1250=(r11*x1249);
IkReal x1251=((0.433012903784321)*cj1*sj5);
IkReal x1252=(r10*x1251);
IkReal x1253=((0.749999650312296)*cj4*sj1);
IkReal x1254=((0.433012903784321)*cj5*sj1);
IkReal x1255=(r21*x1254);
IkReal x1256=((0.433012903784321)*sj1*sj5);
IkReal x1257=(r20*x1256);
IkReal x1258=((0.866025201892125)*cj1*cj5*sj4);
IkReal x1259=((0.866025201892125)*cj1*sj4*sj5);
IkReal x1260=((0.866025201892125)*cj5*sj1*sj4);
IkReal x1261=((0.866025201892125)*sj1*sj4*sj5);
IkReal x1262=(r21*x1249);
IkReal x1263=(r20*x1251);
IkReal x1264=(r11*x1254);
IkReal x1265=(r10*x1256);
if( IKabs((((cj4*x1255))+((r10*x1258))+(((-1.0)*x1252))+((r20*x1260))+(((-1.0)*r21*x1261))+(((-1.0)*r11*x1259))+((r22*x1253))+((cj4*x1250))+((r12*x1248))+((cj4*x1257))+(((-1.0)*x1255))+((cj4*x1252))+((r12*x1246))+(((-1.0)*x1250))+((r22*x1247))+(((-1.0)*x1257)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r12*x1253))+((cj4*x1262))+((cj4*x1263))+(((-1.0)*x1262))+(((-1.0)*x1263))+((r22*x1246))+(((-1.0)*r21*x1259))+x1265+x1264+(((-1.0)*cj4*x1264))+(((-1.0)*cj4*x1265))+(((-1.0)*r12*x1247))+((r11*x1261))+((r20*x1258))+(((-1.0)*r10*x1260))+((r22*x1248)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x1255))+((r10*x1258))+(((-1.0)*x1252))+((r20*x1260))+(((-1.0)*r21*x1261))+(((-1.0)*r11*x1259))+((r22*x1253))+((cj4*x1250))+((r12*x1248))+((cj4*x1257))+(((-1.0)*x1255))+((cj4*x1252))+((r12*x1246))+(((-1.0)*x1250))+((r22*x1247))+(((-1.0)*x1257))))+IKsqr(((((-1.0)*r12*x1253))+((cj4*x1262))+((cj4*x1263))+(((-1.0)*x1262))+(((-1.0)*x1263))+((r22*x1246))+(((-1.0)*r21*x1259))+x1265+x1264+(((-1.0)*cj4*x1264))+(((-1.0)*cj4*x1265))+(((-1.0)*r12*x1247))+((r11*x1261))+((r20*x1258))+(((-1.0)*r10*x1260))+((r22*x1248))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x1255))+((r10*x1258))+(((-1.0)*x1252))+((r20*x1260))+(((-1.0)*r21*x1261))+(((-1.0)*r11*x1259))+((r22*x1253))+((cj4*x1250))+((r12*x1248))+((cj4*x1257))+(((-1.0)*x1255))+((cj4*x1252))+((r12*x1246))+(((-1.0)*x1250))+((r22*x1247))+(((-1.0)*x1257))), ((((-1.0)*r12*x1253))+((cj4*x1262))+((cj4*x1263))+(((-1.0)*x1262))+(((-1.0)*x1263))+((r22*x1246))+(((-1.0)*r21*x1259))+x1265+x1264+(((-1.0)*cj4*x1264))+(((-1.0)*cj4*x1265))+(((-1.0)*r12*x1247))+((r11*x1261))+((r20*x1258))+(((-1.0)*r10*x1260))+((r22*x1248))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1266=IKcos(j2);
IkReal x1267=(cj1*x1266);
IkReal x1268=IKsin(j2);
IkReal x1269=(sj1*x1268);
IkReal x1270=(x1267+x1269);
IkReal x1271=((0.749999650312296)*cj4);
IkReal x1272=(cj5*r21);
IkReal x1273=((0.433012903784321)*x1272);
IkReal x1274=(r20*sj5);
IkReal x1275=((0.433012903784321)*x1274);
IkReal x1276=(cj5*r20*sj4);
IkReal x1277=(r21*sj4*sj5);
IkReal x1278=(cj1*x1268);
IkReal x1279=(cj5*r11);
IkReal x1280=((0.433012903784321)*x1279);
IkReal x1281=(r10*sj5);
IkReal x1282=((0.433012903784321)*x1281);
IkReal x1283=(sj1*x1266);
IkReal x1284=(cj5*r10*sj4);
IkReal x1285=(r11*sj4*sj5);
IkReal x1286=((0.0160344678271334)*r22);
IkReal x1287=((0.00925751294893567)*cj4);
IkReal x1288=((0.0160344678271334)*r12);
IkReal x1289=((0.433012903784321)*sj3);
IkReal x1290=(r12*x1289);
IkReal x1291=((0.866025201892125)*cj3*sj4);
IkReal x1292=((0.749999650312296)*sj3);
IkReal x1293=(cj3*cj4*sj5);
IkReal x1294=((1.0)*cj3*cj4*cj5);
IkReal x1295=((0.500000349687582)*cj3*sj4);
IkReal x1296=((0.250000349687704)*cj4*sj3);
IkReal x1297=((0.500000349687582)*sj3);
IkReal x1298=(r22*x1289);
evalcond[0]=((((-1.0)*cj4*x1275))+(((-0.866025201892125)*x1276))+(((-1.0)*r22*x1271))+x1275+x1270+x1273+(((0.866025201892125)*x1277))+(((-1.0)*cj4*x1273))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*cj4*x1282))+(((-1.0)*r12*x1271))+(((-1.0)*x1283))+(((0.866025201892125)*x1285))+(((-1.0)*(0.250000349687704)*r12))+(((-0.866025201892125)*x1284))+(((-1.0)*cj4*x1280))+x1278+x1280+x1282);
evalcond[2]=((((-0.0185150129489311)*x1277))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x1269))+((x1272*x1287))+(((0.29)*cj1))+(((-0.27144)*x1267))+(((0.0648043305514941)*x1272))+((x1274*x1287))+(((-1.0)*x1286))+(((0.0185150129489311)*x1276))+(((0.0648043305514941)*x1274))+((cj4*x1286)));
evalcond[3]=((((0.0648043305514941)*x1279))+(((0.27144)*x1283))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((-0.0185150129489311)*x1285))+((x1281*x1287))+(((-0.27144)*x1278))+(((0.0648043305514941)*x1281))+((x1279*x1287))+(((-1.0)*x1288))+(((0.0185150129489311)*x1284))+((cj4*x1288)));
evalcond[4]=(((x1281*x1295))+((x1279*x1296))+((x1281*x1292))+((x1281*x1296))+((r12*x1291))+((x1279*x1295))+((x1279*x1292))+((cj4*x1290))+((r11*x1293))+x1270+(((-1.0)*r10*x1294))+(((-1.0)*x1290))+(((-1.0)*x1285*x1297))+((x1284*x1297)));
evalcond[5]=(((x1274*x1292))+(((-1.0)*x1298))+((x1274*x1295))+((x1274*x1296))+((r22*x1291))+(((-1.0)*r20*x1294))+x1283+((x1272*x1295))+((x1272*x1292))+((x1272*x1296))+((cj4*x1298))+(((-1.0)*x1277*x1297))+((x1276*x1297))+((r21*x1293))+(((-1.0)*x1278)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1299=((0.433012903784321)*sj5);
IkReal x1300=((0.866025201892125)*sj4);
IkReal x1301=((0.433012903784321)*cj5);
IkReal x1302=((0.433012903784321)*r12);
IkReal x1303=(cj5*r11);
IkReal x1304=(r10*sj5);
IkReal x1305=((0.250000349687704)*cj4);
IkReal x1306=((0.500000349687582)*sj4);
IkReal x1307=(cj5*r10);
IkReal x1308=(r11*sj5);
CheckValue<IkReal> x1309 = IKatan2WithCheck(IkReal((x1302+(((-1.0)*cj4*x1302))+(((-0.749999650312296)*x1303))+(((-1.0)*x1303*x1305))+((x1306*x1308))+(((-0.749999650312296)*x1304))+(((-1.0)*x1304*x1305))+(((-1.0)*x1306*x1307)))),IkReal(((((-1.0)*r12*x1300))+(((-1.0)*x1303*x1306))+(((-1.0)*cj4*x1308))+(((-1.0)*x1304*x1306))+((cj4*x1307)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1309.valid){
continue;
}
CheckValue<IkReal> x1310=IKPowWithIntegerCheck(IKsign((((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r20*(((((-1.0)*x1299))+((cj4*x1299))+((cj5*x1300))))))+((r21*(((((-1.0)*sj5*x1300))+((cj4*x1301))+(((-1.0)*x1301)))))))),-1);
if(!x1310.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1309.value)+(((1.5707963267949)*(x1310.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1311=IKcos(j3);
IkReal x1312=((0.433012903784321)*x1311);
IkReal x1313=(r22*x1312);
IkReal x1314=((0.749999650312296)*cj5*x1311);
IkReal x1315=((0.749999650312296)*sj5*x1311);
IkReal x1316=IKsin(j3);
IkReal x1317=((0.866025201892125)*sj4*x1316);
IkReal x1318=(cj4*sj5*x1316);
IkReal x1319=((1.0)*cj4*cj5*x1316);
IkReal x1320=((0.250000349687704)*cj4*cj5*x1311);
IkReal x1321=((0.250000349687704)*cj4*sj5*x1311);
IkReal x1322=((0.500000349687582)*cj5*sj4*x1311);
IkReal x1323=((0.500000349687582)*cj5*sj4*x1316);
IkReal x1324=((0.500000349687582)*sj4*sj5*x1316);
IkReal x1325=((0.500000349687582)*sj4*sj5*x1311);
IkReal x1326=(r12*x1312);
IkReal x1327=((0.433012903784321)*r02);
IkReal x1328=(x1316*x1327);
IkReal x1329=((0.749999650312296)*cj5*r01);
IkReal x1330=((0.749999650312296)*r00*sj5);
IkReal x1331=((0.866025201892125)*r02*sj4);
IkReal x1332=(cj4*r01*sj5);
IkReal x1333=((1.0)*cj4*cj5*r00);
IkReal x1334=((0.250000349687704)*cj4*cj5*r01);
IkReal x1335=((0.250000349687704)*r00);
IkReal x1336=((0.500000349687582)*cj5*r00*sj4);
IkReal x1337=((0.500000349687582)*cj5*r01*sj4);
IkReal x1338=((0.500000349687582)*r00*sj4*sj5);
IkReal x1339=((0.500000349687582)*r01*sj4*sj5);
IkReal x1340=(x1311*x1327);
evalcond[0]=((((-1.0)*r20*x1322))+(((-1.0)*r20*x1321))+(((-1.0)*r21*x1320))+(((-1.0)*cj4*x1313))+((r21*x1325))+((r21*x1318))+((r21*x1323))+(((-1.0)*r21*x1314))+((r22*x1317))+(((-1.0)*r20*x1315))+((r20*x1324))+(((-1.0)*r20*x1319))+x1313);
evalcond[1]=(x1326+(((-1.0)*r10*x1322))+(((-1.0)*r11*x1314))+(((-1.0)*r10*x1315))+(((-1.0)*r11*x1320))+((r10*x1324))+((r11*x1323))+((r11*x1318))+((r11*x1325))+(((-1.0)*r10*x1321))+(((-1.0)*r10*x1319))+((r12*x1317))+(((-1.0)*cj4*x1326)));
evalcond[2]=((((-1.0)*x1311*x1333))+((x1311*x1332))+((x1316*x1329))+((x1318*x1335))+((x1311*x1338))+((x1316*x1334))+((x1316*x1336))+((cj4*x1328))+((x1311*x1337))+((x1316*x1330))+(((-1.0)*x1316*x1339))+(((-1.0)*x1328))+((x1311*x1331)));
evalcond[3]=((-1.0)+(((-1.0)*x1311*x1329))+(((-1.0)*x1311*x1330))+(((-1.0)*cj4*sj5*x1311*x1335))+(((-1.0)*cj4*x1340))+(((-1.0)*x1311*x1334))+((x1316*x1338))+((x1316*x1337))+((x1316*x1332))+((x1316*x1331))+(((-1.0)*x1316*x1333))+x1340+((x1311*x1339))+(((-1.0)*x1311*x1336)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1341=((0.646708404322884)*cj4);
IkReal x1342=((0.62876328674038)*cj5);
IkReal x1343=((0.62876328674038)*sj5);
IkReal x1344=((0.373377619497519)*cj4*cj5);
IkReal x1345=((0.373377619497519)*cj4*sj5);
IkReal x1346=((0.746754716733336)*cj5*sj4);
IkReal x1347=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r10*x1346))+((r10*x1343))+(((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r12*x1341))+((r11*x1342))+((r11*x1347))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x1344))+(((-1.0)*r10*x1345)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r21*x1344))+((r20*x1346))+(((3.44827586206897)*pz))+((r22*x1341))+(((-1.0)*r21*x1342))+(((-1.0)*r21*x1347))+(((0.289291595677116)*r22))+((r20*x1345))+(((-1.0)*r20*x1343)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x1346))+((r10*x1343))+(((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r12*x1341))+((r11*x1342))+((r11*x1347))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x1344))+(((-1.0)*r10*x1345))))+IKsqr((((r21*x1344))+((r20*x1346))+(((3.44827586206897)*pz))+((r22*x1341))+(((-1.0)*r21*x1342))+(((-1.0)*r21*x1347))+(((0.289291595677116)*r22))+((r20*x1345))+(((-1.0)*r20*x1343))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r10*x1346))+((r10*x1343))+(((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r12*x1341))+((r11*x1342))+((r11*x1347))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x1344))+(((-1.0)*r10*x1345))), (((r21*x1344))+((r20*x1346))+(((3.44827586206897)*pz))+((r22*x1341))+(((-1.0)*r21*x1342))+(((-1.0)*r21*x1347))+(((0.289291595677116)*r22))+((r20*x1345))+(((-1.0)*r20*x1343))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1348=((0.187545437253636)*cj4);
IkReal x1349=(cj5*r21);
IkReal x1350=(r20*sj5);
IkReal x1351=((0.29)*(IKcos(j1)));
IkReal x1352=(cj4*cj5*r21);
IkReal x1353=(cj4*r20*sj5);
IkReal x1354=(cj5*r20*sj4);
IkReal x1355=(r21*sj4*sj5);
IkReal x1356=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*py)));
IkReal x1357=(cj5*r11);
IkReal x1358=(r10*sj5);
IkReal x1359=(cj4*cj5*r11);
IkReal x1360=(cj4*r10*sj5);
IkReal x1361=(cj5*r10*sj4);
IkReal x1362=(r11*sj4*sj5);
IkReal x1363=((0.0160344678271334)*r12);
IkReal x1364=((0.117537022603216)*sj3);
IkReal x1365=(r22*x1364);
IkReal x1366=((0.235073880801598)*cj3*sj4);
IkReal x1367=((0.20357990508077)*sj3);
IkReal x1368=((0.27144)*cj3*cj4*cj5);
IkReal x1369=((0.27144)*cj3*cj4*sj5);
IkReal x1370=((0.135720094919197)*cj3*sj4);
IkReal x1371=((0.0678600949192303)*sj3);
IkReal x1372=((0.135720094919197)*sj3);
IkReal x1373=((0.0160344678271334)*r22);
IkReal x1374=(r12*x1364);
evalcond[0]=((((0.216558867852667)*x1354))+(((-0.18234135315471)*x1350))+(((-0.18234135315471)*x1349))+((r22*x1348))+(((0.10827950965428)*x1352))+pz+(((-1.0)*x1351))+(((0.0838945627463637)*r22))+(((-0.216558867852667)*x1355))+(((0.10827950965428)*x1353)));
evalcond[1]=((((0.18234135315471)*x1358))+(((-1.0)*(0.0838945627463637)*r12))+(((-0.10827950965428)*x1359))+(((0.18234135315471)*x1357))+(((-0.216558867852667)*x1361))+x1356+(((-1.0)*r12*x1348))+(((-0.10827950965428)*x1360))+(((0.216558867852667)*x1362)));
evalcond[2]=((((-0.0185150129489311)*x1362))+((x1355*x1372))+(((-1.0)*x1363))+(((-1.0)*x1349*x1367))+(((0.00925751294893567)*x1360))+(((-1.0)*x1353*x1371))+(((-1.0)*x1350*x1370))+(((0.0648043305514941)*x1358))+(((0.0185150129489311)*x1361))+(((0.00925751294893567)*x1359))+(((-1.0)*x1350*x1367))+(((-1.0)*x1352*x1371))+(((-1.0)*x1354*x1372))+(((-1.0)*cj4*x1365))+(((-1.0)*r22*x1366))+(((-1.0)*x1349*x1370))+((r20*x1368))+((cj4*x1363))+x1356+(((0.0648043305514941)*x1357))+x1365+(((-1.0)*r21*x1369)));
evalcond[3]=(((r12*x1366))+((cj4*x1373))+((x1357*x1367))+((x1358*x1367))+((r11*x1369))+(((-1.0)*(1.0)*pz))+((x1361*x1372))+((x1360*x1371))+(((0.00925751294893567)*x1352))+(((-1.0)*x1374))+((x1357*x1370))+(((0.00925751294893567)*x1353))+(((0.0185150129489311)*x1354))+(((-0.0185150129489311)*x1355))+(((-1.0)*x1373))+(((-1.0)*x1362*x1372))+(((0.0648043305514941)*x1350))+x1351+(((0.0648043305514941)*x1349))+((x1359*x1371))+((cj4*x1374))+((x1358*x1370))+(((-1.0)*r10*x1368)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1375=((0.250000349687704)*cj1);
IkReal x1376=((0.250000349687704)*sj1);
IkReal x1377=((0.749999650312296)*cj1*cj4);
IkReal x1378=((0.433012903784321)*cj1*cj5);
IkReal x1379=(r11*x1378);
IkReal x1380=((0.433012903784321)*cj1*sj5);
IkReal x1381=(r10*x1380);
IkReal x1382=((0.749999650312296)*cj4*sj1);
IkReal x1383=((0.433012903784321)*cj5*sj1);
IkReal x1384=(r21*x1383);
IkReal x1385=((0.433012903784321)*sj1*sj5);
IkReal x1386=(r20*x1385);
IkReal x1387=((0.866025201892125)*cj1*cj5*sj4);
IkReal x1388=((0.866025201892125)*cj1*sj4*sj5);
IkReal x1389=((0.866025201892125)*cj5*sj1*sj4);
IkReal x1390=((0.866025201892125)*sj1*sj4*sj5);
IkReal x1391=(r21*x1378);
IkReal x1392=(r20*x1380);
IkReal x1393=(r11*x1383);
IkReal x1394=(r10*x1385);
if( IKabs((((r12*x1375))+(((-1.0)*x1386))+(((-1.0)*r11*x1388))+((cj4*x1384))+((r20*x1389))+((cj4*x1381))+(((-1.0)*x1384))+((cj4*x1379))+((r22*x1376))+((r10*x1387))+(((-1.0)*x1381))+((cj4*x1386))+(((-1.0)*r21*x1390))+((r22*x1382))+((r12*x1377))+(((-1.0)*x1379)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj4*x1394))+((cj4*x1392))+(((-1.0)*r12*x1376))+(((-1.0)*r12*x1382))+(((-1.0)*r10*x1389))+((r11*x1390))+x1393+x1394+((r22*x1377))+(((-1.0)*r21*x1388))+((r20*x1387))+(((-1.0)*cj4*x1393))+((r22*x1375))+((cj4*x1391))+(((-1.0)*x1391))+(((-1.0)*x1392)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1375))+(((-1.0)*x1386))+(((-1.0)*r11*x1388))+((cj4*x1384))+((r20*x1389))+((cj4*x1381))+(((-1.0)*x1384))+((cj4*x1379))+((r22*x1376))+((r10*x1387))+(((-1.0)*x1381))+((cj4*x1386))+(((-1.0)*r21*x1390))+((r22*x1382))+((r12*x1377))+(((-1.0)*x1379))))+IKsqr(((((-1.0)*cj4*x1394))+((cj4*x1392))+(((-1.0)*r12*x1376))+(((-1.0)*r12*x1382))+(((-1.0)*r10*x1389))+((r11*x1390))+x1393+x1394+((r22*x1377))+(((-1.0)*r21*x1388))+((r20*x1387))+(((-1.0)*cj4*x1393))+((r22*x1375))+((cj4*x1391))+(((-1.0)*x1391))+(((-1.0)*x1392))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r12*x1375))+(((-1.0)*x1386))+(((-1.0)*r11*x1388))+((cj4*x1384))+((r20*x1389))+((cj4*x1381))+(((-1.0)*x1384))+((cj4*x1379))+((r22*x1376))+((r10*x1387))+(((-1.0)*x1381))+((cj4*x1386))+(((-1.0)*r21*x1390))+((r22*x1382))+((r12*x1377))+(((-1.0)*x1379))), ((((-1.0)*cj4*x1394))+((cj4*x1392))+(((-1.0)*r12*x1376))+(((-1.0)*r12*x1382))+(((-1.0)*r10*x1389))+((r11*x1390))+x1393+x1394+((r22*x1377))+(((-1.0)*r21*x1388))+((r20*x1387))+(((-1.0)*cj4*x1393))+((r22*x1375))+((cj4*x1391))+(((-1.0)*x1391))+(((-1.0)*x1392))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1395=IKcos(j2);
IkReal x1396=(cj1*x1395);
IkReal x1397=IKsin(j2);
IkReal x1398=(sj1*x1397);
IkReal x1399=(x1396+x1398);
IkReal x1400=((0.749999650312296)*cj4);
IkReal x1401=(cj5*r21);
IkReal x1402=((0.433012903784321)*x1401);
IkReal x1403=(r20*sj5);
IkReal x1404=((0.433012903784321)*x1403);
IkReal x1405=(cj5*r20*sj4);
IkReal x1406=(r21*sj4*sj5);
IkReal x1407=(cj1*x1397);
IkReal x1408=(cj5*r11);
IkReal x1409=((0.433012903784321)*x1408);
IkReal x1410=(r10*sj5);
IkReal x1411=((0.433012903784321)*x1410);
IkReal x1412=(sj1*x1395);
IkReal x1413=(cj5*r10*sj4);
IkReal x1414=(r11*sj4*sj5);
IkReal x1415=((0.0160344678271334)*r22);
IkReal x1416=((0.00925751294893567)*cj4);
IkReal x1417=((0.0160344678271334)*r12);
IkReal x1418=((0.433012903784321)*sj3);
IkReal x1419=(r12*x1418);
IkReal x1420=((0.866025201892125)*cj3*sj4);
IkReal x1421=((0.749999650312296)*sj3);
IkReal x1422=(cj3*cj4*sj5);
IkReal x1423=((1.0)*cj3*cj4*cj5);
IkReal x1424=((0.500000349687582)*cj3*sj4);
IkReal x1425=((0.250000349687704)*cj4*sj3);
IkReal x1426=((0.500000349687582)*sj3);
IkReal x1427=(r22*x1418);
evalcond[0]=((((0.866025201892125)*x1406))+(((-1.0)*cj4*x1402))+(((-1.0)*cj4*x1404))+x1402+x1404+x1399+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x1400))+(((-0.866025201892125)*x1405)));
evalcond[1]=((((-0.866025201892125)*x1413))+(((-1.0)*r12*x1400))+(((-1.0)*cj4*x1409))+(((0.866025201892125)*x1414))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*x1412))+(((-1.0)*cj4*x1411))+x1407+x1409+x1411);
evalcond[2]=((((-1.0)*x1415))+(((0.0648043305514941)*x1401))+((x1401*x1416))+((cj4*x1415))+(((-0.27144)*x1396))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x1403))+(((-0.27144)*x1398))+(((-0.0185150129489311)*x1406))+(((0.0185150129489311)*x1405))+(((0.29)*cj1))+((x1403*x1416)));
evalcond[3]=((((-0.0185150129489311)*x1414))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((0.0648043305514941)*x1410))+(((-1.0)*x1417))+((cj4*x1417))+((x1410*x1416))+(((-0.27144)*x1407))+(((0.0185150129489311)*x1413))+((x1408*x1416))+(((0.0648043305514941)*x1408))+(((0.27144)*x1412)));
evalcond[4]=(((x1410*x1425))+(((-1.0)*r10*x1423))+((x1408*x1425))+((x1410*x1421))+((x1410*x1424))+((cj4*x1419))+((r12*x1420))+(((-1.0)*x1414*x1426))+((x1413*x1426))+x1399+((x1408*x1424))+(((-1.0)*x1419))+((r11*x1422))+((x1408*x1421)));
evalcond[5]=(((r21*x1422))+(((-1.0)*x1406*x1426))+((x1401*x1421))+(((-1.0)*x1427))+((x1403*x1425))+(((-1.0)*x1407))+((x1401*x1424))+((x1403*x1424))+((cj4*x1427))+((x1401*x1425))+x1412+((x1405*x1426))+((x1403*x1421))+((r22*x1420))+(((-1.0)*r20*x1423)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1428=((0.433012903784321)*sj5);
IkReal x1429=((0.866025201892125)*sj4);
IkReal x1430=((0.433012903784321)*cj5);
IkReal x1431=((0.433012903784321)*r22);
IkReal x1432=(cj5*r21);
IkReal x1433=(r20*sj5);
IkReal x1434=((0.250000349687704)*cj4);
IkReal x1435=((0.500000349687582)*sj4);
IkReal x1436=(cj5*r20);
IkReal x1437=(r21*sj5);
CheckValue<IkReal> x1438=IKPowWithIntegerCheck(IKsign((((r12*(((-0.250000349687704)+(((-1.0)*(0.749999650312296)*cj4))))))+((r10*((x1428+(((-1.0)*cj5*x1429))+(((-1.0)*cj4*x1428))))))+((r11*(((((-1.0)*cj4*x1430))+((sj5*x1429))+x1430)))))),-1);
if(!x1438.valid){
continue;
}
CheckValue<IkReal> x1439 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x1433))+(((-0.749999650312296)*x1432))+(((-1.0)*x1433*x1434))+x1431+(((-1.0)*x1432*x1434))+((x1435*x1437))+(((-1.0)*cj4*x1431))+(((-1.0)*x1435*x1436)))),IkReal(((((-1.0)*x1433*x1435))+(((-1.0)*r22*x1429))+(((-1.0)*cj4*x1437))+((cj4*x1436))+(((-1.0)*x1432*x1435)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1439.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1438.value)))+(x1439.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1440=IKcos(j3);
IkReal x1441=((0.433012903784321)*x1440);
IkReal x1442=(r22*x1441);
IkReal x1443=((0.749999650312296)*cj5*x1440);
IkReal x1444=((0.749999650312296)*sj5*x1440);
IkReal x1445=IKsin(j3);
IkReal x1446=((0.866025201892125)*sj4*x1445);
IkReal x1447=(cj4*sj5*x1445);
IkReal x1448=((1.0)*cj4*cj5*x1445);
IkReal x1449=((0.250000349687704)*cj4*cj5*x1440);
IkReal x1450=((0.250000349687704)*cj4*sj5*x1440);
IkReal x1451=((0.500000349687582)*cj5*sj4*x1440);
IkReal x1452=((0.500000349687582)*cj5*sj4*x1445);
IkReal x1453=((0.500000349687582)*sj4*sj5*x1445);
IkReal x1454=((0.500000349687582)*sj4*sj5*x1440);
IkReal x1455=(r12*x1441);
IkReal x1456=((0.433012903784321)*r02);
IkReal x1457=(x1445*x1456);
IkReal x1458=((0.749999650312296)*cj5*r01);
IkReal x1459=((0.749999650312296)*r00*sj5);
IkReal x1460=((0.866025201892125)*r02*sj4);
IkReal x1461=(cj4*r01*sj5);
IkReal x1462=((1.0)*cj4*cj5*r00);
IkReal x1463=((0.250000349687704)*cj4*cj5*r01);
IkReal x1464=((0.250000349687704)*r00);
IkReal x1465=((0.500000349687582)*cj5*r00*sj4);
IkReal x1466=((0.500000349687582)*cj5*r01*sj4);
IkReal x1467=((0.500000349687582)*r00*sj4*sj5);
IkReal x1468=((0.500000349687582)*r01*sj4*sj5);
IkReal x1469=(x1440*x1456);
evalcond[0]=((((-1.0)*cj4*x1442))+((r22*x1446))+((r21*x1447))+(((-1.0)*r20*x1444))+(((-1.0)*r20*x1448))+(((-1.0)*r21*x1449))+((r20*x1453))+(((-1.0)*r21*x1443))+((r21*x1452))+x1442+(((-1.0)*r20*x1450))+((r21*x1454))+(((-1.0)*r20*x1451)));
evalcond[1]=((((-1.0)*r11*x1443))+(((-1.0)*r10*x1444))+(((-1.0)*r10*x1448))+((r12*x1446))+(((-1.0)*cj4*x1455))+((r11*x1452))+((r11*x1447))+(((-1.0)*r11*x1449))+((r11*x1454))+((r10*x1453))+(((-1.0)*r10*x1451))+(((-1.0)*r10*x1450))+x1455);
evalcond[2]=(((x1445*x1459))+((x1447*x1464))+((cj4*x1457))+((x1445*x1458))+((x1440*x1466))+((x1440*x1461))+((x1440*x1460))+((x1445*x1465))+(((-1.0)*x1457))+((x1445*x1463))+(((-1.0)*x1445*x1468))+((x1440*x1467))+(((-1.0)*x1440*x1462)));
evalcond[3]=((-1.0)+((x1440*x1468))+(((-1.0)*cj4*sj5*x1440*x1464))+((x1445*x1467))+(((-1.0)*x1445*x1462))+(((-1.0)*x1440*x1459))+((x1445*x1466))+(((-1.0)*x1440*x1458))+x1469+(((-1.0)*x1440*x1465))+(((-1.0)*cj4*x1469))+((x1445*x1460))+((x1445*x1461))+(((-1.0)*x1440*x1463)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1470=((0.646708404322884)*cj4);
IkReal x1471=((0.62876328674038)*cj5);
IkReal x1472=((0.62876328674038)*sj5);
IkReal x1473=((0.373377619497519)*cj4*cj5);
IkReal x1474=((0.373377619497519)*cj4*sj5);
IkReal x1475=((0.746754716733336)*cj5*sj4);
IkReal x1476=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r10*x1475))+(((-1.0)*r10*x1474))+((r11*x1471))+(((-1.0)*(0.289291595677116)*r12))+((r11*x1476))+(((-1.0)*r12*x1470))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x1473))+((r10*x1472)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+((r20*x1474))+((r20*x1475))+((r22*x1470))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1471))+((r21*x1473))+(((-1.0)*r20*x1472))+(((-1.0)*r21*x1476)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x1475))+(((-1.0)*r10*x1474))+((r11*x1471))+(((-1.0)*(0.289291595677116)*r12))+((r11*x1476))+(((-1.0)*r12*x1470))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x1473))+((r10*x1472))))+IKsqr(((((3.44827586206897)*pz))+((r20*x1474))+((r20*x1475))+((r22*x1470))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1471))+((r21*x1473))+(((-1.0)*r20*x1472))+(((-1.0)*r21*x1476))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r10*x1475))+(((-1.0)*r10*x1474))+((r11*x1471))+(((-1.0)*(0.289291595677116)*r12))+((r11*x1476))+(((-1.0)*r12*x1470))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x1473))+((r10*x1472))), ((((3.44827586206897)*pz))+((r20*x1474))+((r20*x1475))+((r22*x1470))+(((0.289291595677116)*r22))+(((-1.0)*r21*x1471))+((r21*x1473))+(((-1.0)*r20*x1472))+(((-1.0)*r21*x1476))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1477=((0.187545437253636)*cj4);
IkReal x1478=(cj5*r21);
IkReal x1479=(r20*sj5);
IkReal x1480=((0.29)*(IKcos(j1)));
IkReal x1481=(cj4*cj5*r21);
IkReal x1482=(cj4*r20*sj5);
IkReal x1483=(cj5*r20*sj4);
IkReal x1484=(r21*sj4*sj5);
IkReal x1485=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*py)));
IkReal x1486=(cj5*r11);
IkReal x1487=(r10*sj5);
IkReal x1488=(cj4*cj5*r11);
IkReal x1489=(cj4*r10*sj5);
IkReal x1490=(cj5*r10*sj4);
IkReal x1491=(r11*sj4*sj5);
IkReal x1492=((0.0160344678271334)*r12);
IkReal x1493=((0.117537022603216)*sj3);
IkReal x1494=(r22*x1493);
IkReal x1495=((0.235073880801598)*cj3*sj4);
IkReal x1496=((0.20357990508077)*sj3);
IkReal x1497=((0.27144)*cj3*cj4*cj5);
IkReal x1498=((0.27144)*cj3*cj4*sj5);
IkReal x1499=((0.135720094919197)*cj3*sj4);
IkReal x1500=((0.0678600949192303)*sj3);
IkReal x1501=((0.135720094919197)*sj3);
IkReal x1502=((0.0160344678271334)*r22);
IkReal x1503=(r12*x1493);
evalcond[0]=((((0.216558867852667)*x1483))+((r22*x1477))+(((-1.0)*x1480))+pz+(((-0.216558867852667)*x1484))+(((-0.18234135315471)*x1478))+(((-0.18234135315471)*x1479))+(((0.10827950965428)*x1482))+(((0.0838945627463637)*r22))+(((0.10827950965428)*x1481)));
evalcond[1]=((((-1.0)*(0.0838945627463637)*r12))+(((0.18234135315471)*x1486))+(((-0.10827950965428)*x1488))+(((-0.216558867852667)*x1490))+(((-1.0)*r12*x1477))+(((-0.10827950965428)*x1489))+(((0.18234135315471)*x1487))+x1485+(((0.216558867852667)*x1491)));
evalcond[2]=(x1494+(((0.00925751294893567)*x1488))+(((0.0185150129489311)*x1490))+(((0.0648043305514941)*x1486))+(((-1.0)*x1481*x1500))+(((-0.0185150129489311)*x1491))+(((-1.0)*x1478*x1499))+(((-1.0)*x1492))+(((-1.0)*cj4*x1494))+(((-1.0)*r22*x1495))+((x1484*x1501))+(((-1.0)*x1482*x1500))+((r20*x1497))+(((-1.0)*x1478*x1496))+(((-1.0)*x1479*x1496))+x1485+(((-1.0)*r21*x1498))+(((-1.0)*x1483*x1501))+(((0.0648043305514941)*x1487))+(((0.00925751294893567)*x1489))+((cj4*x1492))+(((-1.0)*x1479*x1499)));
evalcond[3]=((((-1.0)*x1502))+(((0.0648043305514941)*x1479))+((cj4*x1502))+(((0.00925751294893567)*x1481))+(((-1.0)*x1491*x1501))+(((-1.0)*(1.0)*pz))+((x1486*x1496))+(((0.0185150129489311)*x1483))+(((-1.0)*r10*x1497))+((x1490*x1501))+(((0.00925751294893567)*x1482))+((x1489*x1500))+((r12*x1495))+(((-0.0185150129489311)*x1484))+(((-1.0)*x1503))+((x1487*x1499))+((cj4*x1503))+((r11*x1498))+((x1487*x1496))+x1480+((x1488*x1500))+((x1486*x1499))+(((0.0648043305514941)*x1478)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1504=((0.250000349687704)*cj1);
IkReal x1505=((0.250000349687704)*sj1);
IkReal x1506=((0.749999650312296)*cj1*cj4);
IkReal x1507=((0.433012903784321)*cj1*cj5);
IkReal x1508=(r11*x1507);
IkReal x1509=((0.433012903784321)*cj1*sj5);
IkReal x1510=(r10*x1509);
IkReal x1511=((0.749999650312296)*cj4*sj1);
IkReal x1512=((0.433012903784321)*cj5*sj1);
IkReal x1513=(r21*x1512);
IkReal x1514=((0.433012903784321)*sj1*sj5);
IkReal x1515=(r20*x1514);
IkReal x1516=((0.866025201892125)*cj1*cj5*sj4);
IkReal x1517=((0.866025201892125)*cj1*sj4*sj5);
IkReal x1518=((0.866025201892125)*cj5*sj1*sj4);
IkReal x1519=((0.866025201892125)*sj1*sj4*sj5);
IkReal x1520=(r21*x1507);
IkReal x1521=(r20*x1509);
IkReal x1522=(r11*x1512);
IkReal x1523=(r10*x1514);
if( IKabs((((cj4*x1515))+(((-1.0)*x1508))+((cj4*x1508))+(((-1.0)*r21*x1519))+((r10*x1516))+((cj4*x1513))+(((-1.0)*x1515))+((r22*x1511))+((cj4*x1510))+(((-1.0)*r11*x1517))+((r12*x1504))+((r20*x1518))+((r22*x1505))+((r12*x1506))+(((-1.0)*x1513))+(((-1.0)*x1510)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1520))+((cj4*x1520))+(((-1.0)*cj4*x1523))+((r11*x1519))+(((-1.0)*x1521))+(((-1.0)*r10*x1518))+(((-1.0)*r12*x1511))+((r22*x1504))+((cj4*x1521))+((r22*x1506))+(((-1.0)*r12*x1505))+(((-1.0)*r21*x1517))+x1522+x1523+(((-1.0)*cj4*x1522))+((r20*x1516)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x1515))+(((-1.0)*x1508))+((cj4*x1508))+(((-1.0)*r21*x1519))+((r10*x1516))+((cj4*x1513))+(((-1.0)*x1515))+((r22*x1511))+((cj4*x1510))+(((-1.0)*r11*x1517))+((r12*x1504))+((r20*x1518))+((r22*x1505))+((r12*x1506))+(((-1.0)*x1513))+(((-1.0)*x1510))))+IKsqr(((((-1.0)*x1520))+((cj4*x1520))+(((-1.0)*cj4*x1523))+((r11*x1519))+(((-1.0)*x1521))+(((-1.0)*r10*x1518))+(((-1.0)*r12*x1511))+((r22*x1504))+((cj4*x1521))+((r22*x1506))+(((-1.0)*r12*x1505))+(((-1.0)*r21*x1517))+x1522+x1523+(((-1.0)*cj4*x1522))+((r20*x1516))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x1515))+(((-1.0)*x1508))+((cj4*x1508))+(((-1.0)*r21*x1519))+((r10*x1516))+((cj4*x1513))+(((-1.0)*x1515))+((r22*x1511))+((cj4*x1510))+(((-1.0)*r11*x1517))+((r12*x1504))+((r20*x1518))+((r22*x1505))+((r12*x1506))+(((-1.0)*x1513))+(((-1.0)*x1510))), ((((-1.0)*x1520))+((cj4*x1520))+(((-1.0)*cj4*x1523))+((r11*x1519))+(((-1.0)*x1521))+(((-1.0)*r10*x1518))+(((-1.0)*r12*x1511))+((r22*x1504))+((cj4*x1521))+((r22*x1506))+(((-1.0)*r12*x1505))+(((-1.0)*r21*x1517))+x1522+x1523+(((-1.0)*cj4*x1522))+((r20*x1516))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1524=IKcos(j2);
IkReal x1525=(cj1*x1524);
IkReal x1526=IKsin(j2);
IkReal x1527=(sj1*x1526);
IkReal x1528=(x1525+x1527);
IkReal x1529=((0.749999650312296)*cj4);
IkReal x1530=(cj5*r21);
IkReal x1531=((0.433012903784321)*x1530);
IkReal x1532=(r20*sj5);
IkReal x1533=((0.433012903784321)*x1532);
IkReal x1534=(cj5*r20*sj4);
IkReal x1535=(r21*sj4*sj5);
IkReal x1536=(cj1*x1526);
IkReal x1537=(cj5*r11);
IkReal x1538=((0.433012903784321)*x1537);
IkReal x1539=(r10*sj5);
IkReal x1540=((0.433012903784321)*x1539);
IkReal x1541=(sj1*x1524);
IkReal x1542=(cj5*r10*sj4);
IkReal x1543=(r11*sj4*sj5);
IkReal x1544=((0.0160344678271334)*r22);
IkReal x1545=((0.00925751294893567)*cj4);
IkReal x1546=((0.0160344678271334)*r12);
IkReal x1547=((0.433012903784321)*sj3);
IkReal x1548=(r12*x1547);
IkReal x1549=((0.866025201892125)*cj3*sj4);
IkReal x1550=((0.749999650312296)*sj3);
IkReal x1551=(cj3*cj4*sj5);
IkReal x1552=((1.0)*cj3*cj4*cj5);
IkReal x1553=((0.500000349687582)*cj3*sj4);
IkReal x1554=((0.250000349687704)*cj4*sj3);
IkReal x1555=((0.500000349687582)*sj3);
IkReal x1556=(r22*x1547);
evalcond[0]=((((-1.0)*cj4*x1533))+(((-0.866025201892125)*x1534))+(((0.866025201892125)*x1535))+(((-1.0)*r22*x1529))+x1531+x1533+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x1531))+x1528);
evalcond[1]=((((-1.0)*r12*x1529))+(((-1.0)*cj4*x1538))+(((-0.866025201892125)*x1542))+(((-1.0)*(0.250000349687704)*r12))+x1540+(((-1.0)*cj4*x1540))+x1538+x1536+(((-1.0)*x1541))+(((0.866025201892125)*x1543)));
evalcond[2]=((((-0.27144)*x1527))+((cj4*x1544))+(((-0.27144)*x1525))+(((-1.0)*(1.0)*pz))+(((0.0185150129489311)*x1534))+(((0.29)*cj1))+(((-1.0)*x1544))+((x1530*x1545))+((x1532*x1545))+(((0.0648043305514941)*x1532))+(((0.0648043305514941)*x1530))+(((-0.0185150129489311)*x1535)));
evalcond[3]=((((-1.0)*x1546))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((-0.0185150129489311)*x1543))+(((0.27144)*x1541))+(((0.0648043305514941)*x1537))+((x1537*x1545))+(((0.0648043305514941)*x1539))+(((-0.27144)*x1536))+((x1539*x1545))+((cj4*x1546))+(((0.0185150129489311)*x1542)));
evalcond[4]=(((x1542*x1555))+((cj4*x1548))+((x1537*x1553))+((x1539*x1553))+((x1537*x1554))+(((-1.0)*x1543*x1555))+((r12*x1549))+(((-1.0)*x1548))+((r11*x1551))+((x1537*x1550))+((x1539*x1550))+(((-1.0)*r10*x1552))+((x1539*x1554))+x1528);
evalcond[5]=(((r22*x1549))+((x1532*x1553))+(((-1.0)*x1536))+x1541+((x1532*x1554))+((x1530*x1553))+(((-1.0)*r20*x1552))+((x1530*x1554))+(((-1.0)*x1535*x1555))+((x1532*x1550))+((x1534*x1555))+((r21*x1551))+(((-1.0)*x1556))+((cj4*x1556))+((x1530*x1550)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1557=(cj4*r12);
IkReal x1558=(cj5*r11);
IkReal x1559=((1.73204919243206)*x1558);
IkReal x1560=(r10*sj5);
IkReal x1561=((1.73204919243206)*x1560);
IkReal x1562=(cj5*r10*sj4);
IkReal x1563=(r11*sj4*sj5);
IkReal x1564=((0.433012903784321)*x1558);
IkReal x1565=((0.433012903784321)*x1560);
j3eval[0]=((((3.46409596216145)*x1563))+(((-1.0)*(1.0)*r12))+(((-1.0)*cj4*x1561))+(((-2.99999440500457)*x1557))+(((-1.0)*cj4*x1559))+x1559+x1561+(((-3.46409596216145)*x1562)));
j3eval[1]=IKsign(((((-0.866025201892125)*x1562))+(((0.866025201892125)*x1563))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*cj4*x1565))+x1565+x1564+(((-0.749999650312296)*x1557))+(((-1.0)*cj4*x1564))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1566=(cj4*r22);
IkReal x1567=(cj5*r21);
IkReal x1568=((1.73204919243206)*x1567);
IkReal x1569=(r20*sj5);
IkReal x1570=((1.73204919243206)*x1569);
IkReal x1571=(cj5*r20*sj4);
IkReal x1572=(r21*sj4*sj5);
IkReal x1573=((0.433012903784321)*x1567);
IkReal x1574=((0.433012903784321)*x1569);
j3eval[0]=((((3.46409596216145)*x1571))+(((-3.46409596216145)*x1572))+(((2.99999440500457)*x1566))+((cj4*x1568))+(((-1.0)*x1568))+((cj4*x1570))+(((-1.0)*x1570))+r22);
j3eval[1]=IKsign((((cj4*x1574))+(((0.866025201892125)*x1571))+(((-0.866025201892125)*x1572))+(((-1.0)*x1573))+((cj4*x1573))+(((-1.0)*x1574))+(((0.749999650312296)*x1566))+(((0.250000349687704)*r22))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1575=r00*r00;
IkReal x1576=r01*r01;
IkReal x1577=r02*r02;
IkReal x1578=(cj5*r01*r02);
IkReal x1579=(r00*r01*sj4);
IkReal x1580=((3.9999972025013)*x1579);
IkReal x1581=(r00*r02*sj5);
IkReal x1582=(cj4*x1575);
IkReal x1583=((2.0)*x1582);
IkReal x1584=(cj4*x1577);
IkReal x1585=(cj4*cj5*r01*r02);
IkReal x1586=(cj4*r00*r02*sj5);
IkReal x1587=(cj5*r00*r01*sj5);
IkReal x1588=(cj5*r00*r02*sj4);
IkReal x1589=(r01*r02*sj4*sj5);
IkReal x1590=(cj4*cj5*r00*r01*sj5);
IkReal x1591=(cj4*cj5*r00*r02*sj4);
IkReal x1592=(cj4*r01*r02*sj4*sj5);
IkReal x1593=cj4*cj4;
IkReal x1594=(x1575*x1593);
IkReal x1595=(x1576*x1593);
IkReal x1596=(x1577*x1593);
IkReal x1597=cj5*cj5;
IkReal x1598=(x1575*x1597);
IkReal x1599=(x1576*x1597);
IkReal x1600=(cj5*r01*r02*x1593);
IkReal x1601=(r00*r02*sj5*x1593);
IkReal x1602=(cj5*sj4*sj5*x1575);
IkReal x1603=(cj5*sj4*sj5*x1576);
IkReal x1604=((3.9999972025013)*x1603);
IkReal x1605=(r00*r01*sj4*x1597);
IkReal x1606=((7.99999440500261)*x1605);
IkReal x1607=(cj4*x1576*x1597);
IkReal x1608=(cj4*cj5*sj4*sj5*x1575);
IkReal x1609=(cj5*r00*r01*sj5*x1593);
IkReal x1610=(x1575*x1593*x1597);
IkReal x1611=(x1576*x1593*x1597);
IkReal x1612=((0.750000174843424)*x1579);
IkReal x1613=((0.375000349687459)*x1582);
IkReal x1614=((0.750000174843424)*x1603);
IkReal x1615=((1.50000034968685)*x1605);
j3eval[0]=((((-6.9281919243229)*x1591))+(((3.99999440500457)*x1595))+(((2.309396769726)*x1585))+(((-2.99999440500457)*x1596))+(((-2.0)*x1584))+(((4.99999440500457)*x1610))+(((-2.30940161513813)*x1588))+x1583+(((-4.99999440500457)*x1611))+(((2.309396769726)*x1586))+(((-2.99999440500457)*x1598))+((cj4*x1580))+(((-1.0)*x1594))+(((4.33332836000522)*x1575))+(((-3.9999972025013)*x1608))+x1606+(((-9.99998881000913)*x1609))+(((4.99999440500457)*x1577))+(((-1.0)*x1604))+(((1.15470161513813)*x1581))+(((6.9281919243229)*x1592))+(((-3.46409838486413)*x1601))+(((4.0)*x1590))+(((3.9999972025013)*x1602))+(((-1.0)*cj4*x1606))+(((1.15470161513813)*x1578))+(((-1.0)*x1583*x1597))+(((-1.0)*x1580))+(((5.99998881000913)*x1587))+(((2.99999440500457)*x1599))+(((2.0)*x1607))+(((2.30940161513813)*x1589))+((cj4*x1604))+(((-3.46409838486413)*x1600))+(((1.33333395500065)*x1576)));
j3eval[1]=IKsign(((((0.250000349687704)*x1576))+(((-0.375000349687459)*x1584))+((cj4*x1612))+(((-1.87499965031205)*x1609))+(((0.375000349687459)*x1607))+(((-0.562499475468567)*x1598))+(((0.750000699374918)*x1590))+(((0.750000174843424)*x1602))+(((-1.29903719716146)*x1591))+(((-0.649519052837905)*x1601))+(((-1.0)*cj4*x1615))+(((-1.0)*x1614))+(((-0.937499825156026)*x1611))+(((-1.0)*x1612))+(((-0.433013206622791)*x1588))+(((-1.0)*x1597*x1613))+(((0.937499825156026)*x1610))+(((0.216506754730737)*x1578))+(((-0.649519052837905)*x1600))+(((0.937499825156026)*x1577))+(((1.12499895093713)*x1587))+(((-0.18750017484373)*x1594))+(((0.81249982515627)*x1575))+(((0.749999650312296)*x1595))+(((-0.750000174843424)*x1608))+(((0.562499475468567)*x1599))+x1613+x1615+(((0.433012298107169)*x1586))+(((-0.562499475468567)*x1596))+(((0.433013206622791)*x1589))+(((0.433012298107169)*x1585))+(((1.29903719716146)*x1592))+((cj4*x1614))+(((0.216506754730737)*x1581))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1616=(cj5*r00);
IkReal x1617=(cj4*x1616);
IkReal x1618=(cj4*r01*sj5);
IkReal x1619=((0.500000349687582)*sj4);
IkReal x1620=(cj5*r01);
IkReal x1621=(r00*sj5);
IkReal x1622=((0.433012903784321)*r02);
IkReal x1623=((0.250000349687704)*cj4);
IkReal x1624=(r01*sj5);
IkReal x1625=r00*r00;
IkReal x1626=r01*r01;
IkReal x1627=r02*r02;
IkReal x1628=((0.216506754730737)*r02);
IkReal x1629=((0.750000174843424)*r00*r01*sj4);
IkReal x1630=((0.375000349687459)*cj4);
IkReal x1631=(x1625*x1630);
IkReal x1632=((0.433012298107169)*cj4*r02);
IkReal x1633=(cj5*r00*r01*sj5);
IkReal x1634=((0.433013206622791)*r02*sj4);
IkReal x1635=((1.29903719716146)*r02*sj4);
IkReal x1636=cj4*cj4;
IkReal x1637=(x1625*x1636);
IkReal x1638=(x1626*x1636);
IkReal x1639=cj5*cj5;
IkReal x1640=((0.562499475468567)*x1639);
IkReal x1641=((0.649519052837905)*r02*x1636);
IkReal x1642=((0.750000174843424)*cj5*sj4*sj5);
IkReal x1643=(x1625*x1642);
IkReal x1644=(x1626*x1642);
IkReal x1645=((1.50000034968685)*r00*r01*sj4*x1639);
IkReal x1646=((0.937499825156026)*x1639);
CheckValue<IkReal> x1647=IKPowWithIntegerCheck(IKsign(((((0.937499825156026)*x1627))+(((-1.87499965031205)*x1633*x1636))+((x1624*x1634))+(((-1.0)*x1620*x1641))+(((-1.0)*x1625*x1640))+((cj4*x1629))+(((-1.0)*x1629))+(((0.81249982515627)*x1625))+((cj4*x1644))+(((-1.0)*cj4*x1645))+(((-1.0)*x1638*x1646))+((x1626*x1630*x1639))+(((0.750000699374918)*cj4*x1633))+(((-1.0)*x1616*x1634))+((x1637*x1646))+(((-1.0)*x1621*x1641))+((x1620*x1628))+(((-1.0)*x1631*x1639))+(((-1.0)*cj4*x1643))+(((-0.18750017484373)*x1637))+((x1626*x1640))+((x1621*x1628))+(((1.12499895093713)*x1633))+(((-1.0)*x1617*x1635))+(((-1.0)*x1644))+x1631+(((0.250000349687704)*x1626))+(((-1.0)*x1627*x1630))+((x1621*x1632))+((x1620*x1632))+(((0.749999650312296)*x1638))+(((-0.562499475468567)*x1627*x1636))+x1643+x1645+((x1618*x1635)))),-1);
if(!x1647.valid){
continue;
}
CheckValue<IkReal> x1648 = IKatan2WithCheck(IkReal(((((-0.866025201892125)*r02*sj4))+(((-1.0)*x1619*x1620))+(((-1.0)*x1619*x1621))+x1617+(((-1.0)*x1618)))),IkReal(((((-1.0)*x1619*x1624))+(((0.749999650312296)*x1621))+(((0.749999650312296)*x1620))+((x1620*x1623))+((x1621*x1623))+((cj4*x1622))+((x1616*x1619))+(((-1.0)*x1622)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1648.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1647.value)))+(x1648.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1649=IKcos(j3);
IkReal x1650=((0.433012903784321)*x1649);
IkReal x1651=(r22*x1650);
IkReal x1652=((0.749999650312296)*cj5*x1649);
IkReal x1653=((0.749999650312296)*sj5*x1649);
IkReal x1654=IKsin(j3);
IkReal x1655=((0.866025201892125)*sj4*x1654);
IkReal x1656=(cj4*sj5*x1654);
IkReal x1657=((1.0)*cj4*cj5*x1654);
IkReal x1658=((0.250000349687704)*cj4*cj5*x1649);
IkReal x1659=((0.250000349687704)*cj4*sj5*x1649);
IkReal x1660=((0.500000349687582)*cj5*sj4*x1649);
IkReal x1661=((0.500000349687582)*cj5*sj4*x1654);
IkReal x1662=((0.500000349687582)*sj4*sj5*x1654);
IkReal x1663=((0.500000349687582)*sj4*sj5*x1649);
IkReal x1664=(r12*x1650);
IkReal x1665=((0.433012903784321)*r02);
IkReal x1666=(x1654*x1665);
IkReal x1667=((0.749999650312296)*cj5*r01);
IkReal x1668=((0.749999650312296)*r00*sj5);
IkReal x1669=((0.866025201892125)*r02*sj4);
IkReal x1670=(cj4*r01*sj5);
IkReal x1671=((1.0)*cj4*cj5*r00);
IkReal x1672=((0.250000349687704)*cj4*cj5*r01);
IkReal x1673=((0.250000349687704)*r00);
IkReal x1674=((0.500000349687582)*cj5*r00*sj4);
IkReal x1675=((0.500000349687582)*cj5*r01*sj4);
IkReal x1676=((0.500000349687582)*r00*sj4*sj5);
IkReal x1677=((0.500000349687582)*r01*sj4*sj5);
IkReal x1678=(x1649*x1665);
evalcond[0]=(((r20*x1662))+((r22*x1655))+(((-1.0)*r20*x1653))+((r21*x1656))+((r21*x1661))+((r21*x1663))+(((-1.0)*cj4*x1651))+(((-1.0)*r21*x1652))+(((-1.0)*r21*x1658))+(((-1.0)*r20*x1659))+(((-1.0)*r20*x1660))+x1651+(((-1.0)*r20*x1657)));
evalcond[1]=((((-1.0)*r10*x1657))+(((-1.0)*r11*x1652))+(((-1.0)*r10*x1653))+(((-1.0)*r10*x1659))+(((-1.0)*r11*x1658))+((r11*x1663))+((r12*x1655))+((r10*x1662))+((r11*x1661))+((r11*x1656))+(((-1.0)*r10*x1660))+x1664+(((-1.0)*cj4*x1664)));
evalcond[2]=(((x1654*x1672))+(((-1.0)*x1649*x1671))+((x1654*x1674))+((x1649*x1669))+((x1649*x1670))+((x1656*x1673))+((x1649*x1675))+((x1654*x1667))+(((-1.0)*x1654*x1677))+((x1649*x1676))+((cj4*x1666))+(((-1.0)*x1666))+((x1654*x1668)));
evalcond[3]=((1.0)+x1678+(((-1.0)*x1649*x1672))+((x1654*x1675))+((x1654*x1676))+((x1649*x1677))+(((-1.0)*x1654*x1671))+(((-1.0)*x1649*x1668))+(((-1.0)*cj4*sj5*x1649*x1673))+(((-1.0)*x1649*x1667))+((x1654*x1670))+(((-1.0)*x1649*x1674))+(((-1.0)*cj4*x1678))+((x1654*x1669)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1679=((0.646708404322884)*cj4);
IkReal x1680=((0.62876328674038)*cj5);
IkReal x1681=((0.62876328674038)*sj5);
IkReal x1682=((0.373377619497519)*cj4*cj5);
IkReal x1683=((0.373377619497519)*cj4*sj5);
IkReal x1684=((0.746754716733336)*cj5*sj4);
IkReal x1685=((0.746754716733336)*sj4*sj5);
if( IKabs((((r12*x1679))+((r11*x1682))+((r10*x1683))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+((r10*x1684))+(((-1.0)*r10*x1681))+(((-1.0)*r11*x1685))+(((-1.0)*r11*x1680)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1685))+((r21*x1682))+((r20*x1684))+((r20*x1683))+(((3.44827586206897)*pz))+(((-1.0)*r21*x1680))+(((-1.0)*r20*x1681))+(((0.289291595677116)*r22))+((r22*x1679)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1679))+((r11*x1682))+((r10*x1683))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+((r10*x1684))+(((-1.0)*r10*x1681))+(((-1.0)*r11*x1685))+(((-1.0)*r11*x1680))))+IKsqr(((((-1.0)*r21*x1685))+((r21*x1682))+((r20*x1684))+((r20*x1683))+(((3.44827586206897)*pz))+(((-1.0)*r21*x1680))+(((-1.0)*r20*x1681))+(((0.289291595677116)*r22))+((r22*x1679))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1679))+((r11*x1682))+((r10*x1683))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+((r10*x1684))+(((-1.0)*r10*x1681))+(((-1.0)*r11*x1685))+(((-1.0)*r11*x1680))), ((((-1.0)*r21*x1685))+((r21*x1682))+((r20*x1684))+((r20*x1683))+(((3.44827586206897)*pz))+(((-1.0)*r21*x1680))+(((-1.0)*r20*x1681))+(((0.289291595677116)*r22))+((r22*x1679))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1686=((0.187545437253636)*cj4);
IkReal x1687=(cj5*r11);
IkReal x1688=(r10*sj5);
IkReal x1689=((0.29)*(IKsin(j1)));
IkReal x1690=(cj4*cj5*r11);
IkReal x1691=(cj4*r10*sj5);
IkReal x1692=(cj5*r10*sj4);
IkReal x1693=(r11*sj4*sj5);
IkReal x1694=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x1695=(cj5*r21);
IkReal x1696=(r20*sj5);
IkReal x1697=(cj4*cj5*r21);
IkReal x1698=(cj4*r20*sj5);
IkReal x1699=(cj5*r20*sj4);
IkReal x1700=(r21*sj4*sj5);
IkReal x1701=((0.0160344678271334)*r22);
IkReal x1702=((0.117537022603216)*sj3);
IkReal x1703=(r12*x1702);
IkReal x1704=((0.235073880801598)*cj3*sj4);
IkReal x1705=((0.20357990508077)*sj3);
IkReal x1706=((0.27144)*cj3*cj4*cj5);
IkReal x1707=((0.27144)*cj3*cj4*sj5);
IkReal x1708=((0.135720094919197)*cj3*sj4);
IkReal x1709=((0.0678600949192303)*sj3);
IkReal x1710=((0.135720094919197)*sj3);
IkReal x1711=((0.0160344678271334)*r12);
IkReal x1712=(r22*x1702);
evalcond[0]=((((0.10827950965428)*x1691))+(((-0.18234135315471)*x1687))+(((-0.216558867852667)*x1693))+((r12*x1686))+(((0.0838945627463637)*r12))+py+(((-0.18234135315471)*x1688))+(((0.216558867852667)*x1692))+(((-1.0)*x1689))+(((0.10827950965428)*x1690)));
evalcond[1]=((((0.10827950965428)*x1697))+x1694+(((-0.18234135315471)*x1695))+(((-0.18234135315471)*x1696))+((r22*x1686))+(((0.216558867852667)*x1699))+(((-0.216558867852667)*x1700))+(((0.0838945627463637)*r22))+(((0.10827950965428)*x1698)));
evalcond[2]=((((-1.0)*cj4*x1701))+(((-0.0648043305514941)*x1696))+((x1688*x1705))+x1694+((r12*x1704))+((x1690*x1709))+((x1688*x1708))+(((-1.0)*r10*x1706))+x1701+(((-1.0)*x1703))+(((-0.00925751294893567)*x1697))+(((-0.00925751294893567)*x1698))+(((-1.0)*x1693*x1710))+((x1691*x1709))+((x1692*x1710))+((x1687*x1708))+((r11*x1707))+(((-0.0185150129489311)*x1699))+(((0.0185150129489311)*x1700))+((x1687*x1705))+(((-0.0648043305514941)*x1695))+((cj4*x1703)));
evalcond[3]=(((cj4*x1712))+((x1698*x1709))+(((0.0648043305514941)*x1687))+(((0.00925751294893567)*x1690))+x1689+(((-1.0)*(1.0)*py))+((x1697*x1709))+((x1696*x1708))+(((-0.0185150129489311)*x1693))+(((-1.0)*r20*x1706))+(((0.0185150129489311)*x1692))+(((-1.0)*x1711))+((r22*x1704))+(((-1.0)*x1712))+((x1695*x1708))+(((0.0648043305514941)*x1688))+(((0.00925751294893567)*x1691))+((r21*x1707))+((x1695*x1705))+((cj4*x1711))+(((-1.0)*x1700*x1710))+((x1696*x1705))+((x1699*x1710)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1713=((0.250000349687704)*cj1);
IkReal x1714=((0.250000349687704)*sj1);
IkReal x1715=((0.749999650312296)*cj1*cj4);
IkReal x1716=((0.433012903784321)*cj1*cj5);
IkReal x1717=(r11*x1716);
IkReal x1718=((0.433012903784321)*cj1*sj5);
IkReal x1719=(r10*x1718);
IkReal x1720=((0.749999650312296)*cj4*sj1);
IkReal x1721=((0.433012903784321)*cj5*sj1);
IkReal x1722=(r21*x1721);
IkReal x1723=((0.433012903784321)*sj1*sj5);
IkReal x1724=(r20*x1723);
IkReal x1725=((0.866025201892125)*cj1*cj5*sj4);
IkReal x1726=((0.866025201892125)*cj1*sj4*sj5);
IkReal x1727=((0.866025201892125)*cj5*sj1*sj4);
IkReal x1728=((0.866025201892125)*sj1*sj4*sj5);
IkReal x1729=(r21*x1716);
IkReal x1730=(r20*x1718);
IkReal x1731=(r11*x1721);
IkReal x1732=(r10*x1723);
if( IKabs((((r11*x1726))+((cj4*x1724))+(((-1.0)*cj4*x1717))+(((-1.0)*r10*x1725))+(((-1.0)*x1724))+x1717+x1719+((r22*x1720))+((cj4*x1722))+((r20*x1727))+(((-1.0)*x1722))+(((-1.0)*cj4*x1719))+(((-1.0)*r21*x1728))+(((-1.0)*r12*x1715))+((r22*x1714))+(((-1.0)*r12*x1713)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1731))+((cj4*x1732))+(((-1.0)*r11*x1728))+(((-1.0)*x1732))+((r22*x1715))+((r22*x1713))+((r20*x1725))+((r10*x1727))+((cj4*x1729))+(((-1.0)*x1729))+((cj4*x1730))+((r12*x1720))+((cj4*x1731))+(((-1.0)*x1730))+(((-1.0)*r21*x1726))+((r12*x1714)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x1726))+((cj4*x1724))+(((-1.0)*cj4*x1717))+(((-1.0)*r10*x1725))+(((-1.0)*x1724))+x1717+x1719+((r22*x1720))+((cj4*x1722))+((r20*x1727))+(((-1.0)*x1722))+(((-1.0)*cj4*x1719))+(((-1.0)*r21*x1728))+(((-1.0)*r12*x1715))+((r22*x1714))+(((-1.0)*r12*x1713))))+IKsqr(((((-1.0)*x1731))+((cj4*x1732))+(((-1.0)*r11*x1728))+(((-1.0)*x1732))+((r22*x1715))+((r22*x1713))+((r20*x1725))+((r10*x1727))+((cj4*x1729))+(((-1.0)*x1729))+((cj4*x1730))+((r12*x1720))+((cj4*x1731))+(((-1.0)*x1730))+(((-1.0)*r21*x1726))+((r12*x1714))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r11*x1726))+((cj4*x1724))+(((-1.0)*cj4*x1717))+(((-1.0)*r10*x1725))+(((-1.0)*x1724))+x1717+x1719+((r22*x1720))+((cj4*x1722))+((r20*x1727))+(((-1.0)*x1722))+(((-1.0)*cj4*x1719))+(((-1.0)*r21*x1728))+(((-1.0)*r12*x1715))+((r22*x1714))+(((-1.0)*r12*x1713))), ((((-1.0)*x1731))+((cj4*x1732))+(((-1.0)*r11*x1728))+(((-1.0)*x1732))+((r22*x1715))+((r22*x1713))+((r20*x1725))+((r10*x1727))+((cj4*x1729))+(((-1.0)*x1729))+((cj4*x1730))+((r12*x1720))+((cj4*x1731))+(((-1.0)*x1730))+(((-1.0)*r21*x1726))+((r12*x1714))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1733=IKcos(j2);
IkReal x1734=(cj1*x1733);
IkReal x1735=((0.749999650312296)*cj4);
IkReal x1736=(cj5*r21);
IkReal x1737=((0.433012903784321)*x1736);
IkReal x1738=(r20*sj5);
IkReal x1739=((0.433012903784321)*x1738);
IkReal x1740=IKsin(j2);
IkReal x1741=(sj1*x1740);
IkReal x1742=(cj5*r20*sj4);
IkReal x1743=(r21*sj4*sj5);
IkReal x1744=(sj1*x1733);
IkReal x1745=(cj1*x1740);
IkReal x1746=((((-1.0)*x1745))+x1744);
IkReal x1747=(cj5*r11);
IkReal x1748=((0.433012903784321)*x1747);
IkReal x1749=(r10*sj5);
IkReal x1750=((0.433012903784321)*x1749);
IkReal x1751=(cj5*r10*sj4);
IkReal x1752=(r11*sj4*sj5);
IkReal x1753=((0.0160344678271334)*r22);
IkReal x1754=((0.00925751294893567)*cj4);
IkReal x1755=((0.0160344678271334)*r12);
IkReal x1756=((0.433012903784321)*sj3);
IkReal x1757=(r22*x1756);
IkReal x1758=((0.866025201892125)*cj3*sj4);
IkReal x1759=((0.749999650312296)*sj3);
IkReal x1760=(cj3*cj4*sj5);
IkReal x1761=((1.0)*cj3*cj4*cj5);
IkReal x1762=((0.500000349687582)*cj3*sj4);
IkReal x1763=((0.250000349687704)*cj4*sj3);
IkReal x1764=((0.500000349687582)*sj3);
IkReal x1765=(r12*x1756);
evalcond[0]=((((0.866025201892125)*x1743))+(((-0.866025201892125)*x1742))+(((-1.0)*cj4*x1739))+(((-1.0)*r22*x1735))+x1741+x1734+x1737+x1739+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x1737)));
evalcond[1]=((((-0.866025201892125)*x1751))+(((-1.0)*cj4*x1750))+(((-1.0)*(0.250000349687704)*r12))+x1746+x1748+(((-1.0)*cj4*x1748))+(((0.866025201892125)*x1752))+(((-1.0)*r12*x1735))+x1750);
evalcond[2]=(((x1736*x1754))+(((-0.27144)*x1734))+(((-1.0)*(1.0)*pz))+(((0.0185150129489311)*x1742))+(((0.0648043305514941)*x1738))+(((-0.27144)*x1741))+((cj4*x1753))+((x1738*x1754))+(((0.29)*cj1))+(((0.0648043305514941)*x1736))+(((-0.0185150129489311)*x1743))+(((-1.0)*x1753)));
evalcond[3]=((((0.0185150129489311)*x1751))+(((-1.0)*(1.0)*py))+(((-1.0)*x1755))+(((-0.27144)*x1744))+((x1747*x1754))+((cj4*x1755))+(((0.0648043305514941)*x1749))+(((0.29)*sj1))+(((-0.0185150129489311)*x1752))+(((0.27144)*x1745))+((x1749*x1754))+(((0.0648043305514941)*x1747)));
evalcond[4]=(((r22*x1758))+((x1742*x1764))+((cj4*x1757))+((r21*x1760))+(((-1.0)*r20*x1761))+((x1736*x1762))+((x1736*x1759))+((x1736*x1763))+x1746+((x1738*x1759))+(((-1.0)*x1743*x1764))+(((-1.0)*x1757))+((x1738*x1763))+((x1738*x1762)));
evalcond[5]=(((cj4*x1765))+((x1747*x1759))+(((-1.0)*x1741))+(((-1.0)*r10*x1761))+(((-1.0)*x1734))+((r12*x1758))+(((-1.0)*x1765))+((x1751*x1764))+((x1749*x1759))+((x1749*x1762))+(((-1.0)*x1752*x1764))+((x1749*x1763))+((x1747*x1763))+((r11*x1760))+((x1747*x1762)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1766=((0.433012903784321)*sj5);
IkReal x1767=((0.866025201892125)*sj4);
IkReal x1768=((0.433012903784321)*cj5);
IkReal x1769=((0.433012903784321)*r12);
IkReal x1770=(cj5*r11);
IkReal x1771=(r10*sj5);
IkReal x1772=((0.250000349687704)*cj4);
IkReal x1773=((0.500000349687582)*sj4);
IkReal x1774=(cj5*r10);
IkReal x1775=(r11*sj5);
CheckValue<IkReal> x1776 = IKatan2WithCheck(IkReal((((x1771*x1772))+(((-1.0)*x1773*x1775))+(((0.749999650312296)*x1771))+(((0.749999650312296)*x1770))+((cj4*x1769))+(((-1.0)*x1769))+((x1770*x1772))+((x1773*x1774)))),IkReal(((((-1.0)*cj4*x1774))+((x1771*x1773))+((r12*x1767))+((x1770*x1773))+((cj4*x1775)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1776.valid){
continue;
}
CheckValue<IkReal> x1777=IKPowWithIntegerCheck(IKsign((((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r20*((((cj4*x1766))+((cj5*x1767))+(((-1.0)*x1766))))))+((r21*(((((-1.0)*sj5*x1767))+((cj4*x1768))+(((-1.0)*x1768)))))))),-1);
if(!x1777.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1776.value)+(((1.5707963267949)*(x1777.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1778=IKcos(j3);
IkReal x1779=((0.433012903784321)*x1778);
IkReal x1780=(r22*x1779);
IkReal x1781=((0.749999650312296)*cj5*x1778);
IkReal x1782=((0.749999650312296)*sj5*x1778);
IkReal x1783=IKsin(j3);
IkReal x1784=((0.866025201892125)*sj4*x1783);
IkReal x1785=(cj4*sj5*x1783);
IkReal x1786=((1.0)*cj4*cj5*x1783);
IkReal x1787=((0.250000349687704)*cj4*cj5*x1778);
IkReal x1788=((0.250000349687704)*cj4*sj5*x1778);
IkReal x1789=((0.500000349687582)*cj5*sj4*x1778);
IkReal x1790=((0.500000349687582)*cj5*sj4*x1783);
IkReal x1791=((0.500000349687582)*sj4*sj5*x1783);
IkReal x1792=((0.500000349687582)*sj4*sj5*x1778);
IkReal x1793=(r12*x1779);
IkReal x1794=((0.433012903784321)*r02);
IkReal x1795=(x1783*x1794);
IkReal x1796=((0.749999650312296)*cj5*r01);
IkReal x1797=((0.749999650312296)*r00*sj5);
IkReal x1798=((0.866025201892125)*r02*sj4);
IkReal x1799=(cj4*r01*sj5);
IkReal x1800=((1.0)*cj4*cj5*r00);
IkReal x1801=((0.250000349687704)*cj4*cj5*r01);
IkReal x1802=((0.250000349687704)*r00);
IkReal x1803=((0.500000349687582)*cj5*r00*sj4);
IkReal x1804=((0.500000349687582)*cj5*r01*sj4);
IkReal x1805=((0.500000349687582)*r00*sj4*sj5);
IkReal x1806=((0.500000349687582)*r01*sj4*sj5);
IkReal x1807=(x1778*x1794);
evalcond[0]=((((-1.0)*r20*x1786))+((r21*x1790))+(((-1.0)*r20*x1789))+(((-1.0)*cj4*x1780))+x1780+((r20*x1791))+(((-1.0)*r21*x1781))+(((-1.0)*r20*x1782))+((r22*x1784))+((r21*x1785))+((r21*x1792))+(((-1.0)*r20*x1788))+(((-1.0)*r21*x1787)));
evalcond[1]=((((-1.0)*r10*x1789))+(((-1.0)*r10*x1786))+((r11*x1785))+(((-1.0)*cj4*x1793))+(((-1.0)*r11*x1787))+((r11*x1792))+(((-1.0)*r10*x1782))+((r10*x1791))+((r11*x1790))+(((-1.0)*r11*x1781))+x1793+(((-1.0)*r10*x1788))+((r12*x1784)));
evalcond[2]=(((x1783*x1803))+((x1778*x1804))+(((-1.0)*x1783*x1806))+((cj4*x1795))+((x1783*x1801))+((x1783*x1796))+((x1785*x1802))+((x1778*x1805))+(((-1.0)*x1778*x1800))+((x1778*x1798))+(((-1.0)*x1795))+((x1778*x1799))+((x1783*x1797)));
evalcond[3]=((1.0)+((x1783*x1804))+(((-1.0)*cj4*sj5*x1778*x1802))+(((-1.0)*x1778*x1796))+((x1783*x1805))+(((-1.0)*x1778*x1803))+x1807+(((-1.0)*x1778*x1797))+((x1783*x1798))+(((-1.0)*x1783*x1800))+(((-1.0)*x1778*x1801))+(((-1.0)*cj4*x1807))+((x1778*x1806))+((x1783*x1799)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1808=((0.646708404322884)*cj4);
IkReal x1809=((0.62876328674038)*cj5);
IkReal x1810=((0.62876328674038)*sj5);
IkReal x1811=((0.373377619497519)*cj4*cj5);
IkReal x1812=((0.373377619497519)*cj4*sj5);
IkReal x1813=((0.746754716733336)*cj5*sj4);
IkReal x1814=((0.746754716733336)*sj4*sj5);
if( IKabs(((((3.44827586206897)*py))+((r10*x1813))+(((0.289291595677116)*r12))+((r12*x1808))+(((-1.0)*r10*x1810))+((r11*x1811))+(((-1.0)*r11*x1814))+(((-1.0)*r11*x1809))+((r10*x1812)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+((r22*x1808))+((r21*x1811))+((r20*x1812))+(((-1.0)*r21*x1814))+(((-1.0)*r21*x1809))+(((0.289291595677116)*r22))+(((-1.0)*r20*x1810))+((r20*x1813)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((3.44827586206897)*py))+((r10*x1813))+(((0.289291595677116)*r12))+((r12*x1808))+(((-1.0)*r10*x1810))+((r11*x1811))+(((-1.0)*r11*x1814))+(((-1.0)*r11*x1809))+((r10*x1812))))+IKsqr(((((3.44827586206897)*pz))+((r22*x1808))+((r21*x1811))+((r20*x1812))+(((-1.0)*r21*x1814))+(((-1.0)*r21*x1809))+(((0.289291595677116)*r22))+(((-1.0)*r20*x1810))+((r20*x1813))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((3.44827586206897)*py))+((r10*x1813))+(((0.289291595677116)*r12))+((r12*x1808))+(((-1.0)*r10*x1810))+((r11*x1811))+(((-1.0)*r11*x1814))+(((-1.0)*r11*x1809))+((r10*x1812))), ((((3.44827586206897)*pz))+((r22*x1808))+((r21*x1811))+((r20*x1812))+(((-1.0)*r21*x1814))+(((-1.0)*r21*x1809))+(((0.289291595677116)*r22))+(((-1.0)*r20*x1810))+((r20*x1813))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1815=((0.187545437253636)*cj4);
IkReal x1816=(cj5*r11);
IkReal x1817=(r10*sj5);
IkReal x1818=((0.29)*(IKsin(j1)));
IkReal x1819=(cj4*cj5*r11);
IkReal x1820=(cj4*r10*sj5);
IkReal x1821=(cj5*r10*sj4);
IkReal x1822=(r11*sj4*sj5);
IkReal x1823=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x1824=(cj5*r21);
IkReal x1825=(r20*sj5);
IkReal x1826=(cj4*cj5*r21);
IkReal x1827=(cj4*r20*sj5);
IkReal x1828=(cj5*r20*sj4);
IkReal x1829=(r21*sj4*sj5);
IkReal x1830=((0.0160344678271334)*r22);
IkReal x1831=((0.117537022603216)*sj3);
IkReal x1832=(r12*x1831);
IkReal x1833=((0.235073880801598)*cj3*sj4);
IkReal x1834=((0.20357990508077)*sj3);
IkReal x1835=((0.27144)*cj3*cj4*cj5);
IkReal x1836=((0.27144)*cj3*cj4*sj5);
IkReal x1837=((0.135720094919197)*cj3*sj4);
IkReal x1838=((0.0678600949192303)*sj3);
IkReal x1839=((0.135720094919197)*sj3);
IkReal x1840=((0.0160344678271334)*r12);
IkReal x1841=(r22*x1831);
evalcond[0]=((((-0.216558867852667)*x1822))+((r12*x1815))+(((-0.18234135315471)*x1816))+(((0.0838945627463637)*r12))+py+(((0.10827950965428)*x1820))+(((0.10827950965428)*x1819))+(((0.216558867852667)*x1821))+(((-0.18234135315471)*x1817))+(((-1.0)*x1818)));
evalcond[1]=((((-0.216558867852667)*x1829))+x1823+(((0.10827950965428)*x1826))+(((-0.18234135315471)*x1825))+((r22*x1815))+(((0.10827950965428)*x1827))+(((0.216558867852667)*x1828))+(((-0.18234135315471)*x1824))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-0.00925751294893567)*x1827))+(((-0.00925751294893567)*x1826))+((cj4*x1832))+(((-0.0648043305514941)*x1825))+(((-1.0)*r10*x1835))+x1823+(((-0.0648043305514941)*x1824))+((x1816*x1834))+(((-1.0)*x1822*x1839))+((x1816*x1837))+((r11*x1836))+((x1821*x1839))+(((-0.0185150129489311)*x1828))+((x1817*x1837))+(((0.0185150129489311)*x1829))+((r12*x1833))+((x1819*x1838))+((x1817*x1834))+x1830+((x1820*x1838))+(((-1.0)*cj4*x1830))+(((-1.0)*x1832)));
evalcond[3]=((((-1.0)*x1840))+(((-1.0)*r20*x1835))+(((0.0648043305514941)*x1816))+(((-0.0185150129489311)*x1822))+(((-1.0)*x1841))+(((0.0648043305514941)*x1817))+(((-1.0)*x1829*x1839))+(((-1.0)*(1.0)*py))+((x1826*x1838))+(((0.0185150129489311)*x1821))+((r22*x1833))+(((0.00925751294893567)*x1819))+((x1825*x1837))+((x1824*x1837))+x1818+((x1825*x1834))+((x1824*x1834))+(((0.00925751294893567)*x1820))+((x1828*x1839))+((x1827*x1838))+((cj4*x1840))+((r21*x1836))+((cj4*x1841)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1842=((0.250000349687704)*cj1);
IkReal x1843=((0.250000349687704)*sj1);
IkReal x1844=((0.749999650312296)*cj1*cj4);
IkReal x1845=((0.433012903784321)*cj1*cj5);
IkReal x1846=(r11*x1845);
IkReal x1847=((0.433012903784321)*cj1*sj5);
IkReal x1848=(r10*x1847);
IkReal x1849=((0.749999650312296)*cj4*sj1);
IkReal x1850=((0.433012903784321)*cj5*sj1);
IkReal x1851=(r21*x1850);
IkReal x1852=((0.433012903784321)*sj1*sj5);
IkReal x1853=(r20*x1852);
IkReal x1854=((0.866025201892125)*cj1*cj5*sj4);
IkReal x1855=((0.866025201892125)*cj1*sj4*sj5);
IkReal x1856=((0.866025201892125)*cj5*sj1*sj4);
IkReal x1857=((0.866025201892125)*sj1*sj4*sj5);
IkReal x1858=(r21*x1845);
IkReal x1859=(r20*x1847);
IkReal x1860=(r11*x1850);
IkReal x1861=(r10*x1852);
if( IKabs(((((-1.0)*r12*x1842))+(((-1.0)*cj4*x1848))+(((-1.0)*r21*x1857))+((r11*x1855))+(((-1.0)*cj4*x1846))+((r22*x1843))+x1848+x1846+(((-1.0)*x1851))+((cj4*x1851))+(((-1.0)*x1853))+(((-1.0)*r12*x1844))+((cj4*x1853))+(((-1.0)*r10*x1854))+((r22*x1849))+((r20*x1856)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x1858))+((r20*x1854))+(((-1.0)*x1861))+((cj4*x1861))+(((-1.0)*r11*x1857))+((r22*x1842))+(((-1.0)*x1859))+((r12*x1843))+((cj4*x1859))+((r22*x1844))+((r10*x1856))+(((-1.0)*x1860))+((r12*x1849))+((cj4*x1860))+(((-1.0)*r21*x1855))+(((-1.0)*x1858)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r12*x1842))+(((-1.0)*cj4*x1848))+(((-1.0)*r21*x1857))+((r11*x1855))+(((-1.0)*cj4*x1846))+((r22*x1843))+x1848+x1846+(((-1.0)*x1851))+((cj4*x1851))+(((-1.0)*x1853))+(((-1.0)*r12*x1844))+((cj4*x1853))+(((-1.0)*r10*x1854))+((r22*x1849))+((r20*x1856))))+IKsqr((((cj4*x1858))+((r20*x1854))+(((-1.0)*x1861))+((cj4*x1861))+(((-1.0)*r11*x1857))+((r22*x1842))+(((-1.0)*x1859))+((r12*x1843))+((cj4*x1859))+((r22*x1844))+((r10*x1856))+(((-1.0)*x1860))+((r12*x1849))+((cj4*x1860))+(((-1.0)*r21*x1855))+(((-1.0)*x1858))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r12*x1842))+(((-1.0)*cj4*x1848))+(((-1.0)*r21*x1857))+((r11*x1855))+(((-1.0)*cj4*x1846))+((r22*x1843))+x1848+x1846+(((-1.0)*x1851))+((cj4*x1851))+(((-1.0)*x1853))+(((-1.0)*r12*x1844))+((cj4*x1853))+(((-1.0)*r10*x1854))+((r22*x1849))+((r20*x1856))), (((cj4*x1858))+((r20*x1854))+(((-1.0)*x1861))+((cj4*x1861))+(((-1.0)*r11*x1857))+((r22*x1842))+(((-1.0)*x1859))+((r12*x1843))+((cj4*x1859))+((r22*x1844))+((r10*x1856))+(((-1.0)*x1860))+((r12*x1849))+((cj4*x1860))+(((-1.0)*r21*x1855))+(((-1.0)*x1858))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1862=IKcos(j2);
IkReal x1863=(cj1*x1862);
IkReal x1864=((0.749999650312296)*cj4);
IkReal x1865=(cj5*r21);
IkReal x1866=((0.433012903784321)*x1865);
IkReal x1867=(r20*sj5);
IkReal x1868=((0.433012903784321)*x1867);
IkReal x1869=IKsin(j2);
IkReal x1870=(sj1*x1869);
IkReal x1871=(cj5*r20*sj4);
IkReal x1872=(r21*sj4*sj5);
IkReal x1873=(sj1*x1862);
IkReal x1874=(cj1*x1869);
IkReal x1875=((((-1.0)*x1874))+x1873);
IkReal x1876=(cj5*r11);
IkReal x1877=((0.433012903784321)*x1876);
IkReal x1878=(r10*sj5);
IkReal x1879=((0.433012903784321)*x1878);
IkReal x1880=(cj5*r10*sj4);
IkReal x1881=(r11*sj4*sj5);
IkReal x1882=((0.0160344678271334)*r22);
IkReal x1883=((0.00925751294893567)*cj4);
IkReal x1884=((0.0160344678271334)*r12);
IkReal x1885=((0.433012903784321)*sj3);
IkReal x1886=(r22*x1885);
IkReal x1887=((0.866025201892125)*cj3*sj4);
IkReal x1888=((0.749999650312296)*sj3);
IkReal x1889=(cj3*cj4*sj5);
IkReal x1890=((1.0)*cj3*cj4*cj5);
IkReal x1891=((0.500000349687582)*cj3*sj4);
IkReal x1892=((0.250000349687704)*cj4*sj3);
IkReal x1893=((0.500000349687582)*sj3);
IkReal x1894=(r12*x1885);
evalcond[0]=((((0.866025201892125)*x1872))+(((-0.866025201892125)*x1871))+(((-1.0)*r22*x1864))+x1868+x1866+x1863+(((-1.0)*cj4*x1868))+(((-1.0)*cj4*x1866))+x1870+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*r12*x1864))+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x1881))+(((-1.0)*cj4*x1879))+x1879+x1875+x1877+(((-0.866025201892125)*x1880))+(((-1.0)*cj4*x1877)));
evalcond[2]=((((-0.27144)*x1870))+((x1865*x1883))+((x1867*x1883))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x1872))+((cj4*x1882))+(((0.29)*cj1))+(((-0.27144)*x1863))+(((0.0648043305514941)*x1865))+(((0.0648043305514941)*x1867))+(((0.0185150129489311)*x1871))+(((-1.0)*x1882)));
evalcond[3]=((((-1.0)*x1884))+((x1876*x1883))+(((-1.0)*(1.0)*py))+(((0.0185150129489311)*x1880))+((x1878*x1883))+(((0.0648043305514941)*x1876))+(((-0.27144)*x1873))+((cj4*x1884))+(((-0.0185150129489311)*x1881))+(((0.0648043305514941)*x1878))+(((0.27144)*x1874))+(((0.29)*sj1)));
evalcond[4]=(((x1867*x1891))+((x1865*x1888))+((x1871*x1893))+((x1867*x1888))+(((-1.0)*x1872*x1893))+(((-1.0)*r20*x1890))+((cj4*x1886))+(((-1.0)*x1886))+((r21*x1889))+x1875+((x1865*x1891))+((x1867*x1892))+((r22*x1887))+((x1865*x1892)));
evalcond[5]=((((-1.0)*r10*x1890))+((x1876*x1892))+((r12*x1887))+((x1876*x1891))+(((-1.0)*x1870))+(((-1.0)*x1863))+((x1880*x1893))+((x1876*x1888))+((r11*x1889))+((x1878*x1888))+(((-1.0)*x1881*x1893))+((x1878*x1892))+(((-1.0)*x1894))+((cj4*x1894))+((x1878*x1891)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1895=((0.433012903784321)*sj5);
IkReal x1896=((0.866025201892125)*sj4);
IkReal x1897=((0.433012903784321)*cj5);
IkReal x1898=((0.433012903784321)*r22);
IkReal x1899=(cj5*r21);
IkReal x1900=(r20*sj5);
IkReal x1901=((0.250000349687704)*cj4);
IkReal x1902=((0.500000349687582)*sj4);
IkReal x1903=(cj5*r20);
IkReal x1904=(r21*sj5);
CheckValue<IkReal> x1905 = IKatan2WithCheck(IkReal(((((-1.0)*x1902*x1904))+((x1900*x1901))+(((-1.0)*x1898))+((cj4*x1898))+(((0.749999650312296)*x1899))+((x1902*x1903))+(((0.749999650312296)*x1900))+((x1899*x1901)))),IkReal(((((-1.0)*cj4*x1903))+((x1900*x1902))+((x1899*x1902))+((r22*x1896))+((cj4*x1904)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1905.valid){
continue;
}
CheckValue<IkReal> x1906=IKPowWithIntegerCheck(IKsign((((r10*(((((-1.0)*cj5*x1896))+x1895+(((-1.0)*cj4*x1895))))))+((r12*(((-0.250000349687704)+(((-1.0)*(0.749999650312296)*cj4))))))+((r11*((x1897+(((-1.0)*cj4*x1897))+((sj5*x1896)))))))),-1);
if(!x1906.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1905.value)+(((1.5707963267949)*(x1906.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1907=IKcos(j3);
IkReal x1908=((0.433012903784321)*x1907);
IkReal x1909=(r22*x1908);
IkReal x1910=((0.749999650312296)*cj5*x1907);
IkReal x1911=((0.749999650312296)*sj5*x1907);
IkReal x1912=IKsin(j3);
IkReal x1913=((0.866025201892125)*sj4*x1912);
IkReal x1914=(cj4*sj5*x1912);
IkReal x1915=((1.0)*cj4*cj5*x1912);
IkReal x1916=((0.250000349687704)*cj4*cj5*x1907);
IkReal x1917=((0.250000349687704)*cj4*sj5*x1907);
IkReal x1918=((0.500000349687582)*cj5*sj4*x1907);
IkReal x1919=((0.500000349687582)*cj5*sj4*x1912);
IkReal x1920=((0.500000349687582)*sj4*sj5*x1912);
IkReal x1921=((0.500000349687582)*sj4*sj5*x1907);
IkReal x1922=(r12*x1908);
IkReal x1923=((0.433012903784321)*r02);
IkReal x1924=(x1912*x1923);
IkReal x1925=((0.749999650312296)*cj5*r01);
IkReal x1926=((0.749999650312296)*r00*sj5);
IkReal x1927=((0.866025201892125)*r02*sj4);
IkReal x1928=(cj4*r01*sj5);
IkReal x1929=((1.0)*cj4*cj5*r00);
IkReal x1930=((0.250000349687704)*cj4*cj5*r01);
IkReal x1931=((0.250000349687704)*r00);
IkReal x1932=((0.500000349687582)*cj5*r00*sj4);
IkReal x1933=((0.500000349687582)*cj5*r01*sj4);
IkReal x1934=((0.500000349687582)*r00*sj4*sj5);
IkReal x1935=((0.500000349687582)*r01*sj4*sj5);
IkReal x1936=(x1907*x1923);
evalcond[0]=(((r20*x1920))+(((-1.0)*r21*x1910))+((r21*x1919))+((r21*x1921))+(((-1.0)*r21*x1916))+(((-1.0)*r20*x1917))+(((-1.0)*r20*x1911))+((r22*x1913))+(((-1.0)*cj4*x1909))+(((-1.0)*r20*x1918))+((r21*x1914))+(((-1.0)*r20*x1915))+x1909);
evalcond[1]=((((-1.0)*r10*x1915))+(((-1.0)*r11*x1910))+(((-1.0)*r10*x1911))+((r12*x1913))+x1922+(((-1.0)*r10*x1917))+(((-1.0)*r11*x1916))+(((-1.0)*cj4*x1922))+((r11*x1914))+((r11*x1919))+((r10*x1920))+(((-1.0)*r10*x1918))+((r11*x1921)));
evalcond[2]=(((x1912*x1926))+(((-1.0)*x1924))+((cj4*x1924))+((x1907*x1927))+((x1907*x1928))+((x1912*x1925))+((x1912*x1932))+(((-1.0)*x1907*x1929))+((x1907*x1933))+((x1912*x1930))+((x1907*x1934))+((x1914*x1931))+(((-1.0)*x1912*x1935)));
evalcond[3]=((1.0)+(((-1.0)*x1907*x1926))+((x1912*x1933))+((x1912*x1934))+((x1912*x1928))+x1936+(((-1.0)*x1912*x1929))+(((-1.0)*cj4*x1936))+(((-1.0)*cj4*sj5*x1907*x1931))+(((-1.0)*x1907*x1925))+((x1907*x1935))+(((-1.0)*x1907*x1932))+((x1912*x1927))+(((-1.0)*x1907*x1930)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1937=((0.646708404322884)*cj4);
IkReal x1938=((0.62876328674038)*cj5);
IkReal x1939=((0.62876328674038)*sj5);
IkReal x1940=((0.373377619497519)*cj4*cj5);
IkReal x1941=((0.373377619497519)*cj4*sj5);
IkReal x1942=((0.746754716733336)*cj5*sj4);
IkReal x1943=((0.746754716733336)*sj4*sj5);
if( IKabs((((r11*x1940))+(((3.44827586206897)*py))+((r10*x1941))+(((0.289291595677116)*r12))+(((-1.0)*r11*x1938))+(((-1.0)*r11*x1943))+(((-1.0)*r10*x1939))+((r12*x1937))+((r10*x1942)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*x1939))+(((3.44827586206897)*pz))+((r22*x1937))+((r20*x1941))+(((-1.0)*r21*x1943))+(((-1.0)*r21*x1938))+(((0.289291595677116)*r22))+((r20*x1942))+((r21*x1940)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r11*x1940))+(((3.44827586206897)*py))+((r10*x1941))+(((0.289291595677116)*r12))+(((-1.0)*r11*x1938))+(((-1.0)*r11*x1943))+(((-1.0)*r10*x1939))+((r12*x1937))+((r10*x1942))))+IKsqr(((((-1.0)*r20*x1939))+(((3.44827586206897)*pz))+((r22*x1937))+((r20*x1941))+(((-1.0)*r21*x1943))+(((-1.0)*r21*x1938))+(((0.289291595677116)*r22))+((r20*x1942))+((r21*x1940))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r11*x1940))+(((3.44827586206897)*py))+((r10*x1941))+(((0.289291595677116)*r12))+(((-1.0)*r11*x1938))+(((-1.0)*r11*x1943))+(((-1.0)*r10*x1939))+((r12*x1937))+((r10*x1942))), ((((-1.0)*r20*x1939))+(((3.44827586206897)*pz))+((r22*x1937))+((r20*x1941))+(((-1.0)*r21*x1943))+(((-1.0)*r21*x1938))+(((0.289291595677116)*r22))+((r20*x1942))+((r21*x1940))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1944=((0.187545437253636)*cj4);
IkReal x1945=(cj5*r11);
IkReal x1946=(r10*sj5);
IkReal x1947=((0.29)*(IKsin(j1)));
IkReal x1948=(cj4*cj5*r11);
IkReal x1949=(cj4*r10*sj5);
IkReal x1950=(cj5*r10*sj4);
IkReal x1951=(r11*sj4*sj5);
IkReal x1952=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x1953=(cj5*r21);
IkReal x1954=(r20*sj5);
IkReal x1955=(cj4*cj5*r21);
IkReal x1956=(cj4*r20*sj5);
IkReal x1957=(cj5*r20*sj4);
IkReal x1958=(r21*sj4*sj5);
IkReal x1959=((0.0160344678271334)*r22);
IkReal x1960=((0.117537022603216)*sj3);
IkReal x1961=(r12*x1960);
IkReal x1962=((0.235073880801598)*cj3*sj4);
IkReal x1963=((0.20357990508077)*sj3);
IkReal x1964=((0.27144)*cj3*cj4*cj5);
IkReal x1965=((0.27144)*cj3*cj4*sj5);
IkReal x1966=((0.135720094919197)*cj3*sj4);
IkReal x1967=((0.0678600949192303)*sj3);
IkReal x1968=((0.135720094919197)*sj3);
IkReal x1969=((0.0160344678271334)*r12);
IkReal x1970=(r22*x1960);
evalcond[0]=(((r12*x1944))+(((-0.216558867852667)*x1951))+(((0.0838945627463637)*r12))+py+(((-0.18234135315471)*x1945))+(((-0.18234135315471)*x1946))+(((0.10827950965428)*x1949))+(((0.216558867852667)*x1950))+(((0.10827950965428)*x1948))+(((-1.0)*x1947)));
evalcond[1]=((((-0.216558867852667)*x1958))+(((-0.18234135315471)*x1953))+((r22*x1944))+(((-0.18234135315471)*x1954))+(((0.10827950965428)*x1955))+(((0.216558867852667)*x1957))+(((0.10827950965428)*x1956))+x1952+(((0.0838945627463637)*r22)));
evalcond[2]=(((x1948*x1967))+(((-0.0648043305514941)*x1953))+(((-1.0)*x1951*x1968))+(((-1.0)*x1961))+(((-1.0)*r10*x1964))+(((-0.00925751294893567)*x1955))+((r12*x1962))+(((-0.0648043305514941)*x1954))+(((0.0185150129489311)*x1958))+((r11*x1965))+((x1950*x1968))+((x1946*x1963))+((x1945*x1966))+((cj4*x1961))+(((-0.00925751294893567)*x1956))+((x1945*x1963))+x1959+x1952+((x1946*x1966))+(((-1.0)*cj4*x1959))+((x1949*x1967))+(((-0.0185150129489311)*x1957)));
evalcond[3]=((((0.0185150129489311)*x1950))+x1947+((cj4*x1969))+(((-0.0185150129489311)*x1951))+(((-1.0)*(1.0)*py))+((x1955*x1967))+((cj4*x1970))+((x1956*x1967))+((r22*x1962))+((x1954*x1966))+(((0.0648043305514941)*x1945))+((x1957*x1968))+(((0.0648043305514941)*x1946))+(((-1.0)*x1969))+(((0.00925751294893567)*x1948))+((x1954*x1963))+((r21*x1965))+(((-1.0)*r20*x1964))+((x1953*x1966))+(((0.00925751294893567)*x1949))+((x1953*x1963))+(((-1.0)*x1958*x1968))+(((-1.0)*x1970)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1971=((0.250000349687704)*cj1);
IkReal x1972=((0.250000349687704)*sj1);
IkReal x1973=((0.749999650312296)*cj1*cj4);
IkReal x1974=((0.433012903784321)*cj1*cj5);
IkReal x1975=(r11*x1974);
IkReal x1976=((0.433012903784321)*cj1*sj5);
IkReal x1977=(r10*x1976);
IkReal x1978=((0.749999650312296)*cj4*sj1);
IkReal x1979=((0.433012903784321)*cj5*sj1);
IkReal x1980=(r21*x1979);
IkReal x1981=((0.433012903784321)*sj1*sj5);
IkReal x1982=(r20*x1981);
IkReal x1983=((0.866025201892125)*cj1*cj5*sj4);
IkReal x1984=((0.866025201892125)*cj1*sj4*sj5);
IkReal x1985=((0.866025201892125)*cj5*sj1*sj4);
IkReal x1986=((0.866025201892125)*sj1*sj4*sj5);
IkReal x1987=(r21*x1974);
IkReal x1988=(r20*x1976);
IkReal x1989=(r11*x1979);
IkReal x1990=(r10*x1981);
if( IKabs(((((-1.0)*cj4*x1977))+((r11*x1984))+((cj4*x1980))+(((-1.0)*x1980))+((r22*x1972))+(((-1.0)*r10*x1983))+((cj4*x1982))+(((-1.0)*x1982))+(((-1.0)*cj4*x1975))+(((-1.0)*r21*x1986))+((r20*x1985))+(((-1.0)*r12*x1973))+(((-1.0)*r12*x1971))+x1977+x1975+((r22*x1978)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x1989))+(((-1.0)*x1989))+(((-1.0)*x1987))+(((-1.0)*r11*x1986))+((cj4*x1987))+(((-1.0)*x1990))+((cj4*x1990))+((r20*x1983))+(((-1.0)*x1988))+((cj4*x1988))+((r12*x1978))+((r22*x1971))+((r12*x1972))+((r10*x1985))+((r22*x1973))+(((-1.0)*r21*x1984)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj4*x1977))+((r11*x1984))+((cj4*x1980))+(((-1.0)*x1980))+((r22*x1972))+(((-1.0)*r10*x1983))+((cj4*x1982))+(((-1.0)*x1982))+(((-1.0)*cj4*x1975))+(((-1.0)*r21*x1986))+((r20*x1985))+(((-1.0)*r12*x1973))+(((-1.0)*r12*x1971))+x1977+x1975+((r22*x1978))))+IKsqr((((cj4*x1989))+(((-1.0)*x1989))+(((-1.0)*x1987))+(((-1.0)*r11*x1986))+((cj4*x1987))+(((-1.0)*x1990))+((cj4*x1990))+((r20*x1983))+(((-1.0)*x1988))+((cj4*x1988))+((r12*x1978))+((r22*x1971))+((r12*x1972))+((r10*x1985))+((r22*x1973))+(((-1.0)*r21*x1984))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj4*x1977))+((r11*x1984))+((cj4*x1980))+(((-1.0)*x1980))+((r22*x1972))+(((-1.0)*r10*x1983))+((cj4*x1982))+(((-1.0)*x1982))+(((-1.0)*cj4*x1975))+(((-1.0)*r21*x1986))+((r20*x1985))+(((-1.0)*r12*x1973))+(((-1.0)*r12*x1971))+x1977+x1975+((r22*x1978))), (((cj4*x1989))+(((-1.0)*x1989))+(((-1.0)*x1987))+(((-1.0)*r11*x1986))+((cj4*x1987))+(((-1.0)*x1990))+((cj4*x1990))+((r20*x1983))+(((-1.0)*x1988))+((cj4*x1988))+((r12*x1978))+((r22*x1971))+((r12*x1972))+((r10*x1985))+((r22*x1973))+(((-1.0)*r21*x1984))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1991=IKcos(j2);
IkReal x1992=(cj1*x1991);
IkReal x1993=((0.749999650312296)*cj4);
IkReal x1994=(cj5*r21);
IkReal x1995=((0.433012903784321)*x1994);
IkReal x1996=(r20*sj5);
IkReal x1997=((0.433012903784321)*x1996);
IkReal x1998=IKsin(j2);
IkReal x1999=(sj1*x1998);
IkReal x2000=(cj5*r20*sj4);
IkReal x2001=(r21*sj4*sj5);
IkReal x2002=(sj1*x1991);
IkReal x2003=(cj1*x1998);
IkReal x2004=((((-1.0)*x2003))+x2002);
IkReal x2005=(cj5*r11);
IkReal x2006=((0.433012903784321)*x2005);
IkReal x2007=(r10*sj5);
IkReal x2008=((0.433012903784321)*x2007);
IkReal x2009=(cj5*r10*sj4);
IkReal x2010=(r11*sj4*sj5);
IkReal x2011=((0.0160344678271334)*r22);
IkReal x2012=((0.00925751294893567)*cj4);
IkReal x2013=((0.0160344678271334)*r12);
IkReal x2014=((0.433012903784321)*sj3);
IkReal x2015=(r22*x2014);
IkReal x2016=((0.866025201892125)*cj3*sj4);
IkReal x2017=((0.749999650312296)*sj3);
IkReal x2018=(cj3*cj4*sj5);
IkReal x2019=((1.0)*cj3*cj4*cj5);
IkReal x2020=((0.500000349687582)*cj3*sj4);
IkReal x2021=((0.250000349687704)*cj4*sj3);
IkReal x2022=((0.500000349687582)*sj3);
IkReal x2023=(r12*x2014);
evalcond[0]=((((-1.0)*r22*x1993))+x1992+x1995+x1999+x1997+(((0.866025201892125)*x2001))+(((-0.866025201892125)*x2000))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x1995))+(((-1.0)*cj4*x1997)));
evalcond[1]=(x2008+x2004+x2006+(((-0.866025201892125)*x2009))+(((-1.0)*cj4*x2008))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*cj4*x2006))+(((-1.0)*r12*x1993))+(((0.866025201892125)*x2010)));
evalcond[2]=((((-0.27144)*x1999))+(((-1.0)*(1.0)*pz))+((cj4*x2011))+((x1994*x2012))+(((0.0648043305514941)*x1994))+(((-1.0)*x2011))+(((-0.0185150129489311)*x2001))+(((-0.27144)*x1992))+(((0.29)*cj1))+((x1996*x2012))+(((0.0648043305514941)*x1996))+(((0.0185150129489311)*x2000)));
evalcond[3]=((((-1.0)*(1.0)*py))+(((-0.0185150129489311)*x2010))+(((-0.27144)*x2002))+((x2007*x2012))+(((0.0648043305514941)*x2007))+((cj4*x2013))+(((0.27144)*x2003))+(((-1.0)*x2013))+(((0.0648043305514941)*x2005))+((x2005*x2012))+(((0.0185150129489311)*x2009))+(((0.29)*sj1)));
evalcond[4]=(x2004+((x1996*x2021))+((x1994*x2020))+((r21*x2018))+((x2000*x2022))+((x1996*x2020))+((x1994*x2017))+((cj4*x2015))+(((-1.0)*x2015))+((r22*x2016))+(((-1.0)*x2001*x2022))+((x1994*x2021))+(((-1.0)*r20*x2019))+((x1996*x2017)));
evalcond[5]=(((r11*x2018))+(((-1.0)*x2023))+(((-1.0)*x1999))+((x2009*x2022))+((x2005*x2020))+((x2005*x2017))+((x2005*x2021))+((x2007*x2021))+((r12*x2016))+(((-1.0)*x2010*x2022))+(((-1.0)*r10*x2019))+((cj4*x2023))+(((-1.0)*x1992))+((x2007*x2020))+((x2007*x2017)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2, j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2024=((0.433012903784321)*sj5);
IkReal x2025=((0.866025201892125)*sj4);
IkReal x2026=((0.433012903784321)*cj5);
IkReal x2027=((0.433012903784321)*cj0*r02);
IkReal x2028=((0.433012903784321)*r12*sj0);
IkReal x2029=((0.749999650312296)*cj0);
IkReal x2030=(cj5*r01);
IkReal x2031=(r00*sj5);
IkReal x2032=((0.749999650312296)*sj0);
IkReal x2033=(cj5*r11);
IkReal x2034=(r10*sj5);
IkReal x2035=((0.250000349687704)*cj0*cj4);
IkReal x2036=(cj0*r00);
IkReal x2037=((0.500000349687582)*cj5*sj4);
IkReal x2038=((0.500000349687582)*sj4);
IkReal x2039=(cj0*r01*sj5);
IkReal x2040=((0.250000349687704)*cj4*sj0);
IkReal x2041=(r10*sj0);
IkReal x2042=(r11*sj0*sj5);
IkReal x2043=(cj4*cj5);
IkReal x2044=((1.0)*cj4);
IkReal x2045=((0.500000349687582)*cj0*sj4);
IkReal x2046=((0.500000349687582)*sj0*sj4);
CheckValue<IkReal> x2047=IKPowWithIntegerCheck(IKsign((((r20*((((cj4*x2024))+(((-1.0)*x2024))+((cj5*x2025))))))+((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r21*((((cj4*x2026))+(((-1.0)*sj5*x2025))+(((-1.0)*x2026)))))))),-1);
if(!x2047.valid){
continue;
}
CheckValue<IkReal> x2048 = IKatan2WithCheck(IkReal(((((-1.0)*x2034*x2040))+((x2038*x2039))+(((-1.0)*x2030*x2035))+(((-1.0)*cj4*x2028))+(((-1.0)*x2031*x2035))+(((-1.0)*x2037*x2041))+(((-1.0)*x2032*x2034))+((x2038*x2042))+(((-1.0)*cj4*x2027))+(((-1.0)*x2029*x2031))+x2027+x2028+(((-1.0)*x2032*x2033))+(((-1.0)*x2033*x2040))+(((-1.0)*x2029*x2030))+(((-1.0)*x2036*x2037)))),IkReal(((((-1.0)*x2033*x2046))+(((-1.0)*x2039*x2044))+(((-1.0)*x2042*x2044))+(((-1.0)*x2034*x2046))+(((-1.0)*cj0*r02*x2025))+(((-1.0)*x2031*x2045))+(((-1.0)*x2030*x2045))+((x2036*x2043))+(((-1.0)*r12*sj0*x2025))+((x2041*x2043)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2048.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2047.value)))+(x2048.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2049=IKcos(j3);
IkReal x2050=((0.433012903784321)*x2049);
IkReal x2051=(r22*x2050);
IkReal x2052=((0.749999650312296)*cj5*x2049);
IkReal x2053=((0.749999650312296)*sj5*x2049);
IkReal x2054=IKsin(j3);
IkReal x2055=((0.866025201892125)*sj4*x2054);
IkReal x2056=(cj4*sj5*x2054);
IkReal x2057=((1.0)*cj4*cj5*x2054);
IkReal x2058=((0.250000349687704)*cj4*cj5*x2049);
IkReal x2059=((0.250000349687704)*cj4*sj5*x2049);
IkReal x2060=((0.500000349687582)*cj5*sj4*x2049);
IkReal x2061=((0.500000349687582)*cj5*sj4*x2054);
IkReal x2062=((0.500000349687582)*sj4*sj5*x2054);
IkReal x2063=((0.500000349687582)*sj4*sj5*x2049);
IkReal x2064=(r12*x2050);
IkReal x2065=(r02*x2050);
evalcond[0]=(((r21*x2061))+((r22*x2055))+(((-1.0)*r20*x2053))+x2051+(((-1.0)*r20*x2060))+((r20*x2062))+((r21*x2063))+(((-1.0)*r21*x2052))+(((-1.0)*r20*x2059))+((r21*x2056))+(((-1.0)*r21*x2058))+(((-1.0)*cj4*x2051))+(((-1.0)*r20*x2057)));
evalcond[1]=((((-1.0)*r10*x2059))+x2064+(((-1.0)*r11*x2052))+(((-1.0)*cj4*x2064))+((r10*x2062))+((r11*x2063))+cj0+(((-1.0)*r10*x2053))+(((-1.0)*r10*x2060))+(((-1.0)*r10*x2057))+(((-1.0)*r11*x2058))+((r11*x2056))+((r11*x2061))+((r12*x2055)));
evalcond[2]=((((-1.0)*(1.0)*sj0))+x2065+(((-1.0)*r00*x2053))+((r01*x2063))+(((-1.0)*r01*x2058))+((r02*x2055))+((r01*x2056))+(((-1.0)*cj4*x2065))+(((-1.0)*r01*x2052))+(((-1.0)*r00*x2059))+(((-1.0)*r00*x2060))+((r01*x2061))+((r00*x2062))+(((-1.0)*r00*x2057)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2066=((0.646708404322884)*cj4);
IkReal x2067=((0.62876328674038)*cj5);
IkReal x2068=((0.62876328674038)*sj5);
IkReal x2069=((0.373377619497519)*cj4*cj5);
IkReal x2070=((0.373377619497519)*cj4*sj5);
IkReal x2071=((0.746754716733336)*cj5*sj4);
IkReal x2072=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r10*x2070))+((r11*x2072))+(((-1.0)*r10*x2071))+(((-1.0)*(0.289291595677116)*r12))+((r11*x2067))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x2069))+(((-1.0)*r12*x2066))+((r10*x2068)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*x2068))+((r21*x2069))+(((3.44827586206897)*pz))+(((-1.0)*r21*x2067))+((r22*x2066))+(((0.289291595677116)*r22))+((r20*x2071))+((r20*x2070))+(((-1.0)*r21*x2072)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x2070))+((r11*x2072))+(((-1.0)*r10*x2071))+(((-1.0)*(0.289291595677116)*r12))+((r11*x2067))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x2069))+(((-1.0)*r12*x2066))+((r10*x2068))))+IKsqr(((((-1.0)*r20*x2068))+((r21*x2069))+(((3.44827586206897)*pz))+(((-1.0)*r21*x2067))+((r22*x2066))+(((0.289291595677116)*r22))+((r20*x2071))+((r20*x2070))+(((-1.0)*r21*x2072))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r10*x2070))+((r11*x2072))+(((-1.0)*r10*x2071))+(((-1.0)*(0.289291595677116)*r12))+((r11*x2067))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r11*x2069))+(((-1.0)*r12*x2066))+((r10*x2068))), ((((-1.0)*r20*x2068))+((r21*x2069))+(((3.44827586206897)*pz))+(((-1.0)*r21*x2067))+((r22*x2066))+(((0.289291595677116)*r22))+((r20*x2071))+((r20*x2070))+(((-1.0)*r21*x2072))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2073=((0.187545437253636)*cj4);
IkReal x2074=(cj5*r21);
IkReal x2075=(r20*sj5);
IkReal x2076=((0.29)*(IKcos(j1)));
IkReal x2077=(cj4*cj5*r21);
IkReal x2078=(cj4*r20*sj5);
IkReal x2079=(cj5*r20*sj4);
IkReal x2080=(r21*sj4*sj5);
IkReal x2081=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*py)));
IkReal x2082=(cj5*r11);
IkReal x2083=(r10*sj5);
IkReal x2084=(cj4*cj5*r11);
IkReal x2085=(cj4*r10*sj5);
IkReal x2086=(cj5*r10*sj4);
IkReal x2087=(r11*sj4*sj5);
IkReal x2088=((0.0160344678271334)*r12);
IkReal x2089=((0.117537022603216)*sj3);
IkReal x2090=(r22*x2089);
IkReal x2091=((0.235073880801598)*cj3*sj4);
IkReal x2092=((0.20357990508077)*sj3);
IkReal x2093=((0.27144)*cj3*cj4*cj5);
IkReal x2094=((0.27144)*cj3*cj4*sj5);
IkReal x2095=((0.135720094919197)*cj3*sj4);
IkReal x2096=((0.0678600949192303)*sj3);
IkReal x2097=((0.135720094919197)*sj3);
IkReal x2098=((0.0160344678271334)*r22);
IkReal x2099=(r12*x2089);
evalcond[0]=(((r22*x2073))+(((0.216558867852667)*x2079))+pz+(((-1.0)*x2076))+(((0.10827950965428)*x2078))+(((-0.18234135315471)*x2075))+(((-0.216558867852667)*x2080))+(((-0.18234135315471)*x2074))+(((0.0838945627463637)*r22))+(((0.10827950965428)*x2077)));
evalcond[1]=((((-1.0)*(0.0838945627463637)*r12))+(((-0.10827950965428)*x2085))+(((-0.10827950965428)*x2084))+(((0.18234135315471)*x2082))+(((-0.216558867852667)*x2086))+(((0.18234135315471)*x2083))+(((-1.0)*r12*x2073))+x2081+(((0.216558867852667)*x2087)));
evalcond[2]=(x2090+(((0.0648043305514941)*x2082))+(((0.0648043305514941)*x2083))+(((-1.0)*r21*x2094))+(((-1.0)*x2074*x2095))+(((-0.0185150129489311)*x2087))+(((-1.0)*x2088))+(((0.0185150129489311)*x2086))+(((-1.0)*x2077*x2096))+(((-1.0)*x2075*x2092))+(((0.00925751294893567)*x2084))+(((-1.0)*cj4*x2090))+(((-1.0)*r22*x2091))+((x2080*x2097))+(((-1.0)*x2074*x2092))+(((-1.0)*x2078*x2096))+(((0.00925751294893567)*x2085))+((cj4*x2088))+x2081+(((-1.0)*x2079*x2097))+((r20*x2093))+(((-1.0)*x2075*x2095)));
evalcond[3]=(((x2083*x2092))+((r11*x2094))+((x2082*x2095))+((x2085*x2096))+((r12*x2091))+(((-1.0)*x2087*x2097))+((x2084*x2096))+x2076+(((-1.0)*(1.0)*pz))+(((0.00925751294893567)*x2078))+(((-0.0185150129489311)*x2080))+(((0.0185150129489311)*x2079))+(((-1.0)*x2098))+(((-1.0)*x2099))+((x2082*x2092))+((x2083*x2095))+(((0.0648043305514941)*x2075))+((cj4*x2098))+(((0.0648043305514941)*x2074))+(((-1.0)*r10*x2093))+((x2086*x2097))+((cj4*x2099))+(((0.00925751294893567)*x2077)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2100=((0.250000349687704)*cj1);
IkReal x2101=((0.250000349687704)*sj1);
IkReal x2102=((0.749999650312296)*cj1*cj4);
IkReal x2103=((0.433012903784321)*cj1*cj5);
IkReal x2104=(r11*x2103);
IkReal x2105=((0.433012903784321)*cj1*sj5);
IkReal x2106=(r10*x2105);
IkReal x2107=((0.749999650312296)*cj4*sj1);
IkReal x2108=((0.433012903784321)*cj5*sj1);
IkReal x2109=(r21*x2108);
IkReal x2110=((0.433012903784321)*sj1*sj5);
IkReal x2111=(r20*x2110);
IkReal x2112=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2113=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2114=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2115=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2116=(r21*x2103);
IkReal x2117=(r20*x2105);
IkReal x2118=(r11*x2108);
IkReal x2119=(r10*x2110);
if( IKabs(((((-1.0)*x2104))+(((-1.0)*r11*x2113))+((r10*x2112))+(((-1.0)*x2109))+(((-1.0)*r21*x2115))+(((-1.0)*x2111))+(((-1.0)*x2106))+((cj4*x2111))+((cj4*x2106))+((r22*x2107))+((r12*x2100))+((cj4*x2104))+((r20*x2114))+((cj4*x2109))+((r22*x2101))+((r12*x2102)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x2113))+(((-1.0)*r12*x2107))+x2119+x2118+(((-1.0)*cj4*x2119))+((r11*x2115))+((cj4*x2116))+(((-1.0)*cj4*x2118))+(((-1.0)*x2116))+(((-1.0)*r12*x2101))+(((-1.0)*r10*x2114))+(((-1.0)*x2117))+((cj4*x2117))+((r22*x2100))+((r22*x2102))+((r20*x2112)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2104))+(((-1.0)*r11*x2113))+((r10*x2112))+(((-1.0)*x2109))+(((-1.0)*r21*x2115))+(((-1.0)*x2111))+(((-1.0)*x2106))+((cj4*x2111))+((cj4*x2106))+((r22*x2107))+((r12*x2100))+((cj4*x2104))+((r20*x2114))+((cj4*x2109))+((r22*x2101))+((r12*x2102))))+IKsqr(((((-1.0)*r21*x2113))+(((-1.0)*r12*x2107))+x2119+x2118+(((-1.0)*cj4*x2119))+((r11*x2115))+((cj4*x2116))+(((-1.0)*cj4*x2118))+(((-1.0)*x2116))+(((-1.0)*r12*x2101))+(((-1.0)*r10*x2114))+(((-1.0)*x2117))+((cj4*x2117))+((r22*x2100))+((r22*x2102))+((r20*x2112))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2104))+(((-1.0)*r11*x2113))+((r10*x2112))+(((-1.0)*x2109))+(((-1.0)*r21*x2115))+(((-1.0)*x2111))+(((-1.0)*x2106))+((cj4*x2111))+((cj4*x2106))+((r22*x2107))+((r12*x2100))+((cj4*x2104))+((r20*x2114))+((cj4*x2109))+((r22*x2101))+((r12*x2102))), ((((-1.0)*r21*x2113))+(((-1.0)*r12*x2107))+x2119+x2118+(((-1.0)*cj4*x2119))+((r11*x2115))+((cj4*x2116))+(((-1.0)*cj4*x2118))+(((-1.0)*x2116))+(((-1.0)*r12*x2101))+(((-1.0)*r10*x2114))+(((-1.0)*x2117))+((cj4*x2117))+((r22*x2100))+((r22*x2102))+((r20*x2112))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2120=IKcos(j2);
IkReal x2121=(cj1*x2120);
IkReal x2122=IKsin(j2);
IkReal x2123=(sj1*x2122);
IkReal x2124=(x2121+x2123);
IkReal x2125=((0.749999650312296)*cj4);
IkReal x2126=(cj5*r21);
IkReal x2127=((0.433012903784321)*x2126);
IkReal x2128=(r20*sj5);
IkReal x2129=((0.433012903784321)*x2128);
IkReal x2130=(cj5*r20*sj4);
IkReal x2131=(r21*sj4*sj5);
IkReal x2132=(cj1*x2122);
IkReal x2133=(cj5*r11);
IkReal x2134=((0.433012903784321)*x2133);
IkReal x2135=(r10*sj5);
IkReal x2136=((0.433012903784321)*x2135);
IkReal x2137=(sj1*x2120);
IkReal x2138=(cj5*r10*sj4);
IkReal x2139=(r11*sj4*sj5);
IkReal x2140=((0.0160344678271334)*r22);
IkReal x2141=((0.00925751294893567)*cj4);
IkReal x2142=((0.0160344678271334)*r12);
IkReal x2143=((0.433012903784321)*sj3);
IkReal x2144=(r12*x2143);
IkReal x2145=((0.866025201892125)*cj3*sj4);
IkReal x2146=((0.749999650312296)*sj3);
IkReal x2147=(cj3*cj4*sj5);
IkReal x2148=((1.0)*cj3*cj4*cj5);
IkReal x2149=((0.500000349687582)*cj3*sj4);
IkReal x2150=((0.250000349687704)*cj4*sj3);
IkReal x2151=((0.500000349687582)*sj3);
IkReal x2152=(r22*x2143);
evalcond[0]=((((-1.0)*r22*x2125))+(((-0.866025201892125)*x2130))+x2129+x2127+x2124+(((-1.0)*cj4*x2129))+(((0.866025201892125)*x2131))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x2127)));
evalcond[1]=((((-1.0)*r12*x2125))+(((-1.0)*cj4*x2136))+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x2139))+(((-1.0)*x2137))+(((-1.0)*cj4*x2134))+(((-0.866025201892125)*x2138))+x2132+x2134+x2136);
evalcond[2]=((((0.0648043305514941)*x2126))+(((-1.0)*(1.0)*pz))+((x2126*x2141))+(((0.0648043305514941)*x2128))+((x2128*x2141))+(((-1.0)*x2140))+((cj4*x2140))+(((0.29)*cj1))+(((-0.27144)*x2123))+(((-0.27144)*x2121))+(((-0.0185150129489311)*x2131))+(((0.0185150129489311)*x2130)));
evalcond[3]=((((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+((x2133*x2141))+(((0.0185150129489311)*x2138))+(((-0.0185150129489311)*x2139))+((x2135*x2141))+(((0.27144)*x2137))+(((-0.27144)*x2132))+(((0.0648043305514941)*x2133))+(((-1.0)*x2142))+((cj4*x2142))+(((0.0648043305514941)*x2135)));
evalcond[4]=(((r11*x2147))+((x2135*x2146))+((x2133*x2150))+((x2133*x2149))+(((-1.0)*r10*x2148))+((x2135*x2149))+((x2133*x2146))+((r12*x2145))+(((-1.0)*x2139*x2151))+x2124+(((-1.0)*x2144))+((cj4*x2144))+((x2135*x2150))+((x2138*x2151)));
evalcond[5]=(((r22*x2145))+((x2126*x2146))+((r21*x2147))+((x2128*x2150))+(((-1.0)*r20*x2148))+((x2130*x2151))+((x2126*x2149))+((x2128*x2149))+(((-1.0)*x2152))+((x2128*x2146))+(((-1.0)*x2131*x2151))+((x2126*x2150))+(((-1.0)*x2132))+((cj4*x2152))+x2137);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2153=((0.646708404322884)*cj4);
IkReal x2154=((0.62876328674038)*cj5);
IkReal x2155=((0.62876328674038)*sj5);
IkReal x2156=((0.373377619497519)*cj4*cj5);
IkReal x2157=((0.373377619497519)*cj4*sj5);
IkReal x2158=((0.746754716733336)*cj5*sj4);
IkReal x2159=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r11*x2159))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+((r10*x2157))+(((-1.0)*r11*x2154))+((r11*x2156))+((r10*x2158))+(((-1.0)*r10*x2155))+((r12*x2153)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+(((-1.0)*r21*x2159))+((r21*x2156))+(((-1.0)*r21*x2154))+((r22*x2153))+(((0.289291595677116)*r22))+(((-1.0)*r20*x2155))+((r20*x2157))+((r20*x2158)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x2159))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+((r10*x2157))+(((-1.0)*r11*x2154))+((r11*x2156))+((r10*x2158))+(((-1.0)*r10*x2155))+((r12*x2153))))+IKsqr(((((3.44827586206897)*pz))+(((-1.0)*r21*x2159))+((r21*x2156))+(((-1.0)*r21*x2154))+((r22*x2153))+(((0.289291595677116)*r22))+(((-1.0)*r20*x2155))+((r20*x2157))+((r20*x2158))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r11*x2159))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+((r10*x2157))+(((-1.0)*r11*x2154))+((r11*x2156))+((r10*x2158))+(((-1.0)*r10*x2155))+((r12*x2153))), ((((3.44827586206897)*pz))+(((-1.0)*r21*x2159))+((r21*x2156))+(((-1.0)*r21*x2154))+((r22*x2153))+(((0.289291595677116)*r22))+(((-1.0)*r20*x2155))+((r20*x2157))+((r20*x2158))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2160=((0.187545437253636)*cj4);
IkReal x2161=(cj5*r11);
IkReal x2162=(r10*sj5);
IkReal x2163=((0.29)*(IKsin(j1)));
IkReal x2164=(cj4*cj5*r11);
IkReal x2165=(cj4*r10*sj5);
IkReal x2166=(cj5*r10*sj4);
IkReal x2167=(r11*sj4*sj5);
IkReal x2168=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x2169=(cj5*r21);
IkReal x2170=(r20*sj5);
IkReal x2171=(cj4*cj5*r21);
IkReal x2172=(cj4*r20*sj5);
IkReal x2173=(cj5*r20*sj4);
IkReal x2174=(r21*sj4*sj5);
IkReal x2175=((0.0160344678271334)*r22);
IkReal x2176=((0.117537022603216)*sj3);
IkReal x2177=(r12*x2176);
IkReal x2178=((0.235073880801598)*cj3*sj4);
IkReal x2179=((0.20357990508077)*sj3);
IkReal x2180=((0.27144)*cj3*cj4*cj5);
IkReal x2181=((0.27144)*cj3*cj4*sj5);
IkReal x2182=((0.135720094919197)*cj3*sj4);
IkReal x2183=((0.0678600949192303)*sj3);
IkReal x2184=((0.135720094919197)*sj3);
IkReal x2185=((0.0160344678271334)*r12);
IkReal x2186=(r22*x2176);
evalcond[0]=((((-0.216558867852667)*x2167))+(((0.216558867852667)*x2166))+(((0.0838945627463637)*r12))+py+(((0.10827950965428)*x2164))+(((0.10827950965428)*x2165))+(((-0.18234135315471)*x2162))+(((-0.18234135315471)*x2161))+(((-1.0)*x2163))+((r12*x2160)));
evalcond[1]=((((-0.18234135315471)*x2169))+(((0.216558867852667)*x2173))+((r22*x2160))+x2168+(((0.10827950965428)*x2172))+(((-0.216558867852667)*x2174))+(((0.10827950965428)*x2171))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x2170)));
evalcond[2]=(((r12*x2178))+(((-0.00925751294893567)*x2172))+(((-1.0)*x2167*x2184))+x2175+x2168+((x2161*x2182))+(((-1.0)*x2177))+((x2164*x2183))+(((-0.0185150129489311)*x2173))+((x2162*x2179))+((r11*x2181))+((x2162*x2182))+((x2161*x2179))+((cj4*x2177))+(((-0.0648043305514941)*x2169))+(((-1.0)*r10*x2180))+((x2165*x2183))+(((-1.0)*cj4*x2175))+(((-0.0648043305514941)*x2170))+((x2166*x2184))+(((-0.00925751294893567)*x2171))+(((0.0185150129489311)*x2174)));
evalcond[3]=((((0.00925751294893567)*x2164))+((x2169*x2179))+(((-1.0)*(1.0)*py))+((x2170*x2179))+(((-0.0185150129489311)*x2167))+(((0.0648043305514941)*x2162))+x2163+((cj4*x2185))+((x2171*x2183))+(((-1.0)*x2185))+(((0.0648043305514941)*x2161))+(((-1.0)*x2186))+((cj4*x2186))+((r22*x2178))+(((-1.0)*r20*x2180))+(((0.00925751294893567)*x2165))+(((0.0185150129489311)*x2166))+((x2173*x2184))+(((-1.0)*x2174*x2184))+((x2170*x2182))+((x2172*x2183))+((x2169*x2182))+((r21*x2181)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2187=((0.250000349687704)*cj1);
IkReal x2188=((0.250000349687704)*sj1);
IkReal x2189=((0.749999650312296)*cj1*cj4);
IkReal x2190=((0.433012903784321)*cj1*cj5);
IkReal x2191=(r11*x2190);
IkReal x2192=((0.433012903784321)*cj1*sj5);
IkReal x2193=(r10*x2192);
IkReal x2194=((0.749999650312296)*cj4*sj1);
IkReal x2195=((0.433012903784321)*cj5*sj1);
IkReal x2196=(r21*x2195);
IkReal x2197=((0.433012903784321)*sj1*sj5);
IkReal x2198=(r20*x2197);
IkReal x2199=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2200=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2201=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2202=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2203=(r21*x2190);
IkReal x2204=(r20*x2192);
IkReal x2205=(r11*x2195);
IkReal x2206=(r10*x2197);
if( IKabs(((((-1.0)*x2196))+(((-1.0)*r10*x2199))+x2193+x2191+((r20*x2201))+((cj4*x2198))+((r22*x2188))+(((-1.0)*cj4*x2193))+((cj4*x2196))+(((-1.0)*r12*x2189))+(((-1.0)*r12*x2187))+(((-1.0)*cj4*x2191))+(((-1.0)*r21*x2202))+((r11*x2200))+(((-1.0)*x2198))+((r22*x2194)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2206))+((r10*x2201))+(((-1.0)*x2205))+((r12*x2188))+((cj4*x2203))+((cj4*x2206))+(((-1.0)*x2204))+(((-1.0)*r11*x2202))+((r22*x2187))+((cj4*x2205))+((r22*x2189))+((r20*x2199))+((cj4*x2204))+((r12*x2194))+(((-1.0)*r21*x2200))+(((-1.0)*x2203)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2196))+(((-1.0)*r10*x2199))+x2193+x2191+((r20*x2201))+((cj4*x2198))+((r22*x2188))+(((-1.0)*cj4*x2193))+((cj4*x2196))+(((-1.0)*r12*x2189))+(((-1.0)*r12*x2187))+(((-1.0)*cj4*x2191))+(((-1.0)*r21*x2202))+((r11*x2200))+(((-1.0)*x2198))+((r22*x2194))))+IKsqr(((((-1.0)*x2206))+((r10*x2201))+(((-1.0)*x2205))+((r12*x2188))+((cj4*x2203))+((cj4*x2206))+(((-1.0)*x2204))+(((-1.0)*r11*x2202))+((r22*x2187))+((cj4*x2205))+((r22*x2189))+((r20*x2199))+((cj4*x2204))+((r12*x2194))+(((-1.0)*r21*x2200))+(((-1.0)*x2203))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2196))+(((-1.0)*r10*x2199))+x2193+x2191+((r20*x2201))+((cj4*x2198))+((r22*x2188))+(((-1.0)*cj4*x2193))+((cj4*x2196))+(((-1.0)*r12*x2189))+(((-1.0)*r12*x2187))+(((-1.0)*cj4*x2191))+(((-1.0)*r21*x2202))+((r11*x2200))+(((-1.0)*x2198))+((r22*x2194))), ((((-1.0)*x2206))+((r10*x2201))+(((-1.0)*x2205))+((r12*x2188))+((cj4*x2203))+((cj4*x2206))+(((-1.0)*x2204))+(((-1.0)*r11*x2202))+((r22*x2187))+((cj4*x2205))+((r22*x2189))+((r20*x2199))+((cj4*x2204))+((r12*x2194))+(((-1.0)*r21*x2200))+(((-1.0)*x2203))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2207=IKcos(j2);
IkReal x2208=(cj1*x2207);
IkReal x2209=((0.749999650312296)*cj4);
IkReal x2210=(cj5*r21);
IkReal x2211=((0.433012903784321)*x2210);
IkReal x2212=(r20*sj5);
IkReal x2213=((0.433012903784321)*x2212);
IkReal x2214=IKsin(j2);
IkReal x2215=(sj1*x2214);
IkReal x2216=(cj5*r20*sj4);
IkReal x2217=(r21*sj4*sj5);
IkReal x2218=(sj1*x2207);
IkReal x2219=(cj1*x2214);
IkReal x2220=((((-1.0)*x2219))+x2218);
IkReal x2221=(cj5*r11);
IkReal x2222=((0.433012903784321)*x2221);
IkReal x2223=(r10*sj5);
IkReal x2224=((0.433012903784321)*x2223);
IkReal x2225=(cj5*r10*sj4);
IkReal x2226=(r11*sj4*sj5);
IkReal x2227=((0.0160344678271334)*r22);
IkReal x2228=((0.00925751294893567)*cj4);
IkReal x2229=((0.0160344678271334)*r12);
IkReal x2230=((0.433012903784321)*sj3);
IkReal x2231=(r22*x2230);
IkReal x2232=((0.866025201892125)*cj3*sj4);
IkReal x2233=((0.749999650312296)*sj3);
IkReal x2234=(cj3*cj4*sj5);
IkReal x2235=((1.0)*cj3*cj4*cj5);
IkReal x2236=((0.500000349687582)*cj3*sj4);
IkReal x2237=((0.250000349687704)*cj4*sj3);
IkReal x2238=((0.500000349687582)*sj3);
IkReal x2239=(r12*x2230);
evalcond[0]=((((-1.0)*r22*x2209))+(((-1.0)*cj4*x2213))+(((-1.0)*cj4*x2211))+(((0.866025201892125)*x2217))+x2211+x2215+x2213+x2208+(((-0.866025201892125)*x2216))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((0.866025201892125)*x2226))+(((-1.0)*(0.250000349687704)*r12))+x2220+x2222+x2224+(((-1.0)*r12*x2209))+(((-0.866025201892125)*x2225))+(((-1.0)*cj4*x2222))+(((-1.0)*cj4*x2224)));
evalcond[2]=(((x2210*x2228))+(((-0.0185150129489311)*x2217))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x2208))+((x2212*x2228))+((cj4*x2227))+(((0.0185150129489311)*x2216))+(((0.29)*cj1))+(((0.0648043305514941)*x2210))+(((-0.27144)*x2215))+(((0.0648043305514941)*x2212))+(((-1.0)*x2227)));
evalcond[3]=(((x2221*x2228))+(((0.27144)*x2219))+(((-1.0)*(1.0)*py))+(((0.0648043305514941)*x2221))+(((-1.0)*x2229))+(((-0.27144)*x2218))+(((0.0648043305514941)*x2223))+((x2223*x2228))+((cj4*x2229))+(((-0.0185150129489311)*x2226))+(((0.0185150129489311)*x2225))+(((0.29)*sj1)));
evalcond[4]=((((-1.0)*x2217*x2238))+(((-1.0)*r20*x2235))+((cj4*x2231))+((r21*x2234))+((x2212*x2233))+x2220+((x2212*x2237))+((x2212*x2236))+(((-1.0)*x2231))+((x2210*x2236))+((x2210*x2237))+((x2216*x2238))+((r22*x2232))+((x2210*x2233)));
evalcond[5]=(((x2223*x2237))+((x2221*x2236))+(((-1.0)*x2215))+((x2223*x2236))+(((-1.0)*r10*x2235))+(((-1.0)*x2239))+((cj4*x2239))+((r12*x2232))+((r11*x2234))+(((-1.0)*x2208))+((x2225*x2238))+(((-1.0)*x2226*x2238))+((x2221*x2233))+((x2221*x2237))+((x2223*x2233)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2240=((0.646708404322884)*cj4);
IkReal x2241=((0.62876328674038)*cj5);
IkReal x2242=((0.62876328674038)*sj5);
IkReal x2243=((0.373377619497519)*cj4*cj5);
IkReal x2244=((0.373377619497519)*cj4*sj5);
IkReal x2245=((0.746754716733336)*cj5*sj4);
IkReal x2246=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r00*x2245))+((r00*x2242))+((r01*x2241))+(((-1.0)*r02*x2240))+((r01*x2246))+(((-1.0)*r01*x2243))+(((-1.0)*r00*x2244))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*x2242))+(((3.44827586206897)*pz))+((r22*x2240))+(((-1.0)*r21*x2241))+(((0.289291595677116)*r22))+((r20*x2245))+((r21*x2243))+(((-1.0)*r21*x2246))+((r20*x2244)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x2245))+((r00*x2242))+((r01*x2241))+(((-1.0)*r02*x2240))+((r01*x2246))+(((-1.0)*r01*x2243))+(((-1.0)*r00*x2244))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))))+IKsqr(((((-1.0)*r20*x2242))+(((3.44827586206897)*pz))+((r22*x2240))+(((-1.0)*r21*x2241))+(((0.289291595677116)*r22))+((r20*x2245))+((r21*x2243))+(((-1.0)*r21*x2246))+((r20*x2244))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r00*x2245))+((r00*x2242))+((r01*x2241))+(((-1.0)*r02*x2240))+((r01*x2246))+(((-1.0)*r01*x2243))+(((-1.0)*r00*x2244))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))), ((((-1.0)*r20*x2242))+(((3.44827586206897)*pz))+((r22*x2240))+(((-1.0)*r21*x2241))+(((0.289291595677116)*r22))+((r20*x2245))+((r21*x2243))+(((-1.0)*r21*x2246))+((r20*x2244))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2247=((0.187545437253636)*cj4);
IkReal x2248=(cj5*r21);
IkReal x2249=(r20*sj5);
IkReal x2250=((0.29)*(IKcos(j1)));
IkReal x2251=(cj4*cj5*r21);
IkReal x2252=(cj4*r20*sj5);
IkReal x2253=(cj5*r20*sj4);
IkReal x2254=(r21*sj4*sj5);
IkReal x2255=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*px)));
IkReal x2256=(cj5*r01);
IkReal x2257=(r00*sj5);
IkReal x2258=(cj4*cj5*r01);
IkReal x2259=(cj4*r00*sj5);
IkReal x2260=(cj5*r00*sj4);
IkReal x2261=(r01*sj4*sj5);
IkReal x2262=((0.0160344678271334)*r02);
IkReal x2263=((0.117537022603216)*sj3);
IkReal x2264=(r22*x2263);
IkReal x2265=((0.235073880801598)*cj3*sj4);
IkReal x2266=((0.20357990508077)*sj3);
IkReal x2267=((0.27144)*cj3*cj4*cj5);
IkReal x2268=((0.27144)*cj3*cj4*sj5);
IkReal x2269=((0.135720094919197)*cj3*sj4);
IkReal x2270=((0.0678600949192303)*sj3);
IkReal x2271=((0.135720094919197)*sj3);
IkReal x2272=((0.0160344678271334)*r22);
IkReal x2273=(r02*x2263);
evalcond[0]=((((-0.18234135315471)*x2249))+(((0.216558867852667)*x2253))+(((0.10827950965428)*x2251))+(((0.10827950965428)*x2252))+((r22*x2247))+pz+(((-0.216558867852667)*x2254))+(((-1.0)*x2250))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x2248)));
evalcond[1]=((((-0.10827950965428)*x2259))+(((0.216558867852667)*x2261))+(((0.18234135315471)*x2257))+(((-1.0)*(0.0838945627463637)*r02))+(((-0.216558867852667)*x2260))+(((-1.0)*r02*x2247))+(((0.18234135315471)*x2256))+(((-0.10827950965428)*x2258))+x2255);
evalcond[2]=((((0.0185150129489311)*x2260))+(((-1.0)*x2252*x2270))+(((0.0648043305514941)*x2257))+x2264+((x2254*x2271))+((r20*x2267))+(((-1.0)*x2249*x2269))+(((-1.0)*x2249*x2266))+(((-1.0)*x2248*x2269))+(((-1.0)*x2248*x2266))+(((-1.0)*x2251*x2270))+(((-1.0)*r22*x2265))+(((0.0648043305514941)*x2256))+(((-1.0)*cj4*x2264))+((cj4*x2262))+(((0.00925751294893567)*x2259))+(((-0.0185150129489311)*x2261))+(((-1.0)*x2262))+(((-1.0)*r21*x2268))+x2255+(((0.00925751294893567)*x2258))+(((-1.0)*x2253*x2271)));
evalcond[3]=(((r01*x2268))+((x2256*x2266))+((x2258*x2270))+(((0.00925751294893567)*x2252))+((cj4*x2272))+(((-1.0)*(1.0)*pz))+(((0.00925751294893567)*x2251))+((x2260*x2271))+(((0.0648043305514941)*x2248))+((x2257*x2266))+(((0.0185150129489311)*x2253))+(((-1.0)*x2261*x2271))+(((-1.0)*x2273))+(((-0.0185150129489311)*x2254))+((x2256*x2269))+(((-1.0)*x2272))+x2250+(((-1.0)*r00*x2267))+(((0.0648043305514941)*x2249))+((x2259*x2270))+((r02*x2265))+((x2257*x2269))+((cj4*x2273)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2274=((0.250000349687704)*cj1);
IkReal x2275=((0.250000349687704)*sj1);
IkReal x2276=((0.749999650312296)*cj1*cj4);
IkReal x2277=((0.433012903784321)*cj1*cj5);
IkReal x2278=(r01*x2277);
IkReal x2279=((0.433012903784321)*cj1*sj5);
IkReal x2280=(r00*x2279);
IkReal x2281=((0.749999650312296)*cj4*sj1);
IkReal x2282=((0.433012903784321)*cj5*sj1);
IkReal x2283=(r21*x2282);
IkReal x2284=((0.433012903784321)*sj1*sj5);
IkReal x2285=(r20*x2284);
IkReal x2286=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2287=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2288=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2289=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2290=(r21*x2277);
IkReal x2291=(r20*x2279);
IkReal x2292=(r01*x2282);
IkReal x2293=(r00*x2284);
if( IKabs(((((-1.0)*r01*x2287))+((r22*x2281))+(((-1.0)*x2285))+(((-1.0)*x2280))+((r02*x2274))+((cj4*x2285))+((cj4*x2280))+((r02*x2276))+((r22*x2275))+((r20*x2288))+(((-1.0)*x2278))+(((-1.0)*r21*x2289))+(((-1.0)*x2283))+((cj4*x2283))+((r00*x2286))+((cj4*x2278)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r01*x2289))+(((-1.0)*r02*x2281))+x2293+x2292+(((-1.0)*x2291))+((r20*x2286))+(((-1.0)*x2290))+((cj4*x2291))+(((-1.0)*cj4*x2292))+((cj4*x2290))+(((-1.0)*cj4*x2293))+(((-1.0)*r21*x2287))+(((-1.0)*r00*x2288))+((r22*x2274))+((r22*x2276))+(((-1.0)*r02*x2275)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x2287))+((r22*x2281))+(((-1.0)*x2285))+(((-1.0)*x2280))+((r02*x2274))+((cj4*x2285))+((cj4*x2280))+((r02*x2276))+((r22*x2275))+((r20*x2288))+(((-1.0)*x2278))+(((-1.0)*r21*x2289))+(((-1.0)*x2283))+((cj4*x2283))+((r00*x2286))+((cj4*x2278))))+IKsqr((((r01*x2289))+(((-1.0)*r02*x2281))+x2293+x2292+(((-1.0)*x2291))+((r20*x2286))+(((-1.0)*x2290))+((cj4*x2291))+(((-1.0)*cj4*x2292))+((cj4*x2290))+(((-1.0)*cj4*x2293))+(((-1.0)*r21*x2287))+(((-1.0)*r00*x2288))+((r22*x2274))+((r22*x2276))+(((-1.0)*r02*x2275))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r01*x2287))+((r22*x2281))+(((-1.0)*x2285))+(((-1.0)*x2280))+((r02*x2274))+((cj4*x2285))+((cj4*x2280))+((r02*x2276))+((r22*x2275))+((r20*x2288))+(((-1.0)*x2278))+(((-1.0)*r21*x2289))+(((-1.0)*x2283))+((cj4*x2283))+((r00*x2286))+((cj4*x2278))), (((r01*x2289))+(((-1.0)*r02*x2281))+x2293+x2292+(((-1.0)*x2291))+((r20*x2286))+(((-1.0)*x2290))+((cj4*x2291))+(((-1.0)*cj4*x2292))+((cj4*x2290))+(((-1.0)*cj4*x2293))+(((-1.0)*r21*x2287))+(((-1.0)*r00*x2288))+((r22*x2274))+((r22*x2276))+(((-1.0)*r02*x2275))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2294=IKcos(j2);
IkReal x2295=(cj1*x2294);
IkReal x2296=IKsin(j2);
IkReal x2297=(sj1*x2296);
IkReal x2298=(x2295+x2297);
IkReal x2299=((0.749999650312296)*cj4);
IkReal x2300=(cj5*r21);
IkReal x2301=((0.433012903784321)*x2300);
IkReal x2302=(r20*sj5);
IkReal x2303=((0.433012903784321)*x2302);
IkReal x2304=(cj5*r20*sj4);
IkReal x2305=(r21*sj4*sj5);
IkReal x2306=(cj1*x2296);
IkReal x2307=(cj5*r01);
IkReal x2308=((0.433012903784321)*x2307);
IkReal x2309=(r00*sj5);
IkReal x2310=((0.433012903784321)*x2309);
IkReal x2311=(sj1*x2294);
IkReal x2312=(cj5*r00*sj4);
IkReal x2313=(r01*sj4*sj5);
IkReal x2314=((0.0160344678271334)*r22);
IkReal x2315=((0.00925751294893567)*cj4);
IkReal x2316=((0.0160344678271334)*r02);
IkReal x2317=((0.433012903784321)*sj3);
IkReal x2318=(r02*x2317);
IkReal x2319=((0.866025201892125)*cj3*sj4);
IkReal x2320=((0.749999650312296)*sj3);
IkReal x2321=(cj3*cj4*sj5);
IkReal x2322=((1.0)*cj3*cj4*cj5);
IkReal x2323=((0.500000349687582)*cj3*sj4);
IkReal x2324=((0.250000349687704)*cj4*sj3);
IkReal x2325=((0.500000349687582)*sj3);
IkReal x2326=(r22*x2317);
evalcond[0]=((((-1.0)*cj4*x2301))+x2298+(((0.866025201892125)*x2305))+(((-1.0)*cj4*x2303))+(((-1.0)*r22*x2299))+(((-1.0)*(0.250000349687704)*r22))+(((-0.866025201892125)*x2304))+x2301+x2303);
evalcond[1]=((((-1.0)*x2311))+(((-1.0)*r02*x2299))+(((-1.0)*cj4*x2310))+(((0.866025201892125)*x2313))+(((-1.0)*(0.250000349687704)*r02))+(((-0.866025201892125)*x2312))+(((-1.0)*cj4*x2308))+x2310+x2306+x2308);
evalcond[2]=((((0.0648043305514941)*x2300))+(((-1.0)*(1.0)*pz))+((x2302*x2315))+((cj4*x2314))+(((-0.0185150129489311)*x2305))+(((0.29)*cj1))+(((0.0185150129489311)*x2304))+(((-0.27144)*x2297))+(((0.0648043305514941)*x2302))+((x2300*x2315))+(((-0.27144)*x2295))+(((-1.0)*x2314)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((0.0185150129489311)*x2312))+(((-0.0185150129489311)*x2313))+(((-1.0)*(0.29)*sj1))+(((-1.0)*x2316))+((x2307*x2315))+(((-0.27144)*x2306))+(((0.27144)*x2311))+(((0.0648043305514941)*x2309))+(((0.0648043305514941)*x2307))+((cj4*x2316))+((x2309*x2315)));
evalcond[4]=(((r01*x2321))+((x2309*x2323))+((x2312*x2325))+x2298+((r02*x2319))+((x2307*x2323))+((cj4*x2318))+((x2307*x2320))+(((-1.0)*r00*x2322))+(((-1.0)*x2318))+((x2307*x2324))+((x2309*x2324))+(((-1.0)*x2313*x2325))+((x2309*x2320)));
evalcond[5]=((((-1.0)*r20*x2322))+((x2302*x2320))+((r22*x2319))+((x2300*x2324))+(((-1.0)*x2306))+((x2300*x2323))+((cj4*x2326))+(((-1.0)*x2326))+((x2300*x2320))+((x2304*x2325))+((x2302*x2323))+((x2302*x2324))+((r21*x2321))+x2311+(((-1.0)*x2305*x2325)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2327=((0.646708404322884)*cj4);
IkReal x2328=((0.62876328674038)*cj5);
IkReal x2329=((0.62876328674038)*sj5);
IkReal x2330=((0.373377619497519)*cj4*cj5);
IkReal x2331=((0.373377619497519)*cj4*sj5);
IkReal x2332=((0.746754716733336)*cj5*sj4);
IkReal x2333=((0.746754716733336)*sj4*sj5);
if( IKabs(((((0.289291595677116)*r02))+(((3.44827586206897)*px))+(((-1.0)*r01*x2333))+((r01*x2330))+(((-1.0)*r01*x2328))+((r00*x2331))+((r00*x2332))+(((-1.0)*r00*x2329))+((r02*x2327)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2327))+((r20*x2332))+(((3.44827586206897)*pz))+(((-1.0)*r20*x2329))+((r21*x2330))+(((-1.0)*r21*x2328))+(((0.289291595677116)*r22))+((r20*x2331))+(((-1.0)*r21*x2333)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((0.289291595677116)*r02))+(((3.44827586206897)*px))+(((-1.0)*r01*x2333))+((r01*x2330))+(((-1.0)*r01*x2328))+((r00*x2331))+((r00*x2332))+(((-1.0)*r00*x2329))+((r02*x2327))))+IKsqr((((r22*x2327))+((r20*x2332))+(((3.44827586206897)*pz))+(((-1.0)*r20*x2329))+((r21*x2330))+(((-1.0)*r21*x2328))+(((0.289291595677116)*r22))+((r20*x2331))+(((-1.0)*r21*x2333))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((0.289291595677116)*r02))+(((3.44827586206897)*px))+(((-1.0)*r01*x2333))+((r01*x2330))+(((-1.0)*r01*x2328))+((r00*x2331))+((r00*x2332))+(((-1.0)*r00*x2329))+((r02*x2327))), (((r22*x2327))+((r20*x2332))+(((3.44827586206897)*pz))+(((-1.0)*r20*x2329))+((r21*x2330))+(((-1.0)*r21*x2328))+(((0.289291595677116)*r22))+((r20*x2331))+(((-1.0)*r21*x2333))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2334=((0.187545437253636)*cj4);
IkReal x2335=(cj5*r01);
IkReal x2336=(r00*sj5);
IkReal x2337=((0.29)*(IKsin(j1)));
IkReal x2338=(cj4*cj5*r01);
IkReal x2339=(cj4*r00*sj5);
IkReal x2340=(cj5*r00*sj4);
IkReal x2341=(r01*sj4*sj5);
IkReal x2342=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x2343=(cj5*r21);
IkReal x2344=(r20*sj5);
IkReal x2345=(cj4*cj5*r21);
IkReal x2346=(cj4*r20*sj5);
IkReal x2347=(cj5*r20*sj4);
IkReal x2348=(r21*sj4*sj5);
IkReal x2349=((0.0160344678271334)*r22);
IkReal x2350=((0.117537022603216)*sj3);
IkReal x2351=(r02*x2350);
IkReal x2352=((0.235073880801598)*cj3*sj4);
IkReal x2353=((0.20357990508077)*sj3);
IkReal x2354=((0.27144)*cj3*cj4*cj5);
IkReal x2355=((0.27144)*cj3*cj4*sj5);
IkReal x2356=((0.135720094919197)*cj3*sj4);
IkReal x2357=((0.0678600949192303)*sj3);
IkReal x2358=((0.135720094919197)*sj3);
IkReal x2359=((0.0160344678271334)*r02);
IkReal x2360=(r22*x2350);
evalcond[0]=((((0.10827950965428)*x2338))+((r02*x2334))+px+(((-0.18234135315471)*x2335))+(((0.10827950965428)*x2339))+(((0.0838945627463637)*r02))+(((0.216558867852667)*x2340))+(((-0.18234135315471)*x2336))+(((-1.0)*x2337))+(((-0.216558867852667)*x2341)));
evalcond[1]=((((0.10827950965428)*x2345))+(((0.10827950965428)*x2346))+(((-0.18234135315471)*x2344))+x2342+(((-0.18234135315471)*x2343))+((r22*x2334))+(((-0.216558867852667)*x2348))+(((0.216558867852667)*x2347))+(((0.0838945627463637)*r22)));
evalcond[2]=(((x2335*x2356))+(((-0.00925751294893567)*x2345))+(((-1.0)*x2341*x2358))+((r02*x2352))+((x2339*x2357))+(((-1.0)*r00*x2354))+(((-0.0185150129489311)*x2347))+(((-1.0)*x2351))+(((-0.00925751294893567)*x2346))+((x2336*x2356))+((x2336*x2353))+((x2340*x2358))+(((0.0185150129489311)*x2348))+(((-1.0)*cj4*x2349))+x2349+x2342+((cj4*x2351))+(((-0.0648043305514941)*x2344))+((r01*x2355))+((x2338*x2357))+(((-0.0648043305514941)*x2343))+((x2335*x2353)));
evalcond[3]=(((x2343*x2353))+(((0.00925751294893567)*x2339))+(((-1.0)*(1.0)*px))+((cj4*x2360))+(((0.0648043305514941)*x2335))+((x2344*x2353))+((x2346*x2357))+(((-1.0)*x2348*x2358))+((x2344*x2356))+(((-1.0)*x2359))+(((0.0185150129489311)*x2340))+((r22*x2352))+((x2345*x2357))+(((-1.0)*r20*x2354))+((x2347*x2358))+(((0.00925751294893567)*x2338))+(((0.0648043305514941)*x2336))+(((-1.0)*x2360))+((cj4*x2359))+(((-0.0185150129489311)*x2341))+x2337+((r21*x2355))+((x2343*x2356)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2361=((0.250000349687704)*cj1);
IkReal x2362=((0.250000349687704)*sj1);
IkReal x2363=((0.749999650312296)*cj1*cj4);
IkReal x2364=((0.433012903784321)*cj1*cj5);
IkReal x2365=(r01*x2364);
IkReal x2366=((0.433012903784321)*cj1*sj5);
IkReal x2367=(r00*x2366);
IkReal x2368=((0.749999650312296)*cj4*sj1);
IkReal x2369=((0.433012903784321)*cj5*sj1);
IkReal x2370=(r21*x2369);
IkReal x2371=((0.433012903784321)*sj1*sj5);
IkReal x2372=(r20*x2371);
IkReal x2373=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2374=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2375=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2376=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2377=(r21*x2364);
IkReal x2378=(r20*x2366);
IkReal x2379=(r01*x2369);
IkReal x2380=(r00*x2371);
if( IKabs((((r01*x2374))+(((-1.0)*r02*x2363))+(((-1.0)*r00*x2373))+(((-1.0)*x2372))+x2367+x2365+(((-1.0)*r21*x2376))+((r22*x2362))+(((-1.0)*x2370))+((r20*x2375))+(((-1.0)*cj4*x2365))+((cj4*x2372))+(((-1.0)*cj4*x2367))+(((-1.0)*r02*x2361))+((r22*x2368))+((cj4*x2370)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x2379))+((r02*x2362))+((cj4*x2378))+(((-1.0)*r01*x2376))+((r22*x2361))+((cj4*x2377))+((r22*x2363))+((r00*x2375))+(((-1.0)*x2379))+(((-1.0)*x2378))+((cj4*x2380))+((r20*x2373))+((r02*x2368))+(((-1.0)*r21*x2374))+(((-1.0)*x2380))+(((-1.0)*x2377)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x2374))+(((-1.0)*r02*x2363))+(((-1.0)*r00*x2373))+(((-1.0)*x2372))+x2367+x2365+(((-1.0)*r21*x2376))+((r22*x2362))+(((-1.0)*x2370))+((r20*x2375))+(((-1.0)*cj4*x2365))+((cj4*x2372))+(((-1.0)*cj4*x2367))+(((-1.0)*r02*x2361))+((r22*x2368))+((cj4*x2370))))+IKsqr((((cj4*x2379))+((r02*x2362))+((cj4*x2378))+(((-1.0)*r01*x2376))+((r22*x2361))+((cj4*x2377))+((r22*x2363))+((r00*x2375))+(((-1.0)*x2379))+(((-1.0)*x2378))+((cj4*x2380))+((r20*x2373))+((r02*x2368))+(((-1.0)*r21*x2374))+(((-1.0)*x2380))+(((-1.0)*x2377))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*x2374))+(((-1.0)*r02*x2363))+(((-1.0)*r00*x2373))+(((-1.0)*x2372))+x2367+x2365+(((-1.0)*r21*x2376))+((r22*x2362))+(((-1.0)*x2370))+((r20*x2375))+(((-1.0)*cj4*x2365))+((cj4*x2372))+(((-1.0)*cj4*x2367))+(((-1.0)*r02*x2361))+((r22*x2368))+((cj4*x2370))), (((cj4*x2379))+((r02*x2362))+((cj4*x2378))+(((-1.0)*r01*x2376))+((r22*x2361))+((cj4*x2377))+((r22*x2363))+((r00*x2375))+(((-1.0)*x2379))+(((-1.0)*x2378))+((cj4*x2380))+((r20*x2373))+((r02*x2368))+(((-1.0)*r21*x2374))+(((-1.0)*x2380))+(((-1.0)*x2377))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2381=IKcos(j2);
IkReal x2382=(cj1*x2381);
IkReal x2383=((0.749999650312296)*cj4);
IkReal x2384=(cj5*r21);
IkReal x2385=((0.433012903784321)*x2384);
IkReal x2386=(r20*sj5);
IkReal x2387=((0.433012903784321)*x2386);
IkReal x2388=IKsin(j2);
IkReal x2389=(sj1*x2388);
IkReal x2390=(cj5*r20*sj4);
IkReal x2391=(r21*sj4*sj5);
IkReal x2392=(sj1*x2381);
IkReal x2393=(cj1*x2388);
IkReal x2394=(x2392+(((-1.0)*x2393)));
IkReal x2395=(cj5*r01);
IkReal x2396=((0.433012903784321)*x2395);
IkReal x2397=(r00*sj5);
IkReal x2398=((0.433012903784321)*x2397);
IkReal x2399=(cj5*r00*sj4);
IkReal x2400=(r01*sj4*sj5);
IkReal x2401=((0.0160344678271334)*r22);
IkReal x2402=((0.00925751294893567)*cj4);
IkReal x2403=((0.0160344678271334)*r02);
IkReal x2404=((0.433012903784321)*sj3);
IkReal x2405=(r22*x2404);
IkReal x2406=((0.866025201892125)*cj3*sj4);
IkReal x2407=((0.749999650312296)*sj3);
IkReal x2408=(cj3*cj4*sj5);
IkReal x2409=((1.0)*cj3*cj4*cj5);
IkReal x2410=((0.500000349687582)*cj3*sj4);
IkReal x2411=((0.250000349687704)*cj4*sj3);
IkReal x2412=((0.500000349687582)*sj3);
IkReal x2413=(r02*x2404);
evalcond[0]=((((-1.0)*cj4*x2385))+(((-1.0)*r22*x2383))+(((-1.0)*(0.250000349687704)*r22))+x2389+x2387+x2382+x2385+(((-1.0)*cj4*x2387))+(((0.866025201892125)*x2391))+(((-0.866025201892125)*x2390)));
evalcond[1]=((((-1.0)*cj4*x2398))+x2398+x2394+x2396+(((-0.866025201892125)*x2399))+(((-1.0)*(0.250000349687704)*r02))+(((0.866025201892125)*x2400))+(((-1.0)*r02*x2383))+(((-1.0)*cj4*x2396)));
evalcond[2]=((((0.0185150129489311)*x2390))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x2382))+(((-0.0185150129489311)*x2391))+((x2386*x2402))+(((0.0648043305514941)*x2386))+(((0.29)*cj1))+(((0.0648043305514941)*x2384))+((x2384*x2402))+(((-1.0)*x2401))+(((-0.27144)*x2389))+((cj4*x2401)));
evalcond[3]=((((-1.0)*x2403))+(((-1.0)*(1.0)*px))+((cj4*x2403))+(((-0.27144)*x2392))+(((-0.0185150129489311)*x2400))+((x2395*x2402))+(((0.27144)*x2393))+(((0.0648043305514941)*x2397))+(((0.0648043305514941)*x2395))+(((0.29)*sj1))+(((0.0185150129489311)*x2399))+((x2397*x2402)));
evalcond[4]=((((-1.0)*x2391*x2412))+((x2384*x2407))+((r22*x2406))+((x2384*x2410))+((x2386*x2407))+((x2384*x2411))+((x2386*x2411))+((x2386*x2410))+x2394+((r21*x2408))+(((-1.0)*r20*x2409))+((x2390*x2412))+(((-1.0)*x2405))+((cj4*x2405)));
evalcond[5]=(((r01*x2408))+(((-1.0)*x2382))+((x2395*x2411))+((x2395*x2410))+(((-1.0)*r00*x2409))+((x2399*x2412))+((cj4*x2413))+((x2397*x2410))+(((-1.0)*x2413))+((x2395*x2407))+((x2397*x2411))+(((-1.0)*x2389))+((x2397*x2407))+(((-1.0)*x2400*x2412))+((r02*x2406)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2414=(cj0*r02);
IkReal x2415=((0.18234135315471)*cj0);
IkReal x2416=(cj5*r01);
IkReal x2417=(r00*sj5);
IkReal x2418=((0.10827950965428)*cj0*cj4);
IkReal x2419=((0.216558867852667)*cj0*sj4);
IkReal x2420=(cj5*r21);
IkReal x2421=(r20*sj5);
IkReal x2422=((0.373377619497519)*cj4);
IkReal x2423=((0.746754716733336)*sj4);
CheckValue<IkReal> x2424=IKPowWithIntegerCheck(cj0,-2);
if(!x2424.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x2424.value)*((((x2415*x2417))+((r01*sj5*x2419))+(((-0.187545437253636)*cj4*x2414))+(((0.0098)*cj0*sj0))+(((-1.0)*x2417*x2418))+(((-1.0)*x2416*x2418))+(((-0.0838945627463637)*x2414))+(((-1.0)*cj5*r00*x2419))+(((-1.0)*(1.0)*cj0*px))+((x2415*x2416)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+((x2420*x2422))+((x2421*x2422))+(((-1.0)*r21*sj5*x2423))+(((-0.62876328674038)*x2421))+((cj5*r20*x2423))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+(((-0.62876328674038)*x2420)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x2424.value)*((((x2415*x2417))+((r01*sj5*x2419))+(((-0.187545437253636)*cj4*x2414))+(((0.0098)*cj0*sj0))+(((-1.0)*x2417*x2418))+(((-1.0)*x2416*x2418))+(((-0.0838945627463637)*x2414))+(((-1.0)*cj5*r00*x2419))+(((-1.0)*(1.0)*cj0*px))+((x2415*x2416))))))+IKsqr(((((3.44827586206897)*pz))+((x2420*x2422))+((x2421*x2422))+(((-1.0)*r21*sj5*x2423))+(((-0.62876328674038)*x2421))+((cj5*r20*x2423))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+(((-0.62876328674038)*x2420))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x2424.value)*((((x2415*x2417))+((r01*sj5*x2419))+(((-0.187545437253636)*cj4*x2414))+(((0.0098)*cj0*sj0))+(((-1.0)*x2417*x2418))+(((-1.0)*x2416*x2418))+(((-0.0838945627463637)*x2414))+(((-1.0)*cj5*r00*x2419))+(((-1.0)*(1.0)*cj0*px))+((x2415*x2416))))), ((((3.44827586206897)*pz))+((x2420*x2422))+((x2421*x2422))+(((-1.0)*r21*sj5*x2423))+(((-0.62876328674038)*x2421))+((cj5*r20*x2423))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+(((-0.62876328674038)*x2420))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2425=((0.187545437253636)*cj4);
IkReal x2426=((0.18234135315471)*cj5);
IkReal x2427=((0.18234135315471)*sj5);
IkReal x2428=((0.29)*(IKcos(j1)));
IkReal x2429=((0.10827950965428)*cj4*cj5);
IkReal x2430=((0.10827950965428)*cj4*sj5);
IkReal x2431=((0.216558867852667)*cj5*sj4);
IkReal x2432=((0.216558867852667)*sj4*sj5);
IkReal x2433=((0.0098)*cj0);
IkReal x2434=(sj0*x2433);
IkReal x2435=((1.0)*py);
IkReal x2436=(r12*sj0);
IkReal x2437=(r11*sj0);
IkReal x2438=(r10*sj0);
IkReal x2439=(cj5*r11);
IkReal x2440=((0.10827950965428)*cj4*sj0);
IkReal x2441=(r10*sj5);
IkReal x2442=sj0*sj0;
IkReal x2443=((0.29)*(IKsin(j1)));
IkReal x2444=((1.0)*px);
IkReal x2445=(cj0*r02);
IkReal x2446=(cj0*r01);
IkReal x2447=(cj0*r00);
IkReal x2448=cj0*cj0;
IkReal x2449=((1.0)*pz);
IkReal x2450=((0.117537022603216)*sj3);
IkReal x2451=(r12*x2450);
IkReal x2452=((0.0160344678271334)*r22);
IkReal x2453=(sj0*x2452);
IkReal x2454=((0.235073880801598)*cj3*sj4);
IkReal x2455=((0.20357990508077)*sj3);
IkReal x2456=((0.0648043305514941)*cj5*r21);
IkReal x2457=((0.0648043305514941)*r20*sj5);
IkReal x2458=(cj5*r10);
IkReal x2459=((0.27144)*cj3*cj4);
IkReal x2460=(r11*sj5);
IkReal x2461=((0.135720094919197)*cj3*sj4);
IkReal x2462=((0.0678600949192303)*cj4*sj3);
IkReal x2463=(cj5*r21);
IkReal x2464=((0.00925751294893567)*cj4*sj0);
IkReal x2465=(r20*sj5);
IkReal x2466=((0.135720094919197)*sj3*sj4);
IkReal x2467=((0.0185150129489311)*cj5*r20*sj4);
IkReal x2468=((0.0185150129489311)*r21*sj4*sj5);
IkReal x2469=(cj0*x2452);
IkReal x2470=(r02*x2450);
IkReal x2471=(cj5*r01);
IkReal x2472=(r00*sj5);
IkReal x2473=((0.00925751294893567)*cj0*cj4);
IkReal x2474=(r01*sj5);
IkReal x2475=(cj5*r00*sj4);
IkReal x2476=((0.0160344678271334)*r12);
IkReal x2477=((0.0648043305514941)*cj5);
IkReal x2478=(r11*x2477);
IkReal x2479=((0.0648043305514941)*sj5);
IkReal x2480=(r10*x2479);
IkReal x2481=((0.00925751294893567)*cj4);
IkReal x2482=(x2439*x2481);
IkReal x2483=(x2441*x2481);
IkReal x2484=((0.0185150129489311)*cj5*sj4);
IkReal x2485=(r10*x2484);
IkReal x2486=((0.0185150129489311)*sj4*sj5);
IkReal x2487=(r11*x2486);
IkReal x2488=((0.117537022603216)*r22*sj3);
IkReal x2489=(sj0*x2488);
IkReal x2490=((0.235073880801598)*cj3*r22*sj4);
IkReal x2491=((0.20357990508077)*sj0*sj3);
IkReal x2492=(cj5*r20);
IkReal x2493=((0.27144)*cj3*cj4*sj0);
IkReal x2494=(r21*sj5);
IkReal x2495=((0.135720094919197)*cj3*sj0*sj4);
IkReal x2496=((0.0678600949192303)*cj4*sj0*sj3);
IkReal x2497=((0.135720094919197)*sj0*sj3*sj4);
IkReal x2498=((0.0160344678271334)*r02);
IkReal x2499=(cj4*x2498);
IkReal x2500=(r01*x2477);
IkReal x2501=(r00*x2479);
IkReal x2502=(cj0*x2443);
IkReal x2503=(cj0*x2488);
IkReal x2504=(x2471*x2481);
IkReal x2505=(x2472*x2481);
IkReal x2506=(r00*x2484);
IkReal x2507=(r01*x2486);
IkReal x2508=((0.20357990508077)*cj0*sj3);
IkReal x2509=((0.27144)*cj0*cj3*cj4);
IkReal x2510=((0.135720094919197)*cj0*cj3*sj4);
IkReal x2511=((0.0678600949192303)*cj0*cj4*sj3);
IkReal x2512=((0.135720094919197)*cj0*sj3*sj4);
IkReal x2513=(cj0*r12);
IkReal x2514=((0.20357990508077)*cj4);
IkReal x2515=((0.117537022603216)*cj0);
IkReal x2516=(x2439*x2515);
IkReal x2517=(x2441*x2515);
IkReal x2518=((-1.0)*sj0*x2502);
IkReal x2519=((0.235073880801598)*cj0*sj4);
IkReal x2520=(cj0*x2476);
IkReal x2521=(r02*sj0);
IkReal x2522=((0.117537022603216)*sj0);
IkReal x2523=(x2471*x2522);
IkReal x2524=(x2472*x2522);
IkReal x2525=((0.235073880801598)*sj0);
evalcond[0]=(((r20*x2431))+((r20*x2430))+(((-1.0)*r20*x2427))+(((-1.0)*r21*x2426))+((r22*x2425))+pz+(((-1.0)*x2428))+((r21*x2429))+(((0.0838945627463637)*r22))+(((-1.0)*r21*x2432)));
evalcond[1]=((((-1.0)*x2439*x2440))+(((-1.0)*x2440*x2441))+((x2426*x2437))+(((-1.0)*x2431*x2438))+((x2432*x2437))+(((-1.0)*x2434))+(((-0.0838945627463637)*x2436))+(((-1.0)*x2442*x2443))+(((-1.0)*x2425*x2436))+((x2427*x2438))+(((-1.0)*sj0*x2435)));
evalcond[2]=((((-1.0)*x2425*x2445))+((x2432*x2446))+((x2427*x2447))+(((-1.0)*x2429*x2446))+(((-0.0838945627463637)*x2445))+(((-1.0)*x2431*x2447))+x2434+(((-1.0)*cj0*x2444))+(((-1.0)*x2443*x2448))+(((-1.0)*x2430*x2447))+((x2426*x2446)));
evalcond[3]=((((-1.0)*sj0*x2468))+((x2458*x2466))+((x2441*x2462))+((x2439*x2462))+(((-1.0)*x2458*x2459))+(((-1.0)*x2451))+((cj4*x2451))+((x2464*x2465))+((sj0*x2428))+((x2439*x2455))+((sj0*x2467))+((sj0*x2457))+((sj0*x2456))+((x2441*x2455))+((r12*x2454))+(((-1.0)*x2453))+((x2463*x2464))+((x2459*x2460))+(((-1.0)*sj0*x2449))+((cj4*x2453))+((x2441*x2461))+((x2439*x2461))+(((-1.0)*x2460*x2466)));
evalcond[4]=(((x2463*x2473))+((cj0*x2457))+((r02*x2454))+(((-1.0)*cj0*x2449))+((cj0*x2456))+((x2462*x2471))+(((0.135720094919197)*sj3*x2475))+((cj0*x2467))+((x2462*x2472))+(((-1.0)*cj5*r00*x2459))+((x2465*x2473))+((cj4*x2469))+((cj0*x2428))+(((-1.0)*x2470))+((cj4*x2470))+((x2461*x2471))+((x2461*x2472))+(((-1.0)*cj0*x2468))+((x2455*x2471))+((x2459*x2474))+(((-1.0)*x2466*x2474))+(((-1.0)*x2469))+((x2455*x2472)));
evalcond[5]=((((-1.0)*cj4*x2489))+(((-1.0)*x2465*x2495))+(((-1.0)*x2465*x2496))+((x2492*x2493))+(((-1.0)*sj0*x2490))+x2482+x2483+x2485+x2480+x2489+(((-1.0)*sj0*x2443))+(((-1.0)*x2463*x2496))+((x2494*x2497))+(((-1.0)*x2435))+(((-1.0)*x2476))+(((-1.0)*x2463*x2495))+(((-1.0)*x2492*x2497))+(((-1.0)*x2433))+(((-1.0)*x2465*x2491))+(((-1.0)*x2463*x2491))+x2478+(((-1.0)*x2493*x2494))+((cj4*x2476))+(((-1.0)*x2487)));
evalcond[6]=((((-1.0)*x2498))+x2499+(((-1.0)*x2502))+(((-1.0)*x2444))+(((0.0098)*sj0))+(((-1.0)*x2465*x2511))+(((-1.0)*x2465*x2510))+((x2492*x2509))+(((-1.0)*x2463*x2508))+((x2494*x2512))+(((-1.0)*x2494*x2509))+(((-1.0)*x2492*x2512))+(((-1.0)*x2507))+(((-1.0)*x2463*x2511))+x2503+x2505+x2504+x2501+x2500+x2506+(((-1.0)*x2463*x2510))+(((-1.0)*cj0*x2490))+(((-1.0)*x2465*x2508))+(((-1.0)*cj4*x2503)));
evalcond[7]=(((sj0*x2501))+((sj0*x2500))+((sj0*x2499))+(((-0.0678600949192303)*x2513))+(((-1.0)*sj0*x2444))+x2516+x2517+x2518+(((0.0098)*x2442))+((sj0*x2506))+((x2460*x2519))+(((-1.0)*sj0*x2498))+(((-1.0)*cj4*x2517))+((sj0*x2504))+(((-1.0)*x2513*x2514))+(((-1.0)*x2458*x2519))+(((-1.0)*cj4*x2516))+(((-1.0)*sj0*x2507))+((sj0*x2505)));
evalcond[8]=((((-0.0098)*x2448))+((cj4*x2520))+(((-0.0678600949192303)*x2521))+((cj0*x2483))+(((-1.0)*x2514*x2521))+(((-1.0)*cj4*x2523))+((cj0*x2482))+((cj0*x2478))+x2524+x2523+(((-1.0)*x2520))+((r01*sj4*sj5*x2525))+x2518+(((-1.0)*cj0*x2487))+(((-1.0)*cj0*x2435))+(((-1.0)*x2475*x2525))+((cj0*x2485))+(((-1.0)*cj4*x2524))+((cj0*x2480)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2526=((0.250000349687704)*cj1);
IkReal x2527=((0.250000349687704)*sj1);
IkReal x2528=((0.749999650312296)*cj1*cj4);
IkReal x2529=((0.433012903784321)*cj1*cj5);
IkReal x2530=(r01*x2529);
IkReal x2531=((0.433012903784321)*cj1*sj5);
IkReal x2532=(r00*x2531);
IkReal x2533=((0.749999650312296)*cj4*sj1);
IkReal x2534=((0.433012903784321)*cj5*sj1);
IkReal x2535=(r21*x2534);
IkReal x2536=((0.433012903784321)*sj1*sj5);
IkReal x2537=(r20*x2536);
IkReal x2538=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2539=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2540=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2541=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2542=(r21*x2529);
IkReal x2543=(r20*x2531);
IkReal x2544=(r01*x2534);
IkReal x2545=(r00*x2536);
if( IKabs(((((-1.0)*x2535))+((r22*x2527))+(((-1.0)*r21*x2541))+((r22*x2533))+((cj4*x2532))+(((-1.0)*x2537))+((cj4*x2530))+((cj4*x2535))+((r20*x2540))+((r00*x2538))+(((-1.0)*x2532))+((r02*x2526))+(((-1.0)*r01*x2539))+((r02*x2528))+((cj4*x2537))+(((-1.0)*x2530)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x2542))+((r22*x2528))+(((-1.0)*cj4*x2544))+((r22*x2526))+((cj4*x2543))+(((-1.0)*r00*x2540))+((r01*x2541))+(((-1.0)*r02*x2527))+x2545+x2544+(((-1.0)*r21*x2539))+(((-1.0)*x2542))+(((-1.0)*x2543))+((r20*x2538))+(((-1.0)*r02*x2533))+(((-1.0)*cj4*x2545)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2535))+((r22*x2527))+(((-1.0)*r21*x2541))+((r22*x2533))+((cj4*x2532))+(((-1.0)*x2537))+((cj4*x2530))+((cj4*x2535))+((r20*x2540))+((r00*x2538))+(((-1.0)*x2532))+((r02*x2526))+(((-1.0)*r01*x2539))+((r02*x2528))+((cj4*x2537))+(((-1.0)*x2530))))+IKsqr((((cj4*x2542))+((r22*x2528))+(((-1.0)*cj4*x2544))+((r22*x2526))+((cj4*x2543))+(((-1.0)*r00*x2540))+((r01*x2541))+(((-1.0)*r02*x2527))+x2545+x2544+(((-1.0)*r21*x2539))+(((-1.0)*x2542))+(((-1.0)*x2543))+((r20*x2538))+(((-1.0)*r02*x2533))+(((-1.0)*cj4*x2545))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2535))+((r22*x2527))+(((-1.0)*r21*x2541))+((r22*x2533))+((cj4*x2532))+(((-1.0)*x2537))+((cj4*x2530))+((cj4*x2535))+((r20*x2540))+((r00*x2538))+(((-1.0)*x2532))+((r02*x2526))+(((-1.0)*r01*x2539))+((r02*x2528))+((cj4*x2537))+(((-1.0)*x2530))), (((cj4*x2542))+((r22*x2528))+(((-1.0)*cj4*x2544))+((r22*x2526))+((cj4*x2543))+(((-1.0)*r00*x2540))+((r01*x2541))+(((-1.0)*r02*x2527))+x2545+x2544+(((-1.0)*r21*x2539))+(((-1.0)*x2542))+(((-1.0)*x2543))+((r20*x2538))+(((-1.0)*r02*x2533))+(((-1.0)*cj4*x2545))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2546=IKcos(j2);
IkReal x2547=(cj1*x2546);
IkReal x2548=IKsin(j2);
IkReal x2549=(sj1*x2548);
IkReal x2550=(x2547+x2549);
IkReal x2551=((0.749999650312296)*cj4);
IkReal x2552=(cj5*r21);
IkReal x2553=((0.433012903784321)*x2552);
IkReal x2554=(r20*sj5);
IkReal x2555=((0.433012903784321)*x2554);
IkReal x2556=(cj5*r20*sj4);
IkReal x2557=(r21*sj4*sj5);
IkReal x2558=(cj1*x2548);
IkReal x2559=(cj5*r01);
IkReal x2560=((0.433012903784321)*x2559);
IkReal x2561=(r00*sj5);
IkReal x2562=((0.433012903784321)*x2561);
IkReal x2563=(sj1*x2546);
IkReal x2564=(cj5*r00*sj4);
IkReal x2565=(r01*sj4*sj5);
IkReal x2566=((0.0160344678271334)*r22);
IkReal x2567=((0.00925751294893567)*cj4);
IkReal x2568=((0.0160344678271334)*r02);
IkReal x2569=((0.433012903784321)*sj3);
IkReal x2570=(r02*x2569);
IkReal x2571=((0.866025201892125)*cj3*sj4);
IkReal x2572=((0.749999650312296)*sj3);
IkReal x2573=(cj3*cj4*sj5);
IkReal x2574=((1.0)*cj3*cj4*cj5);
IkReal x2575=((0.500000349687582)*cj3*sj4);
IkReal x2576=((0.250000349687704)*cj4*sj3);
IkReal x2577=((0.500000349687582)*sj3);
IkReal x2578=(r22*x2569);
evalcond[0]=((((-0.866025201892125)*x2556))+(((0.866025201892125)*x2557))+x2550+x2555+x2553+(((-1.0)*r22*x2551))+(((-1.0)*cj4*x2555))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x2553)));
evalcond[1]=((((-1.0)*r02*x2551))+(((-1.0)*cj4*x2562))+(((-0.866025201892125)*x2564))+(((-1.0)*x2563))+x2560+x2562+x2558+(((-1.0)*cj4*x2560))+(((-1.0)*(0.250000349687704)*r02))+(((0.866025201892125)*x2565)));
evalcond[2]=((((-1.0)*x2566))+((cj4*x2566))+(((0.0648043305514941)*x2552))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x2554))+(((0.29)*cj1))+((x2552*x2567))+(((-0.27144)*x2549))+(((-0.0185150129489311)*x2557))+((x2554*x2567))+(((-0.27144)*x2547))+(((0.0185150129489311)*x2556)));
evalcond[3]=((((0.0648043305514941)*x2561))+(((-1.0)*(1.0)*px))+(((0.0648043305514941)*x2559))+(((-1.0)*(0.29)*sj1))+(((0.0185150129489311)*x2564))+(((-1.0)*x2568))+(((-0.27144)*x2558))+((cj4*x2568))+(((-0.0185150129489311)*x2565))+((x2559*x2567))+(((0.27144)*x2563))+((x2561*x2567)));
evalcond[4]=(((x2561*x2575))+((x2561*x2572))+((x2561*x2576))+(((-1.0)*x2570))+x2550+(((-1.0)*x2565*x2577))+((x2559*x2575))+(((-1.0)*r00*x2574))+((x2559*x2572))+((x2559*x2576))+((r01*x2573))+((x2564*x2577))+((cj4*x2570))+((r02*x2571)));
evalcond[5]=(((x2552*x2575))+(((-1.0)*x2578))+((x2554*x2572))+((r21*x2573))+x2563+((r22*x2571))+(((-1.0)*r20*x2574))+((cj4*x2578))+((x2552*x2576))+((x2556*x2577))+(((-1.0)*x2557*x2577))+((x2552*x2572))+((x2554*x2576))+((x2554*x2575))+(((-1.0)*x2558)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2579=((0.250000349687704)*cj1);
IkReal x2580=((0.250000349687704)*sj1);
IkReal x2581=((0.749999650312296)*cj1*cj4);
IkReal x2582=((0.433012903784321)*cj1*cj5);
IkReal x2583=(r01*x2582);
IkReal x2584=((0.433012903784321)*cj1*sj5);
IkReal x2585=(r00*x2584);
IkReal x2586=((0.749999650312296)*cj4*sj1);
IkReal x2587=((0.433012903784321)*cj5*sj1);
IkReal x2588=(r21*x2587);
IkReal x2589=((0.433012903784321)*sj1*sj5);
IkReal x2590=(r20*x2589);
IkReal x2591=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2592=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2593=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2594=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2595=(r21*x2582);
IkReal x2596=(r20*x2584);
IkReal x2597=(r01*x2587);
IkReal x2598=(r00*x2589);
if( IKabs(((((-1.0)*r02*x2579))+((r22*x2580))+(((-1.0)*r02*x2581))+((r01*x2592))+x2583+x2585+(((-1.0)*cj4*x2583))+(((-1.0)*r21*x2594))+(((-1.0)*cj4*x2585))+((cj4*x2588))+((r22*x2586))+((cj4*x2590))+(((-1.0)*x2590))+(((-1.0)*x2588))+((r20*x2593))+(((-1.0)*r00*x2591)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2579))+((cj4*x2598))+(((-1.0)*x2598))+((r22*x2581))+((r20*x2591))+(((-1.0)*r01*x2594))+(((-1.0)*r21*x2592))+((r00*x2593))+((cj4*x2596))+(((-1.0)*x2596))+((r02*x2580))+((cj4*x2595))+(((-1.0)*x2595))+((r02*x2586))+(((-1.0)*x2597))+((cj4*x2597)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r02*x2579))+((r22*x2580))+(((-1.0)*r02*x2581))+((r01*x2592))+x2583+x2585+(((-1.0)*cj4*x2583))+(((-1.0)*r21*x2594))+(((-1.0)*cj4*x2585))+((cj4*x2588))+((r22*x2586))+((cj4*x2590))+(((-1.0)*x2590))+(((-1.0)*x2588))+((r20*x2593))+(((-1.0)*r00*x2591))))+IKsqr((((r22*x2579))+((cj4*x2598))+(((-1.0)*x2598))+((r22*x2581))+((r20*x2591))+(((-1.0)*r01*x2594))+(((-1.0)*r21*x2592))+((r00*x2593))+((cj4*x2596))+(((-1.0)*x2596))+((r02*x2580))+((cj4*x2595))+(((-1.0)*x2595))+((r02*x2586))+(((-1.0)*x2597))+((cj4*x2597))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r02*x2579))+((r22*x2580))+(((-1.0)*r02*x2581))+((r01*x2592))+x2583+x2585+(((-1.0)*cj4*x2583))+(((-1.0)*r21*x2594))+(((-1.0)*cj4*x2585))+((cj4*x2588))+((r22*x2586))+((cj4*x2590))+(((-1.0)*x2590))+(((-1.0)*x2588))+((r20*x2593))+(((-1.0)*r00*x2591))), (((r22*x2579))+((cj4*x2598))+(((-1.0)*x2598))+((r22*x2581))+((r20*x2591))+(((-1.0)*r01*x2594))+(((-1.0)*r21*x2592))+((r00*x2593))+((cj4*x2596))+(((-1.0)*x2596))+((r02*x2580))+((cj4*x2595))+(((-1.0)*x2595))+((r02*x2586))+(((-1.0)*x2597))+((cj4*x2597))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2599=IKcos(j2);
IkReal x2600=(cj1*x2599);
IkReal x2601=((0.749999650312296)*cj4);
IkReal x2602=(cj5*r21);
IkReal x2603=((0.433012903784321)*x2602);
IkReal x2604=(r20*sj5);
IkReal x2605=((0.433012903784321)*x2604);
IkReal x2606=IKsin(j2);
IkReal x2607=(sj1*x2606);
IkReal x2608=(cj5*r20*sj4);
IkReal x2609=(r21*sj4*sj5);
IkReal x2610=(sj1*x2599);
IkReal x2611=(cj1*x2606);
IkReal x2612=(x2610+(((-1.0)*x2611)));
IkReal x2613=(cj5*r01);
IkReal x2614=((0.433012903784321)*x2613);
IkReal x2615=(r00*sj5);
IkReal x2616=((0.433012903784321)*x2615);
IkReal x2617=(cj5*r00*sj4);
IkReal x2618=(r01*sj4*sj5);
IkReal x2619=((0.0160344678271334)*r22);
IkReal x2620=((0.00925751294893567)*cj4);
IkReal x2621=((0.0160344678271334)*r02);
IkReal x2622=((0.433012903784321)*sj3);
IkReal x2623=(r22*x2622);
IkReal x2624=((0.866025201892125)*cj3*sj4);
IkReal x2625=((0.749999650312296)*sj3);
IkReal x2626=(cj3*cj4*sj5);
IkReal x2627=((1.0)*cj3*cj4*cj5);
IkReal x2628=((0.500000349687582)*cj3*sj4);
IkReal x2629=((0.250000349687704)*cj4*sj3);
IkReal x2630=((0.500000349687582)*sj3);
IkReal x2631=(r02*x2622);
evalcond[0]=((((-1.0)*r22*x2601))+x2605+x2607+x2600+x2603+(((-1.0)*cj4*x2603))+(((-1.0)*cj4*x2605))+(((-0.866025201892125)*x2608))+(((0.866025201892125)*x2609))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*r02*x2601))+(((-1.0)*cj4*x2614))+x2614+x2616+x2612+(((0.866025201892125)*x2618))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x2616))+(((-0.866025201892125)*x2617)));
evalcond[2]=((((-0.0185150129489311)*x2609))+(((-1.0)*(1.0)*pz))+((x2604*x2620))+(((-1.0)*x2619))+((x2602*x2620))+(((-0.27144)*x2607))+(((0.29)*cj1))+(((0.0185150129489311)*x2608))+(((0.0648043305514941)*x2602))+((cj4*x2619))+(((-0.27144)*x2600))+(((0.0648043305514941)*x2604)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((0.0185150129489311)*x2617))+((x2613*x2620))+(((0.27144)*x2611))+(((-1.0)*x2621))+((cj4*x2621))+(((-0.27144)*x2610))+(((0.0648043305514941)*x2615))+((x2615*x2620))+(((0.0648043305514941)*x2613))+(((0.29)*sj1))+(((-0.0185150129489311)*x2618)));
evalcond[4]=(((cj4*x2623))+(((-1.0)*x2623))+((x2604*x2628))+((r21*x2626))+((x2604*x2625))+(((-1.0)*r20*x2627))+((x2608*x2630))+((x2602*x2625))+x2612+((x2602*x2629))+(((-1.0)*x2609*x2630))+((x2604*x2629))+((x2602*x2628))+((r22*x2624)));
evalcond[5]=(((x2617*x2630))+((x2615*x2629))+((x2613*x2625))+(((-1.0)*x2618*x2630))+((r01*x2626))+((x2615*x2628))+((cj4*x2631))+((r02*x2624))+(((-1.0)*r00*x2627))+(((-1.0)*x2607))+((x2615*x2625))+((x2613*x2628))+(((-1.0)*x2600))+((x2613*x2629))+(((-1.0)*x2631)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2632=((0.250000349687704)*cj1);
IkReal x2633=((0.250000349687704)*sj1);
IkReal x2634=((0.749999650312296)*cj1*cj4);
IkReal x2635=((0.433012903784321)*cj1*cj5);
IkReal x2636=(r11*x2635);
IkReal x2637=((0.433012903784321)*cj1*sj5);
IkReal x2638=(r10*x2637);
IkReal x2639=((0.749999650312296)*cj4*sj1);
IkReal x2640=((0.433012903784321)*cj5*sj1);
IkReal x2641=(r21*x2640);
IkReal x2642=((0.433012903784321)*sj1*sj5);
IkReal x2643=(r20*x2642);
IkReal x2644=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2645=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2646=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2647=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2648=(r21*x2635);
IkReal x2649=(r20*x2637);
IkReal x2650=(r11*x2640);
IkReal x2651=(r10*x2642);
if( IKabs(((((-1.0)*x2638))+((cj4*x2638))+(((-1.0)*r11*x2645))+(((-1.0)*x2636))+(((-1.0)*r21*x2647))+((cj4*x2636))+((cj4*x2641))+((r22*x2633))+((r10*x2644))+((cj4*x2643))+((r12*x2634))+((r22*x2639))+(((-1.0)*x2641))+((r20*x2646))+((r12*x2632))+(((-1.0)*x2643)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2632))+((r22*x2634))+(((-1.0)*cj4*x2651))+(((-1.0)*r12*x2639))+(((-1.0)*r21*x2645))+((r20*x2644))+(((-1.0)*r10*x2646))+((cj4*x2649))+((cj4*x2648))+(((-1.0)*r12*x2633))+(((-1.0)*x2649))+((r11*x2647))+x2651+x2650+(((-1.0)*cj4*x2650))+(((-1.0)*x2648)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2638))+((cj4*x2638))+(((-1.0)*r11*x2645))+(((-1.0)*x2636))+(((-1.0)*r21*x2647))+((cj4*x2636))+((cj4*x2641))+((r22*x2633))+((r10*x2644))+((cj4*x2643))+((r12*x2634))+((r22*x2639))+(((-1.0)*x2641))+((r20*x2646))+((r12*x2632))+(((-1.0)*x2643))))+IKsqr((((r22*x2632))+((r22*x2634))+(((-1.0)*cj4*x2651))+(((-1.0)*r12*x2639))+(((-1.0)*r21*x2645))+((r20*x2644))+(((-1.0)*r10*x2646))+((cj4*x2649))+((cj4*x2648))+(((-1.0)*r12*x2633))+(((-1.0)*x2649))+((r11*x2647))+x2651+x2650+(((-1.0)*cj4*x2650))+(((-1.0)*x2648))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2638))+((cj4*x2638))+(((-1.0)*r11*x2645))+(((-1.0)*x2636))+(((-1.0)*r21*x2647))+((cj4*x2636))+((cj4*x2641))+((r22*x2633))+((r10*x2644))+((cj4*x2643))+((r12*x2634))+((r22*x2639))+(((-1.0)*x2641))+((r20*x2646))+((r12*x2632))+(((-1.0)*x2643))), (((r22*x2632))+((r22*x2634))+(((-1.0)*cj4*x2651))+(((-1.0)*r12*x2639))+(((-1.0)*r21*x2645))+((r20*x2644))+(((-1.0)*r10*x2646))+((cj4*x2649))+((cj4*x2648))+(((-1.0)*r12*x2633))+(((-1.0)*x2649))+((r11*x2647))+x2651+x2650+(((-1.0)*cj4*x2650))+(((-1.0)*x2648))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2652=IKcos(j2);
IkReal x2653=(cj1*x2652);
IkReal x2654=IKsin(j2);
IkReal x2655=(sj1*x2654);
IkReal x2656=(x2655+x2653);
IkReal x2657=((0.749999650312296)*cj4);
IkReal x2658=(cj5*r21);
IkReal x2659=((0.433012903784321)*x2658);
IkReal x2660=(r20*sj5);
IkReal x2661=((0.433012903784321)*x2660);
IkReal x2662=(cj5*r20*sj4);
IkReal x2663=(r21*sj4*sj5);
IkReal x2664=(cj1*x2654);
IkReal x2665=(cj5*r11);
IkReal x2666=((0.433012903784321)*x2665);
IkReal x2667=(r10*sj5);
IkReal x2668=((0.433012903784321)*x2667);
IkReal x2669=(sj1*x2652);
IkReal x2670=(cj5*r10*sj4);
IkReal x2671=(r11*sj4*sj5);
IkReal x2672=((0.0160344678271334)*r22);
IkReal x2673=((0.00925751294893567)*cj4);
IkReal x2674=((0.0160344678271334)*r12);
IkReal x2675=((0.433012903784321)*sj3);
IkReal x2676=(r12*x2675);
IkReal x2677=((0.866025201892125)*cj3*sj4);
IkReal x2678=((0.749999650312296)*sj3);
IkReal x2679=(cj3*cj4*sj5);
IkReal x2680=((1.0)*cj3*cj4*cj5);
IkReal x2681=((0.500000349687582)*cj3*sj4);
IkReal x2682=((0.250000349687704)*cj4*sj3);
IkReal x2683=((0.500000349687582)*sj3);
IkReal x2684=(r22*x2675);
evalcond[0]=((((-1.0)*r22*x2657))+x2661+(((-1.0)*cj4*x2661))+(((0.866025201892125)*x2663))+(((-0.866025201892125)*x2662))+(((-1.0)*(0.250000349687704)*r22))+x2656+x2659+(((-1.0)*cj4*x2659)));
evalcond[1]=((((-0.866025201892125)*x2670))+x2668+x2664+x2666+(((0.866025201892125)*x2671))+(((-1.0)*cj4*x2666))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x2657))+(((-1.0)*x2669))+(((-1.0)*cj4*x2668)));
evalcond[2]=((((0.0648043305514941)*x2660))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x2655))+(((-0.27144)*x2653))+(((0.0648043305514941)*x2658))+(((-1.0)*x2672))+(((0.29)*cj1))+(((-0.0185150129489311)*x2663))+(((0.0185150129489311)*x2662))+((x2658*x2673))+((x2660*x2673))+((cj4*x2672)));
evalcond[3]=((((0.0648043305514941)*x2667))+(((-1.0)*x2674))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((0.27144)*x2669))+(((0.0648043305514941)*x2665))+(((0.0185150129489311)*x2670))+((x2665*x2673))+((cj4*x2674))+(((-0.27144)*x2664))+(((-0.0185150129489311)*x2671))+((x2667*x2673)));
evalcond[4]=((((-1.0)*x2671*x2683))+((x2667*x2678))+(((-1.0)*r10*x2680))+((x2665*x2678))+(((-1.0)*x2676))+((r12*x2677))+((x2665*x2682))+((x2665*x2681))+((r11*x2679))+((x2667*x2682))+((x2667*x2681))+x2656+((cj4*x2676))+((x2670*x2683)));
evalcond[5]=(((x2658*x2678))+(((-1.0)*x2663*x2683))+(((-1.0)*x2664))+((r22*x2677))+(((-1.0)*r20*x2680))+((x2660*x2678))+x2669+((x2660*x2682))+((cj4*x2684))+(((-1.0)*x2684))+((x2660*x2681))+((r21*x2679))+((x2658*x2682))+((x2658*x2681))+((x2662*x2683)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2685=((0.250000349687704)*cj1);
IkReal x2686=((0.250000349687704)*sj1);
IkReal x2687=((0.749999650312296)*cj1*cj4);
IkReal x2688=((0.433012903784321)*cj1*cj5);
IkReal x2689=(r11*x2688);
IkReal x2690=((0.433012903784321)*cj1*sj5);
IkReal x2691=(r10*x2690);
IkReal x2692=((0.749999650312296)*cj4*sj1);
IkReal x2693=((0.433012903784321)*cj5*sj1);
IkReal x2694=(r21*x2693);
IkReal x2695=((0.433012903784321)*sj1*sj5);
IkReal x2696=(r20*x2695);
IkReal x2697=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2698=((0.866025201892125)*cj1*sj4*sj5);
IkReal x2699=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2700=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2701=(r21*x2688);
IkReal x2702=(r20*x2690);
IkReal x2703=(r11*x2693);
IkReal x2704=(r10*x2695);
if( IKabs(((((-1.0)*x2696))+(((-1.0)*cj4*x2691))+(((-1.0)*x2694))+x2691+(((-1.0)*r12*x2685))+x2689+(((-1.0)*r12*x2687))+((r22*x2692))+((r11*x2698))+((cj4*x2696))+(((-1.0)*r21*x2700))+(((-1.0)*r10*x2697))+(((-1.0)*cj4*x2689))+((cj4*x2694))+((r22*x2686))+((r20*x2699)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2685))+(((-1.0)*x2702))+(((-1.0)*x2703))+(((-1.0)*x2704))+((cj4*x2701))+((r20*x2697))+((r12*x2686))+(((-1.0)*r11*x2700))+((cj4*x2702))+(((-1.0)*x2701))+((r12*x2692))+((r10*x2699))+((cj4*x2703))+((cj4*x2704))+((r22*x2687))+(((-1.0)*r21*x2698)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2696))+(((-1.0)*cj4*x2691))+(((-1.0)*x2694))+x2691+(((-1.0)*r12*x2685))+x2689+(((-1.0)*r12*x2687))+((r22*x2692))+((r11*x2698))+((cj4*x2696))+(((-1.0)*r21*x2700))+(((-1.0)*r10*x2697))+(((-1.0)*cj4*x2689))+((cj4*x2694))+((r22*x2686))+((r20*x2699))))+IKsqr((((r22*x2685))+(((-1.0)*x2702))+(((-1.0)*x2703))+(((-1.0)*x2704))+((cj4*x2701))+((r20*x2697))+((r12*x2686))+(((-1.0)*r11*x2700))+((cj4*x2702))+(((-1.0)*x2701))+((r12*x2692))+((r10*x2699))+((cj4*x2703))+((cj4*x2704))+((r22*x2687))+(((-1.0)*r21*x2698))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2696))+(((-1.0)*cj4*x2691))+(((-1.0)*x2694))+x2691+(((-1.0)*r12*x2685))+x2689+(((-1.0)*r12*x2687))+((r22*x2692))+((r11*x2698))+((cj4*x2696))+(((-1.0)*r21*x2700))+(((-1.0)*r10*x2697))+(((-1.0)*cj4*x2689))+((cj4*x2694))+((r22*x2686))+((r20*x2699))), (((r22*x2685))+(((-1.0)*x2702))+(((-1.0)*x2703))+(((-1.0)*x2704))+((cj4*x2701))+((r20*x2697))+((r12*x2686))+(((-1.0)*r11*x2700))+((cj4*x2702))+(((-1.0)*x2701))+((r12*x2692))+((r10*x2699))+((cj4*x2703))+((cj4*x2704))+((r22*x2687))+(((-1.0)*r21*x2698))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2705=IKcos(j2);
IkReal x2706=(cj1*x2705);
IkReal x2707=((0.749999650312296)*cj4);
IkReal x2708=(cj5*r21);
IkReal x2709=((0.433012903784321)*x2708);
IkReal x2710=(r20*sj5);
IkReal x2711=((0.433012903784321)*x2710);
IkReal x2712=IKsin(j2);
IkReal x2713=(sj1*x2712);
IkReal x2714=(cj5*r20*sj4);
IkReal x2715=(r21*sj4*sj5);
IkReal x2716=(sj1*x2705);
IkReal x2717=(cj1*x2712);
IkReal x2718=((((-1.0)*x2717))+x2716);
IkReal x2719=(cj5*r11);
IkReal x2720=((0.433012903784321)*x2719);
IkReal x2721=(r10*sj5);
IkReal x2722=((0.433012903784321)*x2721);
IkReal x2723=(cj5*r10*sj4);
IkReal x2724=(r11*sj4*sj5);
IkReal x2725=((0.0160344678271334)*r22);
IkReal x2726=((0.00925751294893567)*cj4);
IkReal x2727=((0.0160344678271334)*r12);
IkReal x2728=((0.433012903784321)*sj3);
IkReal x2729=(r22*x2728);
IkReal x2730=((0.866025201892125)*cj3*sj4);
IkReal x2731=((0.749999650312296)*sj3);
IkReal x2732=(cj3*cj4*sj5);
IkReal x2733=((1.0)*cj3*cj4*cj5);
IkReal x2734=((0.500000349687582)*cj3*sj4);
IkReal x2735=((0.250000349687704)*cj4*sj3);
IkReal x2736=((0.500000349687582)*sj3);
IkReal x2737=(r12*x2728);
evalcond[0]=(x2706+x2709+(((-1.0)*cj4*x2709))+(((0.866025201892125)*x2715))+(((-1.0)*cj4*x2711))+(((-0.866025201892125)*x2714))+(((-1.0)*(0.250000349687704)*r22))+x2713+x2711+(((-1.0)*r22*x2707)));
evalcond[1]=((((-1.0)*cj4*x2722))+x2720+x2722+(((-0.866025201892125)*x2723))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x2707))+(((0.866025201892125)*x2724))+x2718+(((-1.0)*cj4*x2720)));
evalcond[2]=((((0.0648043305514941)*x2708))+((cj4*x2725))+(((-0.27144)*x2706))+((x2710*x2726))+(((-1.0)*(1.0)*pz))+(((0.29)*cj1))+(((-0.27144)*x2713))+(((-1.0)*x2725))+((x2708*x2726))+(((0.0185150129489311)*x2714))+(((-0.0185150129489311)*x2715))+(((0.0648043305514941)*x2710)));
evalcond[3]=(((x2719*x2726))+(((-0.27144)*x2716))+(((-1.0)*(1.0)*py))+(((-1.0)*x2727))+(((0.0648043305514941)*x2719))+(((-0.0185150129489311)*x2724))+((cj4*x2727))+((x2721*x2726))+(((0.27144)*x2717))+(((0.0648043305514941)*x2721))+(((0.29)*sj1))+(((0.0185150129489311)*x2723)));
evalcond[4]=(((x2708*x2734))+((x2708*x2735))+(((-1.0)*x2729))+((x2710*x2731))+((x2714*x2736))+(((-1.0)*r20*x2733))+((x2708*x2731))+(((-1.0)*x2715*x2736))+((r21*x2732))+((x2710*x2734))+((cj4*x2729))+((x2710*x2735))+x2718+((r22*x2730)));
evalcond[5]=(((x2721*x2731))+(((-1.0)*r10*x2733))+((x2719*x2735))+((x2719*x2734))+((cj4*x2737))+(((-1.0)*x2713))+((x2721*x2734))+((r12*x2730))+(((-1.0)*x2737))+((x2721*x2735))+((x2719*x2731))+((x2723*x2736))+(((-1.0)*x2724*x2736))+((r11*x2732))+(((-1.0)*x2706)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2738=((0.250000349687704)*r12);
IkReal x2739=((0.749999650312296)*cj4*r12);
IkReal x2740=((0.433012903784321)*cj1);
IkReal x2741=(cj5*r11);
IkReal x2742=(x2740*x2741);
IkReal x2743=(r10*sj5);
IkReal x2744=(x2740*x2743);
IkReal x2745=((0.250000349687704)*r22*sj0);
IkReal x2746=(cj5*r10);
IkReal x2747=((0.866025201892125)*cj1*sj4);
IkReal x2748=(r11*sj5);
IkReal x2749=((0.749999650312296)*cj4*r22*sj0);
IkReal x2750=(cj5*r21);
IkReal x2751=((0.433012903784321)*sj0*sj1);
IkReal x2752=(x2750*x2751);
IkReal x2753=(r20*sj5);
IkReal x2754=(x2751*x2753);
IkReal x2755=(cj5*r20);
IkReal x2756=((0.866025201892125)*sj0*sj1*sj4);
IkReal x2757=(r21*sj5);
IkReal x2758=((0.433012903784321)*sj1);
IkReal x2759=(x2741*x2758);
IkReal x2760=(x2743*x2758);
IkReal x2761=((0.433012903784321)*cj1*sj0);
IkReal x2762=(x2750*x2761);
IkReal x2763=(x2753*x2761);
IkReal x2764=((0.866025201892125)*sj1*sj4);
IkReal x2765=((0.866025201892125)*cj1*sj0*sj4);
CheckValue<IkReal> x2766 = IKatan2WithCheck(IkReal((((cj4*x2752))+((sj1*x2749))+((x2746*x2747))+((sj1*x2745))+((cj4*x2754))+(((-1.0)*x2744))+((cj4*x2744))+(((-1.0)*x2752))+(((-1.0)*x2742))+((cj4*x2742))+((x2755*x2756))+((cj1*x2738))+(((-1.0)*x2754))+(((-1.0)*x2747*x2748))+((cj1*x2739))+(((-1.0)*x2756*x2757)))),IkReal((((cj1*x2749))+((cj1*x2745))+(((-1.0)*cj4*x2760))+((cj4*x2762))+(((-1.0)*x2762))+((x2748*x2764))+x2759+(((-1.0)*x2757*x2765))+((x2755*x2765))+(((-1.0)*x2746*x2764))+((cj4*x2763))+(((-1.0)*x2763))+(((-1.0)*sj1*x2739))+(((-1.0)*cj4*x2759))+x2760+(((-1.0)*sj1*x2738)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2766.valid){
continue;
}
CheckValue<IkReal> x2767=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2767.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x2766.value)+(((1.5707963267949)*(x2767.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2768=IKcos(j2);
IkReal x2769=(cj1*x2768);
IkReal x2770=((0.749999650312296)*cj4);
IkReal x2771=(cj5*r21);
IkReal x2772=((0.433012903784321)*x2771);
IkReal x2773=(r20*sj5);
IkReal x2774=((0.433012903784321)*x2773);
IkReal x2775=IKsin(j2);
IkReal x2776=(sj1*x2775);
IkReal x2777=(cj5*r20*sj4);
IkReal x2778=(r21*sj4*sj5);
IkReal x2779=(cj5*r01);
IkReal x2780=((0.433012903784321)*x2779);
IkReal x2781=(r00*sj5);
IkReal x2782=((0.433012903784321)*x2781);
IkReal x2783=(cj1*x2775);
IkReal x2784=(cj0*x2783);
IkReal x2785=(cj5*r00*sj4);
IkReal x2786=(r01*sj4*sj5);
IkReal x2787=(cj0*sj1*x2768);
IkReal x2788=(cj5*r11);
IkReal x2789=((0.433012903784321)*x2788);
IkReal x2790=(r10*sj5);
IkReal x2791=((0.433012903784321)*x2790);
IkReal x2792=(sj0*x2783);
IkReal x2793=(cj5*r10*sj4);
IkReal x2794=(r11*sj4*sj5);
IkReal x2795=(sj0*sj1*x2768);
IkReal x2796=((0.0160344678271334)*r22);
IkReal x2797=((0.00925751294893567)*cj4);
IkReal x2798=((0.0160344678271334)*r02);
IkReal x2799=((0.29)*sj1);
IkReal x2800=((0.0160344678271334)*r12);
IkReal x2801=((0.433012903784321)*sj3);
IkReal x2802=(r22*x2801);
IkReal x2803=((0.866025201892125)*cj3*sj4);
IkReal x2804=((0.749999650312296)*sj3);
IkReal x2805=(cj3*cj4*sj5);
IkReal x2806=((1.0)*cj3*cj4*cj5);
IkReal x2807=((0.500000349687582)*cj3*sj4);
IkReal x2808=((0.250000349687704)*cj4*sj3);
IkReal x2809=((0.500000349687582)*sj3);
IkReal x2810=(r02*x2801);
IkReal x2811=(r12*x2801);
evalcond[0]=((((-1.0)*r22*x2770))+(((-1.0)*cj4*x2774))+(((-1.0)*(0.250000349687704)*r22))+x2776+x2774+x2772+(((-0.866025201892125)*x2777))+(((0.866025201892125)*x2778))+x2769+(((-1.0)*cj4*x2772)));
evalcond[1]=((((0.866025201892125)*x2786))+(((-1.0)*x2787))+x2784+x2782+x2780+(((-1.0)*r02*x2770))+(((-0.866025201892125)*x2785))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x2782))+(((-1.0)*cj4*x2780)));
evalcond[2]=((((-1.0)*cj4*x2791))+x2791+x2792+(((0.866025201892125)*x2794))+(((-1.0)*cj4*x2789))+(((-1.0)*(0.250000349687704)*r12))+(((-0.866025201892125)*x2793))+x2789+(((-1.0)*x2795))+(((-1.0)*r12*x2770)));
evalcond[3]=((((-0.27144)*x2776))+(((0.0648043305514941)*x2771))+(((-1.0)*(1.0)*pz))+((cj4*x2796))+(((0.0185150129489311)*x2777))+((x2773*x2797))+(((0.29)*cj1))+(((-0.0185150129489311)*x2778))+(((0.0648043305514941)*x2773))+(((-0.27144)*x2769))+(((-1.0)*x2796))+((x2771*x2797)));
evalcond[4]=((((-1.0)*(1.0)*px))+(((-1.0)*cj0*x2799))+(((0.0098)*sj0))+(((0.0648043305514941)*x2781))+((x2781*x2797))+(((-0.27144)*x2784))+((x2779*x2797))+(((0.0185150129489311)*x2785))+((cj4*x2798))+(((0.27144)*x2787))+(((0.0648043305514941)*x2779))+(((-1.0)*x2798))+(((-0.0185150129489311)*x2786)));
evalcond[5]=((((0.0648043305514941)*x2788))+(((-1.0)*(1.0)*py))+(((-1.0)*x2800))+((x2790*x2797))+(((0.27144)*x2795))+(((0.0185150129489311)*x2793))+((x2788*x2797))+((cj4*x2800))+(((-0.27144)*x2792))+(((-1.0)*(0.0098)*cj0))+(((0.0648043305514941)*x2790))+(((-0.0185150129489311)*x2794))+(((-1.0)*sj0*x2799)));
evalcond[6]=(((x2771*x2804))+(((-1.0)*r20*x2806))+((x2777*x2809))+((x2773*x2804))+((x2771*x2808))+(((-1.0)*x2783))+((r22*x2803))+((x2773*x2808))+(((-1.0)*x2802))+(((-1.0)*x2778*x2809))+((x2771*x2807))+((x2773*x2807))+((sj1*x2768))+((cj4*x2802))+((r21*x2805)));
evalcond[7]=(((cj0*x2769))+((x2781*x2807))+((r02*x2803))+((x2785*x2809))+((x2781*x2804))+((cj0*x2776))+((x2779*x2807))+((x2779*x2804))+((x2781*x2808))+(((-1.0)*x2786*x2809))+(((-1.0)*r00*x2806))+((x2779*x2808))+((cj4*x2810))+((r01*x2805))+(((-1.0)*x2810)));
evalcond[8]=(((x2790*x2808))+(((-1.0)*r10*x2806))+(((-1.0)*x2794*x2809))+((sj0*x2776))+((sj0*x2769))+((x2788*x2807))+((x2793*x2809))+((x2788*x2804))+((x2788*x2808))+((x2790*x2807))+((x2790*x2804))+((r11*x2805))+((cj4*x2811))+((r12*x2803))+(((-1.0)*x2811)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2812=((0.250000349687704)*r02);
IkReal x2813=((0.250000349687704)*cj0*r22);
IkReal x2814=((0.749999650312296)*cj4*r02);
IkReal x2815=((0.433012903784321)*cj1);
IkReal x2816=(cj5*r01);
IkReal x2817=(x2815*x2816);
IkReal x2818=(r00*sj5);
IkReal x2819=(x2815*x2818);
IkReal x2820=((0.749999650312296)*cj0*cj4*r22);
IkReal x2821=(cj5*r21);
IkReal x2822=((0.433012903784321)*cj0*sj1);
IkReal x2823=(x2821*x2822);
IkReal x2824=(r20*sj5);
IkReal x2825=(x2822*x2824);
IkReal x2826=(cj5*r00);
IkReal x2827=((0.866025201892125)*cj1*sj4);
IkReal x2828=(r01*sj5);
IkReal x2829=(cj5*r20);
IkReal x2830=((0.866025201892125)*cj0*sj1*sj4);
IkReal x2831=(r21*sj5);
IkReal x2832=((0.433012903784321)*sj1);
IkReal x2833=(x2816*x2832);
IkReal x2834=(x2818*x2832);
IkReal x2835=((0.433012903784321)*cj0*cj1);
IkReal x2836=(x2821*x2835);
IkReal x2837=(x2824*x2835);
IkReal x2838=((0.866025201892125)*sj1*sj4);
IkReal x2839=((0.866025201892125)*cj0*cj1*sj4);
CheckValue<IkReal> x2840 = IKatan2WithCheck(IkReal((((cj4*x2819))+((cj4*x2817))+(((-1.0)*x2830*x2831))+(((-1.0)*x2817))+(((-1.0)*x2819))+((cj1*x2812))+((cj4*x2823))+((sj1*x2820))+((x2826*x2827))+(((-1.0)*x2825))+((x2829*x2830))+((cj1*x2814))+(((-1.0)*x2827*x2828))+((cj4*x2825))+(((-1.0)*x2823))+((sj1*x2813)))),IkReal((((cj4*x2837))+(((-1.0)*x2831*x2839))+((x2828*x2838))+((cj1*x2820))+(((-1.0)*sj1*x2814))+(((-1.0)*cj4*x2833))+(((-1.0)*cj4*x2834))+(((-1.0)*x2826*x2838))+(((-1.0)*x2836))+((cj4*x2836))+((x2829*x2839))+x2834+x2833+(((-1.0)*sj1*x2812))+((cj1*x2813))+(((-1.0)*x2837)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2840.valid){
continue;
}
CheckValue<IkReal> x2841=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2841.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x2840.value)+(((1.5707963267949)*(x2841.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2842=IKcos(j2);
IkReal x2843=(cj1*x2842);
IkReal x2844=((0.749999650312296)*cj4);
IkReal x2845=(cj5*r21);
IkReal x2846=((0.433012903784321)*x2845);
IkReal x2847=(r20*sj5);
IkReal x2848=((0.433012903784321)*x2847);
IkReal x2849=IKsin(j2);
IkReal x2850=(sj1*x2849);
IkReal x2851=(cj5*r20*sj4);
IkReal x2852=(r21*sj4*sj5);
IkReal x2853=(cj5*r01);
IkReal x2854=((0.433012903784321)*x2853);
IkReal x2855=(r00*sj5);
IkReal x2856=((0.433012903784321)*x2855);
IkReal x2857=(cj1*x2849);
IkReal x2858=(cj0*x2857);
IkReal x2859=(cj5*r00*sj4);
IkReal x2860=(r01*sj4*sj5);
IkReal x2861=(cj0*sj1*x2842);
IkReal x2862=(cj5*r11);
IkReal x2863=((0.433012903784321)*x2862);
IkReal x2864=(r10*sj5);
IkReal x2865=((0.433012903784321)*x2864);
IkReal x2866=(sj0*x2857);
IkReal x2867=(cj5*r10*sj4);
IkReal x2868=(r11*sj4*sj5);
IkReal x2869=(sj0*sj1*x2842);
IkReal x2870=((0.0160344678271334)*r22);
IkReal x2871=((0.00925751294893567)*cj4);
IkReal x2872=((0.0160344678271334)*r02);
IkReal x2873=((0.29)*sj1);
IkReal x2874=((0.0160344678271334)*r12);
IkReal x2875=((0.433012903784321)*sj3);
IkReal x2876=(r22*x2875);
IkReal x2877=((0.866025201892125)*cj3*sj4);
IkReal x2878=((0.749999650312296)*sj3);
IkReal x2879=(cj3*cj4*sj5);
IkReal x2880=((1.0)*cj3*cj4*cj5);
IkReal x2881=((0.500000349687582)*cj3*sj4);
IkReal x2882=((0.250000349687704)*cj4*sj3);
IkReal x2883=((0.500000349687582)*sj3);
IkReal x2884=(r02*x2875);
IkReal x2885=(r12*x2875);
evalcond[0]=((((-0.866025201892125)*x2851))+(((0.866025201892125)*x2852))+(((-1.0)*r22*x2844))+(((-1.0)*cj4*x2848))+x2846+x2843+x2848+x2850+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x2846)));
evalcond[1]=((((0.866025201892125)*x2860))+(((-1.0)*x2861))+x2856+x2854+x2858+(((-1.0)*(0.250000349687704)*r02))+(((-0.866025201892125)*x2859))+(((-1.0)*cj4*x2856))+(((-1.0)*cj4*x2854))+(((-1.0)*r02*x2844)));
evalcond[2]=(x2863+x2866+x2865+(((-1.0)*cj4*x2863))+(((-0.866025201892125)*x2867))+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x2868))+(((-1.0)*cj4*x2865))+(((-1.0)*x2869))+(((-1.0)*r12*x2844)));
evalcond[3]=((((-0.27144)*x2850))+(((-0.27144)*x2843))+(((-1.0)*(1.0)*pz))+(((-1.0)*x2870))+(((-0.0185150129489311)*x2852))+(((0.0648043305514941)*x2845))+((x2847*x2871))+(((0.29)*cj1))+(((0.0648043305514941)*x2847))+(((0.0185150129489311)*x2851))+((cj4*x2870))+((x2845*x2871)));
evalcond[4]=((((-1.0)*(1.0)*px))+(((-1.0)*x2872))+(((0.0098)*sj0))+(((-1.0)*cj0*x2873))+((x2855*x2871))+(((0.0648043305514941)*x2855))+(((0.0185150129489311)*x2859))+((cj4*x2872))+(((0.27144)*x2861))+(((-0.0185150129489311)*x2860))+(((-0.27144)*x2858))+(((0.0648043305514941)*x2853))+((x2853*x2871)));
evalcond[5]=((((0.27144)*x2869))+(((-1.0)*(1.0)*py))+(((0.0185150129489311)*x2867))+(((-0.27144)*x2866))+(((-0.0185150129489311)*x2868))+(((-1.0)*sj0*x2873))+((cj4*x2874))+(((0.0648043305514941)*x2862))+((x2862*x2871))+((x2864*x2871))+(((-1.0)*(0.0098)*cj0))+(((-1.0)*x2874))+(((0.0648043305514941)*x2864)));
evalcond[6]=((((-1.0)*r20*x2880))+((cj4*x2876))+(((-1.0)*x2852*x2883))+((sj1*x2842))+((r21*x2879))+((x2851*x2883))+((x2845*x2882))+(((-1.0)*x2876))+((x2845*x2881))+((x2847*x2878))+((r22*x2877))+((x2845*x2878))+(((-1.0)*x2857))+((x2847*x2882))+((x2847*x2881)));
evalcond[7]=(((x2855*x2882))+((x2859*x2883))+((cj0*x2850))+((x2855*x2881))+((r01*x2879))+(((-1.0)*x2860*x2883))+((cj0*x2843))+(((-1.0)*x2884))+((x2855*x2878))+((x2853*x2882))+((x2853*x2881))+((x2853*x2878))+(((-1.0)*r00*x2880))+((cj4*x2884))+((r02*x2877)));
evalcond[8]=(((r11*x2879))+(((-1.0)*r10*x2880))+((r12*x2877))+((sj0*x2843))+(((-1.0)*x2885))+((x2862*x2878))+((x2867*x2883))+((x2862*x2881))+((x2862*x2882))+((x2864*x2878))+((x2864*x2881))+((x2864*x2882))+((sj0*x2850))+(((-1.0)*x2868*x2883))+((cj4*x2885)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2886=(r12*sj0);
IkReal x2887=((0.18234135315471)*sj0);
IkReal x2888=(cj5*r11);
IkReal x2889=(r10*sj5);
IkReal x2890=((0.10827950965428)*cj4*sj0);
IkReal x2891=((0.216558867852667)*sj0*sj4);
IkReal x2892=(cj5*r21);
IkReal x2893=(r20*sj5);
IkReal x2894=((0.373377619497519)*cj4);
IkReal x2895=((0.746754716733336)*sj4);
CheckValue<IkReal> x2896=IKPowWithIntegerCheck(sj0,-2);
if(!x2896.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x2896.value)*((((r11*sj5*x2891))+(((-0.187545437253636)*cj4*x2886))+(((-0.0838945627463637)*x2886))+(((-1.0)*(1.0)*py*sj0))+((x2887*x2888))+(((-1.0)*x2889*x2890))+(((-1.0)*x2888*x2890))+((x2887*x2889))+(((-1.0)*(0.0098)*cj0*sj0))+(((-1.0)*cj5*r10*x2891)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x2895))+(((3.44827586206897)*pz))+((cj5*r20*x2895))+(((0.289291595677116)*r22))+((x2892*x2894))+(((0.646708404322884)*cj4*r22))+(((-0.62876328674038)*x2893))+(((-0.62876328674038)*x2892))+((x2893*x2894)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x2896.value)*((((r11*sj5*x2891))+(((-0.187545437253636)*cj4*x2886))+(((-0.0838945627463637)*x2886))+(((-1.0)*(1.0)*py*sj0))+((x2887*x2888))+(((-1.0)*x2889*x2890))+(((-1.0)*x2888*x2890))+((x2887*x2889))+(((-1.0)*(0.0098)*cj0*sj0))+(((-1.0)*cj5*r10*x2891))))))+IKsqr(((((-1.0)*r21*sj5*x2895))+(((3.44827586206897)*pz))+((cj5*r20*x2895))+(((0.289291595677116)*r22))+((x2892*x2894))+(((0.646708404322884)*cj4*r22))+(((-0.62876328674038)*x2893))+(((-0.62876328674038)*x2892))+((x2893*x2894))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x2896.value)*((((r11*sj5*x2891))+(((-0.187545437253636)*cj4*x2886))+(((-0.0838945627463637)*x2886))+(((-1.0)*(1.0)*py*sj0))+((x2887*x2888))+(((-1.0)*x2889*x2890))+(((-1.0)*x2888*x2890))+((x2887*x2889))+(((-1.0)*(0.0098)*cj0*sj0))+(((-1.0)*cj5*r10*x2891))))), ((((-1.0)*r21*sj5*x2895))+(((3.44827586206897)*pz))+((cj5*r20*x2895))+(((0.289291595677116)*r22))+((x2892*x2894))+(((0.646708404322884)*cj4*r22))+(((-0.62876328674038)*x2893))+(((-0.62876328674038)*x2892))+((x2893*x2894))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2897=((0.187545437253636)*cj4);
IkReal x2898=((0.18234135315471)*cj5);
IkReal x2899=((0.18234135315471)*sj5);
IkReal x2900=((0.29)*(IKcos(j1)));
IkReal x2901=((0.10827950965428)*cj4*cj5);
IkReal x2902=((0.10827950965428)*cj4*sj5);
IkReal x2903=((0.216558867852667)*cj5*sj4);
IkReal x2904=((0.216558867852667)*sj4*sj5);
IkReal x2905=((0.0098)*cj0);
IkReal x2906=(sj0*x2905);
IkReal x2907=((1.0)*py);
IkReal x2908=(r12*sj0);
IkReal x2909=(r11*sj0);
IkReal x2910=(r10*sj0);
IkReal x2911=(cj5*r11);
IkReal x2912=((0.10827950965428)*cj4*sj0);
IkReal x2913=(r10*sj5);
IkReal x2914=sj0*sj0;
IkReal x2915=((0.29)*(IKsin(j1)));
IkReal x2916=((1.0)*px);
IkReal x2917=(cj0*r02);
IkReal x2918=(cj0*r01);
IkReal x2919=(cj0*r00);
IkReal x2920=cj0*cj0;
IkReal x2921=((1.0)*pz);
IkReal x2922=((0.117537022603216)*sj3);
IkReal x2923=(r12*x2922);
IkReal x2924=((0.0160344678271334)*r22);
IkReal x2925=(sj0*x2924);
IkReal x2926=((0.235073880801598)*cj3*sj4);
IkReal x2927=((0.20357990508077)*sj3);
IkReal x2928=((0.0648043305514941)*cj5*r21);
IkReal x2929=((0.0648043305514941)*r20*sj5);
IkReal x2930=(cj5*r10);
IkReal x2931=((0.27144)*cj3*cj4);
IkReal x2932=(r11*sj5);
IkReal x2933=((0.135720094919197)*cj3*sj4);
IkReal x2934=((0.0678600949192303)*cj4*sj3);
IkReal x2935=(cj5*r21);
IkReal x2936=((0.00925751294893567)*cj4*sj0);
IkReal x2937=(r20*sj5);
IkReal x2938=((0.135720094919197)*sj3*sj4);
IkReal x2939=((0.0185150129489311)*cj5*r20*sj4);
IkReal x2940=((0.0185150129489311)*r21*sj4*sj5);
IkReal x2941=(cj0*x2924);
IkReal x2942=(r02*x2922);
IkReal x2943=(cj5*r01);
IkReal x2944=(r00*sj5);
IkReal x2945=((0.00925751294893567)*cj0*cj4);
IkReal x2946=(r01*sj5);
IkReal x2947=(cj5*r00*sj4);
IkReal x2948=((0.0160344678271334)*r12);
IkReal x2949=((0.0648043305514941)*cj5);
IkReal x2950=(r11*x2949);
IkReal x2951=((0.0648043305514941)*sj5);
IkReal x2952=(r10*x2951);
IkReal x2953=((0.00925751294893567)*cj4);
IkReal x2954=(x2911*x2953);
IkReal x2955=(x2913*x2953);
IkReal x2956=((0.0185150129489311)*cj5*sj4);
IkReal x2957=(r10*x2956);
IkReal x2958=((0.0185150129489311)*sj4*sj5);
IkReal x2959=(r11*x2958);
IkReal x2960=((0.117537022603216)*r22*sj3);
IkReal x2961=(sj0*x2960);
IkReal x2962=((0.235073880801598)*cj3*r22*sj4);
IkReal x2963=((0.20357990508077)*sj0*sj3);
IkReal x2964=(cj5*r20);
IkReal x2965=((0.27144)*cj3*cj4*sj0);
IkReal x2966=(r21*sj5);
IkReal x2967=((0.135720094919197)*cj3*sj0*sj4);
IkReal x2968=((0.0678600949192303)*cj4*sj0*sj3);
IkReal x2969=((0.135720094919197)*sj0*sj3*sj4);
IkReal x2970=((0.0160344678271334)*r02);
IkReal x2971=(cj4*x2970);
IkReal x2972=(r01*x2949);
IkReal x2973=(r00*x2951);
IkReal x2974=(cj0*x2915);
IkReal x2975=(cj0*x2960);
IkReal x2976=(x2943*x2953);
IkReal x2977=(x2944*x2953);
IkReal x2978=(r00*x2956);
IkReal x2979=(r01*x2958);
IkReal x2980=((0.20357990508077)*cj0*sj3);
IkReal x2981=((0.27144)*cj0*cj3*cj4);
IkReal x2982=((0.135720094919197)*cj0*cj3*sj4);
IkReal x2983=((0.0678600949192303)*cj0*cj4*sj3);
IkReal x2984=((0.135720094919197)*cj0*sj3*sj4);
IkReal x2985=(cj0*r12);
IkReal x2986=((0.20357990508077)*cj4);
IkReal x2987=((0.117537022603216)*cj0);
IkReal x2988=(x2911*x2987);
IkReal x2989=(x2913*x2987);
IkReal x2990=((-1.0)*sj0*x2974);
IkReal x2991=((0.235073880801598)*cj0*sj4);
IkReal x2992=(cj0*x2948);
IkReal x2993=(r02*sj0);
IkReal x2994=((0.117537022603216)*sj0);
IkReal x2995=(x2943*x2994);
IkReal x2996=(x2944*x2994);
IkReal x2997=((0.235073880801598)*sj0);
evalcond[0]=(((r22*x2897))+((r20*x2903))+((r20*x2902))+pz+(((-1.0)*r20*x2899))+(((-1.0)*x2900))+((r21*x2901))+(((0.0838945627463637)*r22))+(((-1.0)*r21*x2904))+(((-1.0)*r21*x2898)));
evalcond[1]=((((-1.0)*x2911*x2912))+((x2899*x2910))+(((-1.0)*x2912*x2913))+(((-1.0)*x2914*x2915))+(((-1.0)*sj0*x2907))+((x2898*x2909))+(((-1.0)*x2897*x2908))+(((-1.0)*x2906))+(((-1.0)*x2903*x2910))+(((-0.0838945627463637)*x2908))+((x2904*x2909)));
evalcond[2]=((((-1.0)*x2915*x2920))+((x2904*x2918))+x2906+(((-1.0)*x2897*x2917))+(((-1.0)*x2903*x2919))+(((-0.0838945627463637)*x2917))+(((-1.0)*x2902*x2919))+((x2898*x2918))+((x2899*x2919))+(((-1.0)*x2901*x2918))+(((-1.0)*cj0*x2916)));
evalcond[3]=((((-1.0)*sj0*x2921))+((cj4*x2923))+((cj4*x2925))+((x2935*x2936))+((sj0*x2929))+(((-1.0)*sj0*x2940))+((x2911*x2933))+(((-1.0)*x2923))+((x2936*x2937))+((r12*x2926))+((x2913*x2933))+(((-1.0)*x2925))+((sj0*x2928))+((x2911*x2927))+((x2913*x2927))+((x2911*x2934))+(((-1.0)*x2932*x2938))+((x2913*x2934))+((x2930*x2938))+((sj0*x2939))+((x2931*x2932))+(((-1.0)*x2930*x2931))+((sj0*x2900)));
evalcond[4]=(((x2937*x2945))+((x2935*x2945))+(((-1.0)*cj5*r00*x2931))+(((-1.0)*cj0*x2940))+((x2933*x2943))+((cj0*x2928))+((x2927*x2943))+((x2933*x2944))+((cj4*x2941))+(((-1.0)*x2938*x2946))+(((-1.0)*x2941))+((r02*x2926))+((x2934*x2943))+(((-1.0)*cj0*x2921))+((cj0*x2929))+((x2934*x2944))+((cj4*x2942))+((cj0*x2939))+(((-1.0)*x2942))+((cj0*x2900))+((x2931*x2946))+((x2927*x2944))+(((0.135720094919197)*sj3*x2947)));
evalcond[5]=((((-1.0)*x2959))+((x2966*x2969))+(((-1.0)*x2937*x2967))+(((-1.0)*sj0*x2962))+x2961+(((-1.0)*x2935*x2967))+(((-1.0)*sj0*x2915))+(((-1.0)*x2907))+(((-1.0)*x2937*x2968))+(((-1.0)*x2965*x2966))+(((-1.0)*x2935*x2968))+(((-1.0)*x2935*x2963))+(((-1.0)*cj4*x2961))+((cj4*x2948))+(((-1.0)*x2948))+(((-1.0)*x2937*x2963))+(((-1.0)*x2964*x2969))+x2952+x2954+x2955+x2950+x2957+((x2964*x2965))+(((-1.0)*x2905)));
evalcond[6]=((((-1.0)*x2937*x2982))+(((-1.0)*x2970))+(((0.0098)*sj0))+(((-1.0)*x2916))+(((-1.0)*x2935*x2983))+(((-1.0)*x2974))+(((-1.0)*cj0*x2962))+((x2966*x2984))+(((-1.0)*cj4*x2975))+((x2964*x2981))+(((-1.0)*x2979))+(((-1.0)*x2964*x2984))+(((-1.0)*x2935*x2980))+x2971+x2973+x2975+x2976+x2977+x2978+x2972+(((-1.0)*x2937*x2980))+(((-1.0)*x2937*x2983))+(((-1.0)*x2966*x2981))+(((-1.0)*x2935*x2982)));
evalcond[7]=((((-1.0)*sj0*x2916))+((sj0*x2976))+((sj0*x2977))+x2989+x2988+((sj0*x2978))+(((-1.0)*x2930*x2991))+x2990+((sj0*x2972))+(((0.0098)*x2914))+(((-1.0)*sj0*x2979))+(((-1.0)*x2985*x2986))+(((-0.0678600949192303)*x2985))+((sj0*x2973))+((sj0*x2971))+((x2932*x2991))+(((-1.0)*cj4*x2988))+(((-1.0)*cj4*x2989))+(((-1.0)*sj0*x2970)));
evalcond[8]=(((cj0*x2957))+(((-1.0)*x2992))+((cj4*x2992))+((cj0*x2950))+(((-0.0098)*x2920))+(((-1.0)*x2986*x2993))+x2996+x2995+x2990+((cj0*x2952))+(((-1.0)*cj0*x2959))+(((-1.0)*cj4*x2996))+(((-1.0)*cj0*x2907))+((cj0*x2955))+(((-0.0678600949192303)*x2993))+((cj0*x2954))+(((-1.0)*cj4*x2995))+(((-1.0)*x2947*x2997))+((r01*sj4*sj5*x2997)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2998=((0.250000349687704)*cj1);
IkReal x2999=((0.250000349687704)*sj1);
IkReal x3000=((0.749999650312296)*cj1*cj4);
IkReal x3001=((0.433012903784321)*cj1*cj5);
IkReal x3002=(r01*x3001);
IkReal x3003=((0.433012903784321)*cj1*sj5);
IkReal x3004=(r00*x3003);
IkReal x3005=((0.749999650312296)*cj4*sj1);
IkReal x3006=((0.433012903784321)*cj5*sj1);
IkReal x3007=(r21*x3006);
IkReal x3008=((0.433012903784321)*sj1*sj5);
IkReal x3009=(r20*x3008);
IkReal x3010=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3011=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3012=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3013=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3014=(r21*x3001);
IkReal x3015=(r20*x3003);
IkReal x3016=(r01*x3006);
IkReal x3017=(r00*x3008);
if( IKabs((((cj4*x3004))+(((-1.0)*x3002))+((r02*x3000))+((r22*x2999))+((r02*x2998))+((cj4*x3009))+((cj4*x3002))+(((-1.0)*x3009))+((r20*x3012))+(((-1.0)*r01*x3011))+((r22*x3005))+(((-1.0)*x3007))+(((-1.0)*r21*x3013))+(((-1.0)*x3004))+((r00*x3010))+((cj4*x3007)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x3015))+((r22*x2998))+(((-1.0)*r21*x3011))+(((-1.0)*cj4*x3017))+x3017+x3016+(((-1.0)*r00*x3012))+(((-1.0)*r02*x2999))+(((-1.0)*cj4*x3016))+((r22*x3000))+((r01*x3013))+((r20*x3010))+(((-1.0)*r02*x3005))+((cj4*x3014))+(((-1.0)*x3014))+(((-1.0)*x3015)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x3004))+(((-1.0)*x3002))+((r02*x3000))+((r22*x2999))+((r02*x2998))+((cj4*x3009))+((cj4*x3002))+(((-1.0)*x3009))+((r20*x3012))+(((-1.0)*r01*x3011))+((r22*x3005))+(((-1.0)*x3007))+(((-1.0)*r21*x3013))+(((-1.0)*x3004))+((r00*x3010))+((cj4*x3007))))+IKsqr((((cj4*x3015))+((r22*x2998))+(((-1.0)*r21*x3011))+(((-1.0)*cj4*x3017))+x3017+x3016+(((-1.0)*r00*x3012))+(((-1.0)*r02*x2999))+(((-1.0)*cj4*x3016))+((r22*x3000))+((r01*x3013))+((r20*x3010))+(((-1.0)*r02*x3005))+((cj4*x3014))+(((-1.0)*x3014))+(((-1.0)*x3015))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x3004))+(((-1.0)*x3002))+((r02*x3000))+((r22*x2999))+((r02*x2998))+((cj4*x3009))+((cj4*x3002))+(((-1.0)*x3009))+((r20*x3012))+(((-1.0)*r01*x3011))+((r22*x3005))+(((-1.0)*x3007))+(((-1.0)*r21*x3013))+(((-1.0)*x3004))+((r00*x3010))+((cj4*x3007))), (((cj4*x3015))+((r22*x2998))+(((-1.0)*r21*x3011))+(((-1.0)*cj4*x3017))+x3017+x3016+(((-1.0)*r00*x3012))+(((-1.0)*r02*x2999))+(((-1.0)*cj4*x3016))+((r22*x3000))+((r01*x3013))+((r20*x3010))+(((-1.0)*r02*x3005))+((cj4*x3014))+(((-1.0)*x3014))+(((-1.0)*x3015))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3018=IKcos(j2);
IkReal x3019=(cj1*x3018);
IkReal x3020=IKsin(j2);
IkReal x3021=(sj1*x3020);
IkReal x3022=(x3021+x3019);
IkReal x3023=((0.749999650312296)*cj4);
IkReal x3024=(cj5*r21);
IkReal x3025=((0.433012903784321)*x3024);
IkReal x3026=(r20*sj5);
IkReal x3027=((0.433012903784321)*x3026);
IkReal x3028=(cj5*r20*sj4);
IkReal x3029=(r21*sj4*sj5);
IkReal x3030=(cj1*x3020);
IkReal x3031=(cj5*r01);
IkReal x3032=((0.433012903784321)*x3031);
IkReal x3033=(r00*sj5);
IkReal x3034=((0.433012903784321)*x3033);
IkReal x3035=(sj1*x3018);
IkReal x3036=(cj5*r00*sj4);
IkReal x3037=(r01*sj4*sj5);
IkReal x3038=((0.0160344678271334)*r22);
IkReal x3039=((0.00925751294893567)*cj4);
IkReal x3040=((0.0160344678271334)*r02);
IkReal x3041=((0.433012903784321)*sj3);
IkReal x3042=(r02*x3041);
IkReal x3043=((0.866025201892125)*cj3*sj4);
IkReal x3044=((0.749999650312296)*sj3);
IkReal x3045=(cj3*cj4*sj5);
IkReal x3046=((1.0)*cj3*cj4*cj5);
IkReal x3047=((0.500000349687582)*cj3*sj4);
IkReal x3048=((0.250000349687704)*cj4*sj3);
IkReal x3049=((0.500000349687582)*sj3);
IkReal x3050=(r22*x3041);
evalcond[0]=(x3025+x3022+x3027+(((-0.866025201892125)*x3028))+(((0.866025201892125)*x3029))+(((-1.0)*cj4*x3027))+(((-1.0)*r22*x3023))+(((-1.0)*cj4*x3025))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-0.866025201892125)*x3036))+(((-1.0)*r02*x3023))+(((-1.0)*cj4*x3034))+(((0.866025201892125)*x3037))+(((-1.0)*cj4*x3032))+(((-1.0)*x3035))+(((-1.0)*(0.250000349687704)*r02))+x3034+x3032+x3030);
evalcond[2]=((((-0.27144)*x3021))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x3019))+((x3024*x3039))+(((-1.0)*x3038))+((cj4*x3038))+(((0.29)*cj1))+(((0.0185150129489311)*x3028))+(((0.0648043305514941)*x3026))+(((0.0648043305514941)*x3024))+(((-0.0185150129489311)*x3029))+((x3026*x3039)));
evalcond[3]=((((-1.0)*(1.0)*px))+((cj4*x3040))+(((-1.0)*(0.29)*sj1))+(((0.27144)*x3035))+(((-1.0)*x3040))+((x3031*x3039))+((x3033*x3039))+(((0.0648043305514941)*x3033))+(((0.0648043305514941)*x3031))+(((-0.27144)*x3030))+(((-0.0185150129489311)*x3037))+(((0.0185150129489311)*x3036)));
evalcond[4]=(x3022+(((-1.0)*x3037*x3049))+((cj4*x3042))+(((-1.0)*r00*x3046))+((x3033*x3047))+((x3036*x3049))+((x3031*x3048))+(((-1.0)*x3042))+((x3031*x3047))+((x3033*x3048))+((r01*x3045))+((r02*x3043))+((x3033*x3044))+((x3031*x3044)));
evalcond[5]=(((x3024*x3044))+((cj4*x3050))+((r21*x3045))+((x3024*x3047))+((r22*x3043))+(((-1.0)*x3050))+((x3026*x3048))+((x3026*x3044))+((x3026*x3047))+((x3024*x3048))+((x3028*x3049))+(((-1.0)*r20*x3046))+(((-1.0)*x3030))+x3035+(((-1.0)*x3029*x3049)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3051=((0.250000349687704)*cj1);
IkReal x3052=((0.250000349687704)*sj1);
IkReal x3053=((0.749999650312296)*cj1*cj4);
IkReal x3054=((0.433012903784321)*cj1*cj5);
IkReal x3055=(r01*x3054);
IkReal x3056=((0.433012903784321)*cj1*sj5);
IkReal x3057=(r00*x3056);
IkReal x3058=((0.749999650312296)*cj4*sj1);
IkReal x3059=((0.433012903784321)*cj5*sj1);
IkReal x3060=(r21*x3059);
IkReal x3061=((0.433012903784321)*sj1*sj5);
IkReal x3062=(r20*x3061);
IkReal x3063=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3064=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3065=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3066=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3067=(r21*x3054);
IkReal x3068=(r20*x3056);
IkReal x3069=(r01*x3059);
IkReal x3070=(r00*x3061);
if( IKabs((((cj4*x3060))+(((-1.0)*cj4*x3057))+(((-1.0)*r02*x3053))+(((-1.0)*cj4*x3055))+(((-1.0)*r21*x3066))+(((-1.0)*x3060))+((r22*x3058))+((r22*x3052))+((cj4*x3062))+(((-1.0)*r02*x3051))+((r20*x3065))+(((-1.0)*x3062))+((r01*x3064))+(((-1.0)*r00*x3063))+x3057+x3055)) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r02*x3058))+(((-1.0)*x3069))+(((-1.0)*r21*x3064))+((cj4*x3068))+(((-1.0)*x3067))+((r22*x3051))+((r22*x3053))+((r00*x3065))+(((-1.0)*x3068))+((r20*x3063))+(((-1.0)*r01*x3066))+((cj4*x3070))+(((-1.0)*x3070))+((cj4*x3069))+((cj4*x3067))+((r02*x3052)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x3060))+(((-1.0)*cj4*x3057))+(((-1.0)*r02*x3053))+(((-1.0)*cj4*x3055))+(((-1.0)*r21*x3066))+(((-1.0)*x3060))+((r22*x3058))+((r22*x3052))+((cj4*x3062))+(((-1.0)*r02*x3051))+((r20*x3065))+(((-1.0)*x3062))+((r01*x3064))+(((-1.0)*r00*x3063))+x3057+x3055))+IKsqr((((r02*x3058))+(((-1.0)*x3069))+(((-1.0)*r21*x3064))+((cj4*x3068))+(((-1.0)*x3067))+((r22*x3051))+((r22*x3053))+((r00*x3065))+(((-1.0)*x3068))+((r20*x3063))+(((-1.0)*r01*x3066))+((cj4*x3070))+(((-1.0)*x3070))+((cj4*x3069))+((cj4*x3067))+((r02*x3052))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x3060))+(((-1.0)*cj4*x3057))+(((-1.0)*r02*x3053))+(((-1.0)*cj4*x3055))+(((-1.0)*r21*x3066))+(((-1.0)*x3060))+((r22*x3058))+((r22*x3052))+((cj4*x3062))+(((-1.0)*r02*x3051))+((r20*x3065))+(((-1.0)*x3062))+((r01*x3064))+(((-1.0)*r00*x3063))+x3057+x3055), (((r02*x3058))+(((-1.0)*x3069))+(((-1.0)*r21*x3064))+((cj4*x3068))+(((-1.0)*x3067))+((r22*x3051))+((r22*x3053))+((r00*x3065))+(((-1.0)*x3068))+((r20*x3063))+(((-1.0)*r01*x3066))+((cj4*x3070))+(((-1.0)*x3070))+((cj4*x3069))+((cj4*x3067))+((r02*x3052))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3071=IKcos(j2);
IkReal x3072=(cj1*x3071);
IkReal x3073=((0.749999650312296)*cj4);
IkReal x3074=(cj5*r21);
IkReal x3075=((0.433012903784321)*x3074);
IkReal x3076=(r20*sj5);
IkReal x3077=((0.433012903784321)*x3076);
IkReal x3078=IKsin(j2);
IkReal x3079=(sj1*x3078);
IkReal x3080=(cj5*r20*sj4);
IkReal x3081=(r21*sj4*sj5);
IkReal x3082=(sj1*x3071);
IkReal x3083=(cj1*x3078);
IkReal x3084=((((-1.0)*x3083))+x3082);
IkReal x3085=(cj5*r01);
IkReal x3086=((0.433012903784321)*x3085);
IkReal x3087=(r00*sj5);
IkReal x3088=((0.433012903784321)*x3087);
IkReal x3089=(cj5*r00*sj4);
IkReal x3090=(r01*sj4*sj5);
IkReal x3091=((0.0160344678271334)*r22);
IkReal x3092=((0.00925751294893567)*cj4);
IkReal x3093=((0.0160344678271334)*r02);
IkReal x3094=((0.433012903784321)*sj3);
IkReal x3095=(r22*x3094);
IkReal x3096=((0.866025201892125)*cj3*sj4);
IkReal x3097=((0.749999650312296)*sj3);
IkReal x3098=(cj3*cj4*sj5);
IkReal x3099=((1.0)*cj3*cj4*cj5);
IkReal x3100=((0.500000349687582)*cj3*sj4);
IkReal x3101=((0.250000349687704)*cj4*sj3);
IkReal x3102=((0.500000349687582)*sj3);
IkReal x3103=(r02*x3094);
evalcond[0]=((((0.866025201892125)*x3081))+(((-1.0)*cj4*x3075))+x3075+x3079+x3077+x3072+(((-0.866025201892125)*x3080))+(((-1.0)*cj4*x3077))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x3073)));
evalcond[1]=((((-0.866025201892125)*x3089))+(((-1.0)*cj4*x3088))+(((-1.0)*r02*x3073))+(((0.866025201892125)*x3090))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x3086))+x3088+x3086+x3084);
evalcond[2]=((((0.0648043305514941)*x3076))+((x3076*x3092))+(((-0.27144)*x3072))+(((-1.0)*x3091))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x3081))+(((0.29)*cj1))+(((-0.27144)*x3079))+(((0.0185150129489311)*x3080))+((cj4*x3091))+(((0.0648043305514941)*x3074))+((x3074*x3092)));
evalcond[3]=(((cj4*x3093))+(((-1.0)*(1.0)*px))+(((0.0185150129489311)*x3089))+(((-1.0)*x3093))+(((0.0648043305514941)*x3085))+((x3087*x3092))+(((0.0648043305514941)*x3087))+((x3085*x3092))+(((0.29)*sj1))+(((-0.0185150129489311)*x3090))+(((0.27144)*x3083))+(((-0.27144)*x3082)));
evalcond[4]=(((cj4*x3095))+((x3074*x3100))+((r21*x3098))+((x3080*x3102))+(((-1.0)*x3095))+((x3076*x3100))+((r22*x3096))+((x3076*x3097))+(((-1.0)*r20*x3099))+((x3074*x3097))+(((-1.0)*x3081*x3102))+((x3074*x3101))+((x3076*x3101))+x3084);
evalcond[5]=((((-1.0)*x3079))+((cj4*x3103))+((x3089*x3102))+((x3085*x3100))+((x3087*x3100))+(((-1.0)*x3072))+((r01*x3098))+((x3085*x3097))+((x3085*x3101))+(((-1.0)*x3103))+((r02*x3096))+(((-1.0)*r00*x3099))+((x3087*x3101))+(((-1.0)*x3090*x3102))+((x3087*x3097)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3104=((0.250000349687704)*cj1);
IkReal x3105=((0.250000349687704)*sj1);
IkReal x3106=((0.749999650312296)*cj1*cj4);
IkReal x3107=((0.433012903784321)*cj1*cj5);
IkReal x3108=(r11*x3107);
IkReal x3109=((0.433012903784321)*cj1*sj5);
IkReal x3110=(r10*x3109);
IkReal x3111=((0.749999650312296)*cj4*sj1);
IkReal x3112=((0.433012903784321)*cj5*sj1);
IkReal x3113=(r21*x3112);
IkReal x3114=((0.433012903784321)*sj1*sj5);
IkReal x3115=(r20*x3114);
IkReal x3116=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3117=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3118=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3119=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3120=(r21*x3107);
IkReal x3121=(r20*x3109);
IkReal x3122=(r11*x3112);
IkReal x3123=(r10*x3114);
if( IKabs((((r12*x3106))+((r22*x3105))+((cj4*x3115))+((cj4*x3108))+(((-1.0)*r11*x3117))+((cj4*x3113))+(((-1.0)*x3115))+((r20*x3118))+(((-1.0)*x3113))+((r22*x3111))+((cj4*x3110))+(((-1.0)*x3110))+(((-1.0)*r21*x3119))+(((-1.0)*x3108))+((r12*x3104))+((r10*x3116)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r12*x3105))+(((-1.0)*x3121))+((cj4*x3121))+((r22*x3104))+((r11*x3119))+((r20*x3116))+(((-1.0)*r12*x3111))+x3123+x3122+(((-1.0)*x3120))+((cj4*x3120))+(((-1.0)*r10*x3118))+(((-1.0)*cj4*x3123))+(((-1.0)*cj4*x3122))+(((-1.0)*r21*x3117))+((r22*x3106)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x3106))+((r22*x3105))+((cj4*x3115))+((cj4*x3108))+(((-1.0)*r11*x3117))+((cj4*x3113))+(((-1.0)*x3115))+((r20*x3118))+(((-1.0)*x3113))+((r22*x3111))+((cj4*x3110))+(((-1.0)*x3110))+(((-1.0)*r21*x3119))+(((-1.0)*x3108))+((r12*x3104))+((r10*x3116))))+IKsqr(((((-1.0)*r12*x3105))+(((-1.0)*x3121))+((cj4*x3121))+((r22*x3104))+((r11*x3119))+((r20*x3116))+(((-1.0)*r12*x3111))+x3123+x3122+(((-1.0)*x3120))+((cj4*x3120))+(((-1.0)*r10*x3118))+(((-1.0)*cj4*x3123))+(((-1.0)*cj4*x3122))+(((-1.0)*r21*x3117))+((r22*x3106))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r12*x3106))+((r22*x3105))+((cj4*x3115))+((cj4*x3108))+(((-1.0)*r11*x3117))+((cj4*x3113))+(((-1.0)*x3115))+((r20*x3118))+(((-1.0)*x3113))+((r22*x3111))+((cj4*x3110))+(((-1.0)*x3110))+(((-1.0)*r21*x3119))+(((-1.0)*x3108))+((r12*x3104))+((r10*x3116))), ((((-1.0)*r12*x3105))+(((-1.0)*x3121))+((cj4*x3121))+((r22*x3104))+((r11*x3119))+((r20*x3116))+(((-1.0)*r12*x3111))+x3123+x3122+(((-1.0)*x3120))+((cj4*x3120))+(((-1.0)*r10*x3118))+(((-1.0)*cj4*x3123))+(((-1.0)*cj4*x3122))+(((-1.0)*r21*x3117))+((r22*x3106))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3124=IKcos(j2);
IkReal x3125=(cj1*x3124);
IkReal x3126=IKsin(j2);
IkReal x3127=(sj1*x3126);
IkReal x3128=(x3125+x3127);
IkReal x3129=((0.749999650312296)*cj4);
IkReal x3130=(cj5*r21);
IkReal x3131=((0.433012903784321)*x3130);
IkReal x3132=(r20*sj5);
IkReal x3133=((0.433012903784321)*x3132);
IkReal x3134=(cj5*r20*sj4);
IkReal x3135=(r21*sj4*sj5);
IkReal x3136=(cj1*x3126);
IkReal x3137=(cj5*r11);
IkReal x3138=((0.433012903784321)*x3137);
IkReal x3139=(r10*sj5);
IkReal x3140=((0.433012903784321)*x3139);
IkReal x3141=(sj1*x3124);
IkReal x3142=(cj5*r10*sj4);
IkReal x3143=(r11*sj4*sj5);
IkReal x3144=((0.0160344678271334)*r22);
IkReal x3145=((0.00925751294893567)*cj4);
IkReal x3146=((0.0160344678271334)*r12);
IkReal x3147=((0.433012903784321)*sj3);
IkReal x3148=(r12*x3147);
IkReal x3149=((0.866025201892125)*cj3*sj4);
IkReal x3150=((0.749999650312296)*sj3);
IkReal x3151=(cj3*cj4*sj5);
IkReal x3152=((1.0)*cj3*cj4*cj5);
IkReal x3153=((0.500000349687582)*cj3*sj4);
IkReal x3154=((0.250000349687704)*cj4*sj3);
IkReal x3155=((0.500000349687582)*sj3);
IkReal x3156=(r22*x3147);
evalcond[0]=(x3128+x3133+x3131+(((0.866025201892125)*x3135))+(((-0.866025201892125)*x3134))+(((-1.0)*cj4*x3131))+(((-1.0)*r22*x3129))+(((-1.0)*cj4*x3133))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*cj4*x3138))+(((-1.0)*x3141))+(((0.866025201892125)*x3143))+(((-1.0)*(0.250000349687704)*r12))+(((-0.866025201892125)*x3142))+(((-1.0)*cj4*x3140))+x3138+x3136+(((-1.0)*r12*x3129))+x3140);
evalcond[2]=((((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x3130))+(((0.0185150129489311)*x3134))+(((-1.0)*x3144))+((cj4*x3144))+(((0.29)*cj1))+((x3132*x3145))+(((-0.27144)*x3125))+(((-0.0185150129489311)*x3135))+(((0.0648043305514941)*x3132))+(((-0.27144)*x3127))+((x3130*x3145)));
evalcond[3]=((((-1.0)*x3146))+((cj4*x3146))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((0.0185150129489311)*x3142))+(((-0.27144)*x3136))+(((-0.0185150129489311)*x3143))+(((0.0648043305514941)*x3139))+(((0.0648043305514941)*x3137))+((x3137*x3145))+((x3139*x3145))+(((0.27144)*x3141)));
evalcond[4]=((((-1.0)*r10*x3152))+((x3137*x3153))+((x3137*x3154))+((x3139*x3154))+((x3139*x3153))+(((-1.0)*x3143*x3155))+x3128+((x3137*x3150))+((x3139*x3150))+((cj4*x3148))+((x3142*x3155))+(((-1.0)*x3148))+((r12*x3149))+((r11*x3151)));
evalcond[5]=(((x3130*x3150))+((x3132*x3154))+((r22*x3149))+(((-1.0)*r20*x3152))+((x3132*x3153))+((x3130*x3154))+((r21*x3151))+((x3130*x3153))+(((-1.0)*x3135*x3155))+(((-1.0)*x3156))+((cj4*x3156))+((x3134*x3155))+(((-1.0)*x3136))+((x3132*x3150))+x3141);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3157=((0.250000349687704)*cj1);
IkReal x3158=((0.250000349687704)*sj1);
IkReal x3159=((0.749999650312296)*cj1*cj4);
IkReal x3160=((0.433012903784321)*cj1*cj5);
IkReal x3161=(r11*x3160);
IkReal x3162=((0.433012903784321)*cj1*sj5);
IkReal x3163=(r10*x3162);
IkReal x3164=((0.749999650312296)*cj4*sj1);
IkReal x3165=((0.433012903784321)*cj5*sj1);
IkReal x3166=(r21*x3165);
IkReal x3167=((0.433012903784321)*sj1*sj5);
IkReal x3168=(r20*x3167);
IkReal x3169=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3170=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3171=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3172=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3173=(r21*x3160);
IkReal x3174=(r20*x3162);
IkReal x3175=(r11*x3165);
IkReal x3176=(r10*x3167);
if( IKabs(((((-1.0)*r12*x3159))+x3163+x3161+(((-1.0)*x3168))+(((-1.0)*x3166))+(((-1.0)*r10*x3169))+((cj4*x3168))+(((-1.0)*r21*x3172))+((cj4*x3166))+(((-1.0)*cj4*x3163))+((r11*x3170))+((r22*x3164))+(((-1.0)*cj4*x3161))+((r20*x3171))+((r22*x3158))+(((-1.0)*r12*x3157)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3169))+(((-1.0)*x3173))+((r22*x3157))+(((-1.0)*x3176))+((cj4*x3175))+((r12*x3158))+(((-1.0)*x3174))+(((-1.0)*r21*x3170))+((cj4*x3173))+((cj4*x3176))+((r10*x3171))+((cj4*x3174))+(((-1.0)*x3175))+(((-1.0)*r11*x3172))+((r12*x3164))+((r22*x3159)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r12*x3159))+x3163+x3161+(((-1.0)*x3168))+(((-1.0)*x3166))+(((-1.0)*r10*x3169))+((cj4*x3168))+(((-1.0)*r21*x3172))+((cj4*x3166))+(((-1.0)*cj4*x3163))+((r11*x3170))+((r22*x3164))+(((-1.0)*cj4*x3161))+((r20*x3171))+((r22*x3158))+(((-1.0)*r12*x3157))))+IKsqr((((r20*x3169))+(((-1.0)*x3173))+((r22*x3157))+(((-1.0)*x3176))+((cj4*x3175))+((r12*x3158))+(((-1.0)*x3174))+(((-1.0)*r21*x3170))+((cj4*x3173))+((cj4*x3176))+((r10*x3171))+((cj4*x3174))+(((-1.0)*x3175))+(((-1.0)*r11*x3172))+((r12*x3164))+((r22*x3159))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r12*x3159))+x3163+x3161+(((-1.0)*x3168))+(((-1.0)*x3166))+(((-1.0)*r10*x3169))+((cj4*x3168))+(((-1.0)*r21*x3172))+((cj4*x3166))+(((-1.0)*cj4*x3163))+((r11*x3170))+((r22*x3164))+(((-1.0)*cj4*x3161))+((r20*x3171))+((r22*x3158))+(((-1.0)*r12*x3157))), (((r20*x3169))+(((-1.0)*x3173))+((r22*x3157))+(((-1.0)*x3176))+((cj4*x3175))+((r12*x3158))+(((-1.0)*x3174))+(((-1.0)*r21*x3170))+((cj4*x3173))+((cj4*x3176))+((r10*x3171))+((cj4*x3174))+(((-1.0)*x3175))+(((-1.0)*r11*x3172))+((r12*x3164))+((r22*x3159))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3177=IKcos(j2);
IkReal x3178=(cj1*x3177);
IkReal x3179=((0.749999650312296)*cj4);
IkReal x3180=(cj5*r21);
IkReal x3181=((0.433012903784321)*x3180);
IkReal x3182=(r20*sj5);
IkReal x3183=((0.433012903784321)*x3182);
IkReal x3184=IKsin(j2);
IkReal x3185=(sj1*x3184);
IkReal x3186=(cj5*r20*sj4);
IkReal x3187=(r21*sj4*sj5);
IkReal x3188=(sj1*x3177);
IkReal x3189=(cj1*x3184);
IkReal x3190=(x3188+(((-1.0)*x3189)));
IkReal x3191=(cj5*r11);
IkReal x3192=((0.433012903784321)*x3191);
IkReal x3193=(r10*sj5);
IkReal x3194=((0.433012903784321)*x3193);
IkReal x3195=(cj5*r10*sj4);
IkReal x3196=(r11*sj4*sj5);
IkReal x3197=((0.0160344678271334)*r22);
IkReal x3198=((0.00925751294893567)*cj4);
IkReal x3199=((0.0160344678271334)*r12);
IkReal x3200=((0.433012903784321)*sj3);
IkReal x3201=(r22*x3200);
IkReal x3202=((0.866025201892125)*cj3*sj4);
IkReal x3203=((0.749999650312296)*sj3);
IkReal x3204=(cj3*cj4*sj5);
IkReal x3205=((1.0)*cj3*cj4*cj5);
IkReal x3206=((0.500000349687582)*cj3*sj4);
IkReal x3207=((0.250000349687704)*cj4*sj3);
IkReal x3208=((0.500000349687582)*sj3);
IkReal x3209=(r12*x3200);
evalcond[0]=(x3181+x3183+x3185+x3178+(((-1.0)*cj4*x3181))+(((0.866025201892125)*x3187))+(((-0.866025201892125)*x3186))+(((-1.0)*cj4*x3183))+(((-1.0)*r22*x3179))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=(x3194+x3190+x3192+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x3196))+(((-1.0)*cj4*x3194))+(((-0.866025201892125)*x3195))+(((-1.0)*cj4*x3192))+(((-1.0)*r12*x3179)));
evalcond[2]=((((0.0648043305514941)*x3180))+(((-1.0)*(1.0)*pz))+(((0.0185150129489311)*x3186))+((x3180*x3198))+(((0.0648043305514941)*x3182))+((cj4*x3197))+(((-0.0185150129489311)*x3187))+(((0.29)*cj1))+(((-0.27144)*x3178))+(((-1.0)*x3197))+((x3182*x3198))+(((-0.27144)*x3185)));
evalcond[3]=(((x3193*x3198))+(((0.0648043305514941)*x3193))+(((-1.0)*(1.0)*py))+(((-0.27144)*x3188))+(((0.0648043305514941)*x3191))+(((-0.0185150129489311)*x3196))+(((0.27144)*x3189))+(((0.0185150129489311)*x3195))+((x3191*x3198))+(((-1.0)*x3199))+(((0.29)*sj1))+((cj4*x3199)));
evalcond[4]=((((-1.0)*x3187*x3208))+((x3180*x3206))+((x3180*x3207))+((x3182*x3203))+(((-1.0)*r20*x3205))+x3190+((x3186*x3208))+((r21*x3204))+((x3180*x3203))+((x3182*x3206))+((x3182*x3207))+((r22*x3202))+(((-1.0)*x3201))+((cj4*x3201)));
evalcond[5]=((((-1.0)*x3185))+(((-1.0)*x3196*x3208))+(((-1.0)*r10*x3205))+((r11*x3204))+(((-1.0)*x3178))+((x3191*x3206))+((x3193*x3207))+((x3191*x3203))+((x3191*x3207))+((r12*x3202))+((x3193*x3203))+((x3193*x3206))+(((-1.0)*x3209))+((cj4*x3209))+((x3195*x3208)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3210=((0.250000349687704)*r12);
IkReal x3211=((0.749999650312296)*cj4*r12);
IkReal x3212=((0.433012903784321)*cj1);
IkReal x3213=(cj5*r11);
IkReal x3214=(x3212*x3213);
IkReal x3215=(r10*sj5);
IkReal x3216=(x3212*x3215);
IkReal x3217=((0.250000349687704)*r22*sj0);
IkReal x3218=(cj5*r10);
IkReal x3219=((0.866025201892125)*cj1*sj4);
IkReal x3220=(r11*sj5);
IkReal x3221=((0.749999650312296)*cj4*r22*sj0);
IkReal x3222=(cj5*r21);
IkReal x3223=((0.433012903784321)*sj0*sj1);
IkReal x3224=(x3222*x3223);
IkReal x3225=(r20*sj5);
IkReal x3226=(x3223*x3225);
IkReal x3227=(cj5*r20);
IkReal x3228=((0.866025201892125)*sj0*sj1*sj4);
IkReal x3229=(r21*sj5);
IkReal x3230=((0.433012903784321)*sj1);
IkReal x3231=(x3213*x3230);
IkReal x3232=(x3215*x3230);
IkReal x3233=((0.433012903784321)*cj1*sj0);
IkReal x3234=(x3222*x3233);
IkReal x3235=(x3225*x3233);
IkReal x3236=((0.866025201892125)*sj1*sj4);
IkReal x3237=((0.866025201892125)*cj1*sj0*sj4);
CheckValue<IkReal> x3238 = IKatan2WithCheck(IkReal((((cj4*x3214))+((sj1*x3221))+(((-1.0)*x3226))+((cj4*x3226))+(((-1.0)*x3219*x3220))+((cj1*x3210))+(((-1.0)*x3216))+((cj1*x3211))+((cj4*x3224))+(((-1.0)*x3224))+(((-1.0)*x3228*x3229))+(((-1.0)*x3214))+((sj1*x3217))+((x3218*x3219))+((cj4*x3216))+((x3227*x3228)))),IkReal((((cj1*x3221))+(((-1.0)*sj1*x3210))+x3231+x3232+(((-1.0)*cj4*x3231))+((cj1*x3217))+((x3220*x3236))+(((-1.0)*cj4*x3232))+((cj4*x3234))+(((-1.0)*x3229*x3237))+((x3227*x3237))+(((-1.0)*sj1*x3211))+((cj4*x3235))+(((-1.0)*x3234))+(((-1.0)*x3235))+(((-1.0)*x3218*x3236)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3238.valid){
continue;
}
CheckValue<IkReal> x3239=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3239.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3238.value)+(((1.5707963267949)*(x3239.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3240=IKcos(j2);
IkReal x3241=(cj1*x3240);
IkReal x3242=((0.749999650312296)*cj4);
IkReal x3243=(cj5*r21);
IkReal x3244=((0.433012903784321)*x3243);
IkReal x3245=(r20*sj5);
IkReal x3246=((0.433012903784321)*x3245);
IkReal x3247=IKsin(j2);
IkReal x3248=(sj1*x3247);
IkReal x3249=(cj5*r20*sj4);
IkReal x3250=(r21*sj4*sj5);
IkReal x3251=(cj5*r01);
IkReal x3252=((0.433012903784321)*x3251);
IkReal x3253=(r00*sj5);
IkReal x3254=((0.433012903784321)*x3253);
IkReal x3255=(cj1*x3247);
IkReal x3256=(cj0*x3255);
IkReal x3257=(cj5*r00*sj4);
IkReal x3258=(r01*sj4*sj5);
IkReal x3259=(cj0*sj1*x3240);
IkReal x3260=(cj5*r11);
IkReal x3261=((0.433012903784321)*x3260);
IkReal x3262=(r10*sj5);
IkReal x3263=((0.433012903784321)*x3262);
IkReal x3264=(sj0*x3255);
IkReal x3265=(cj5*r10*sj4);
IkReal x3266=(r11*sj4*sj5);
IkReal x3267=(sj0*sj1*x3240);
IkReal x3268=((0.0160344678271334)*r22);
IkReal x3269=((0.00925751294893567)*cj4);
IkReal x3270=((0.0160344678271334)*r02);
IkReal x3271=((0.29)*sj1);
IkReal x3272=((0.0160344678271334)*r12);
IkReal x3273=((0.433012903784321)*sj3);
IkReal x3274=(r22*x3273);
IkReal x3275=((0.866025201892125)*cj3*sj4);
IkReal x3276=((0.749999650312296)*sj3);
IkReal x3277=(cj3*cj4*sj5);
IkReal x3278=((1.0)*cj3*cj4*cj5);
IkReal x3279=((0.500000349687582)*cj3*sj4);
IkReal x3280=((0.250000349687704)*cj4*sj3);
IkReal x3281=((0.500000349687582)*sj3);
IkReal x3282=(r02*x3273);
IkReal x3283=(r12*x3273);
evalcond[0]=((((0.866025201892125)*x3250))+(((-1.0)*r22*x3242))+(((-0.866025201892125)*x3249))+(((-1.0)*cj4*x3244))+(((-1.0)*cj4*x3246))+x3244+x3246+x3241+x3248+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*cj4*x3252))+x3252+x3256+x3254+(((-0.866025201892125)*x3257))+(((-1.0)*r02*x3242))+(((0.866025201892125)*x3258))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*x3259))+(((-1.0)*cj4*x3254)));
evalcond[2]=((((-1.0)*cj4*x3263))+(((-0.866025201892125)*x3265))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x3242))+(((-1.0)*cj4*x3261))+x3264+x3263+x3261+(((0.866025201892125)*x3266))+(((-1.0)*x3267)));
evalcond[3]=(((x3243*x3269))+(((-1.0)*x3268))+(((0.0648043305514941)*x3243))+((cj4*x3268))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x3250))+((x3245*x3269))+(((0.0648043305514941)*x3245))+(((0.29)*cj1))+(((0.0185150129489311)*x3249))+(((-0.27144)*x3241))+(((-0.27144)*x3248)));
evalcond[4]=((((-1.0)*(1.0)*px))+(((0.0098)*sj0))+(((-1.0)*cj0*x3271))+(((0.0185150129489311)*x3257))+(((-1.0)*x3270))+(((0.0648043305514941)*x3253))+(((-0.27144)*x3256))+((x3251*x3269))+(((-0.0185150129489311)*x3258))+(((0.27144)*x3259))+(((0.0648043305514941)*x3251))+((cj4*x3270))+((x3253*x3269)));
evalcond[5]=((((-1.0)*(1.0)*py))+((x3260*x3269))+(((0.27144)*x3267))+(((-1.0)*sj0*x3271))+((x3262*x3269))+(((0.0185150129489311)*x3265))+(((0.0648043305514941)*x3260))+((cj4*x3272))+(((-1.0)*x3272))+(((0.0648043305514941)*x3262))+(((-0.0185150129489311)*x3266))+(((-1.0)*(0.0098)*cj0))+(((-0.27144)*x3264)));
evalcond[6]=(((x3243*x3279))+((x3245*x3280))+((x3249*x3281))+((r22*x3275))+(((-1.0)*x3255))+(((-1.0)*r20*x3278))+((x3245*x3279))+(((-1.0)*x3250*x3281))+((x3243*x3276))+((x3243*x3280))+((r21*x3277))+((sj1*x3240))+(((-1.0)*x3274))+((cj4*x3274))+((x3245*x3276)));
evalcond[7]=(((x3253*x3276))+((x3257*x3281))+(((-1.0)*x3258*x3281))+((x3251*x3276))+((r01*x3277))+((cj0*x3248))+((r02*x3275))+(((-1.0)*x3282))+((x3253*x3279))+((x3253*x3280))+((cj0*x3241))+(((-1.0)*r00*x3278))+((x3251*x3280))+((x3251*x3279))+((cj4*x3282)));
evalcond[8]=(((x3260*x3279))+((x3262*x3279))+((cj4*x3283))+(((-1.0)*x3266*x3281))+((x3262*x3280))+((x3262*x3276))+((sj0*x3248))+(((-1.0)*r10*x3278))+((r12*x3275))+((r11*x3277))+((x3260*x3280))+((x3260*x3276))+(((-1.0)*x3283))+((x3265*x3281))+((sj0*x3241)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3284=((0.250000349687704)*r02);
IkReal x3285=((0.250000349687704)*cj0*r22);
IkReal x3286=((0.749999650312296)*cj4*r02);
IkReal x3287=((0.433012903784321)*cj1);
IkReal x3288=(cj5*r01);
IkReal x3289=(x3287*x3288);
IkReal x3290=(r00*sj5);
IkReal x3291=(x3287*x3290);
IkReal x3292=((0.749999650312296)*cj0*cj4*r22);
IkReal x3293=(cj5*r21);
IkReal x3294=((0.433012903784321)*cj0*sj1);
IkReal x3295=(x3293*x3294);
IkReal x3296=(r20*sj5);
IkReal x3297=(x3294*x3296);
IkReal x3298=(cj5*r00);
IkReal x3299=((0.866025201892125)*cj1*sj4);
IkReal x3300=(r01*sj5);
IkReal x3301=(cj5*r20);
IkReal x3302=((0.866025201892125)*cj0*sj1*sj4);
IkReal x3303=(r21*sj5);
IkReal x3304=((0.433012903784321)*sj1);
IkReal x3305=(x3288*x3304);
IkReal x3306=(x3290*x3304);
IkReal x3307=((0.433012903784321)*cj0*cj1);
IkReal x3308=(x3293*x3307);
IkReal x3309=(x3296*x3307);
IkReal x3310=((0.866025201892125)*sj1*sj4);
IkReal x3311=((0.866025201892125)*cj0*cj1*sj4);
CheckValue<IkReal> x3312 = IKatan2WithCheck(IkReal(((((-1.0)*x3302*x3303))+(((-1.0)*x3289))+(((-1.0)*x3295))+((x3301*x3302))+((cj1*x3284))+(((-1.0)*x3297))+((cj4*x3289))+(((-1.0)*x3291))+((cj1*x3286))+((cj4*x3295))+((sj1*x3285))+((cj4*x3297))+((x3298*x3299))+(((-1.0)*x3299*x3300))+((cj4*x3291))+((sj1*x3292)))),IkReal(((((-1.0)*x3309))+((x3300*x3310))+((cj4*x3309))+(((-1.0)*x3298*x3310))+(((-1.0)*x3303*x3311))+((cj1*x3285))+((cj1*x3292))+(((-1.0)*sj1*x3284))+(((-1.0)*sj1*x3286))+x3305+x3306+(((-1.0)*cj4*x3306))+(((-1.0)*x3308))+(((-1.0)*cj4*x3305))+((x3301*x3311))+((cj4*x3308)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3312.valid){
continue;
}
CheckValue<IkReal> x3313=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3313.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3312.value)+(((1.5707963267949)*(x3313.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3314=IKcos(j2);
IkReal x3315=(cj1*x3314);
IkReal x3316=((0.749999650312296)*cj4);
IkReal x3317=(cj5*r21);
IkReal x3318=((0.433012903784321)*x3317);
IkReal x3319=(r20*sj5);
IkReal x3320=((0.433012903784321)*x3319);
IkReal x3321=IKsin(j2);
IkReal x3322=(sj1*x3321);
IkReal x3323=(cj5*r20*sj4);
IkReal x3324=(r21*sj4*sj5);
IkReal x3325=(cj5*r01);
IkReal x3326=((0.433012903784321)*x3325);
IkReal x3327=(r00*sj5);
IkReal x3328=((0.433012903784321)*x3327);
IkReal x3329=(cj1*x3321);
IkReal x3330=(cj0*x3329);
IkReal x3331=(cj5*r00*sj4);
IkReal x3332=(r01*sj4*sj5);
IkReal x3333=(cj0*sj1*x3314);
IkReal x3334=(cj5*r11);
IkReal x3335=((0.433012903784321)*x3334);
IkReal x3336=(r10*sj5);
IkReal x3337=((0.433012903784321)*x3336);
IkReal x3338=(sj0*x3329);
IkReal x3339=(cj5*r10*sj4);
IkReal x3340=(r11*sj4*sj5);
IkReal x3341=(sj0*sj1*x3314);
IkReal x3342=((0.0160344678271334)*r22);
IkReal x3343=((0.00925751294893567)*cj4);
IkReal x3344=((0.0160344678271334)*r02);
IkReal x3345=((0.29)*sj1);
IkReal x3346=((0.0160344678271334)*r12);
IkReal x3347=((0.433012903784321)*sj3);
IkReal x3348=(r22*x3347);
IkReal x3349=((0.866025201892125)*cj3*sj4);
IkReal x3350=((0.749999650312296)*sj3);
IkReal x3351=(cj3*cj4*sj5);
IkReal x3352=((1.0)*cj3*cj4*cj5);
IkReal x3353=((0.500000349687582)*cj3*sj4);
IkReal x3354=((0.250000349687704)*cj4*sj3);
IkReal x3355=((0.500000349687582)*sj3);
IkReal x3356=(r02*x3347);
IkReal x3357=(r12*x3347);
evalcond[0]=(x3320+x3322+(((-1.0)*cj4*x3320))+(((0.866025201892125)*x3324))+x3315+x3318+(((-0.866025201892125)*x3323))+(((-1.0)*cj4*x3318))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x3316)));
evalcond[1]=((((0.866025201892125)*x3332))+x3328+x3326+(((-0.866025201892125)*x3331))+(((-1.0)*r02*x3316))+(((-1.0)*x3333))+x3330+(((-1.0)*cj4*x3328))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x3326)));
evalcond[2]=((((-0.866025201892125)*x3339))+(((-1.0)*cj4*x3335))+(((-1.0)*r12*x3316))+(((-1.0)*x3341))+(((-1.0)*cj4*x3337))+(((-1.0)*(0.250000349687704)*r12))+x3335+x3337+x3338+(((0.866025201892125)*x3340)));
evalcond[3]=((((0.0648043305514941)*x3317))+((x3319*x3343))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x3324))+(((0.0185150129489311)*x3323))+(((0.29)*cj1))+((x3317*x3343))+((cj4*x3342))+(((-0.27144)*x3315))+(((-1.0)*x3342))+(((0.0648043305514941)*x3319))+(((-0.27144)*x3322)));
evalcond[4]=((((0.27144)*x3333))+(((0.0648043305514941)*x3327))+(((-1.0)*(1.0)*px))+(((-0.0185150129489311)*x3332))+(((0.0098)*sj0))+(((0.0185150129489311)*x3331))+((cj4*x3344))+(((-1.0)*x3344))+(((0.0648043305514941)*x3325))+((x3325*x3343))+(((-1.0)*cj0*x3345))+((x3327*x3343))+(((-0.27144)*x3330)));
evalcond[5]=((((0.0648043305514941)*x3336))+(((-1.0)*(1.0)*py))+(((0.27144)*x3341))+((cj4*x3346))+(((-0.0185150129489311)*x3340))+(((-1.0)*x3346))+(((0.0648043305514941)*x3334))+(((-1.0)*sj0*x3345))+((x3336*x3343))+((x3334*x3343))+(((-0.27144)*x3338))+(((-1.0)*(0.0098)*cj0))+(((0.0185150129489311)*x3339)));
evalcond[6]=(((cj4*x3348))+(((-1.0)*x3348))+((x3317*x3350))+((x3319*x3354))+((r22*x3349))+((sj1*x3314))+((x3323*x3355))+((r21*x3351))+((x3317*x3354))+((x3317*x3353))+(((-1.0)*r20*x3352))+((x3319*x3350))+(((-1.0)*x3324*x3355))+((x3319*x3353))+(((-1.0)*x3329)));
evalcond[7]=(((cj0*x3322))+(((-1.0)*x3332*x3355))+((cj0*x3315))+((x3331*x3355))+((x3327*x3350))+((r01*x3351))+((x3327*x3353))+(((-1.0)*x3356))+((x3325*x3353))+((x3325*x3354))+((cj4*x3356))+(((-1.0)*r00*x3352))+((x3327*x3354))+((r02*x3349))+((x3325*x3350)));
evalcond[8]=(((r11*x3351))+((sj0*x3315))+((sj0*x3322))+((r12*x3349))+((x3334*x3354))+((x3336*x3350))+(((-1.0)*x3357))+((cj4*x3357))+((x3334*x3353))+((x3339*x3355))+((x3334*x3350))+(((-1.0)*x3340*x3355))+((x3336*x3353))+(((-1.0)*r10*x3352))+((x3336*x3354)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3358=((0.433012903784321)*sj5);
IkReal x3359=((0.866025201892125)*sj4);
IkReal x3360=((0.433012903784321)*cj5);
IkReal x3361=((0.433012903784321)*r22*sj0);
IkReal x3362=((0.749999650312296)*sj0);
IkReal x3363=(cj5*r21);
IkReal x3364=(r20*sj5);
IkReal x3365=((0.250000349687704)*cj4*sj0);
IkReal x3366=(cj5*r20);
IkReal x3367=((0.500000349687582)*sj0*sj4);
IkReal x3368=(r21*sj5);
CheckValue<IkReal> x3369=IKPowWithIntegerCheck(IKsign((((r12*(((-0.250000349687704)+(((-1.0)*(0.749999650312296)*cj4))))))+((r11*(((((-1.0)*cj4*x3360))+((sj5*x3359))+x3360))))+((r10*((x3358+(((-1.0)*cj5*x3359))+(((-1.0)*cj4*x3358)))))))),-1);
if(!x3369.valid){
continue;
}
CheckValue<IkReal> x3370 = IKatan2WithCheck(IkReal(((((-1.0)*cj4*x3361))+((x3367*x3368))+x3361+(((-1.0)*x3366*x3367))+(((-1.0)*x3362*x3363))+(((-1.0)*x3362*x3364))+(((-1.0)*x3363*x3365))+(((-1.0)*x3364*x3365)))),IkReal((((cj4*sj0*x3366))+(((-1.0)*r22*sj0*x3359))+(((-1.0)*x3364*x3367))+(((-1.0)*x3363*x3367))+(((-1.0)*cj4*sj0*x3368)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3370.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3369.value)))+(x3370.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3371=IKcos(j3);
IkReal x3372=((0.433012903784321)*x3371);
IkReal x3373=(r22*x3372);
IkReal x3374=((0.749999650312296)*cj5*x3371);
IkReal x3375=((0.749999650312296)*sj5*x3371);
IkReal x3376=IKsin(j3);
IkReal x3377=((0.866025201892125)*sj4*x3376);
IkReal x3378=(cj4*sj5*x3376);
IkReal x3379=((1.0)*cj4*cj5*x3376);
IkReal x3380=((0.250000349687704)*cj4*cj5*x3371);
IkReal x3381=((0.250000349687704)*cj4*sj5*x3371);
IkReal x3382=((0.500000349687582)*cj5*sj4*x3371);
IkReal x3383=((0.500000349687582)*cj5*sj4*x3376);
IkReal x3384=((0.500000349687582)*sj4*sj5*x3376);
IkReal x3385=((0.500000349687582)*sj4*sj5*x3371);
IkReal x3386=(r12*x3372);
IkReal x3387=(r02*x3372);
evalcond[0]=((((-1.0)*r21*x3374))+((r21*x3385))+(((-1.0)*r20*x3375))+((r22*x3377))+((r20*x3384))+((r21*x3378))+((r21*x3383))+(((-1.0)*r20*x3381))+(((-1.0)*cj4*x3373))+(((-1.0)*r20*x3382))+(((-1.0)*r21*x3380))+x3373+(((-1.0)*r20*x3379)));
evalcond[1]=((((-1.0)*r10*x3382))+(((-1.0)*r10*x3381))+((r11*x3378))+x3386+(((-1.0)*cj4*x3386))+((r11*x3383))+(((-1.0)*r10*x3379))+((r11*x3385))+cj0+((r12*x3377))+((r10*x3384))+(((-1.0)*r11*x3374))+(((-1.0)*r11*x3380))+(((-1.0)*r10*x3375)));
evalcond[2]=(((r02*x3377))+(((-1.0)*r01*x3380))+((r01*x3383))+(((-1.0)*(1.0)*sj0))+(((-1.0)*r01*x3374))+(((-1.0)*cj4*x3387))+(((-1.0)*r00*x3375))+((r01*x3378))+x3387+(((-1.0)*r00*x3381))+((r00*x3384))+(((-1.0)*r00*x3379))+(((-1.0)*r00*x3382))+((r01*x3385)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3388=((0.646708404322884)*cj4);
IkReal x3389=((0.62876328674038)*cj5);
IkReal x3390=((0.62876328674038)*sj5);
IkReal x3391=((0.373377619497519)*cj4*cj5);
IkReal x3392=((0.373377619497519)*cj4*sj5);
IkReal x3393=((0.746754716733336)*cj5*sj4);
IkReal x3394=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r10*x3393))+(((-1.0)*(0.289291595677116)*r12))+((r10*x3390))+(((-1.0)*r10*x3392))+(((-1.0)*r11*x3391))+((r11*x3389))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r12*x3388))+((r11*x3394)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x3389))+(((3.44827586206897)*pz))+((r22*x3388))+(((-1.0)*r20*x3390))+(((-1.0)*r21*x3394))+((r20*x3393))+(((0.289291595677116)*r22))+((r21*x3391))+((r20*x3392)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x3393))+(((-1.0)*(0.289291595677116)*r12))+((r10*x3390))+(((-1.0)*r10*x3392))+(((-1.0)*r11*x3391))+((r11*x3389))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r12*x3388))+((r11*x3394))))+IKsqr(((((-1.0)*r21*x3389))+(((3.44827586206897)*pz))+((r22*x3388))+(((-1.0)*r20*x3390))+(((-1.0)*r21*x3394))+((r20*x3393))+(((0.289291595677116)*r22))+((r21*x3391))+((r20*x3392))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r10*x3393))+(((-1.0)*(0.289291595677116)*r12))+((r10*x3390))+(((-1.0)*r10*x3392))+(((-1.0)*r11*x3391))+((r11*x3389))+(((-1.0)*(3.44827586206897)*py))+(((-1.0)*r12*x3388))+((r11*x3394))), ((((-1.0)*r21*x3389))+(((3.44827586206897)*pz))+((r22*x3388))+(((-1.0)*r20*x3390))+(((-1.0)*r21*x3394))+((r20*x3393))+(((0.289291595677116)*r22))+((r21*x3391))+((r20*x3392))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3395=((0.187545437253636)*cj4);
IkReal x3396=(cj5*r21);
IkReal x3397=(r20*sj5);
IkReal x3398=((0.29)*(IKcos(j1)));
IkReal x3399=(cj4*cj5*r21);
IkReal x3400=(cj4*r20*sj5);
IkReal x3401=(cj5*r20*sj4);
IkReal x3402=(r21*sj4*sj5);
IkReal x3403=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*py)));
IkReal x3404=(cj5*r11);
IkReal x3405=(r10*sj5);
IkReal x3406=(cj4*cj5*r11);
IkReal x3407=(cj4*r10*sj5);
IkReal x3408=(cj5*r10*sj4);
IkReal x3409=(r11*sj4*sj5);
IkReal x3410=((0.0160344678271334)*r12);
IkReal x3411=((0.117537022603216)*sj3);
IkReal x3412=(r22*x3411);
IkReal x3413=((0.235073880801598)*cj3*sj4);
IkReal x3414=((0.20357990508077)*sj3);
IkReal x3415=((0.27144)*cj3*cj4*cj5);
IkReal x3416=((0.27144)*cj3*cj4*sj5);
IkReal x3417=((0.135720094919197)*cj3*sj4);
IkReal x3418=((0.0678600949192303)*sj3);
IkReal x3419=((0.135720094919197)*sj3);
IkReal x3420=((0.0160344678271334)*r22);
IkReal x3421=(r12*x3411);
evalcond[0]=((((-1.0)*x3398))+(((-0.18234135315471)*x3396))+(((0.10827950965428)*x3399))+(((0.216558867852667)*x3401))+pz+(((-0.18234135315471)*x3397))+(((-0.216558867852667)*x3402))+(((0.10827950965428)*x3400))+(((0.0838945627463637)*r22))+((r22*x3395)));
evalcond[1]=((((-1.0)*(0.0838945627463637)*r12))+(((-0.216558867852667)*x3408))+x3403+(((-0.10827950965428)*x3406))+(((0.18234135315471)*x3405))+(((-0.10827950965428)*x3407))+(((0.216558867852667)*x3409))+(((0.18234135315471)*x3404))+(((-1.0)*r12*x3395)));
evalcond[2]=((((-1.0)*x3397*x3417))+(((-1.0)*x3396*x3414))+(((0.0648043305514941)*x3405))+(((0.0648043305514941)*x3404))+((r20*x3415))+(((-1.0)*x3410))+(((0.00925751294893567)*x3406))+(((-0.0185150129489311)*x3409))+(((0.00925751294893567)*x3407))+x3403+(((-1.0)*r21*x3416))+(((-1.0)*x3399*x3418))+((x3402*x3419))+(((-1.0)*r22*x3413))+x3412+(((-1.0)*x3401*x3419))+(((0.0185150129489311)*x3408))+(((-1.0)*x3400*x3418))+(((-1.0)*x3396*x3417))+((cj4*x3410))+(((-1.0)*cj4*x3412))+(((-1.0)*x3397*x3414)));
evalcond[3]=(((x3404*x3417))+((x3405*x3414))+(((-1.0)*(1.0)*pz))+(((-1.0)*x3420))+x3398+((cj4*x3420))+((cj4*x3421))+(((-1.0)*x3421))+((x3404*x3414))+((x3408*x3419))+(((0.00925751294893567)*x3400))+((x3406*x3418))+(((0.0648043305514941)*x3396))+((r11*x3416))+(((0.00925751294893567)*x3399))+(((0.0648043305514941)*x3397))+((r12*x3413))+((x3407*x3418))+((x3405*x3417))+(((-1.0)*x3409*x3419))+(((0.0185150129489311)*x3401))+(((-1.0)*r10*x3415))+(((-0.0185150129489311)*x3402)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3422=((0.250000349687704)*cj1);
IkReal x3423=((0.250000349687704)*sj1);
IkReal x3424=((0.749999650312296)*cj1*cj4);
IkReal x3425=((0.433012903784321)*cj1*cj5);
IkReal x3426=(r11*x3425);
IkReal x3427=((0.433012903784321)*cj1*sj5);
IkReal x3428=(r10*x3427);
IkReal x3429=((0.749999650312296)*cj4*sj1);
IkReal x3430=((0.433012903784321)*cj5*sj1);
IkReal x3431=(r21*x3430);
IkReal x3432=((0.433012903784321)*sj1*sj5);
IkReal x3433=(r20*x3432);
IkReal x3434=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3435=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3436=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3437=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3438=(r21*x3425);
IkReal x3439=(r20*x3427);
IkReal x3440=(r11*x3430);
IkReal x3441=(r10*x3432);
if( IKabs(((((-1.0)*r21*x3437))+(((-1.0)*x3433))+((r12*x3424))+((r20*x3436))+(((-1.0)*x3428))+((cj4*x3428))+(((-1.0)*x3431))+(((-1.0)*x3426))+((cj4*x3426))+((r10*x3434))+(((-1.0)*r11*x3435))+((r22*x3423))+((cj4*x3433))+((r22*x3429))+((r12*x3422))+((cj4*x3431)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x3439))+x3440+x3441+(((-1.0)*x3438))+(((-1.0)*r12*x3429))+((r22*x3422))+((r20*x3434))+((cj4*x3439))+(((-1.0)*cj4*x3440))+((cj4*x3438))+(((-1.0)*r10*x3436))+((r22*x3424))+(((-1.0)*cj4*x3441))+(((-1.0)*r21*x3435))+(((-1.0)*r12*x3423))+((r11*x3437)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r21*x3437))+(((-1.0)*x3433))+((r12*x3424))+((r20*x3436))+(((-1.0)*x3428))+((cj4*x3428))+(((-1.0)*x3431))+(((-1.0)*x3426))+((cj4*x3426))+((r10*x3434))+(((-1.0)*r11*x3435))+((r22*x3423))+((cj4*x3433))+((r22*x3429))+((r12*x3422))+((cj4*x3431))))+IKsqr(((((-1.0)*x3439))+x3440+x3441+(((-1.0)*x3438))+(((-1.0)*r12*x3429))+((r22*x3422))+((r20*x3434))+((cj4*x3439))+(((-1.0)*cj4*x3440))+((cj4*x3438))+(((-1.0)*r10*x3436))+((r22*x3424))+(((-1.0)*cj4*x3441))+(((-1.0)*r21*x3435))+(((-1.0)*r12*x3423))+((r11*x3437))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r21*x3437))+(((-1.0)*x3433))+((r12*x3424))+((r20*x3436))+(((-1.0)*x3428))+((cj4*x3428))+(((-1.0)*x3431))+(((-1.0)*x3426))+((cj4*x3426))+((r10*x3434))+(((-1.0)*r11*x3435))+((r22*x3423))+((cj4*x3433))+((r22*x3429))+((r12*x3422))+((cj4*x3431))), ((((-1.0)*x3439))+x3440+x3441+(((-1.0)*x3438))+(((-1.0)*r12*x3429))+((r22*x3422))+((r20*x3434))+((cj4*x3439))+(((-1.0)*cj4*x3440))+((cj4*x3438))+(((-1.0)*r10*x3436))+((r22*x3424))+(((-1.0)*cj4*x3441))+(((-1.0)*r21*x3435))+(((-1.0)*r12*x3423))+((r11*x3437))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3442=IKcos(j2);
IkReal x3443=(cj1*x3442);
IkReal x3444=IKsin(j2);
IkReal x3445=(sj1*x3444);
IkReal x3446=(x3443+x3445);
IkReal x3447=((0.749999650312296)*cj4);
IkReal x3448=(cj5*r21);
IkReal x3449=((0.433012903784321)*x3448);
IkReal x3450=(r20*sj5);
IkReal x3451=((0.433012903784321)*x3450);
IkReal x3452=(cj5*r20*sj4);
IkReal x3453=(r21*sj4*sj5);
IkReal x3454=(cj1*x3444);
IkReal x3455=(cj5*r11);
IkReal x3456=((0.433012903784321)*x3455);
IkReal x3457=(r10*sj5);
IkReal x3458=((0.433012903784321)*x3457);
IkReal x3459=(sj1*x3442);
IkReal x3460=(cj5*r10*sj4);
IkReal x3461=(r11*sj4*sj5);
IkReal x3462=((0.0160344678271334)*r22);
IkReal x3463=((0.00925751294893567)*cj4);
IkReal x3464=((0.0160344678271334)*r12);
IkReal x3465=((0.433012903784321)*sj3);
IkReal x3466=(r12*x3465);
IkReal x3467=((0.866025201892125)*cj3*sj4);
IkReal x3468=((0.749999650312296)*sj3);
IkReal x3469=(cj3*cj4*sj5);
IkReal x3470=((1.0)*cj3*cj4*cj5);
IkReal x3471=((0.500000349687582)*cj3*sj4);
IkReal x3472=((0.250000349687704)*cj4*sj3);
IkReal x3473=((0.500000349687582)*sj3);
IkReal x3474=(r22*x3465);
evalcond[0]=((((0.866025201892125)*x3453))+(((-1.0)*r22*x3447))+x3451+x3446+x3449+(((-1.0)*cj4*x3451))+(((-0.866025201892125)*x3452))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x3449)));
evalcond[1]=((((-1.0)*cj4*x3456))+(((-0.866025201892125)*x3460))+(((-1.0)*cj4*x3458))+(((0.866025201892125)*x3461))+(((-1.0)*(0.250000349687704)*r12))+x3456+x3454+x3458+(((-1.0)*r12*x3447))+(((-1.0)*x3459)));
evalcond[2]=((((-0.27144)*x3443))+(((-0.0185150129489311)*x3453))+(((0.0648043305514941)*x3448))+(((-1.0)*x3462))+(((-1.0)*(1.0)*pz))+((cj4*x3462))+((x3448*x3463))+(((0.0648043305514941)*x3450))+(((0.29)*cj1))+(((-0.27144)*x3445))+((x3450*x3463))+(((0.0185150129489311)*x3452)));
evalcond[3]=(((x3457*x3463))+(((-0.27144)*x3454))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((0.0648043305514941)*x3457))+(((-1.0)*x3464))+(((0.0648043305514941)*x3455))+((cj4*x3464))+(((0.0185150129489311)*x3460))+((x3455*x3463))+(((0.27144)*x3459))+(((-0.0185150129489311)*x3461)));
evalcond[4]=(((x3455*x3468))+((r11*x3469))+x3446+((x3455*x3471))+(((-1.0)*r10*x3470))+((x3457*x3468))+((x3455*x3472))+(((-1.0)*x3466))+((cj4*x3466))+((x3460*x3473))+((x3457*x3472))+(((-1.0)*x3461*x3473))+((x3457*x3471))+((r12*x3467)));
evalcond[5]=(((x3448*x3471))+((x3450*x3468))+((x3448*x3472))+(((-1.0)*x3453*x3473))+((r21*x3469))+((x3450*x3472))+(((-1.0)*x3474))+x3459+((x3450*x3471))+((r22*x3467))+((x3448*x3468))+(((-1.0)*r20*x3470))+((x3452*x3473))+((cj4*x3474))+(((-1.0)*x3454)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3475=((0.646708404322884)*cj4);
IkReal x3476=((0.62876328674038)*cj5);
IkReal x3477=((0.62876328674038)*sj5);
IkReal x3478=((0.373377619497519)*cj4*cj5);
IkReal x3479=((0.373377619497519)*cj4*sj5);
IkReal x3480=((0.746754716733336)*cj5*sj4);
IkReal x3481=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r11*x3481))+(((3.44827586206897)*py))+((r10*x3480))+(((0.289291595677116)*r12))+((r10*x3479))+(((-1.0)*r10*x3477))+((r12*x3475))+((r11*x3478))+(((-1.0)*r11*x3476)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+((r20*x3479))+((r20*x3480))+(((-1.0)*r21*x3481))+(((-1.0)*r20*x3477))+(((-1.0)*r21*x3476))+((r21*x3478))+((r22*x3475))+(((0.289291595677116)*r22)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x3481))+(((3.44827586206897)*py))+((r10*x3480))+(((0.289291595677116)*r12))+((r10*x3479))+(((-1.0)*r10*x3477))+((r12*x3475))+((r11*x3478))+(((-1.0)*r11*x3476))))+IKsqr(((((3.44827586206897)*pz))+((r20*x3479))+((r20*x3480))+(((-1.0)*r21*x3481))+(((-1.0)*r20*x3477))+(((-1.0)*r21*x3476))+((r21*x3478))+((r22*x3475))+(((0.289291595677116)*r22))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r11*x3481))+(((3.44827586206897)*py))+((r10*x3480))+(((0.289291595677116)*r12))+((r10*x3479))+(((-1.0)*r10*x3477))+((r12*x3475))+((r11*x3478))+(((-1.0)*r11*x3476))), ((((3.44827586206897)*pz))+((r20*x3479))+((r20*x3480))+(((-1.0)*r21*x3481))+(((-1.0)*r20*x3477))+(((-1.0)*r21*x3476))+((r21*x3478))+((r22*x3475))+(((0.289291595677116)*r22))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3482=((0.187545437253636)*cj4);
IkReal x3483=(cj5*r11);
IkReal x3484=(r10*sj5);
IkReal x3485=((0.29)*(IKsin(j1)));
IkReal x3486=(cj4*cj5*r11);
IkReal x3487=(cj4*r10*sj5);
IkReal x3488=(cj5*r10*sj4);
IkReal x3489=(r11*sj4*sj5);
IkReal x3490=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x3491=(cj5*r21);
IkReal x3492=(r20*sj5);
IkReal x3493=(cj4*cj5*r21);
IkReal x3494=(cj4*r20*sj5);
IkReal x3495=(cj5*r20*sj4);
IkReal x3496=(r21*sj4*sj5);
IkReal x3497=((0.0160344678271334)*r22);
IkReal x3498=((0.117537022603216)*sj3);
IkReal x3499=(r12*x3498);
IkReal x3500=((0.235073880801598)*cj3*sj4);
IkReal x3501=((0.20357990508077)*sj3);
IkReal x3502=((0.27144)*cj3*cj4*cj5);
IkReal x3503=((0.27144)*cj3*cj4*sj5);
IkReal x3504=((0.135720094919197)*cj3*sj4);
IkReal x3505=((0.0678600949192303)*sj3);
IkReal x3506=((0.135720094919197)*sj3);
IkReal x3507=((0.0160344678271334)*r12);
IkReal x3508=(r22*x3498);
evalcond[0]=((((-1.0)*x3485))+(((0.10827950965428)*x3486))+((r12*x3482))+(((-0.216558867852667)*x3489))+(((0.0838945627463637)*r12))+py+(((0.216558867852667)*x3488))+(((-0.18234135315471)*x3483))+(((-0.18234135315471)*x3484))+(((0.10827950965428)*x3487)));
evalcond[1]=((((-0.216558867852667)*x3496))+(((0.10827950965428)*x3494))+((r22*x3482))+x3490+(((-0.18234135315471)*x3491))+(((-0.18234135315471)*x3492))+(((0.216558867852667)*x3495))+(((0.10827950965428)*x3493))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-0.0185150129489311)*x3495))+((x3484*x3504))+(((-1.0)*x3499))+((cj4*x3499))+(((-0.00925751294893567)*x3494))+x3490+x3497+(((-1.0)*x3489*x3506))+(((-1.0)*cj4*x3497))+(((0.0185150129489311)*x3496))+(((-0.0648043305514941)*x3492))+(((-0.0648043305514941)*x3491))+((x3487*x3505))+(((-0.00925751294893567)*x3493))+(((-1.0)*r10*x3502))+((x3486*x3505))+((r12*x3500))+((x3488*x3506))+((r11*x3503))+((x3483*x3501))+((x3483*x3504))+((x3484*x3501)));
evalcond[3]=((((0.0185150129489311)*x3488))+((x3493*x3505))+((cj4*x3508))+(((0.00925751294893567)*x3487))+(((-1.0)*x3508))+(((-1.0)*(1.0)*py))+(((-1.0)*x3496*x3506))+((x3494*x3505))+x3485+(((0.0648043305514941)*x3483))+(((-1.0)*x3507))+((cj4*x3507))+(((-1.0)*r20*x3502))+((r21*x3503))+(((0.0648043305514941)*x3484))+((x3495*x3506))+(((-0.0185150129489311)*x3489))+((x3491*x3504))+((x3492*x3501))+((x3491*x3501))+(((0.00925751294893567)*x3486))+((r22*x3500))+((x3492*x3504)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3509=((0.250000349687704)*cj1);
IkReal x3510=((0.250000349687704)*sj1);
IkReal x3511=((0.749999650312296)*cj1*cj4);
IkReal x3512=((0.433012903784321)*cj1*cj5);
IkReal x3513=(r11*x3512);
IkReal x3514=((0.433012903784321)*cj1*sj5);
IkReal x3515=(r10*x3514);
IkReal x3516=((0.749999650312296)*cj4*sj1);
IkReal x3517=((0.433012903784321)*cj5*sj1);
IkReal x3518=(r21*x3517);
IkReal x3519=((0.433012903784321)*sj1*sj5);
IkReal x3520=(r20*x3519);
IkReal x3521=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3522=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3523=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3524=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3525=(r21*x3512);
IkReal x3526=(r20*x3514);
IkReal x3527=(r11*x3517);
IkReal x3528=(r10*x3519);
if( IKabs(((((-1.0)*r10*x3521))+(((-1.0)*x3518))+(((-1.0)*r12*x3511))+((cj4*x3518))+(((-1.0)*cj4*x3515))+((cj4*x3520))+((r11*x3522))+(((-1.0)*x3520))+((r22*x3510))+(((-1.0)*r12*x3509))+((r20*x3523))+x3513+x3515+(((-1.0)*cj4*x3513))+((r22*x3516))+(((-1.0)*r21*x3524)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3521))+((r12*x3510))+((cj4*x3525))+(((-1.0)*x3525))+(((-1.0)*x3528))+((cj4*x3528))+((r22*x3511))+(((-1.0)*x3527))+((cj4*x3527))+(((-1.0)*r21*x3522))+((r12*x3516))+((r10*x3523))+(((-1.0)*r11*x3524))+((r22*x3509))+((cj4*x3526))+(((-1.0)*x3526)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x3521))+(((-1.0)*x3518))+(((-1.0)*r12*x3511))+((cj4*x3518))+(((-1.0)*cj4*x3515))+((cj4*x3520))+((r11*x3522))+(((-1.0)*x3520))+((r22*x3510))+(((-1.0)*r12*x3509))+((r20*x3523))+x3513+x3515+(((-1.0)*cj4*x3513))+((r22*x3516))+(((-1.0)*r21*x3524))))+IKsqr((((r20*x3521))+((r12*x3510))+((cj4*x3525))+(((-1.0)*x3525))+(((-1.0)*x3528))+((cj4*x3528))+((r22*x3511))+(((-1.0)*x3527))+((cj4*x3527))+(((-1.0)*r21*x3522))+((r12*x3516))+((r10*x3523))+(((-1.0)*r11*x3524))+((r22*x3509))+((cj4*x3526))+(((-1.0)*x3526))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r10*x3521))+(((-1.0)*x3518))+(((-1.0)*r12*x3511))+((cj4*x3518))+(((-1.0)*cj4*x3515))+((cj4*x3520))+((r11*x3522))+(((-1.0)*x3520))+((r22*x3510))+(((-1.0)*r12*x3509))+((r20*x3523))+x3513+x3515+(((-1.0)*cj4*x3513))+((r22*x3516))+(((-1.0)*r21*x3524))), (((r20*x3521))+((r12*x3510))+((cj4*x3525))+(((-1.0)*x3525))+(((-1.0)*x3528))+((cj4*x3528))+((r22*x3511))+(((-1.0)*x3527))+((cj4*x3527))+(((-1.0)*r21*x3522))+((r12*x3516))+((r10*x3523))+(((-1.0)*r11*x3524))+((r22*x3509))+((cj4*x3526))+(((-1.0)*x3526))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3529=IKcos(j2);
IkReal x3530=(cj1*x3529);
IkReal x3531=((0.749999650312296)*cj4);
IkReal x3532=(cj5*r21);
IkReal x3533=((0.433012903784321)*x3532);
IkReal x3534=(r20*sj5);
IkReal x3535=((0.433012903784321)*x3534);
IkReal x3536=IKsin(j2);
IkReal x3537=(sj1*x3536);
IkReal x3538=(cj5*r20*sj4);
IkReal x3539=(r21*sj4*sj5);
IkReal x3540=(sj1*x3529);
IkReal x3541=(cj1*x3536);
IkReal x3542=(x3540+(((-1.0)*x3541)));
IkReal x3543=(cj5*r11);
IkReal x3544=((0.433012903784321)*x3543);
IkReal x3545=(r10*sj5);
IkReal x3546=((0.433012903784321)*x3545);
IkReal x3547=(cj5*r10*sj4);
IkReal x3548=(r11*sj4*sj5);
IkReal x3549=((0.0160344678271334)*r22);
IkReal x3550=((0.00925751294893567)*cj4);
IkReal x3551=((0.0160344678271334)*r12);
IkReal x3552=((0.433012903784321)*sj3);
IkReal x3553=(r22*x3552);
IkReal x3554=((0.866025201892125)*cj3*sj4);
IkReal x3555=((0.749999650312296)*sj3);
IkReal x3556=(cj3*cj4*sj5);
IkReal x3557=((1.0)*cj3*cj4*cj5);
IkReal x3558=((0.500000349687582)*cj3*sj4);
IkReal x3559=((0.250000349687704)*cj4*sj3);
IkReal x3560=((0.500000349687582)*sj3);
IkReal x3561=(r12*x3552);
evalcond[0]=((((-1.0)*cj4*x3535))+(((-0.866025201892125)*x3538))+x3530+x3533+x3537+x3535+(((-1.0)*cj4*x3533))+(((0.866025201892125)*x3539))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x3531)));
evalcond[1]=((((-0.866025201892125)*x3547))+x3542+x3544+x3546+(((-1.0)*cj4*x3546))+(((0.866025201892125)*x3548))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*cj4*x3544))+(((-1.0)*r12*x3531)));
evalcond[2]=((((-1.0)*(1.0)*pz))+(((-0.27144)*x3537))+((x3532*x3550))+(((-0.27144)*x3530))+(((0.29)*cj1))+(((0.0185150129489311)*x3538))+(((-0.0185150129489311)*x3539))+(((0.0648043305514941)*x3532))+(((0.0648043305514941)*x3534))+((x3534*x3550))+((cj4*x3549))+(((-1.0)*x3549)));
evalcond[3]=((((-1.0)*x3551))+(((0.27144)*x3541))+(((-1.0)*(1.0)*py))+(((-0.0185150129489311)*x3548))+(((0.0648043305514941)*x3543))+(((0.0185150129489311)*x3547))+((cj4*x3551))+((x3543*x3550))+((x3545*x3550))+(((0.0648043305514941)*x3545))+(((0.29)*sj1))+(((-0.27144)*x3540)));
evalcond[4]=(((x3532*x3558))+(((-1.0)*x3539*x3560))+x3542+((x3534*x3559))+(((-1.0)*r20*x3557))+((x3534*x3555))+((x3534*x3558))+((cj4*x3553))+((r21*x3556))+((x3538*x3560))+((x3532*x3555))+((x3532*x3559))+((r22*x3554))+(((-1.0)*x3553)));
evalcond[5]=(((x3545*x3555))+((x3543*x3559))+(((-1.0)*x3530))+((x3543*x3558))+(((-1.0)*x3561))+(((-1.0)*x3548*x3560))+((x3545*x3559))+((x3545*x3558))+((r12*x3554))+(((-1.0)*x3537))+((r11*x3556))+((cj4*x3561))+((x3543*x3555))+((x3547*x3560))+(((-1.0)*r10*x3557)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3562=((0.646708404322884)*cj4);
IkReal x3563=((0.62876328674038)*cj5);
IkReal x3564=((0.62876328674038)*sj5);
IkReal x3565=((0.373377619497519)*cj4*cj5);
IkReal x3566=((0.373377619497519)*cj4*sj5);
IkReal x3567=((0.746754716733336)*cj5*sj4);
IkReal x3568=((0.746754716733336)*sj4*sj5);
if( IKabs((((r01*x3563))+(((-1.0)*r00*x3567))+(((-1.0)*r02*x3562))+(((-1.0)*r00*x3566))+((r01*x3568))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*r01*x3565))+(((-1.0)*(0.289291595677116)*r02))+((r00*x3564)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r20*x3564))+(((3.44827586206897)*pz))+((r22*x3562))+(((-1.0)*r21*x3563))+((r20*x3567))+((r20*x3566))+(((0.289291595677116)*r22))+(((-1.0)*r21*x3568))+((r21*x3565)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x3563))+(((-1.0)*r00*x3567))+(((-1.0)*r02*x3562))+(((-1.0)*r00*x3566))+((r01*x3568))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*r01*x3565))+(((-1.0)*(0.289291595677116)*r02))+((r00*x3564))))+IKsqr(((((-1.0)*r20*x3564))+(((3.44827586206897)*pz))+((r22*x3562))+(((-1.0)*r21*x3563))+((r20*x3567))+((r20*x3566))+(((0.289291595677116)*r22))+(((-1.0)*r21*x3568))+((r21*x3565))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r01*x3563))+(((-1.0)*r00*x3567))+(((-1.0)*r02*x3562))+(((-1.0)*r00*x3566))+((r01*x3568))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*r01*x3565))+(((-1.0)*(0.289291595677116)*r02))+((r00*x3564))), ((((-1.0)*r20*x3564))+(((3.44827586206897)*pz))+((r22*x3562))+(((-1.0)*r21*x3563))+((r20*x3567))+((r20*x3566))+(((0.289291595677116)*r22))+(((-1.0)*r21*x3568))+((r21*x3565))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3569=((0.187545437253636)*cj4);
IkReal x3570=(cj5*r21);
IkReal x3571=(r20*sj5);
IkReal x3572=((0.29)*(IKcos(j1)));
IkReal x3573=(cj4*cj5*r21);
IkReal x3574=(cj4*r20*sj5);
IkReal x3575=(cj5*r20*sj4);
IkReal x3576=(r21*sj4*sj5);
IkReal x3577=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*px)));
IkReal x3578=(cj5*r01);
IkReal x3579=(r00*sj5);
IkReal x3580=(cj4*cj5*r01);
IkReal x3581=(cj4*r00*sj5);
IkReal x3582=(cj5*r00*sj4);
IkReal x3583=(r01*sj4*sj5);
IkReal x3584=((0.0160344678271334)*r02);
IkReal x3585=((0.117537022603216)*sj3);
IkReal x3586=(r22*x3585);
IkReal x3587=((0.235073880801598)*cj3*sj4);
IkReal x3588=((0.20357990508077)*sj3);
IkReal x3589=((0.27144)*cj3*cj4*cj5);
IkReal x3590=((0.27144)*cj3*cj4*sj5);
IkReal x3591=((0.135720094919197)*cj3*sj4);
IkReal x3592=((0.0678600949192303)*sj3);
IkReal x3593=((0.135720094919197)*sj3);
IkReal x3594=((0.0160344678271334)*r22);
IkReal x3595=(r02*x3585);
evalcond[0]=((((0.10827950965428)*x3574))+(((-0.216558867852667)*x3576))+(((0.216558867852667)*x3575))+(((-0.18234135315471)*x3571))+((r22*x3569))+(((-0.18234135315471)*x3570))+pz+(((0.10827950965428)*x3573))+(((0.0838945627463637)*r22))+(((-1.0)*x3572)));
evalcond[1]=((((-0.10827950965428)*x3580))+(((-1.0)*(0.0838945627463637)*r02))+(((-0.10827950965428)*x3581))+(((0.18234135315471)*x3578))+(((-1.0)*r02*x3569))+(((0.216558867852667)*x3583))+(((0.18234135315471)*x3579))+(((-0.216558867852667)*x3582))+x3577);
evalcond[2]=((((-1.0)*r22*x3587))+(((0.00925751294893567)*x3580))+(((-1.0)*r21*x3590))+(((-1.0)*x3584))+(((-1.0)*x3574*x3592))+(((-1.0)*x3571*x3591))+x3586+(((-1.0)*x3570*x3591))+(((-1.0)*x3575*x3593))+(((0.00925751294893567)*x3581))+(((0.0648043305514941)*x3578))+(((0.0648043305514941)*x3579))+((r20*x3589))+(((0.0185150129489311)*x3582))+((x3576*x3593))+(((-0.0185150129489311)*x3583))+(((-1.0)*x3571*x3588))+(((-1.0)*cj4*x3586))+((cj4*x3584))+(((-1.0)*x3570*x3588))+x3577+(((-1.0)*x3573*x3592)));
evalcond[3]=(((x3578*x3588))+((x3582*x3593))+(((-1.0)*x3594))+((cj4*x3594))+(((-1.0)*(1.0)*pz))+((r02*x3587))+((r01*x3590))+((x3580*x3592))+(((0.00925751294893567)*x3573))+(((0.0648043305514941)*x3571))+((x3581*x3592))+(((-1.0)*r00*x3589))+(((0.0648043305514941)*x3570))+(((0.0185150129489311)*x3575))+((x3579*x3588))+((x3578*x3591))+(((-1.0)*x3583*x3593))+(((-0.0185150129489311)*x3576))+(((0.00925751294893567)*x3574))+x3572+((x3579*x3591))+((cj4*x3595))+(((-1.0)*x3595)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3596=((0.250000349687704)*cj1);
IkReal x3597=((0.250000349687704)*sj1);
IkReal x3598=((0.749999650312296)*cj1*cj4);
IkReal x3599=((0.433012903784321)*cj1*cj5);
IkReal x3600=(r01*x3599);
IkReal x3601=((0.433012903784321)*cj1*sj5);
IkReal x3602=(r00*x3601);
IkReal x3603=((0.749999650312296)*cj4*sj1);
IkReal x3604=((0.433012903784321)*cj5*sj1);
IkReal x3605=(r21*x3604);
IkReal x3606=((0.433012903784321)*sj1*sj5);
IkReal x3607=(r20*x3606);
IkReal x3608=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3609=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3610=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3611=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3612=(r21*x3599);
IkReal x3613=(r20*x3601);
IkReal x3614=(r01*x3604);
IkReal x3615=(r00*x3606);
if( IKabs((((cj4*x3607))+(((-1.0)*x3607))+(((-1.0)*x3600))+((cj4*x3600))+((r22*x3597))+((r02*x3598))+((cj4*x3602))+(((-1.0)*x3602))+((r20*x3610))+((cj4*x3605))+((r00*x3608))+(((-1.0)*x3605))+((r22*x3603))+((r02*x3596))+(((-1.0)*r01*x3609))+(((-1.0)*r21*x3611)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3608))+(((-1.0)*r02*x3603))+x3615+x3614+(((-1.0)*x3612))+((cj4*x3612))+((r22*x3596))+((r01*x3611))+(((-1.0)*r02*x3597))+((cj4*x3613))+(((-1.0)*cj4*x3614))+((r22*x3598))+(((-1.0)*cj4*x3615))+(((-1.0)*r21*x3609))+(((-1.0)*r00*x3610))+(((-1.0)*x3613)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x3607))+(((-1.0)*x3607))+(((-1.0)*x3600))+((cj4*x3600))+((r22*x3597))+((r02*x3598))+((cj4*x3602))+(((-1.0)*x3602))+((r20*x3610))+((cj4*x3605))+((r00*x3608))+(((-1.0)*x3605))+((r22*x3603))+((r02*x3596))+(((-1.0)*r01*x3609))+(((-1.0)*r21*x3611))))+IKsqr((((r20*x3608))+(((-1.0)*r02*x3603))+x3615+x3614+(((-1.0)*x3612))+((cj4*x3612))+((r22*x3596))+((r01*x3611))+(((-1.0)*r02*x3597))+((cj4*x3613))+(((-1.0)*cj4*x3614))+((r22*x3598))+(((-1.0)*cj4*x3615))+(((-1.0)*r21*x3609))+(((-1.0)*r00*x3610))+(((-1.0)*x3613))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x3607))+(((-1.0)*x3607))+(((-1.0)*x3600))+((cj4*x3600))+((r22*x3597))+((r02*x3598))+((cj4*x3602))+(((-1.0)*x3602))+((r20*x3610))+((cj4*x3605))+((r00*x3608))+(((-1.0)*x3605))+((r22*x3603))+((r02*x3596))+(((-1.0)*r01*x3609))+(((-1.0)*r21*x3611))), (((r20*x3608))+(((-1.0)*r02*x3603))+x3615+x3614+(((-1.0)*x3612))+((cj4*x3612))+((r22*x3596))+((r01*x3611))+(((-1.0)*r02*x3597))+((cj4*x3613))+(((-1.0)*cj4*x3614))+((r22*x3598))+(((-1.0)*cj4*x3615))+(((-1.0)*r21*x3609))+(((-1.0)*r00*x3610))+(((-1.0)*x3613))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3616=IKcos(j2);
IkReal x3617=(cj1*x3616);
IkReal x3618=IKsin(j2);
IkReal x3619=(sj1*x3618);
IkReal x3620=(x3617+x3619);
IkReal x3621=((0.749999650312296)*cj4);
IkReal x3622=(cj5*r21);
IkReal x3623=((0.433012903784321)*x3622);
IkReal x3624=(r20*sj5);
IkReal x3625=((0.433012903784321)*x3624);
IkReal x3626=(cj5*r20*sj4);
IkReal x3627=(r21*sj4*sj5);
IkReal x3628=(cj1*x3618);
IkReal x3629=(cj5*r01);
IkReal x3630=((0.433012903784321)*x3629);
IkReal x3631=(r00*sj5);
IkReal x3632=((0.433012903784321)*x3631);
IkReal x3633=(sj1*x3616);
IkReal x3634=(cj5*r00*sj4);
IkReal x3635=(r01*sj4*sj5);
IkReal x3636=((0.0160344678271334)*r22);
IkReal x3637=((0.00925751294893567)*cj4);
IkReal x3638=((0.0160344678271334)*r02);
IkReal x3639=((0.433012903784321)*sj3);
IkReal x3640=(r02*x3639);
IkReal x3641=((0.866025201892125)*cj3*sj4);
IkReal x3642=((0.749999650312296)*sj3);
IkReal x3643=(cj3*cj4*sj5);
IkReal x3644=((1.0)*cj3*cj4*cj5);
IkReal x3645=((0.500000349687582)*cj3*sj4);
IkReal x3646=((0.250000349687704)*cj4*sj3);
IkReal x3647=((0.500000349687582)*sj3);
IkReal x3648=(r22*x3639);
evalcond[0]=((((-0.866025201892125)*x3626))+(((-1.0)*cj4*x3623))+(((-1.0)*r22*x3621))+(((-1.0)*cj4*x3625))+x3625+x3623+x3620+(((-1.0)*(0.250000349687704)*r22))+(((0.866025201892125)*x3627)));
evalcond[1]=((((-1.0)*x3633))+(((-1.0)*cj4*x3630))+(((-1.0)*cj4*x3632))+(((-1.0)*r02*x3621))+x3630+x3632+(((0.866025201892125)*x3635))+(((-0.866025201892125)*x3634))+(((-1.0)*(0.250000349687704)*r02))+x3628);
evalcond[2]=((((-1.0)*x3636))+(((-0.0185150129489311)*x3627))+((x3622*x3637))+((x3624*x3637))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x3624))+(((0.29)*cj1))+(((-0.27144)*x3617))+(((0.0185150129489311)*x3626))+(((0.0648043305514941)*x3622))+((cj4*x3636))+(((-0.27144)*x3619)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((0.0648043305514941)*x3631))+(((0.27144)*x3633))+((x3629*x3637))+(((-1.0)*(0.29)*sj1))+(((0.0185150129489311)*x3634))+((x3631*x3637))+(((0.0648043305514941)*x3629))+(((-0.27144)*x3628))+(((-0.0185150129489311)*x3635))+((cj4*x3638))+(((-1.0)*x3638)));
evalcond[4]=((((-1.0)*r00*x3644))+((x3634*x3647))+((x3631*x3645))+((cj4*x3640))+((x3631*x3642))+((x3631*x3646))+((x3629*x3645))+((x3629*x3642))+((r02*x3641))+(((-1.0)*x3640))+x3620+((r01*x3643))+(((-1.0)*x3635*x3647))+((x3629*x3646)));
evalcond[5]=(((r21*x3643))+(((-1.0)*x3648))+((x3626*x3647))+((x3622*x3646))+((r22*x3641))+((x3624*x3646))+((x3624*x3645))+(((-1.0)*x3628))+((x3624*x3642))+x3633+((x3622*x3645))+(((-1.0)*r20*x3644))+((x3622*x3642))+((cj4*x3648))+(((-1.0)*x3627*x3647)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3649=((0.646708404322884)*cj4);
IkReal x3650=((0.62876328674038)*cj5);
IkReal x3651=((0.62876328674038)*sj5);
IkReal x3652=((0.373377619497519)*cj4*cj5);
IkReal x3653=((0.373377619497519)*cj4*sj5);
IkReal x3654=((0.746754716733336)*cj5*sj4);
IkReal x3655=((0.746754716733336)*sj4*sj5);
if( IKabs((((r00*x3653))+((r00*x3654))+(((-1.0)*r01*x3650))+(((0.289291595677116)*r02))+((r01*x3652))+(((-1.0)*r00*x3651))+(((3.44827586206897)*px))+((r02*x3649))+(((-1.0)*r01*x3655)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x3655))+(((-1.0)*r20*x3651))+(((3.44827586206897)*pz))+(((0.289291595677116)*r22))+((r21*x3652))+(((-1.0)*r21*x3650))+((r22*x3649))+((r20*x3654))+((r20*x3653)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x3653))+((r00*x3654))+(((-1.0)*r01*x3650))+(((0.289291595677116)*r02))+((r01*x3652))+(((-1.0)*r00*x3651))+(((3.44827586206897)*px))+((r02*x3649))+(((-1.0)*r01*x3655))))+IKsqr(((((-1.0)*r21*x3655))+(((-1.0)*r20*x3651))+(((3.44827586206897)*pz))+(((0.289291595677116)*r22))+((r21*x3652))+(((-1.0)*r21*x3650))+((r22*x3649))+((r20*x3654))+((r20*x3653))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*x3653))+((r00*x3654))+(((-1.0)*r01*x3650))+(((0.289291595677116)*r02))+((r01*x3652))+(((-1.0)*r00*x3651))+(((3.44827586206897)*px))+((r02*x3649))+(((-1.0)*r01*x3655))), ((((-1.0)*r21*x3655))+(((-1.0)*r20*x3651))+(((3.44827586206897)*pz))+(((0.289291595677116)*r22))+((r21*x3652))+(((-1.0)*r21*x3650))+((r22*x3649))+((r20*x3654))+((r20*x3653))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3656=((0.187545437253636)*cj4);
IkReal x3657=(cj5*r01);
IkReal x3658=(r00*sj5);
IkReal x3659=((0.29)*(IKsin(j1)));
IkReal x3660=(cj4*cj5*r01);
IkReal x3661=(cj4*r00*sj5);
IkReal x3662=(cj5*r00*sj4);
IkReal x3663=(r01*sj4*sj5);
IkReal x3664=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x3665=(cj5*r21);
IkReal x3666=(r20*sj5);
IkReal x3667=(cj4*cj5*r21);
IkReal x3668=(cj4*r20*sj5);
IkReal x3669=(cj5*r20*sj4);
IkReal x3670=(r21*sj4*sj5);
IkReal x3671=((0.0160344678271334)*r22);
IkReal x3672=((0.117537022603216)*sj3);
IkReal x3673=(r02*x3672);
IkReal x3674=((0.235073880801598)*cj3*sj4);
IkReal x3675=((0.20357990508077)*sj3);
IkReal x3676=((0.27144)*cj3*cj4*cj5);
IkReal x3677=((0.27144)*cj3*cj4*sj5);
IkReal x3678=((0.135720094919197)*cj3*sj4);
IkReal x3679=((0.0678600949192303)*sj3);
IkReal x3680=((0.135720094919197)*sj3);
IkReal x3681=((0.0160344678271334)*r02);
IkReal x3682=(r22*x3672);
evalcond[0]=((((0.10827950965428)*x3661))+(((-1.0)*x3659))+(((0.10827950965428)*x3660))+px+(((-0.18234135315471)*x3658))+((r02*x3656))+(((0.0838945627463637)*r02))+(((-0.216558867852667)*x3663))+(((-0.18234135315471)*x3657))+(((0.216558867852667)*x3662)));
evalcond[1]=(x3664+(((0.10827950965428)*x3667))+(((-0.216558867852667)*x3670))+(((-0.18234135315471)*x3665))+((r22*x3656))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x3666))+(((0.10827950965428)*x3668))+(((0.216558867852667)*x3669)));
evalcond[2]=((((-1.0)*r00*x3676))+x3664+((r02*x3674))+(((-0.0185150129489311)*x3669))+(((0.0185150129489311)*x3670))+((r01*x3677))+(((-1.0)*x3673))+((x3661*x3679))+((cj4*x3673))+((x3657*x3675))+((x3658*x3678))+((x3657*x3678))+((x3658*x3675))+(((-1.0)*cj4*x3671))+((x3662*x3680))+(((-0.00925751294893567)*x3668))+(((-1.0)*x3663*x3680))+(((-0.0648043305514941)*x3665))+((x3660*x3679))+x3671+(((-0.00925751294893567)*x3667))+(((-0.0648043305514941)*x3666)));
evalcond[3]=((((0.0185150129489311)*x3662))+(((-1.0)*(1.0)*px))+((x3666*x3678))+((x3665*x3678))+((r22*x3674))+(((0.0648043305514941)*x3658))+((r21*x3677))+((x3666*x3675))+(((-0.0185150129489311)*x3663))+((cj4*x3681))+x3659+(((-1.0)*r20*x3676))+((cj4*x3682))+(((-1.0)*x3681))+(((-1.0)*x3682))+((x3668*x3679))+(((0.00925751294893567)*x3660))+(((0.00925751294893567)*x3661))+(((-1.0)*x3670*x3680))+((x3669*x3680))+(((0.0648043305514941)*x3657))+((x3667*x3679))+((x3665*x3675)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3683=((0.250000349687704)*cj1);
IkReal x3684=((0.250000349687704)*sj1);
IkReal x3685=((0.749999650312296)*cj1*cj4);
IkReal x3686=((0.433012903784321)*cj1*cj5);
IkReal x3687=(r01*x3686);
IkReal x3688=((0.433012903784321)*cj1*sj5);
IkReal x3689=(r00*x3688);
IkReal x3690=((0.749999650312296)*cj4*sj1);
IkReal x3691=((0.433012903784321)*cj5*sj1);
IkReal x3692=(r21*x3691);
IkReal x3693=((0.433012903784321)*sj1*sj5);
IkReal x3694=(r20*x3693);
IkReal x3695=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3696=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3697=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3698=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3699=(r21*x3686);
IkReal x3700=(r20*x3688);
IkReal x3701=(r01*x3691);
IkReal x3702=(r00*x3693);
if( IKabs((((r22*x3690))+(((-1.0)*cj4*x3687))+(((-1.0)*r02*x3685))+(((-1.0)*x3692))+((cj4*x3694))+(((-1.0)*r02*x3683))+(((-1.0)*cj4*x3689))+(((-1.0)*r00*x3695))+x3687+x3689+((r01*x3696))+(((-1.0)*r21*x3698))+((r22*x3684))+((cj4*x3692))+(((-1.0)*x3694))+((r20*x3697)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3695))+(((-1.0)*x3701))+((r00*x3697))+(((-1.0)*x3700))+((cj4*x3699))+((r22*x3685))+(((-1.0)*r21*x3696))+(((-1.0)*r01*x3698))+((cj4*x3702))+((r02*x3684))+((r22*x3683))+((r02*x3690))+((cj4*x3701))+(((-1.0)*x3702))+((cj4*x3700))+(((-1.0)*x3699)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x3690))+(((-1.0)*cj4*x3687))+(((-1.0)*r02*x3685))+(((-1.0)*x3692))+((cj4*x3694))+(((-1.0)*r02*x3683))+(((-1.0)*cj4*x3689))+(((-1.0)*r00*x3695))+x3687+x3689+((r01*x3696))+(((-1.0)*r21*x3698))+((r22*x3684))+((cj4*x3692))+(((-1.0)*x3694))+((r20*x3697))))+IKsqr((((r20*x3695))+(((-1.0)*x3701))+((r00*x3697))+(((-1.0)*x3700))+((cj4*x3699))+((r22*x3685))+(((-1.0)*r21*x3696))+(((-1.0)*r01*x3698))+((cj4*x3702))+((r02*x3684))+((r22*x3683))+((r02*x3690))+((cj4*x3701))+(((-1.0)*x3702))+((cj4*x3700))+(((-1.0)*x3699))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x3690))+(((-1.0)*cj4*x3687))+(((-1.0)*r02*x3685))+(((-1.0)*x3692))+((cj4*x3694))+(((-1.0)*r02*x3683))+(((-1.0)*cj4*x3689))+(((-1.0)*r00*x3695))+x3687+x3689+((r01*x3696))+(((-1.0)*r21*x3698))+((r22*x3684))+((cj4*x3692))+(((-1.0)*x3694))+((r20*x3697))), (((r20*x3695))+(((-1.0)*x3701))+((r00*x3697))+(((-1.0)*x3700))+((cj4*x3699))+((r22*x3685))+(((-1.0)*r21*x3696))+(((-1.0)*r01*x3698))+((cj4*x3702))+((r02*x3684))+((r22*x3683))+((r02*x3690))+((cj4*x3701))+(((-1.0)*x3702))+((cj4*x3700))+(((-1.0)*x3699))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3703=IKcos(j2);
IkReal x3704=(cj1*x3703);
IkReal x3705=((0.749999650312296)*cj4);
IkReal x3706=(cj5*r21);
IkReal x3707=((0.433012903784321)*x3706);
IkReal x3708=(r20*sj5);
IkReal x3709=((0.433012903784321)*x3708);
IkReal x3710=IKsin(j2);
IkReal x3711=(sj1*x3710);
IkReal x3712=(cj5*r20*sj4);
IkReal x3713=(r21*sj4*sj5);
IkReal x3714=(sj1*x3703);
IkReal x3715=(cj1*x3710);
IkReal x3716=(x3714+(((-1.0)*x3715)));
IkReal x3717=(cj5*r01);
IkReal x3718=((0.433012903784321)*x3717);
IkReal x3719=(r00*sj5);
IkReal x3720=((0.433012903784321)*x3719);
IkReal x3721=(cj5*r00*sj4);
IkReal x3722=(r01*sj4*sj5);
IkReal x3723=((0.0160344678271334)*r22);
IkReal x3724=((0.00925751294893567)*cj4);
IkReal x3725=((0.0160344678271334)*r02);
IkReal x3726=((0.433012903784321)*sj3);
IkReal x3727=(r22*x3726);
IkReal x3728=((0.866025201892125)*cj3*sj4);
IkReal x3729=((0.749999650312296)*sj3);
IkReal x3730=(cj3*cj4*sj5);
IkReal x3731=((1.0)*cj3*cj4*cj5);
IkReal x3732=((0.500000349687582)*cj3*sj4);
IkReal x3733=((0.250000349687704)*cj4*sj3);
IkReal x3734=((0.500000349687582)*sj3);
IkReal x3735=(r02*x3726);
evalcond[0]=(x3704+x3707+x3709+(((-0.866025201892125)*x3712))+(((0.866025201892125)*x3713))+x3711+(((-1.0)*cj4*x3707))+(((-1.0)*r22*x3705))+(((-1.0)*cj4*x3709))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*cj4*x3718))+x3720+(((0.866025201892125)*x3722))+x3718+x3716+(((-1.0)*cj4*x3720))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*r02*x3705))+(((-0.866025201892125)*x3721)));
evalcond[2]=(((cj4*x3723))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x3713))+(((0.0185150129489311)*x3712))+(((-0.27144)*x3704))+(((0.29)*cj1))+(((-0.27144)*x3711))+((x3708*x3724))+((x3706*x3724))+(((-1.0)*x3723))+(((0.0648043305514941)*x3708))+(((0.0648043305514941)*x3706)));
evalcond[3]=((((-0.27144)*x3714))+(((-1.0)*(1.0)*px))+((x3717*x3724))+(((0.0185150129489311)*x3721))+((cj4*x3725))+(((0.0648043305514941)*x3719))+(((0.27144)*x3715))+((x3719*x3724))+(((0.0648043305514941)*x3717))+(((0.29)*sj1))+(((-0.0185150129489311)*x3722))+(((-1.0)*x3725)));
evalcond[4]=(((x3706*x3729))+((x3708*x3729))+((r22*x3728))+((x3712*x3734))+x3716+((x3708*x3732))+(((-1.0)*x3727))+((x3708*x3733))+((x3706*x3733))+((r21*x3730))+((x3706*x3732))+(((-1.0)*x3713*x3734))+((cj4*x3727))+(((-1.0)*r20*x3731)));
evalcond[5]=((((-1.0)*x3711))+((r01*x3730))+((x3719*x3729))+((cj4*x3735))+(((-1.0)*x3722*x3734))+((x3721*x3734))+(((-1.0)*r00*x3731))+((x3717*x3729))+(((-1.0)*x3704))+((x3719*x3733))+((x3719*x3732))+((x3717*x3733))+((x3717*x3732))+(((-1.0)*x3735))+((r02*x3728)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3736=(cj0*r02);
IkReal x3737=((0.18234135315471)*cj0);
IkReal x3738=(cj5*r01);
IkReal x3739=(r00*sj5);
IkReal x3740=((0.10827950965428)*cj0*cj4);
IkReal x3741=((0.216558867852667)*cj0*sj4);
IkReal x3742=(cj5*r21);
IkReal x3743=(r20*sj5);
IkReal x3744=((0.373377619497519)*cj4);
IkReal x3745=((0.746754716733336)*sj4);
CheckValue<IkReal> x3746=IKPowWithIntegerCheck(cj0,-2);
if(!x3746.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x3746.value)*(((((-1.0)*x3739*x3740))+(((-1.0)*x3738*x3740))+((x3737*x3738))+((r01*sj5*x3741))+((x3737*x3739))+(((0.0098)*cj0*sj0))+(((-0.0838945627463637)*x3736))+(((-1.0)*cj5*r00*x3741))+(((-0.187545437253636)*cj4*x3736))+(((-1.0)*(1.0)*cj0*px)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+(((-0.62876328674038)*x3742))+(((-1.0)*r21*sj5*x3745))+(((-0.62876328674038)*x3743))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x3743*x3744))+((cj5*r20*x3745))+((x3742*x3744)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x3746.value)*(((((-1.0)*x3739*x3740))+(((-1.0)*x3738*x3740))+((x3737*x3738))+((r01*sj5*x3741))+((x3737*x3739))+(((0.0098)*cj0*sj0))+(((-0.0838945627463637)*x3736))+(((-1.0)*cj5*r00*x3741))+(((-0.187545437253636)*cj4*x3736))+(((-1.0)*(1.0)*cj0*px))))))+IKsqr(((((3.44827586206897)*pz))+(((-0.62876328674038)*x3742))+(((-1.0)*r21*sj5*x3745))+(((-0.62876328674038)*x3743))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x3743*x3744))+((cj5*r20*x3745))+((x3742*x3744))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x3746.value)*(((((-1.0)*x3739*x3740))+(((-1.0)*x3738*x3740))+((x3737*x3738))+((r01*sj5*x3741))+((x3737*x3739))+(((0.0098)*cj0*sj0))+(((-0.0838945627463637)*x3736))+(((-1.0)*cj5*r00*x3741))+(((-0.187545437253636)*cj4*x3736))+(((-1.0)*(1.0)*cj0*px))))), ((((3.44827586206897)*pz))+(((-0.62876328674038)*x3742))+(((-1.0)*r21*sj5*x3745))+(((-0.62876328674038)*x3743))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x3743*x3744))+((cj5*r20*x3745))+((x3742*x3744))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3747=((0.187545437253636)*cj4);
IkReal x3748=((0.18234135315471)*cj5);
IkReal x3749=((0.18234135315471)*sj5);
IkReal x3750=((0.29)*(IKcos(j1)));
IkReal x3751=((0.10827950965428)*cj4*cj5);
IkReal x3752=((0.10827950965428)*cj4*sj5);
IkReal x3753=((0.216558867852667)*cj5*sj4);
IkReal x3754=((0.216558867852667)*sj4*sj5);
IkReal x3755=((0.0098)*cj0);
IkReal x3756=(sj0*x3755);
IkReal x3757=((1.0)*py);
IkReal x3758=(r12*sj0);
IkReal x3759=(r11*sj0);
IkReal x3760=(r10*sj0);
IkReal x3761=(cj5*r11);
IkReal x3762=((0.10827950965428)*cj4*sj0);
IkReal x3763=(r10*sj5);
IkReal x3764=sj0*sj0;
IkReal x3765=((0.29)*(IKsin(j1)));
IkReal x3766=((1.0)*px);
IkReal x3767=(cj0*r02);
IkReal x3768=(cj0*r01);
IkReal x3769=(cj0*r00);
IkReal x3770=cj0*cj0;
IkReal x3771=((1.0)*pz);
IkReal x3772=((0.117537022603216)*sj3);
IkReal x3773=(r12*x3772);
IkReal x3774=((0.0160344678271334)*r22);
IkReal x3775=(sj0*x3774);
IkReal x3776=((0.235073880801598)*cj3*sj4);
IkReal x3777=((0.20357990508077)*sj3);
IkReal x3778=((0.0648043305514941)*cj5*r21);
IkReal x3779=((0.0648043305514941)*r20*sj5);
IkReal x3780=(cj5*r10);
IkReal x3781=((0.27144)*cj3*cj4);
IkReal x3782=(r11*sj5);
IkReal x3783=((0.135720094919197)*cj3*sj4);
IkReal x3784=((0.0678600949192303)*cj4*sj3);
IkReal x3785=(cj5*r21);
IkReal x3786=((0.00925751294893567)*cj4*sj0);
IkReal x3787=(r20*sj5);
IkReal x3788=((0.135720094919197)*sj3*sj4);
IkReal x3789=((0.0185150129489311)*cj5*r20*sj4);
IkReal x3790=((0.0185150129489311)*r21*sj4*sj5);
IkReal x3791=(cj0*x3774);
IkReal x3792=(r02*x3772);
IkReal x3793=(cj5*r01);
IkReal x3794=(r00*sj5);
IkReal x3795=((0.00925751294893567)*cj0*cj4);
IkReal x3796=(r01*sj5);
IkReal x3797=(cj5*r00*sj4);
IkReal x3798=((0.0160344678271334)*r12);
IkReal x3799=((0.0648043305514941)*cj5);
IkReal x3800=(r11*x3799);
IkReal x3801=((0.0648043305514941)*sj5);
IkReal x3802=(r10*x3801);
IkReal x3803=((0.00925751294893567)*cj4);
IkReal x3804=(x3761*x3803);
IkReal x3805=(x3763*x3803);
IkReal x3806=((0.0185150129489311)*cj5*sj4);
IkReal x3807=(r10*x3806);
IkReal x3808=((0.0185150129489311)*sj4*sj5);
IkReal x3809=(r11*x3808);
IkReal x3810=((0.117537022603216)*r22*sj3);
IkReal x3811=(sj0*x3810);
IkReal x3812=((0.235073880801598)*cj3*r22*sj4);
IkReal x3813=((0.20357990508077)*sj0*sj3);
IkReal x3814=(cj5*r20);
IkReal x3815=((0.27144)*cj3*cj4*sj0);
IkReal x3816=(r21*sj5);
IkReal x3817=((0.135720094919197)*cj3*sj0*sj4);
IkReal x3818=((0.0678600949192303)*cj4*sj0*sj3);
IkReal x3819=((0.135720094919197)*sj0*sj3*sj4);
IkReal x3820=((0.0160344678271334)*r02);
IkReal x3821=(cj4*x3820);
IkReal x3822=(r01*x3799);
IkReal x3823=(r00*x3801);
IkReal x3824=(cj0*x3765);
IkReal x3825=(cj0*x3810);
IkReal x3826=(x3793*x3803);
IkReal x3827=(x3794*x3803);
IkReal x3828=(r00*x3806);
IkReal x3829=(r01*x3808);
IkReal x3830=((0.20357990508077)*cj0*sj3);
IkReal x3831=((0.27144)*cj0*cj3*cj4);
IkReal x3832=((0.135720094919197)*cj0*cj3*sj4);
IkReal x3833=((0.0678600949192303)*cj0*cj4*sj3);
IkReal x3834=((0.135720094919197)*cj0*sj3*sj4);
IkReal x3835=(cj0*r12);
IkReal x3836=((0.20357990508077)*cj4);
IkReal x3837=((0.117537022603216)*cj0);
IkReal x3838=(x3761*x3837);
IkReal x3839=(x3763*x3837);
IkReal x3840=((-1.0)*sj0*x3824);
IkReal x3841=((0.235073880801598)*cj0*sj4);
IkReal x3842=(cj0*x3798);
IkReal x3843=(r02*sj0);
IkReal x3844=((0.117537022603216)*sj0);
IkReal x3845=(x3793*x3844);
IkReal x3846=(x3794*x3844);
IkReal x3847=((0.235073880801598)*sj0);
evalcond[0]=((((-1.0)*r21*x3754))+pz+((r20*x3753))+((r22*x3747))+((r21*x3751))+(((-1.0)*r20*x3749))+(((-1.0)*r21*x3748))+(((-1.0)*x3750))+(((0.0838945627463637)*r22))+((r20*x3752)));
evalcond[1]=(((x3748*x3759))+(((-1.0)*x3764*x3765))+((x3754*x3759))+(((-0.0838945627463637)*x3758))+((x3749*x3760))+(((-1.0)*x3756))+(((-1.0)*x3761*x3762))+(((-1.0)*x3762*x3763))+(((-1.0)*x3747*x3758))+(((-1.0)*sj0*x3757))+(((-1.0)*x3753*x3760)));
evalcond[2]=((((-1.0)*x3752*x3769))+(((-1.0)*x3751*x3768))+(((-0.0838945627463637)*x3767))+(((-1.0)*x3747*x3767))+x3756+((x3748*x3768))+((x3749*x3769))+(((-1.0)*x3753*x3769))+(((-1.0)*x3765*x3770))+((x3754*x3768))+(((-1.0)*cj0*x3766)));
evalcond[3]=(((x3781*x3782))+((sj0*x3750))+((x3785*x3786))+((x3763*x3784))+((x3761*x3783))+((x3761*x3784))+((x3761*x3777))+(((-1.0)*sj0*x3771))+((x3763*x3777))+((r12*x3776))+((cj4*x3773))+(((-1.0)*x3782*x3788))+((x3786*x3787))+((sj0*x3779))+(((-1.0)*x3773))+((x3763*x3783))+((x3780*x3788))+(((-1.0)*x3780*x3781))+((sj0*x3789))+((cj4*x3775))+((sj0*x3778))+(((-1.0)*sj0*x3790))+(((-1.0)*x3775)));
evalcond[4]=((((-1.0)*x3792))+((cj4*x3791))+((r02*x3776))+((cj0*x3778))+((x3785*x3795))+(((-1.0)*cj0*x3790))+((x3777*x3793))+((cj4*x3792))+((x3784*x3793))+((x3787*x3795))+(((-1.0)*cj0*x3771))+((cj0*x3789))+(((-1.0)*x3788*x3796))+((x3783*x3793))+((x3784*x3794))+(((-1.0)*x3791))+((cj0*x3779))+((x3781*x3796))+(((0.135720094919197)*sj3*x3797))+(((-1.0)*cj5*r00*x3781))+((x3777*x3794))+((cj0*x3750))+((x3783*x3794)));
evalcond[5]=((((-1.0)*x3785*x3817))+(((-1.0)*x3809))+(((-1.0)*x3815*x3816))+(((-1.0)*x3755))+(((-1.0)*x3787*x3813))+((x3816*x3819))+(((-1.0)*sj0*x3765))+x3811+(((-1.0)*cj4*x3811))+x3805+x3804+x3807+x3802+x3800+(((-1.0)*x3798))+(((-1.0)*x3787*x3817))+(((-1.0)*x3814*x3819))+(((-1.0)*x3785*x3813))+((x3814*x3815))+(((-1.0)*x3757))+(((-1.0)*x3785*x3818))+(((-1.0)*x3787*x3818))+(((-1.0)*sj0*x3812))+((cj4*x3798)));
evalcond[6]=((((-1.0)*x3766))+(((-1.0)*x3829))+x3828+x3822+x3823+x3821+x3826+x3825+x3827+(((-1.0)*x3820))+(((0.0098)*sj0))+(((-1.0)*x3785*x3830))+(((-1.0)*x3787*x3830))+(((-1.0)*x3824))+((x3816*x3834))+(((-1.0)*x3785*x3832))+(((-1.0)*x3816*x3831))+(((-1.0)*x3787*x3832))+(((-1.0)*x3785*x3833))+(((-1.0)*x3787*x3833))+(((-1.0)*cj4*x3825))+((x3814*x3831))+(((-1.0)*x3814*x3834))+(((-1.0)*cj0*x3812)));
evalcond[7]=((((-1.0)*x3835*x3836))+(((-1.0)*x3780*x3841))+((sj0*x3826))+x3840+(((-1.0)*cj4*x3839))+((sj0*x3828))+((x3782*x3841))+((sj0*x3827))+(((-1.0)*cj4*x3838))+((sj0*x3822))+((sj0*x3823))+(((0.0098)*x3764))+x3838+x3839+(((-1.0)*sj0*x3829))+((sj0*x3821))+(((-1.0)*sj0*x3820))+(((-0.0678600949192303)*x3835))+(((-1.0)*sj0*x3766)));
evalcond[8]=((((-0.0678600949192303)*x3843))+x3845+x3846+x3840+((cj0*x3805))+(((-1.0)*x3797*x3847))+((cj0*x3800))+(((-1.0)*cj0*x3757))+(((-1.0)*cj4*x3845))+((r01*sj4*sj5*x3847))+((cj4*x3842))+(((-1.0)*x3842))+(((-1.0)*x3836*x3843))+(((-1.0)*cj0*x3809))+(((-1.0)*cj4*x3846))+((cj0*x3804))+((cj0*x3802))+((cj0*x3807))+(((-0.0098)*x3770)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3848=((0.250000349687704)*cj1);
IkReal x3849=((0.250000349687704)*sj1);
IkReal x3850=((0.749999650312296)*cj1*cj4);
IkReal x3851=((0.433012903784321)*cj1*cj5);
IkReal x3852=(r01*x3851);
IkReal x3853=((0.433012903784321)*cj1*sj5);
IkReal x3854=(r00*x3853);
IkReal x3855=((0.749999650312296)*cj4*sj1);
IkReal x3856=((0.433012903784321)*cj5*sj1);
IkReal x3857=(r21*x3856);
IkReal x3858=((0.433012903784321)*sj1*sj5);
IkReal x3859=(r20*x3858);
IkReal x3860=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3861=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3862=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3863=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3864=(r21*x3851);
IkReal x3865=(r20*x3853);
IkReal x3866=(r01*x3856);
IkReal x3867=(r00*x3858);
if( IKabs((((cj4*x3854))+(((-1.0)*x3859))+((r00*x3860))+((r20*x3862))+(((-1.0)*r21*x3863))+((cj4*x3857))+((cj4*x3852))+(((-1.0)*x3854))+(((-1.0)*x3857))+(((-1.0)*x3852))+(((-1.0)*r01*x3861))+((r22*x3849))+((r02*x3848))+((r22*x3855))+((r02*x3850))+((cj4*x3859)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3860))+(((-1.0)*x3865))+((cj4*x3865))+((r22*x3848))+(((-1.0)*r21*x3861))+(((-1.0)*r02*x3849))+((r22*x3850))+(((-1.0)*cj4*x3866))+(((-1.0)*r02*x3855))+x3866+x3867+(((-1.0)*cj4*x3867))+((cj4*x3864))+(((-1.0)*x3864))+((r01*x3863))+(((-1.0)*r00*x3862)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x3854))+(((-1.0)*x3859))+((r00*x3860))+((r20*x3862))+(((-1.0)*r21*x3863))+((cj4*x3857))+((cj4*x3852))+(((-1.0)*x3854))+(((-1.0)*x3857))+(((-1.0)*x3852))+(((-1.0)*r01*x3861))+((r22*x3849))+((r02*x3848))+((r22*x3855))+((r02*x3850))+((cj4*x3859))))+IKsqr((((r20*x3860))+(((-1.0)*x3865))+((cj4*x3865))+((r22*x3848))+(((-1.0)*r21*x3861))+(((-1.0)*r02*x3849))+((r22*x3850))+(((-1.0)*cj4*x3866))+(((-1.0)*r02*x3855))+x3866+x3867+(((-1.0)*cj4*x3867))+((cj4*x3864))+(((-1.0)*x3864))+((r01*x3863))+(((-1.0)*r00*x3862))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x3854))+(((-1.0)*x3859))+((r00*x3860))+((r20*x3862))+(((-1.0)*r21*x3863))+((cj4*x3857))+((cj4*x3852))+(((-1.0)*x3854))+(((-1.0)*x3857))+(((-1.0)*x3852))+(((-1.0)*r01*x3861))+((r22*x3849))+((r02*x3848))+((r22*x3855))+((r02*x3850))+((cj4*x3859))), (((r20*x3860))+(((-1.0)*x3865))+((cj4*x3865))+((r22*x3848))+(((-1.0)*r21*x3861))+(((-1.0)*r02*x3849))+((r22*x3850))+(((-1.0)*cj4*x3866))+(((-1.0)*r02*x3855))+x3866+x3867+(((-1.0)*cj4*x3867))+((cj4*x3864))+(((-1.0)*x3864))+((r01*x3863))+(((-1.0)*r00*x3862))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3868=IKcos(j2);
IkReal x3869=(cj1*x3868);
IkReal x3870=IKsin(j2);
IkReal x3871=(sj1*x3870);
IkReal x3872=(x3871+x3869);
IkReal x3873=((0.749999650312296)*cj4);
IkReal x3874=(cj5*r21);
IkReal x3875=((0.433012903784321)*x3874);
IkReal x3876=(r20*sj5);
IkReal x3877=((0.433012903784321)*x3876);
IkReal x3878=(cj5*r20*sj4);
IkReal x3879=(r21*sj4*sj5);
IkReal x3880=(cj1*x3870);
IkReal x3881=(cj5*r01);
IkReal x3882=((0.433012903784321)*x3881);
IkReal x3883=(r00*sj5);
IkReal x3884=((0.433012903784321)*x3883);
IkReal x3885=(sj1*x3868);
IkReal x3886=(cj5*r00*sj4);
IkReal x3887=(r01*sj4*sj5);
IkReal x3888=((0.0160344678271334)*r22);
IkReal x3889=((0.00925751294893567)*cj4);
IkReal x3890=((0.0160344678271334)*r02);
IkReal x3891=((0.433012903784321)*sj3);
IkReal x3892=(r02*x3891);
IkReal x3893=((0.866025201892125)*cj3*sj4);
IkReal x3894=((0.749999650312296)*sj3);
IkReal x3895=(cj3*cj4*sj5);
IkReal x3896=((1.0)*cj3*cj4*cj5);
IkReal x3897=((0.500000349687582)*cj3*sj4);
IkReal x3898=((0.250000349687704)*cj4*sj3);
IkReal x3899=((0.500000349687582)*sj3);
IkReal x3900=(r22*x3891);
evalcond[0]=((((-1.0)*r22*x3873))+(((-0.866025201892125)*x3878))+(((-1.0)*cj4*x3875))+x3877+x3872+x3875+(((-1.0)*cj4*x3877))+(((-1.0)*(0.250000349687704)*r22))+(((0.866025201892125)*x3879)));
evalcond[1]=((((0.866025201892125)*x3887))+(((-1.0)*cj4*x3882))+(((-0.866025201892125)*x3886))+(((-1.0)*r02*x3873))+(((-1.0)*x3885))+(((-1.0)*(0.250000349687704)*r02))+x3884+x3882+x3880+(((-1.0)*cj4*x3884)));
evalcond[2]=((((0.0648043305514941)*x3876))+(((-0.27144)*x3869))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x3879))+(((-1.0)*x3888))+(((-0.27144)*x3871))+(((0.29)*cj1))+(((0.0185150129489311)*x3878))+((cj4*x3888))+((x3876*x3889))+(((0.0648043305514941)*x3874))+((x3874*x3889)));
evalcond[3]=((((-1.0)*(1.0)*px))+((cj4*x3890))+(((-1.0)*x3890))+(((-1.0)*(0.29)*sj1))+(((0.0648043305514941)*x3881))+((x3881*x3889))+(((0.0648043305514941)*x3883))+(((-0.27144)*x3880))+(((-0.0185150129489311)*x3887))+((x3883*x3889))+(((0.27144)*x3885))+(((0.0185150129489311)*x3886)));
evalcond[4]=(((x3881*x3898))+((r01*x3895))+(((-1.0)*x3887*x3899))+(((-1.0)*r00*x3896))+x3872+((x3881*x3897))+(((-1.0)*x3892))+((cj4*x3892))+((x3886*x3899))+((r02*x3893))+((x3883*x3897))+((x3883*x3894))+((x3881*x3894))+((x3883*x3898)));
evalcond[5]=((((-1.0)*x3880))+((x3874*x3894))+((x3874*x3898))+(((-1.0)*x3900))+((x3876*x3897))+(((-1.0)*x3879*x3899))+((x3874*x3897))+((x3876*x3894))+((x3878*x3899))+((x3876*x3898))+x3885+((r21*x3895))+(((-1.0)*r20*x3896))+((r22*x3893))+((cj4*x3900)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3901=((0.250000349687704)*cj1);
IkReal x3902=((0.250000349687704)*sj1);
IkReal x3903=((0.749999650312296)*cj1*cj4);
IkReal x3904=((0.433012903784321)*cj1*cj5);
IkReal x3905=(r01*x3904);
IkReal x3906=((0.433012903784321)*cj1*sj5);
IkReal x3907=(r00*x3906);
IkReal x3908=((0.749999650312296)*cj4*sj1);
IkReal x3909=((0.433012903784321)*cj5*sj1);
IkReal x3910=(r21*x3909);
IkReal x3911=((0.433012903784321)*sj1*sj5);
IkReal x3912=(r20*x3911);
IkReal x3913=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3914=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3915=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3916=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3917=(r21*x3904);
IkReal x3918=(r20*x3906);
IkReal x3919=(r01*x3909);
IkReal x3920=(r00*x3911);
if( IKabs(((((-1.0)*cj4*x3905))+(((-1.0)*r02*x3903))+(((-1.0)*x3912))+x3907+x3905+((cj4*x3910))+(((-1.0)*cj4*x3907))+(((-1.0)*r21*x3916))+((r22*x3902))+((r20*x3915))+(((-1.0)*r02*x3901))+((r01*x3914))+(((-1.0)*r00*x3913))+((cj4*x3912))+(((-1.0)*x3910))+((r22*x3908)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x3915))+(((-1.0)*r01*x3916))+((r02*x3902))+((cj4*x3917))+(((-1.0)*x3920))+(((-1.0)*r21*x3914))+((r20*x3913))+((cj4*x3920))+((cj4*x3918))+((r02*x3908))+(((-1.0)*x3918))+((r22*x3903))+(((-1.0)*x3917))+((cj4*x3919))+(((-1.0)*x3919))+((r22*x3901)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj4*x3905))+(((-1.0)*r02*x3903))+(((-1.0)*x3912))+x3907+x3905+((cj4*x3910))+(((-1.0)*cj4*x3907))+(((-1.0)*r21*x3916))+((r22*x3902))+((r20*x3915))+(((-1.0)*r02*x3901))+((r01*x3914))+(((-1.0)*r00*x3913))+((cj4*x3912))+(((-1.0)*x3910))+((r22*x3908))))+IKsqr((((r00*x3915))+(((-1.0)*r01*x3916))+((r02*x3902))+((cj4*x3917))+(((-1.0)*x3920))+(((-1.0)*r21*x3914))+((r20*x3913))+((cj4*x3920))+((cj4*x3918))+((r02*x3908))+(((-1.0)*x3918))+((r22*x3903))+(((-1.0)*x3917))+((cj4*x3919))+(((-1.0)*x3919))+((r22*x3901))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj4*x3905))+(((-1.0)*r02*x3903))+(((-1.0)*x3912))+x3907+x3905+((cj4*x3910))+(((-1.0)*cj4*x3907))+(((-1.0)*r21*x3916))+((r22*x3902))+((r20*x3915))+(((-1.0)*r02*x3901))+((r01*x3914))+(((-1.0)*r00*x3913))+((cj4*x3912))+(((-1.0)*x3910))+((r22*x3908))), (((r00*x3915))+(((-1.0)*r01*x3916))+((r02*x3902))+((cj4*x3917))+(((-1.0)*x3920))+(((-1.0)*r21*x3914))+((r20*x3913))+((cj4*x3920))+((cj4*x3918))+((r02*x3908))+(((-1.0)*x3918))+((r22*x3903))+(((-1.0)*x3917))+((cj4*x3919))+(((-1.0)*x3919))+((r22*x3901))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3921=IKcos(j2);
IkReal x3922=(cj1*x3921);
IkReal x3923=((0.749999650312296)*cj4);
IkReal x3924=(cj5*r21);
IkReal x3925=((0.433012903784321)*x3924);
IkReal x3926=(r20*sj5);
IkReal x3927=((0.433012903784321)*x3926);
IkReal x3928=IKsin(j2);
IkReal x3929=(sj1*x3928);
IkReal x3930=(cj5*r20*sj4);
IkReal x3931=(r21*sj4*sj5);
IkReal x3932=(sj1*x3921);
IkReal x3933=(cj1*x3928);
IkReal x3934=(x3932+(((-1.0)*x3933)));
IkReal x3935=(cj5*r01);
IkReal x3936=((0.433012903784321)*x3935);
IkReal x3937=(r00*sj5);
IkReal x3938=((0.433012903784321)*x3937);
IkReal x3939=(cj5*r00*sj4);
IkReal x3940=(r01*sj4*sj5);
IkReal x3941=((0.0160344678271334)*r22);
IkReal x3942=((0.00925751294893567)*cj4);
IkReal x3943=((0.0160344678271334)*r02);
IkReal x3944=((0.433012903784321)*sj3);
IkReal x3945=(r22*x3944);
IkReal x3946=((0.866025201892125)*cj3*sj4);
IkReal x3947=((0.749999650312296)*sj3);
IkReal x3948=(cj3*cj4*sj5);
IkReal x3949=((1.0)*cj3*cj4*cj5);
IkReal x3950=((0.500000349687582)*cj3*sj4);
IkReal x3951=((0.250000349687704)*cj4*sj3);
IkReal x3952=((0.500000349687582)*sj3);
IkReal x3953=(r02*x3944);
evalcond[0]=(x3925+x3929+x3922+x3927+(((0.866025201892125)*x3931))+(((-0.866025201892125)*x3930))+(((-1.0)*cj4*x3925))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x3927))+(((-1.0)*r22*x3923)));
evalcond[1]=((((-1.0)*cj4*x3936))+x3938+x3936+x3934+(((-1.0)*r02*x3923))+(((0.866025201892125)*x3940))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x3938))+(((-0.866025201892125)*x3939)));
evalcond[2]=((((-0.27144)*x3922))+(((-0.27144)*x3929))+(((-1.0)*x3941))+((cj4*x3941))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x3924))+(((0.0185150129489311)*x3930))+((x3926*x3942))+(((0.29)*cj1))+(((0.0648043305514941)*x3926))+((x3924*x3942))+(((-0.0185150129489311)*x3931)));
evalcond[3]=((((0.27144)*x3933))+(((-1.0)*(1.0)*px))+(((-1.0)*x3943))+(((-0.0185150129489311)*x3940))+(((0.0648043305514941)*x3935))+((cj4*x3943))+(((0.0648043305514941)*x3937))+(((-0.27144)*x3932))+((x3935*x3942))+(((0.0185150129489311)*x3939))+(((0.29)*sj1))+((x3937*x3942)));
evalcond[4]=(((x3926*x3951))+x3934+((x3926*x3950))+((r21*x3948))+((x3924*x3947))+((x3926*x3947))+((x3924*x3951))+(((-1.0)*x3931*x3952))+(((-1.0)*r20*x3949))+((x3924*x3950))+((r22*x3946))+((x3930*x3952))+(((-1.0)*x3945))+((cj4*x3945)));
evalcond[5]=((((-1.0)*x3940*x3952))+(((-1.0)*r00*x3949))+((x3935*x3947))+(((-1.0)*x3929))+(((-1.0)*x3922))+((x3937*x3951))+((x3937*x3950))+((cj4*x3953))+((x3935*x3950))+((x3935*x3951))+((r02*x3946))+((x3939*x3952))+((x3937*x3947))+((r01*x3948))+(((-1.0)*x3953)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3954=((0.250000349687704)*cj1);
IkReal x3955=((0.250000349687704)*sj1);
IkReal x3956=((0.749999650312296)*cj1*cj4);
IkReal x3957=((0.433012903784321)*cj1*cj5);
IkReal x3958=(r11*x3957);
IkReal x3959=((0.433012903784321)*cj1*sj5);
IkReal x3960=(r10*x3959);
IkReal x3961=((0.749999650312296)*cj4*sj1);
IkReal x3962=((0.433012903784321)*cj5*sj1);
IkReal x3963=(r21*x3962);
IkReal x3964=((0.433012903784321)*sj1*sj5);
IkReal x3965=(r20*x3964);
IkReal x3966=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3967=((0.866025201892125)*cj1*sj4*sj5);
IkReal x3968=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3969=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3970=(r21*x3957);
IkReal x3971=(r20*x3959);
IkReal x3972=(r11*x3962);
IkReal x3973=(r10*x3964);
if( IKabs((((cj4*x3958))+((r12*x3954))+((r12*x3956))+((cj4*x3965))+((cj4*x3960))+(((-1.0)*r11*x3967))+(((-1.0)*x3965))+(((-1.0)*r21*x3969))+(((-1.0)*x3960))+((r20*x3968))+((r10*x3966))+(((-1.0)*x3958))+((cj4*x3963))+((r22*x3955))+((r22*x3961))+(((-1.0)*x3963)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x3970))+((cj4*x3971))+(((-1.0)*r12*x3961))+((r22*x3956))+((r11*x3969))+(((-1.0)*cj4*x3972))+(((-1.0)*cj4*x3973))+(((-1.0)*r10*x3968))+(((-1.0)*x3970))+(((-1.0)*r21*x3967))+(((-1.0)*x3971))+((r22*x3954))+x3973+x3972+(((-1.0)*r12*x3955))+((r20*x3966)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x3958))+((r12*x3954))+((r12*x3956))+((cj4*x3965))+((cj4*x3960))+(((-1.0)*r11*x3967))+(((-1.0)*x3965))+(((-1.0)*r21*x3969))+(((-1.0)*x3960))+((r20*x3968))+((r10*x3966))+(((-1.0)*x3958))+((cj4*x3963))+((r22*x3955))+((r22*x3961))+(((-1.0)*x3963))))+IKsqr((((cj4*x3970))+((cj4*x3971))+(((-1.0)*r12*x3961))+((r22*x3956))+((r11*x3969))+(((-1.0)*cj4*x3972))+(((-1.0)*cj4*x3973))+(((-1.0)*r10*x3968))+(((-1.0)*x3970))+(((-1.0)*r21*x3967))+(((-1.0)*x3971))+((r22*x3954))+x3973+x3972+(((-1.0)*r12*x3955))+((r20*x3966))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x3958))+((r12*x3954))+((r12*x3956))+((cj4*x3965))+((cj4*x3960))+(((-1.0)*r11*x3967))+(((-1.0)*x3965))+(((-1.0)*r21*x3969))+(((-1.0)*x3960))+((r20*x3968))+((r10*x3966))+(((-1.0)*x3958))+((cj4*x3963))+((r22*x3955))+((r22*x3961))+(((-1.0)*x3963))), (((cj4*x3970))+((cj4*x3971))+(((-1.0)*r12*x3961))+((r22*x3956))+((r11*x3969))+(((-1.0)*cj4*x3972))+(((-1.0)*cj4*x3973))+(((-1.0)*r10*x3968))+(((-1.0)*x3970))+(((-1.0)*r21*x3967))+(((-1.0)*x3971))+((r22*x3954))+x3973+x3972+(((-1.0)*r12*x3955))+((r20*x3966))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3974=IKcos(j2);
IkReal x3975=(cj1*x3974);
IkReal x3976=IKsin(j2);
IkReal x3977=(sj1*x3976);
IkReal x3978=(x3975+x3977);
IkReal x3979=((0.749999650312296)*cj4);
IkReal x3980=(cj5*r21);
IkReal x3981=((0.433012903784321)*x3980);
IkReal x3982=(r20*sj5);
IkReal x3983=((0.433012903784321)*x3982);
IkReal x3984=(cj5*r20*sj4);
IkReal x3985=(r21*sj4*sj5);
IkReal x3986=(cj1*x3976);
IkReal x3987=(cj5*r11);
IkReal x3988=((0.433012903784321)*x3987);
IkReal x3989=(r10*sj5);
IkReal x3990=((0.433012903784321)*x3989);
IkReal x3991=(sj1*x3974);
IkReal x3992=(cj5*r10*sj4);
IkReal x3993=(r11*sj4*sj5);
IkReal x3994=((0.0160344678271334)*r22);
IkReal x3995=((0.00925751294893567)*cj4);
IkReal x3996=((0.0160344678271334)*r12);
IkReal x3997=((0.433012903784321)*sj3);
IkReal x3998=(r12*x3997);
IkReal x3999=((0.866025201892125)*cj3*sj4);
IkReal x4000=((0.749999650312296)*sj3);
IkReal x4001=(cj3*cj4*sj5);
IkReal x4002=((1.0)*cj3*cj4*cj5);
IkReal x4003=((0.500000349687582)*cj3*sj4);
IkReal x4004=((0.250000349687704)*cj4*sj3);
IkReal x4005=((0.500000349687582)*sj3);
IkReal x4006=(r22*x3997);
evalcond[0]=((((-0.866025201892125)*x3984))+(((-1.0)*cj4*x3981))+x3978+x3983+x3981+(((-1.0)*r22*x3979))+(((0.866025201892125)*x3985))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x3983)));
evalcond[1]=((((-1.0)*r12*x3979))+(((-1.0)*cj4*x3990))+(((-0.866025201892125)*x3992))+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x3993))+x3990+x3988+x3986+(((-1.0)*x3991))+(((-1.0)*cj4*x3988)));
evalcond[2]=((((-0.27144)*x3977))+(((-0.27144)*x3975))+(((-1.0)*(1.0)*pz))+((cj4*x3994))+(((0.29)*cj1))+(((-0.0185150129489311)*x3985))+(((0.0185150129489311)*x3984))+(((-1.0)*x3994))+(((0.0648043305514941)*x3980))+(((0.0648043305514941)*x3982))+((x3980*x3995))+((x3982*x3995)));
evalcond[3]=((((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+((cj4*x3996))+(((-0.0185150129489311)*x3993))+(((0.0648043305514941)*x3989))+((x3989*x3995))+(((-1.0)*x3996))+((x3987*x3995))+(((-0.27144)*x3986))+(((0.0648043305514941)*x3987))+(((0.0185150129489311)*x3992))+(((0.27144)*x3991)));
evalcond[4]=(((x3987*x4003))+((cj4*x3998))+((r12*x3999))+((x3987*x4004))+(((-1.0)*x3993*x4005))+((x3987*x4000))+((r11*x4001))+(((-1.0)*x3998))+(((-1.0)*r10*x4002))+x3978+((x3989*x4004))+((x3992*x4005))+((x3989*x4000))+((x3989*x4003)));
evalcond[5]=((((-1.0)*x4006))+(((-1.0)*r20*x4002))+(((-1.0)*x3985*x4005))+x3991+((x3984*x4005))+((x3980*x4004))+(((-1.0)*x3986))+((r22*x3999))+((x3980*x4003))+((x3982*x4003))+((cj4*x4006))+((x3980*x4000))+((x3982*x4004))+((r21*x4001))+((x3982*x4000)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4007=((0.250000349687704)*cj1);
IkReal x4008=((0.250000349687704)*sj1);
IkReal x4009=((0.749999650312296)*cj1*cj4);
IkReal x4010=((0.433012903784321)*cj1*cj5);
IkReal x4011=(r11*x4010);
IkReal x4012=((0.433012903784321)*cj1*sj5);
IkReal x4013=(r10*x4012);
IkReal x4014=((0.749999650312296)*cj4*sj1);
IkReal x4015=((0.433012903784321)*cj5*sj1);
IkReal x4016=(r21*x4015);
IkReal x4017=((0.433012903784321)*sj1*sj5);
IkReal x4018=(r20*x4017);
IkReal x4019=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4020=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4021=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4022=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4023=(r21*x4010);
IkReal x4024=(r20*x4012);
IkReal x4025=(r11*x4015);
IkReal x4026=(r10*x4017);
if( IKabs((x4011+x4013+(((-1.0)*x4018))+((cj4*x4016))+(((-1.0)*cj4*x4013))+(((-1.0)*r21*x4022))+((cj4*x4018))+((r22*x4014))+((r11*x4020))+((r20*x4021))+(((-1.0)*x4016))+((r22*x4008))+(((-1.0)*cj4*x4011))+(((-1.0)*r12*x4009))+(((-1.0)*r12*x4007))+(((-1.0)*r10*x4019)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x4023))+((cj4*x4024))+((r10*x4021))+(((-1.0)*r11*x4022))+(((-1.0)*x4024))+((r12*x4014))+((r22*x4007))+(((-1.0)*r21*x4020))+((r22*x4009))+((cj4*x4026))+((cj4*x4025))+(((-1.0)*x4026))+((r20*x4019))+(((-1.0)*x4025))+((cj4*x4023))+((r12*x4008)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x4011+x4013+(((-1.0)*x4018))+((cj4*x4016))+(((-1.0)*cj4*x4013))+(((-1.0)*r21*x4022))+((cj4*x4018))+((r22*x4014))+((r11*x4020))+((r20*x4021))+(((-1.0)*x4016))+((r22*x4008))+(((-1.0)*cj4*x4011))+(((-1.0)*r12*x4009))+(((-1.0)*r12*x4007))+(((-1.0)*r10*x4019))))+IKsqr(((((-1.0)*x4023))+((cj4*x4024))+((r10*x4021))+(((-1.0)*r11*x4022))+(((-1.0)*x4024))+((r12*x4014))+((r22*x4007))+(((-1.0)*r21*x4020))+((r22*x4009))+((cj4*x4026))+((cj4*x4025))+(((-1.0)*x4026))+((r20*x4019))+(((-1.0)*x4025))+((cj4*x4023))+((r12*x4008))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((x4011+x4013+(((-1.0)*x4018))+((cj4*x4016))+(((-1.0)*cj4*x4013))+(((-1.0)*r21*x4022))+((cj4*x4018))+((r22*x4014))+((r11*x4020))+((r20*x4021))+(((-1.0)*x4016))+((r22*x4008))+(((-1.0)*cj4*x4011))+(((-1.0)*r12*x4009))+(((-1.0)*r12*x4007))+(((-1.0)*r10*x4019))), ((((-1.0)*x4023))+((cj4*x4024))+((r10*x4021))+(((-1.0)*r11*x4022))+(((-1.0)*x4024))+((r12*x4014))+((r22*x4007))+(((-1.0)*r21*x4020))+((r22*x4009))+((cj4*x4026))+((cj4*x4025))+(((-1.0)*x4026))+((r20*x4019))+(((-1.0)*x4025))+((cj4*x4023))+((r12*x4008))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4027=IKcos(j2);
IkReal x4028=(cj1*x4027);
IkReal x4029=((0.749999650312296)*cj4);
IkReal x4030=(cj5*r21);
IkReal x4031=((0.433012903784321)*x4030);
IkReal x4032=(r20*sj5);
IkReal x4033=((0.433012903784321)*x4032);
IkReal x4034=IKsin(j2);
IkReal x4035=(sj1*x4034);
IkReal x4036=(cj5*r20*sj4);
IkReal x4037=(r21*sj4*sj5);
IkReal x4038=(sj1*x4027);
IkReal x4039=(cj1*x4034);
IkReal x4040=(x4038+(((-1.0)*x4039)));
IkReal x4041=(cj5*r11);
IkReal x4042=((0.433012903784321)*x4041);
IkReal x4043=(r10*sj5);
IkReal x4044=((0.433012903784321)*x4043);
IkReal x4045=(cj5*r10*sj4);
IkReal x4046=(r11*sj4*sj5);
IkReal x4047=((0.0160344678271334)*r22);
IkReal x4048=((0.00925751294893567)*cj4);
IkReal x4049=((0.0160344678271334)*r12);
IkReal x4050=((0.433012903784321)*sj3);
IkReal x4051=(r22*x4050);
IkReal x4052=((0.866025201892125)*cj3*sj4);
IkReal x4053=((0.749999650312296)*sj3);
IkReal x4054=(cj3*cj4*sj5);
IkReal x4055=((1.0)*cj3*cj4*cj5);
IkReal x4056=((0.500000349687582)*cj3*sj4);
IkReal x4057=((0.250000349687704)*cj4*sj3);
IkReal x4058=((0.500000349687582)*sj3);
IkReal x4059=(r12*x4050);
evalcond[0]=((((-0.866025201892125)*x4036))+(((0.866025201892125)*x4037))+x4035+x4033+x4031+(((-1.0)*cj4*x4033))+(((-1.0)*cj4*x4031))+(((-1.0)*r22*x4029))+x4028+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=(x4040+x4042+x4044+(((-1.0)*r12*x4029))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*cj4*x4042))+(((-0.866025201892125)*x4045))+(((0.866025201892125)*x4046))+(((-1.0)*cj4*x4044)));
evalcond[2]=(((x4030*x4048))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x4028))+(((0.0648043305514941)*x4030))+(((0.0185150129489311)*x4036))+(((0.29)*cj1))+((cj4*x4047))+((x4032*x4048))+(((-0.0185150129489311)*x4037))+(((0.0648043305514941)*x4032))+(((-1.0)*x4047))+(((-0.27144)*x4035)));
evalcond[3]=((((-1.0)*(1.0)*py))+(((0.0648043305514941)*x4041))+((x4041*x4048))+(((-0.27144)*x4038))+((cj4*x4049))+(((0.0185150129489311)*x4045))+((x4043*x4048))+(((-0.0185150129489311)*x4046))+(((0.0648043305514941)*x4043))+(((0.27144)*x4039))+(((-1.0)*x4049))+(((0.29)*sj1)));
evalcond[4]=(x4040+(((-1.0)*r20*x4055))+((r21*x4054))+(((-1.0)*x4051))+((x4032*x4056))+((x4032*x4053))+((x4032*x4057))+((r22*x4052))+((cj4*x4051))+((x4030*x4057))+((x4036*x4058))+((x4030*x4056))+(((-1.0)*x4037*x4058))+((x4030*x4053)));
evalcond[5]=(((x4041*x4053))+((x4043*x4056))+((x4043*x4057))+(((-1.0)*x4028))+(((-1.0)*r10*x4055))+(((-1.0)*x4046*x4058))+((x4041*x4057))+((x4043*x4053))+((x4045*x4058))+((x4041*x4056))+(((-1.0)*x4059))+(((-1.0)*x4035))+((r12*x4052))+((r11*x4054))+((cj4*x4059)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4060=((0.250000349687704)*r12);
IkReal x4061=((0.749999650312296)*cj4*r12);
IkReal x4062=((0.433012903784321)*cj1);
IkReal x4063=(cj5*r11);
IkReal x4064=(x4062*x4063);
IkReal x4065=(r10*sj5);
IkReal x4066=(x4062*x4065);
IkReal x4067=((0.250000349687704)*r22*sj0);
IkReal x4068=(cj5*r10);
IkReal x4069=((0.866025201892125)*cj1*sj4);
IkReal x4070=(r11*sj5);
IkReal x4071=((0.749999650312296)*cj4*r22*sj0);
IkReal x4072=(cj5*r21);
IkReal x4073=((0.433012903784321)*sj0*sj1);
IkReal x4074=(x4072*x4073);
IkReal x4075=(r20*sj5);
IkReal x4076=(x4073*x4075);
IkReal x4077=(cj5*r20);
IkReal x4078=((0.866025201892125)*sj0*sj1*sj4);
IkReal x4079=(r21*sj5);
IkReal x4080=((0.433012903784321)*sj1);
IkReal x4081=(x4063*x4080);
IkReal x4082=(x4065*x4080);
IkReal x4083=((0.433012903784321)*cj1*sj0);
IkReal x4084=(x4072*x4083);
IkReal x4085=(x4075*x4083);
IkReal x4086=((0.866025201892125)*sj1*sj4);
IkReal x4087=((0.866025201892125)*cj1*sj0*sj4);
CheckValue<IkReal> x4088 = IKatan2WithCheck(IkReal((((cj4*x4066))+((cj4*x4074))+(((-1.0)*x4074))+(((-1.0)*x4078*x4079))+(((-1.0)*x4064))+((cj1*x4060))+((cj1*x4061))+((sj1*x4071))+(((-1.0)*x4066))+((x4068*x4069))+((sj1*x4067))+(((-1.0)*x4069*x4070))+((cj4*x4064))+((cj4*x4076))+((x4077*x4078))+(((-1.0)*x4076)))),IkReal(((((-1.0)*x4085))+(((-1.0)*sj1*x4061))+((x4077*x4087))+((cj1*x4067))+(((-1.0)*x4084))+(((-1.0)*x4068*x4086))+((x4070*x4086))+x4082+x4081+((cj1*x4071))+(((-1.0)*cj4*x4082))+(((-1.0)*x4079*x4087))+((cj4*x4085))+(((-1.0)*cj4*x4081))+(((-1.0)*sj1*x4060))+((cj4*x4084)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4088.valid){
continue;
}
CheckValue<IkReal> x4089=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4089.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4088.value)+(((1.5707963267949)*(x4089.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4090=IKcos(j2);
IkReal x4091=(cj1*x4090);
IkReal x4092=((0.749999650312296)*cj4);
IkReal x4093=(cj5*r21);
IkReal x4094=((0.433012903784321)*x4093);
IkReal x4095=(r20*sj5);
IkReal x4096=((0.433012903784321)*x4095);
IkReal x4097=IKsin(j2);
IkReal x4098=(sj1*x4097);
IkReal x4099=(cj5*r20*sj4);
IkReal x4100=(r21*sj4*sj5);
IkReal x4101=(cj5*r01);
IkReal x4102=((0.433012903784321)*x4101);
IkReal x4103=(r00*sj5);
IkReal x4104=((0.433012903784321)*x4103);
IkReal x4105=(cj1*x4097);
IkReal x4106=(cj0*x4105);
IkReal x4107=(cj5*r00*sj4);
IkReal x4108=(r01*sj4*sj5);
IkReal x4109=(cj0*sj1*x4090);
IkReal x4110=(cj5*r11);
IkReal x4111=((0.433012903784321)*x4110);
IkReal x4112=(r10*sj5);
IkReal x4113=((0.433012903784321)*x4112);
IkReal x4114=(sj0*x4105);
IkReal x4115=(cj5*r10*sj4);
IkReal x4116=(r11*sj4*sj5);
IkReal x4117=(sj0*sj1*x4090);
IkReal x4118=((0.0160344678271334)*r22);
IkReal x4119=((0.00925751294893567)*cj4);
IkReal x4120=((0.0160344678271334)*r02);
IkReal x4121=((0.29)*sj1);
IkReal x4122=((0.0160344678271334)*r12);
IkReal x4123=((0.433012903784321)*sj3);
IkReal x4124=(r22*x4123);
IkReal x4125=((0.866025201892125)*cj3*sj4);
IkReal x4126=((0.749999650312296)*sj3);
IkReal x4127=(cj3*cj4*sj5);
IkReal x4128=((1.0)*cj3*cj4*cj5);
IkReal x4129=((0.500000349687582)*cj3*sj4);
IkReal x4130=((0.250000349687704)*cj4*sj3);
IkReal x4131=((0.500000349687582)*sj3);
IkReal x4132=(r02*x4123);
IkReal x4133=(r12*x4123);
evalcond[0]=((((-1.0)*cj4*x4096))+x4098+x4096+x4091+x4094+(((-0.866025201892125)*x4099))+(((-1.0)*cj4*x4094))+(((0.866025201892125)*x4100))+(((-1.0)*r22*x4092))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((0.866025201892125)*x4108))+(((-1.0)*cj4*x4102))+(((-0.866025201892125)*x4107))+(((-1.0)*cj4*x4104))+x4102+x4106+x4104+(((-1.0)*r02*x4092))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*x4109)));
evalcond[2]=((((-1.0)*cj4*x4111))+(((-1.0)*x4117))+(((-1.0)*cj4*x4113))+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x4116))+(((-1.0)*r12*x4092))+(((-0.866025201892125)*x4115))+x4111+x4113+x4114);
evalcond[3]=((((-0.27144)*x4098))+((x4093*x4119))+(((-1.0)*(1.0)*pz))+((x4095*x4119))+(((-1.0)*x4118))+(((-0.27144)*x4091))+(((0.29)*cj1))+(((-0.0185150129489311)*x4100))+(((0.0648043305514941)*x4093))+(((0.0185150129489311)*x4099))+((cj4*x4118))+(((0.0648043305514941)*x4095)));
evalcond[4]=((((-1.0)*(1.0)*px))+(((-1.0)*x4120))+((cj4*x4120))+(((0.0098)*sj0))+(((-0.27144)*x4106))+(((0.0648043305514941)*x4101))+((x4101*x4119))+(((0.27144)*x4109))+(((0.0648043305514941)*x4103))+(((-1.0)*cj0*x4121))+(((0.0185150129489311)*x4107))+((x4103*x4119))+(((-0.0185150129489311)*x4108)));
evalcond[5]=((((-0.0185150129489311)*x4116))+(((-1.0)*(1.0)*py))+(((-0.27144)*x4114))+(((-1.0)*sj0*x4121))+(((0.0648043305514941)*x4112))+((x4110*x4119))+(((-1.0)*x4122))+((cj4*x4122))+(((0.0648043305514941)*x4110))+((x4112*x4119))+(((0.27144)*x4117))+(((-1.0)*(0.0098)*cj0))+(((0.0185150129489311)*x4115)));
evalcond[6]=(((x4093*x4129))+((x4099*x4131))+(((-1.0)*x4124))+((x4095*x4129))+((cj4*x4124))+((x4095*x4130))+(((-1.0)*r20*x4128))+((x4093*x4130))+(((-1.0)*x4105))+((x4095*x4126))+(((-1.0)*x4100*x4131))+((sj1*x4090))+((r21*x4127))+((x4093*x4126))+((r22*x4125)));
evalcond[7]=(((cj0*x4098))+(((-1.0)*r00*x4128))+(((-1.0)*x4108*x4131))+((cj4*x4132))+(((-1.0)*x4132))+((x4101*x4129))+((x4107*x4131))+((cj0*x4091))+((r01*x4127))+((x4101*x4130))+((x4101*x4126))+((x4103*x4129))+((x4103*x4130))+((x4103*x4126))+((r02*x4125)));
evalcond[8]=(((r11*x4127))+(((-1.0)*r10*x4128))+(((-1.0)*x4133))+((cj4*x4133))+((x4112*x4129))+((sj0*x4091))+((x4115*x4131))+((x4110*x4130))+((r12*x4125))+((x4110*x4129))+((sj0*x4098))+((x4112*x4130))+((x4110*x4126))+(((-1.0)*x4116*x4131))+((x4112*x4126)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4134=((0.250000349687704)*r02);
IkReal x4135=((0.250000349687704)*cj0*r22);
IkReal x4136=((0.749999650312296)*cj4*r02);
IkReal x4137=((0.433012903784321)*cj1);
IkReal x4138=(cj5*r01);
IkReal x4139=(x4137*x4138);
IkReal x4140=(r00*sj5);
IkReal x4141=(x4137*x4140);
IkReal x4142=((0.749999650312296)*cj0*cj4*r22);
IkReal x4143=(cj5*r21);
IkReal x4144=((0.433012903784321)*cj0*sj1);
IkReal x4145=(x4143*x4144);
IkReal x4146=(r20*sj5);
IkReal x4147=(x4144*x4146);
IkReal x4148=(cj5*r00);
IkReal x4149=((0.866025201892125)*cj1*sj4);
IkReal x4150=(r01*sj5);
IkReal x4151=(cj5*r20);
IkReal x4152=((0.866025201892125)*cj0*sj1*sj4);
IkReal x4153=(r21*sj5);
IkReal x4154=((0.433012903784321)*sj1);
IkReal x4155=(x4138*x4154);
IkReal x4156=(x4140*x4154);
IkReal x4157=((0.433012903784321)*cj0*cj1);
IkReal x4158=(x4143*x4157);
IkReal x4159=(x4146*x4157);
IkReal x4160=((0.866025201892125)*sj1*sj4);
IkReal x4161=((0.866025201892125)*cj0*cj1*sj4);
CheckValue<IkReal> x4162 = IKatan2WithCheck(IkReal((((x4148*x4149))+((cj4*x4145))+((sj1*x4135))+((cj1*x4134))+((x4151*x4152))+((cj4*x4141))+(((-1.0)*x4147))+(((-1.0)*x4152*x4153))+((cj1*x4136))+((sj1*x4142))+(((-1.0)*x4145))+(((-1.0)*x4149*x4150))+(((-1.0)*x4139))+((cj4*x4139))+((cj4*x4147))+(((-1.0)*x4141)))),IkReal((x4156+x4155+(((-1.0)*x4159))+((cj1*x4135))+(((-1.0)*x4148*x4160))+(((-1.0)*x4153*x4161))+((cj1*x4142))+(((-1.0)*sj1*x4136))+((x4150*x4160))+(((-1.0)*sj1*x4134))+((cj4*x4158))+(((-1.0)*x4158))+((x4151*x4161))+(((-1.0)*cj4*x4156))+((cj4*x4159))+(((-1.0)*cj4*x4155)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4162.valid){
continue;
}
CheckValue<IkReal> x4163=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4163.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4162.value)+(((1.5707963267949)*(x4163.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4164=IKcos(j2);
IkReal x4165=(cj1*x4164);
IkReal x4166=((0.749999650312296)*cj4);
IkReal x4167=(cj5*r21);
IkReal x4168=((0.433012903784321)*x4167);
IkReal x4169=(r20*sj5);
IkReal x4170=((0.433012903784321)*x4169);
IkReal x4171=IKsin(j2);
IkReal x4172=(sj1*x4171);
IkReal x4173=(cj5*r20*sj4);
IkReal x4174=(r21*sj4*sj5);
IkReal x4175=(cj5*r01);
IkReal x4176=((0.433012903784321)*x4175);
IkReal x4177=(r00*sj5);
IkReal x4178=((0.433012903784321)*x4177);
IkReal x4179=(cj1*x4171);
IkReal x4180=(cj0*x4179);
IkReal x4181=(cj5*r00*sj4);
IkReal x4182=(r01*sj4*sj5);
IkReal x4183=(cj0*sj1*x4164);
IkReal x4184=(cj5*r11);
IkReal x4185=((0.433012903784321)*x4184);
IkReal x4186=(r10*sj5);
IkReal x4187=((0.433012903784321)*x4186);
IkReal x4188=(sj0*x4179);
IkReal x4189=(cj5*r10*sj4);
IkReal x4190=(r11*sj4*sj5);
IkReal x4191=(sj0*sj1*x4164);
IkReal x4192=((0.0160344678271334)*r22);
IkReal x4193=((0.00925751294893567)*cj4);
IkReal x4194=((0.0160344678271334)*r02);
IkReal x4195=((0.29)*sj1);
IkReal x4196=((0.0160344678271334)*r12);
IkReal x4197=((0.433012903784321)*sj3);
IkReal x4198=(r22*x4197);
IkReal x4199=((0.866025201892125)*cj3*sj4);
IkReal x4200=((0.749999650312296)*sj3);
IkReal x4201=(cj3*cj4*sj5);
IkReal x4202=((1.0)*cj3*cj4*cj5);
IkReal x4203=((0.500000349687582)*cj3*sj4);
IkReal x4204=((0.250000349687704)*cj4*sj3);
IkReal x4205=((0.500000349687582)*sj3);
IkReal x4206=(r02*x4197);
IkReal x4207=(r12*x4197);
evalcond[0]=((((-0.866025201892125)*x4173))+x4172+x4170+(((-1.0)*cj4*x4168))+(((-1.0)*r22*x4166))+(((-1.0)*cj4*x4170))+(((0.866025201892125)*x4174))+(((-1.0)*(0.250000349687704)*r22))+x4168+x4165);
evalcond[1]=(x4178+x4176+(((-1.0)*cj4*x4178))+x4180+(((-1.0)*r02*x4166))+(((-1.0)*x4183))+(((-1.0)*(0.250000349687704)*r02))+(((0.866025201892125)*x4182))+(((-1.0)*cj4*x4176))+(((-0.866025201892125)*x4181)));
evalcond[2]=((((-1.0)*r12*x4166))+(((-1.0)*cj4*x4185))+(((-1.0)*(0.250000349687704)*r12))+(((-0.866025201892125)*x4189))+x4187+x4185+x4188+(((-1.0)*cj4*x4187))+(((-1.0)*x4191))+(((0.866025201892125)*x4190)));
evalcond[3]=((((0.0185150129489311)*x4173))+((cj4*x4192))+(((-0.27144)*x4165))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x4174))+(((0.29)*cj1))+(((0.0648043305514941)*x4169))+(((-1.0)*x4192))+(((0.0648043305514941)*x4167))+((x4167*x4193))+(((-0.27144)*x4172))+((x4169*x4193)));
evalcond[4]=((((0.0185150129489311)*x4181))+(((-1.0)*(1.0)*px))+(((0.0098)*sj0))+(((-1.0)*x4194))+(((0.0648043305514941)*x4175))+(((0.0648043305514941)*x4177))+(((-1.0)*cj0*x4195))+((x4175*x4193))+(((-0.27144)*x4180))+(((0.27144)*x4183))+((cj4*x4194))+((x4177*x4193))+(((-0.0185150129489311)*x4182)));
evalcond[5]=((((0.0648043305514941)*x4184))+(((0.27144)*x4191))+(((-1.0)*(1.0)*py))+(((-1.0)*sj0*x4195))+(((0.0648043305514941)*x4186))+((cj4*x4196))+(((-0.0185150129489311)*x4190))+(((0.0185150129489311)*x4189))+((x4184*x4193))+(((-1.0)*(0.0098)*cj0))+(((-1.0)*x4196))+(((-0.27144)*x4188))+((x4186*x4193)));
evalcond[6]=(((r21*x4201))+((x4169*x4200))+((sj1*x4164))+((x4167*x4204))+((cj4*x4198))+((x4167*x4203))+(((-1.0)*x4174*x4205))+(((-1.0)*r20*x4202))+(((-1.0)*x4179))+((x4167*x4200))+((x4169*x4203))+(((-1.0)*x4198))+((x4173*x4205))+((x4169*x4204))+((r22*x4199)));
evalcond[7]=(((x4177*x4200))+((x4177*x4204))+((x4181*x4205))+((r02*x4199))+(((-1.0)*x4182*x4205))+((x4175*x4203))+((x4175*x4204))+((x4177*x4203))+((cj0*x4165))+((cj0*x4172))+((x4175*x4200))+((r01*x4201))+(((-1.0)*x4206))+((cj4*x4206))+(((-1.0)*r00*x4202)));
evalcond[8]=(((r12*x4199))+((x4189*x4205))+(((-1.0)*x4207))+((x4184*x4200))+((cj4*x4207))+(((-1.0)*x4190*x4205))+((sj0*x4165))+((sj0*x4172))+((r11*x4201))+((x4184*x4204))+((x4184*x4203))+(((-1.0)*r10*x4202))+((x4186*x4200))+((x4186*x4203))+((x4186*x4204)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4208=(r12*sj0);
IkReal x4209=((0.18234135315471)*sj0);
IkReal x4210=(cj5*r11);
IkReal x4211=(r10*sj5);
IkReal x4212=((0.10827950965428)*cj4*sj0);
IkReal x4213=((0.216558867852667)*sj0*sj4);
IkReal x4214=(cj5*r21);
IkReal x4215=(r20*sj5);
IkReal x4216=((0.373377619497519)*cj4);
IkReal x4217=((0.746754716733336)*sj4);
CheckValue<IkReal> x4218=IKPowWithIntegerCheck(sj0,-2);
if(!x4218.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x4218.value)*(((((-1.0)*x4210*x4212))+((x4209*x4210))+((x4209*x4211))+((r11*sj5*x4213))+(((-1.0)*cj5*r10*x4213))+(((-0.0838945627463637)*x4208))+(((-1.0)*(1.0)*py*sj0))+(((-0.187545437253636)*cj4*x4208))+(((-1.0)*(0.0098)*cj0*sj0))+(((-1.0)*x4211*x4212)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.62876328674038)*x4214))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x4217))+((x4215*x4216))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x4214*x4216))+(((-0.62876328674038)*x4215))+((cj5*r20*x4217)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x4218.value)*(((((-1.0)*x4210*x4212))+((x4209*x4210))+((x4209*x4211))+((r11*sj5*x4213))+(((-1.0)*cj5*r10*x4213))+(((-0.0838945627463637)*x4208))+(((-1.0)*(1.0)*py*sj0))+(((-0.187545437253636)*cj4*x4208))+(((-1.0)*(0.0098)*cj0*sj0))+(((-1.0)*x4211*x4212))))))+IKsqr(((((-0.62876328674038)*x4214))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x4217))+((x4215*x4216))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x4214*x4216))+(((-0.62876328674038)*x4215))+((cj5*r20*x4217))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x4218.value)*(((((-1.0)*x4210*x4212))+((x4209*x4210))+((x4209*x4211))+((r11*sj5*x4213))+(((-1.0)*cj5*r10*x4213))+(((-0.0838945627463637)*x4208))+(((-1.0)*(1.0)*py*sj0))+(((-0.187545437253636)*cj4*x4208))+(((-1.0)*(0.0098)*cj0*sj0))+(((-1.0)*x4211*x4212))))), ((((-0.62876328674038)*x4214))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x4217))+((x4215*x4216))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x4214*x4216))+(((-0.62876328674038)*x4215))+((cj5*r20*x4217))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x4219=((0.187545437253636)*cj4);
IkReal x4220=((0.18234135315471)*cj5);
IkReal x4221=((0.18234135315471)*sj5);
IkReal x4222=((0.29)*(IKcos(j1)));
IkReal x4223=((0.10827950965428)*cj4*cj5);
IkReal x4224=((0.10827950965428)*cj4*sj5);
IkReal x4225=((0.216558867852667)*cj5*sj4);
IkReal x4226=((0.216558867852667)*sj4*sj5);
IkReal x4227=((0.0098)*cj0);
IkReal x4228=(sj0*x4227);
IkReal x4229=((1.0)*py);
IkReal x4230=(r12*sj0);
IkReal x4231=(r11*sj0);
IkReal x4232=(r10*sj0);
IkReal x4233=(cj5*r11);
IkReal x4234=((0.10827950965428)*cj4*sj0);
IkReal x4235=(r10*sj5);
IkReal x4236=sj0*sj0;
IkReal x4237=((0.29)*(IKsin(j1)));
IkReal x4238=((1.0)*px);
IkReal x4239=(cj0*r02);
IkReal x4240=(cj0*r01);
IkReal x4241=(cj0*r00);
IkReal x4242=cj0*cj0;
IkReal x4243=((1.0)*pz);
IkReal x4244=((0.117537022603216)*sj3);
IkReal x4245=(r12*x4244);
IkReal x4246=((0.0160344678271334)*r22);
IkReal x4247=(sj0*x4246);
IkReal x4248=((0.235073880801598)*cj3*sj4);
IkReal x4249=((0.20357990508077)*sj3);
IkReal x4250=((0.0648043305514941)*cj5*r21);
IkReal x4251=((0.0648043305514941)*r20*sj5);
IkReal x4252=(cj5*r10);
IkReal x4253=((0.27144)*cj3*cj4);
IkReal x4254=(r11*sj5);
IkReal x4255=((0.135720094919197)*cj3*sj4);
IkReal x4256=((0.0678600949192303)*cj4*sj3);
IkReal x4257=(cj5*r21);
IkReal x4258=((0.00925751294893567)*cj4*sj0);
IkReal x4259=(r20*sj5);
IkReal x4260=((0.135720094919197)*sj3*sj4);
IkReal x4261=((0.0185150129489311)*cj5*r20*sj4);
IkReal x4262=((0.0185150129489311)*r21*sj4*sj5);
IkReal x4263=(cj0*x4246);
IkReal x4264=(r02*x4244);
IkReal x4265=(cj5*r01);
IkReal x4266=(r00*sj5);
IkReal x4267=((0.00925751294893567)*cj0*cj4);
IkReal x4268=(r01*sj5);
IkReal x4269=(cj5*r00*sj4);
IkReal x4270=((0.0160344678271334)*r12);
IkReal x4271=((0.0648043305514941)*cj5);
IkReal x4272=(r11*x4271);
IkReal x4273=((0.0648043305514941)*sj5);
IkReal x4274=(r10*x4273);
IkReal x4275=((0.00925751294893567)*cj4);
IkReal x4276=(x4233*x4275);
IkReal x4277=(x4235*x4275);
IkReal x4278=((0.0185150129489311)*cj5*sj4);
IkReal x4279=(r10*x4278);
IkReal x4280=((0.0185150129489311)*sj4*sj5);
IkReal x4281=(r11*x4280);
IkReal x4282=((0.117537022603216)*r22*sj3);
IkReal x4283=(sj0*x4282);
IkReal x4284=((0.235073880801598)*cj3*r22*sj4);
IkReal x4285=((0.20357990508077)*sj0*sj3);
IkReal x4286=(cj5*r20);
IkReal x4287=((0.27144)*cj3*cj4*sj0);
IkReal x4288=(r21*sj5);
IkReal x4289=((0.135720094919197)*cj3*sj0*sj4);
IkReal x4290=((0.0678600949192303)*cj4*sj0*sj3);
IkReal x4291=((0.135720094919197)*sj0*sj3*sj4);
IkReal x4292=((0.0160344678271334)*r02);
IkReal x4293=(cj4*x4292);
IkReal x4294=(r01*x4271);
IkReal x4295=(r00*x4273);
IkReal x4296=(cj0*x4237);
IkReal x4297=(cj0*x4282);
IkReal x4298=(x4265*x4275);
IkReal x4299=(x4266*x4275);
IkReal x4300=(r00*x4278);
IkReal x4301=(r01*x4280);
IkReal x4302=((0.20357990508077)*cj0*sj3);
IkReal x4303=((0.27144)*cj0*cj3*cj4);
IkReal x4304=((0.135720094919197)*cj0*cj3*sj4);
IkReal x4305=((0.0678600949192303)*cj0*cj4*sj3);
IkReal x4306=((0.135720094919197)*cj0*sj3*sj4);
IkReal x4307=(cj0*r12);
IkReal x4308=((0.20357990508077)*cj4);
IkReal x4309=((0.117537022603216)*cj0);
IkReal x4310=(x4233*x4309);
IkReal x4311=(x4235*x4309);
IkReal x4312=((-1.0)*sj0*x4296);
IkReal x4313=((0.235073880801598)*cj0*sj4);
IkReal x4314=(cj0*x4270);
IkReal x4315=(r02*sj0);
IkReal x4316=((0.117537022603216)*sj0);
IkReal x4317=(x4265*x4316);
IkReal x4318=(x4266*x4316);
IkReal x4319=((0.235073880801598)*sj0);
evalcond[0]=((((-1.0)*r20*x4221))+(((-1.0)*r21*x4226))+(((-1.0)*x4222))+((r20*x4224))+pz+((r22*x4219))+((r20*x4225))+(((0.0838945627463637)*r22))+((r21*x4223))+(((-1.0)*r21*x4220)));
evalcond[1]=(((x4221*x4232))+((x4226*x4231))+(((-1.0)*x4236*x4237))+(((-1.0)*sj0*x4229))+(((-1.0)*x4225*x4232))+(((-1.0)*x4233*x4234))+((x4220*x4231))+(((-0.0838945627463637)*x4230))+(((-1.0)*x4228))+(((-1.0)*x4219*x4230))+(((-1.0)*x4234*x4235)));
evalcond[2]=(((x4226*x4240))+((x4221*x4241))+(((-0.0838945627463637)*x4239))+x4228+(((-1.0)*x4223*x4240))+(((-1.0)*x4224*x4241))+(((-1.0)*x4237*x4242))+(((-1.0)*x4225*x4241))+((x4220*x4240))+(((-1.0)*x4219*x4239))+(((-1.0)*cj0*x4238)));
evalcond[3]=(((r12*x4248))+((x4233*x4255))+((x4233*x4249))+((x4258*x4259))+(((-1.0)*x4252*x4253))+(((-1.0)*sj0*x4262))+((x4235*x4256))+((x4235*x4249))+((sj0*x4250))+((x4235*x4255))+((sj0*x4251))+((x4257*x4258))+(((-1.0)*sj0*x4243))+((x4233*x4256))+((x4253*x4254))+((cj4*x4245))+(((-1.0)*x4254*x4260))+((cj4*x4247))+((sj0*x4222))+(((-1.0)*x4245))+(((-1.0)*x4247))+((x4252*x4260))+((sj0*x4261)));
evalcond[4]=(((x4249*x4265))+((cj4*x4263))+((x4256*x4266))+(((-1.0)*cj0*x4262))+((x4253*x4268))+((x4255*x4265))+((x4257*x4267))+(((-1.0)*x4264))+(((-1.0)*cj0*x4243))+((cj0*x4222))+((x4259*x4267))+(((-1.0)*x4263))+((x4255*x4266))+(((-1.0)*cj5*r00*x4253))+(((0.135720094919197)*sj3*x4269))+((x4249*x4266))+((cj0*x4250))+((r02*x4248))+((x4256*x4265))+((cj0*x4251))+((cj0*x4261))+(((-1.0)*x4260*x4268))+((cj4*x4264)));
evalcond[5]=((((-1.0)*x4257*x4290))+(((-1.0)*x4229))+(((-1.0)*x4270))+(((-1.0)*cj4*x4283))+(((-1.0)*x4227))+(((-1.0)*x4287*x4288))+((x4286*x4287))+(((-1.0)*x4257*x4289))+(((-1.0)*sj0*x4237))+(((-1.0)*x4281))+(((-1.0)*x4259*x4289))+(((-1.0)*x4259*x4290))+(((-1.0)*x4286*x4291))+x4279+x4277+x4272+x4274+x4276+(((-1.0)*x4257*x4285))+((x4288*x4291))+x4283+(((-1.0)*sj0*x4284))+((cj4*x4270))+(((-1.0)*x4259*x4285)));
evalcond[6]=((((-1.0)*cj0*x4284))+(((-1.0)*x4288*x4303))+((x4288*x4306))+(((0.0098)*sj0))+x4293+x4295+x4294+x4297+x4298+x4299+(((-1.0)*x4292))+(((-1.0)*x4257*x4305))+(((-1.0)*x4238))+x4300+(((-1.0)*x4259*x4305))+(((-1.0)*x4259*x4304))+(((-1.0)*x4286*x4306))+(((-1.0)*x4296))+(((-1.0)*x4257*x4302))+((x4286*x4303))+(((-1.0)*x4257*x4304))+(((-1.0)*cj4*x4297))+(((-1.0)*x4301))+(((-1.0)*x4259*x4302)));
evalcond[7]=(((sj0*x4294))+((sj0*x4295))+(((-1.0)*cj4*x4311))+(((-1.0)*cj4*x4310))+(((-1.0)*sj0*x4238))+((sj0*x4299))+((x4254*x4313))+(((-1.0)*sj0*x4292))+(((-1.0)*x4307*x4308))+(((-1.0)*x4252*x4313))+((sj0*x4293))+x4312+x4310+x4311+(((-1.0)*sj0*x4301))+(((0.0098)*x4236))+((sj0*x4298))+(((-0.0678600949192303)*x4307))+((sj0*x4300)));
evalcond[8]=((((-1.0)*x4269*x4319))+((cj0*x4279))+(((-1.0)*x4314))+(((-1.0)*cj4*x4317))+((cj0*x4276))+(((-0.0098)*x4242))+(((-1.0)*cj0*x4281))+(((-0.0678600949192303)*x4315))+((cj4*x4314))+x4312+x4318+x4317+(((-1.0)*x4308*x4315))+((cj0*x4272))+(((-1.0)*cj0*x4229))+((cj0*x4274))+((r01*sj4*sj5*x4319))+(((-1.0)*cj4*x4318))+((cj0*x4277)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4320=((0.250000349687704)*cj1);
IkReal x4321=((0.250000349687704)*sj1);
IkReal x4322=((0.749999650312296)*cj1*cj4);
IkReal x4323=((0.433012903784321)*cj1*cj5);
IkReal x4324=(r01*x4323);
IkReal x4325=((0.433012903784321)*cj1*sj5);
IkReal x4326=(r00*x4325);
IkReal x4327=((0.749999650312296)*cj4*sj1);
IkReal x4328=((0.433012903784321)*cj5*sj1);
IkReal x4329=(r21*x4328);
IkReal x4330=((0.433012903784321)*sj1*sj5);
IkReal x4331=(r20*x4330);
IkReal x4332=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4333=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4334=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4335=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4336=(r21*x4323);
IkReal x4337=(r20*x4325);
IkReal x4338=(r01*x4328);
IkReal x4339=(r00*x4330);
if( IKabs(((((-1.0)*x4331))+((cj4*x4331))+(((-1.0)*x4326))+((r00*x4332))+((cj4*x4326))+((r22*x4327))+((r22*x4321))+((cj4*x4329))+(((-1.0)*r21*x4335))+((r02*x4320))+((r02*x4322))+((r20*x4334))+(((-1.0)*x4329))+((cj4*x4324))+(((-1.0)*x4324))+(((-1.0)*r01*x4333)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x4322))+(((-1.0)*r02*x4321))+(((-1.0)*r00*x4334))+x4338+x4339+((r22*x4320))+(((-1.0)*x4337))+(((-1.0)*r02*x4327))+((cj4*x4337))+((r01*x4335))+(((-1.0)*r21*x4333))+((r20*x4332))+(((-1.0)*cj4*x4339))+(((-1.0)*cj4*x4338))+((cj4*x4336))+(((-1.0)*x4336)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4331))+((cj4*x4331))+(((-1.0)*x4326))+((r00*x4332))+((cj4*x4326))+((r22*x4327))+((r22*x4321))+((cj4*x4329))+(((-1.0)*r21*x4335))+((r02*x4320))+((r02*x4322))+((r20*x4334))+(((-1.0)*x4329))+((cj4*x4324))+(((-1.0)*x4324))+(((-1.0)*r01*x4333))))+IKsqr((((r22*x4322))+(((-1.0)*r02*x4321))+(((-1.0)*r00*x4334))+x4338+x4339+((r22*x4320))+(((-1.0)*x4337))+(((-1.0)*r02*x4327))+((cj4*x4337))+((r01*x4335))+(((-1.0)*r21*x4333))+((r20*x4332))+(((-1.0)*cj4*x4339))+(((-1.0)*cj4*x4338))+((cj4*x4336))+(((-1.0)*x4336))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4331))+((cj4*x4331))+(((-1.0)*x4326))+((r00*x4332))+((cj4*x4326))+((r22*x4327))+((r22*x4321))+((cj4*x4329))+(((-1.0)*r21*x4335))+((r02*x4320))+((r02*x4322))+((r20*x4334))+(((-1.0)*x4329))+((cj4*x4324))+(((-1.0)*x4324))+(((-1.0)*r01*x4333))), (((r22*x4322))+(((-1.0)*r02*x4321))+(((-1.0)*r00*x4334))+x4338+x4339+((r22*x4320))+(((-1.0)*x4337))+(((-1.0)*r02*x4327))+((cj4*x4337))+((r01*x4335))+(((-1.0)*r21*x4333))+((r20*x4332))+(((-1.0)*cj4*x4339))+(((-1.0)*cj4*x4338))+((cj4*x4336))+(((-1.0)*x4336))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4340=IKcos(j2);
IkReal x4341=(cj1*x4340);
IkReal x4342=IKsin(j2);
IkReal x4343=(sj1*x4342);
IkReal x4344=(x4341+x4343);
IkReal x4345=((0.749999650312296)*cj4);
IkReal x4346=(cj5*r21);
IkReal x4347=((0.433012903784321)*x4346);
IkReal x4348=(r20*sj5);
IkReal x4349=((0.433012903784321)*x4348);
IkReal x4350=(cj5*r20*sj4);
IkReal x4351=(r21*sj4*sj5);
IkReal x4352=(cj1*x4342);
IkReal x4353=(cj5*r01);
IkReal x4354=((0.433012903784321)*x4353);
IkReal x4355=(r00*sj5);
IkReal x4356=((0.433012903784321)*x4355);
IkReal x4357=(sj1*x4340);
IkReal x4358=(cj5*r00*sj4);
IkReal x4359=(r01*sj4*sj5);
IkReal x4360=((0.0160344678271334)*r22);
IkReal x4361=((0.00925751294893567)*cj4);
IkReal x4362=((0.0160344678271334)*r02);
IkReal x4363=((0.433012903784321)*sj3);
IkReal x4364=(r02*x4363);
IkReal x4365=((0.866025201892125)*cj3*sj4);
IkReal x4366=((0.749999650312296)*sj3);
IkReal x4367=(cj3*cj4*sj5);
IkReal x4368=((1.0)*cj3*cj4*cj5);
IkReal x4369=((0.500000349687582)*cj3*sj4);
IkReal x4370=((0.250000349687704)*cj4*sj3);
IkReal x4371=((0.500000349687582)*sj3);
IkReal x4372=(r22*x4363);
evalcond[0]=((((-0.866025201892125)*x4350))+(((-1.0)*cj4*x4347))+(((-1.0)*cj4*x4349))+(((-1.0)*r22*x4345))+x4347+x4349+x4344+(((0.866025201892125)*x4351))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*x4357))+(((-0.866025201892125)*x4358))+(((-1.0)*cj4*x4356))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x4354))+x4354+x4356+x4352+(((0.866025201892125)*x4359))+(((-1.0)*r02*x4345)));
evalcond[2]=((((-0.27144)*x4341))+((x4346*x4361))+(((0.0185150129489311)*x4350))+(((-1.0)*(1.0)*pz))+((x4348*x4361))+(((0.29)*cj1))+(((-0.27144)*x4343))+(((0.0648043305514941)*x4346))+(((0.0648043305514941)*x4348))+(((-1.0)*x4360))+((cj4*x4360))+(((-0.0185150129489311)*x4351)));
evalcond[3]=((((-0.0185150129489311)*x4359))+(((-1.0)*(1.0)*px))+(((-1.0)*(0.29)*sj1))+((x4355*x4361))+(((0.0648043305514941)*x4353))+(((0.0185150129489311)*x4358))+(((0.0648043305514941)*x4355))+((x4353*x4361))+(((0.27144)*x4357))+(((-0.27144)*x4352))+((cj4*x4362))+(((-1.0)*x4362)));
evalcond[4]=((((-1.0)*x4359*x4371))+((r01*x4367))+(((-1.0)*x4364))+((cj4*x4364))+((x4358*x4371))+((r02*x4365))+((x4355*x4370))+((x4353*x4370))+((x4353*x4369))+((x4355*x4366))+(((-1.0)*r00*x4368))+((x4353*x4366))+((x4355*x4369))+x4344);
evalcond[5]=(((r22*x4365))+((x4348*x4366))+(((-1.0)*x4372))+(((-1.0)*x4351*x4371))+((r21*x4367))+((x4348*x4370))+((x4346*x4369))+((x4346*x4370))+(((-1.0)*x4352))+((x4348*x4369))+((x4350*x4371))+((x4346*x4366))+(((-1.0)*r20*x4368))+x4357+((cj4*x4372)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4373=((0.250000349687704)*cj1);
IkReal x4374=((0.250000349687704)*sj1);
IkReal x4375=((0.749999650312296)*cj1*cj4);
IkReal x4376=((0.433012903784321)*cj1*cj5);
IkReal x4377=(r01*x4376);
IkReal x4378=((0.433012903784321)*cj1*sj5);
IkReal x4379=(r00*x4378);
IkReal x4380=((0.749999650312296)*cj4*sj1);
IkReal x4381=((0.433012903784321)*cj5*sj1);
IkReal x4382=(r21*x4381);
IkReal x4383=((0.433012903784321)*sj1*sj5);
IkReal x4384=(r20*x4383);
IkReal x4385=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4386=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4387=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4388=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4389=(r21*x4376);
IkReal x4390=(r20*x4378);
IkReal x4391=(r01*x4381);
IkReal x4392=(r00*x4383);
if( IKabs(((((-1.0)*x4382))+((cj4*x4384))+x4377+x4379+(((-1.0)*cj4*x4379))+((r22*x4374))+((r22*x4380))+(((-1.0)*cj4*x4377))+(((-1.0)*r00*x4385))+((r01*x4386))+(((-1.0)*x4384))+((r20*x4387))+((cj4*x4382))+(((-1.0)*r02*x4373))+(((-1.0)*r02*x4375))+(((-1.0)*r21*x4388)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4392))+(((-1.0)*x4391))+((r02*x4374))+(((-1.0)*r01*x4388))+((r02*x4380))+((cj4*x4391))+(((-1.0)*r21*x4386))+((r22*x4373))+((cj4*x4389))+((r22*x4375))+(((-1.0)*x4389))+(((-1.0)*x4390))+((cj4*x4390))+((r00*x4387))+((r20*x4385))+(((-1.0)*x4392)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4382))+((cj4*x4384))+x4377+x4379+(((-1.0)*cj4*x4379))+((r22*x4374))+((r22*x4380))+(((-1.0)*cj4*x4377))+(((-1.0)*r00*x4385))+((r01*x4386))+(((-1.0)*x4384))+((r20*x4387))+((cj4*x4382))+(((-1.0)*r02*x4373))+(((-1.0)*r02*x4375))+(((-1.0)*r21*x4388))))+IKsqr((((cj4*x4392))+(((-1.0)*x4391))+((r02*x4374))+(((-1.0)*r01*x4388))+((r02*x4380))+((cj4*x4391))+(((-1.0)*r21*x4386))+((r22*x4373))+((cj4*x4389))+((r22*x4375))+(((-1.0)*x4389))+(((-1.0)*x4390))+((cj4*x4390))+((r00*x4387))+((r20*x4385))+(((-1.0)*x4392))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4382))+((cj4*x4384))+x4377+x4379+(((-1.0)*cj4*x4379))+((r22*x4374))+((r22*x4380))+(((-1.0)*cj4*x4377))+(((-1.0)*r00*x4385))+((r01*x4386))+(((-1.0)*x4384))+((r20*x4387))+((cj4*x4382))+(((-1.0)*r02*x4373))+(((-1.0)*r02*x4375))+(((-1.0)*r21*x4388))), (((cj4*x4392))+(((-1.0)*x4391))+((r02*x4374))+(((-1.0)*r01*x4388))+((r02*x4380))+((cj4*x4391))+(((-1.0)*r21*x4386))+((r22*x4373))+((cj4*x4389))+((r22*x4375))+(((-1.0)*x4389))+(((-1.0)*x4390))+((cj4*x4390))+((r00*x4387))+((r20*x4385))+(((-1.0)*x4392))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4393=IKcos(j2);
IkReal x4394=(cj1*x4393);
IkReal x4395=((0.749999650312296)*cj4);
IkReal x4396=(cj5*r21);
IkReal x4397=((0.433012903784321)*x4396);
IkReal x4398=(r20*sj5);
IkReal x4399=((0.433012903784321)*x4398);
IkReal x4400=IKsin(j2);
IkReal x4401=(sj1*x4400);
IkReal x4402=(cj5*r20*sj4);
IkReal x4403=(r21*sj4*sj5);
IkReal x4404=(sj1*x4393);
IkReal x4405=(cj1*x4400);
IkReal x4406=(x4404+(((-1.0)*x4405)));
IkReal x4407=(cj5*r01);
IkReal x4408=((0.433012903784321)*x4407);
IkReal x4409=(r00*sj5);
IkReal x4410=((0.433012903784321)*x4409);
IkReal x4411=(cj5*r00*sj4);
IkReal x4412=(r01*sj4*sj5);
IkReal x4413=((0.0160344678271334)*r22);
IkReal x4414=((0.00925751294893567)*cj4);
IkReal x4415=((0.0160344678271334)*r02);
IkReal x4416=((0.433012903784321)*sj3);
IkReal x4417=(r22*x4416);
IkReal x4418=((0.866025201892125)*cj3*sj4);
IkReal x4419=((0.749999650312296)*sj3);
IkReal x4420=(cj3*cj4*sj5);
IkReal x4421=((1.0)*cj3*cj4*cj5);
IkReal x4422=((0.500000349687582)*cj3*sj4);
IkReal x4423=((0.250000349687704)*cj4*sj3);
IkReal x4424=((0.500000349687582)*sj3);
IkReal x4425=(r02*x4416);
evalcond[0]=((((-1.0)*cj4*x4399))+x4401+(((-0.866025201892125)*x4402))+(((-1.0)*cj4*x4397))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x4395))+x4399+x4394+x4397+(((0.866025201892125)*x4403)));
evalcond[1]=((((-1.0)*cj4*x4410))+x4408+x4406+(((-1.0)*r02*x4395))+(((-0.866025201892125)*x4411))+(((-1.0)*cj4*x4408))+(((-1.0)*(0.250000349687704)*r02))+(((0.866025201892125)*x4412))+x4410);
evalcond[2]=((((-0.27144)*x4394))+(((-0.0185150129489311)*x4403))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x4398))+((cj4*x4413))+(((0.29)*cj1))+(((0.0185150129489311)*x4402))+((x4398*x4414))+((x4396*x4414))+(((0.0648043305514941)*x4396))+(((-0.27144)*x4401))+(((-1.0)*x4413)));
evalcond[3]=(((x4407*x4414))+(((-1.0)*(1.0)*px))+(((0.0185150129489311)*x4411))+(((-0.0185150129489311)*x4412))+(((0.0648043305514941)*x4409))+(((-0.27144)*x4404))+(((0.0648043305514941)*x4407))+(((0.27144)*x4405))+((cj4*x4415))+((x4409*x4414))+(((-1.0)*x4415))+(((0.29)*sj1)));
evalcond[4]=(((r21*x4420))+(((-1.0)*r20*x4421))+((x4398*x4419))+((r22*x4418))+((cj4*x4417))+x4406+((x4398*x4422))+((x4396*x4419))+((x4398*x4423))+((x4402*x4424))+(((-1.0)*x4403*x4424))+(((-1.0)*x4417))+((x4396*x4423))+((x4396*x4422)));
evalcond[5]=(((x4407*x4419))+(((-1.0)*r00*x4421))+((x4409*x4419))+(((-1.0)*x4394))+((x4407*x4422))+((r01*x4420))+((x4407*x4423))+(((-1.0)*x4425))+((cj4*x4425))+((r02*x4418))+((x4409*x4423))+((x4409*x4422))+((x4411*x4424))+(((-1.0)*x4412*x4424))+(((-1.0)*x4401)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4426=((0.250000349687704)*cj1);
IkReal x4427=((0.250000349687704)*sj1);
IkReal x4428=((0.749999650312296)*cj1*cj4);
IkReal x4429=((0.433012903784321)*cj1*cj5);
IkReal x4430=(r11*x4429);
IkReal x4431=((0.433012903784321)*cj1*sj5);
IkReal x4432=(r10*x4431);
IkReal x4433=((0.749999650312296)*cj4*sj1);
IkReal x4434=((0.433012903784321)*cj5*sj1);
IkReal x4435=(r21*x4434);
IkReal x4436=((0.433012903784321)*sj1*sj5);
IkReal x4437=(r20*x4436);
IkReal x4438=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4439=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4440=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4441=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4442=(r21*x4429);
IkReal x4443=(r20*x4431);
IkReal x4444=(r11*x4434);
IkReal x4445=(r10*x4436);
if( IKabs(((((-1.0)*x4432))+((r10*x4438))+((cj4*x4435))+((r12*x4428))+(((-1.0)*r11*x4439))+((cj4*x4437))+((r22*x4427))+((cj4*x4432))+(((-1.0)*r21*x4441))+(((-1.0)*x4430))+((r20*x4440))+((r22*x4433))+(((-1.0)*x4435))+(((-1.0)*x4437))+((r12*x4426))+((cj4*x4430)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r12*x4433))+((r20*x4438))+(((-1.0)*r21*x4439))+((cj4*x4443))+(((-1.0)*cj4*x4445))+((cj4*x4442))+(((-1.0)*cj4*x4444))+((r11*x4441))+x4444+x4445+(((-1.0)*x4443))+(((-1.0)*r12*x4427))+(((-1.0)*x4442))+(((-1.0)*r10*x4440))+((r22*x4428))+((r22*x4426)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4432))+((r10*x4438))+((cj4*x4435))+((r12*x4428))+(((-1.0)*r11*x4439))+((cj4*x4437))+((r22*x4427))+((cj4*x4432))+(((-1.0)*r21*x4441))+(((-1.0)*x4430))+((r20*x4440))+((r22*x4433))+(((-1.0)*x4435))+(((-1.0)*x4437))+((r12*x4426))+((cj4*x4430))))+IKsqr(((((-1.0)*r12*x4433))+((r20*x4438))+(((-1.0)*r21*x4439))+((cj4*x4443))+(((-1.0)*cj4*x4445))+((cj4*x4442))+(((-1.0)*cj4*x4444))+((r11*x4441))+x4444+x4445+(((-1.0)*x4443))+(((-1.0)*r12*x4427))+(((-1.0)*x4442))+(((-1.0)*r10*x4440))+((r22*x4428))+((r22*x4426))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4432))+((r10*x4438))+((cj4*x4435))+((r12*x4428))+(((-1.0)*r11*x4439))+((cj4*x4437))+((r22*x4427))+((cj4*x4432))+(((-1.0)*r21*x4441))+(((-1.0)*x4430))+((r20*x4440))+((r22*x4433))+(((-1.0)*x4435))+(((-1.0)*x4437))+((r12*x4426))+((cj4*x4430))), ((((-1.0)*r12*x4433))+((r20*x4438))+(((-1.0)*r21*x4439))+((cj4*x4443))+(((-1.0)*cj4*x4445))+((cj4*x4442))+(((-1.0)*cj4*x4444))+((r11*x4441))+x4444+x4445+(((-1.0)*x4443))+(((-1.0)*r12*x4427))+(((-1.0)*x4442))+(((-1.0)*r10*x4440))+((r22*x4428))+((r22*x4426))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4446=IKcos(j2);
IkReal x4447=(cj1*x4446);
IkReal x4448=IKsin(j2);
IkReal x4449=(sj1*x4448);
IkReal x4450=(x4447+x4449);
IkReal x4451=((0.749999650312296)*cj4);
IkReal x4452=(cj5*r21);
IkReal x4453=((0.433012903784321)*x4452);
IkReal x4454=(r20*sj5);
IkReal x4455=((0.433012903784321)*x4454);
IkReal x4456=(cj5*r20*sj4);
IkReal x4457=(r21*sj4*sj5);
IkReal x4458=(cj1*x4448);
IkReal x4459=(cj5*r11);
IkReal x4460=((0.433012903784321)*x4459);
IkReal x4461=(r10*sj5);
IkReal x4462=((0.433012903784321)*x4461);
IkReal x4463=(sj1*x4446);
IkReal x4464=(cj5*r10*sj4);
IkReal x4465=(r11*sj4*sj5);
IkReal x4466=((0.0160344678271334)*r22);
IkReal x4467=((0.00925751294893567)*cj4);
IkReal x4468=((0.0160344678271334)*r12);
IkReal x4469=((0.433012903784321)*sj3);
IkReal x4470=(r12*x4469);
IkReal x4471=((0.866025201892125)*cj3*sj4);
IkReal x4472=((0.749999650312296)*sj3);
IkReal x4473=(cj3*cj4*sj5);
IkReal x4474=((1.0)*cj3*cj4*cj5);
IkReal x4475=((0.500000349687582)*cj3*sj4);
IkReal x4476=((0.250000349687704)*cj4*sj3);
IkReal x4477=((0.500000349687582)*sj3);
IkReal x4478=(r22*x4469);
evalcond[0]=((((-1.0)*cj4*x4455))+(((-1.0)*cj4*x4453))+x4450+x4455+x4453+(((0.866025201892125)*x4457))+(((-0.866025201892125)*x4456))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x4451)));
evalcond[1]=((((-1.0)*x4463))+(((0.866025201892125)*x4465))+(((-1.0)*(0.250000349687704)*r12))+x4460+x4462+(((-1.0)*r12*x4451))+x4458+(((-1.0)*cj4*x4460))+(((-0.866025201892125)*x4464))+(((-1.0)*cj4*x4462)));
evalcond[2]=((((0.0648043305514941)*x4452))+((x4454*x4467))+(((-0.27144)*x4449))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x4454))+(((0.29)*cj1))+(((0.0185150129489311)*x4456))+(((-0.27144)*x4447))+(((-1.0)*x4466))+((x4452*x4467))+(((-0.0185150129489311)*x4457))+((cj4*x4466)));
evalcond[3]=(((x4459*x4467))+(((-1.0)*x4468))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+((x4461*x4467))+((cj4*x4468))+(((0.27144)*x4463))+(((-0.27144)*x4458))+(((0.0648043305514941)*x4461))+(((0.0185150129489311)*x4464))+(((0.0648043305514941)*x4459))+(((-0.0185150129489311)*x4465)));
evalcond[4]=((((-1.0)*x4465*x4477))+((r12*x4471))+(((-1.0)*r10*x4474))+x4450+((x4459*x4472))+((cj4*x4470))+(((-1.0)*x4470))+((x4459*x4475))+((x4464*x4477))+((x4461*x4472))+((x4461*x4476))+((x4461*x4475))+((x4459*x4476))+((r11*x4473)));
evalcond[5]=((((-1.0)*x4458))+((x4452*x4472))+((x4452*x4475))+((cj4*x4478))+((x4452*x4476))+x4463+((x4456*x4477))+(((-1.0)*r20*x4474))+((r21*x4473))+(((-1.0)*x4478))+(((-1.0)*x4457*x4477))+((x4454*x4475))+((x4454*x4476))+((r22*x4471))+((x4454*x4472)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4479=((0.250000349687704)*cj1);
IkReal x4480=((0.250000349687704)*sj1);
IkReal x4481=((0.749999650312296)*cj1*cj4);
IkReal x4482=((0.433012903784321)*cj1*cj5);
IkReal x4483=(r11*x4482);
IkReal x4484=((0.433012903784321)*cj1*sj5);
IkReal x4485=(r10*x4484);
IkReal x4486=((0.749999650312296)*cj4*sj1);
IkReal x4487=((0.433012903784321)*cj5*sj1);
IkReal x4488=(r21*x4487);
IkReal x4489=((0.433012903784321)*sj1*sj5);
IkReal x4490=(r20*x4489);
IkReal x4491=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4492=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4493=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4494=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4495=(r21*x4482);
IkReal x4496=(r20*x4484);
IkReal x4497=(r11*x4487);
IkReal x4498=(r10*x4489);
if( IKabs((x4485+x4483+((r20*x4493))+(((-1.0)*x4488))+(((-1.0)*cj4*x4483))+(((-1.0)*r10*x4491))+((r22*x4486))+((r22*x4480))+(((-1.0)*r12*x4479))+(((-1.0)*cj4*x4485))+(((-1.0)*x4490))+((cj4*x4490))+(((-1.0)*r12*x4481))+((r11*x4492))+((cj4*x4488))+(((-1.0)*r21*x4494)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4495))+((cj4*x4496))+(((-1.0)*x4497))+(((-1.0)*r21*x4492))+((cj4*x4498))+(((-1.0)*x4498))+((r22*x4481))+((r10*x4493))+((cj4*x4497))+(((-1.0)*x4495))+(((-1.0)*x4496))+((r12*x4480))+((r22*x4479))+(((-1.0)*r11*x4494))+((r12*x4486))+((r20*x4491)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x4485+x4483+((r20*x4493))+(((-1.0)*x4488))+(((-1.0)*cj4*x4483))+(((-1.0)*r10*x4491))+((r22*x4486))+((r22*x4480))+(((-1.0)*r12*x4479))+(((-1.0)*cj4*x4485))+(((-1.0)*x4490))+((cj4*x4490))+(((-1.0)*r12*x4481))+((r11*x4492))+((cj4*x4488))+(((-1.0)*r21*x4494))))+IKsqr((((cj4*x4495))+((cj4*x4496))+(((-1.0)*x4497))+(((-1.0)*r21*x4492))+((cj4*x4498))+(((-1.0)*x4498))+((r22*x4481))+((r10*x4493))+((cj4*x4497))+(((-1.0)*x4495))+(((-1.0)*x4496))+((r12*x4480))+((r22*x4479))+(((-1.0)*r11*x4494))+((r12*x4486))+((r20*x4491))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((x4485+x4483+((r20*x4493))+(((-1.0)*x4488))+(((-1.0)*cj4*x4483))+(((-1.0)*r10*x4491))+((r22*x4486))+((r22*x4480))+(((-1.0)*r12*x4479))+(((-1.0)*cj4*x4485))+(((-1.0)*x4490))+((cj4*x4490))+(((-1.0)*r12*x4481))+((r11*x4492))+((cj4*x4488))+(((-1.0)*r21*x4494))), (((cj4*x4495))+((cj4*x4496))+(((-1.0)*x4497))+(((-1.0)*r21*x4492))+((cj4*x4498))+(((-1.0)*x4498))+((r22*x4481))+((r10*x4493))+((cj4*x4497))+(((-1.0)*x4495))+(((-1.0)*x4496))+((r12*x4480))+((r22*x4479))+(((-1.0)*r11*x4494))+((r12*x4486))+((r20*x4491))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4499=IKcos(j2);
IkReal x4500=(cj1*x4499);
IkReal x4501=((0.749999650312296)*cj4);
IkReal x4502=(cj5*r21);
IkReal x4503=((0.433012903784321)*x4502);
IkReal x4504=(r20*sj5);
IkReal x4505=((0.433012903784321)*x4504);
IkReal x4506=IKsin(j2);
IkReal x4507=(sj1*x4506);
IkReal x4508=(cj5*r20*sj4);
IkReal x4509=(r21*sj4*sj5);
IkReal x4510=(sj1*x4499);
IkReal x4511=(cj1*x4506);
IkReal x4512=(x4510+(((-1.0)*x4511)));
IkReal x4513=(cj5*r11);
IkReal x4514=((0.433012903784321)*x4513);
IkReal x4515=(r10*sj5);
IkReal x4516=((0.433012903784321)*x4515);
IkReal x4517=(cj5*r10*sj4);
IkReal x4518=(r11*sj4*sj5);
IkReal x4519=((0.0160344678271334)*r22);
IkReal x4520=((0.00925751294893567)*cj4);
IkReal x4521=((0.0160344678271334)*r12);
IkReal x4522=((0.433012903784321)*sj3);
IkReal x4523=(r22*x4522);
IkReal x4524=((0.866025201892125)*cj3*sj4);
IkReal x4525=((0.749999650312296)*sj3);
IkReal x4526=(cj3*cj4*sj5);
IkReal x4527=((1.0)*cj3*cj4*cj5);
IkReal x4528=((0.500000349687582)*cj3*sj4);
IkReal x4529=((0.250000349687704)*cj4*sj3);
IkReal x4530=((0.500000349687582)*sj3);
IkReal x4531=(r12*x4522);
evalcond[0]=((((-1.0)*cj4*x4503))+(((0.866025201892125)*x4509))+(((-1.0)*cj4*x4505))+x4500+x4507+x4503+x4505+(((-0.866025201892125)*x4508))+(((-1.0)*r22*x4501))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-0.866025201892125)*x4517))+x4514+x4516+x4512+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*cj4*x4514))+(((0.866025201892125)*x4518))+(((-1.0)*r12*x4501))+(((-1.0)*cj4*x4516)));
evalcond[2]=((((0.0648043305514941)*x4504))+(((-0.27144)*x4507))+((x4504*x4520))+(((-0.27144)*x4500))+(((-1.0)*(1.0)*pz))+(((0.0185150129489311)*x4508))+(((-0.0185150129489311)*x4509))+(((-1.0)*x4519))+(((0.29)*cj1))+(((0.0648043305514941)*x4502))+((x4502*x4520))+((cj4*x4519)));
evalcond[3]=((((-0.27144)*x4510))+((x4513*x4520))+(((-1.0)*(1.0)*py))+(((0.0648043305514941)*x4515))+((x4515*x4520))+(((0.0648043305514941)*x4513))+(((0.27144)*x4511))+(((-1.0)*x4521))+(((-0.0185150129489311)*x4518))+(((0.0185150129489311)*x4517))+(((0.29)*sj1))+((cj4*x4521)));
evalcond[4]=(((r22*x4524))+((x4508*x4530))+((x4504*x4525))+x4512+((cj4*x4523))+(((-1.0)*r20*x4527))+((x4502*x4528))+((x4504*x4528))+((x4502*x4529))+((x4502*x4525))+((r21*x4526))+(((-1.0)*x4523))+((x4504*x4529))+(((-1.0)*x4509*x4530)));
evalcond[5]=(((x4515*x4529))+((x4513*x4525))+(((-1.0)*x4500))+(((-1.0)*x4531))+((cj4*x4531))+((r11*x4526))+((x4515*x4525))+(((-1.0)*x4518*x4530))+((r12*x4524))+((x4513*x4528))+((x4513*x4529))+((x4515*x4528))+(((-1.0)*r10*x4527))+((x4517*x4530))+(((-1.0)*x4507)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4532=((0.250000349687704)*r12);
IkReal x4533=((0.749999650312296)*cj4*r12);
IkReal x4534=((0.433012903784321)*cj1);
IkReal x4535=(cj5*r11);
IkReal x4536=(x4534*x4535);
IkReal x4537=(r10*sj5);
IkReal x4538=(x4534*x4537);
IkReal x4539=((0.250000349687704)*r22*sj0);
IkReal x4540=(cj5*r10);
IkReal x4541=((0.866025201892125)*cj1*sj4);
IkReal x4542=(r11*sj5);
IkReal x4543=((0.749999650312296)*cj4*r22*sj0);
IkReal x4544=(cj5*r21);
IkReal x4545=((0.433012903784321)*sj0*sj1);
IkReal x4546=(x4544*x4545);
IkReal x4547=(r20*sj5);
IkReal x4548=(x4545*x4547);
IkReal x4549=(cj5*r20);
IkReal x4550=((0.866025201892125)*sj0*sj1*sj4);
IkReal x4551=(r21*sj5);
IkReal x4552=((0.433012903784321)*sj1);
IkReal x4553=(x4535*x4552);
IkReal x4554=(x4537*x4552);
IkReal x4555=((0.433012903784321)*cj1*sj0);
IkReal x4556=(x4544*x4555);
IkReal x4557=(x4547*x4555);
IkReal x4558=((0.866025201892125)*sj1*sj4);
IkReal x4559=((0.866025201892125)*cj1*sj0*sj4);
CheckValue<IkReal> x4560 = IKatan2WithCheck(IkReal((((cj1*x4532))+((cj4*x4546))+((x4549*x4550))+((sj1*x4539))+((cj4*x4548))+(((-1.0)*x4550*x4551))+((sj1*x4543))+((cj1*x4533))+((cj4*x4538))+(((-1.0)*x4538))+(((-1.0)*x4546))+(((-1.0)*x4541*x4542))+(((-1.0)*x4548))+((cj4*x4536))+((x4540*x4541))+(((-1.0)*x4536)))),IkReal(((((-1.0)*cj4*x4553))+x4554+x4553+((cj4*x4557))+(((-1.0)*sj1*x4532))+((cj1*x4543))+(((-1.0)*x4556))+((x4542*x4558))+((cj1*x4539))+(((-1.0)*x4551*x4559))+((x4549*x4559))+(((-1.0)*cj4*x4554))+(((-1.0)*sj1*x4533))+(((-1.0)*x4557))+((cj4*x4556))+(((-1.0)*x4540*x4558)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4560.valid){
continue;
}
CheckValue<IkReal> x4561=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4561.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4560.value)+(((1.5707963267949)*(x4561.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4562=IKcos(j2);
IkReal x4563=(cj1*x4562);
IkReal x4564=((0.749999650312296)*cj4);
IkReal x4565=(cj5*r21);
IkReal x4566=((0.433012903784321)*x4565);
IkReal x4567=(r20*sj5);
IkReal x4568=((0.433012903784321)*x4567);
IkReal x4569=IKsin(j2);
IkReal x4570=(sj1*x4569);
IkReal x4571=(cj5*r20*sj4);
IkReal x4572=(r21*sj4*sj5);
IkReal x4573=(cj5*r01);
IkReal x4574=((0.433012903784321)*x4573);
IkReal x4575=(r00*sj5);
IkReal x4576=((0.433012903784321)*x4575);
IkReal x4577=(cj1*x4569);
IkReal x4578=(cj0*x4577);
IkReal x4579=(cj5*r00*sj4);
IkReal x4580=(r01*sj4*sj5);
IkReal x4581=(cj0*sj1*x4562);
IkReal x4582=(cj5*r11);
IkReal x4583=((0.433012903784321)*x4582);
IkReal x4584=(r10*sj5);
IkReal x4585=((0.433012903784321)*x4584);
IkReal x4586=(sj0*x4577);
IkReal x4587=(cj5*r10*sj4);
IkReal x4588=(r11*sj4*sj5);
IkReal x4589=(sj0*sj1*x4562);
IkReal x4590=((0.0160344678271334)*r22);
IkReal x4591=((0.00925751294893567)*cj4);
IkReal x4592=((0.0160344678271334)*r02);
IkReal x4593=((0.29)*sj1);
IkReal x4594=((0.0160344678271334)*r12);
IkReal x4595=((0.433012903784321)*sj3);
IkReal x4596=(r22*x4595);
IkReal x4597=((0.866025201892125)*cj3*sj4);
IkReal x4598=((0.749999650312296)*sj3);
IkReal x4599=(cj3*cj4*sj5);
IkReal x4600=((1.0)*cj3*cj4*cj5);
IkReal x4601=((0.500000349687582)*cj3*sj4);
IkReal x4602=((0.250000349687704)*cj4*sj3);
IkReal x4603=((0.500000349687582)*sj3);
IkReal x4604=(r02*x4595);
IkReal x4605=(r12*x4595);
evalcond[0]=((((-1.0)*cj4*x4568))+(((-0.866025201892125)*x4571))+x4566+x4568+x4563+(((-1.0)*r22*x4564))+x4570+(((-1.0)*(0.250000349687704)*r22))+(((0.866025201892125)*x4572))+(((-1.0)*cj4*x4566)));
evalcond[1]=((((-1.0)*r02*x4564))+(((-1.0)*cj4*x4574))+(((-1.0)*cj4*x4576))+(((-1.0)*x4581))+(((-0.866025201892125)*x4579))+(((0.866025201892125)*x4580))+x4578+x4576+x4574+(((-1.0)*(0.250000349687704)*r02)));
evalcond[2]=((((-1.0)*cj4*x4585))+x4585+x4583+x4586+(((-0.866025201892125)*x4587))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*x4589))+(((-1.0)*r12*x4564))+(((0.866025201892125)*x4588))+(((-1.0)*cj4*x4583)));
evalcond[3]=((((0.0185150129489311)*x4571))+(((-1.0)*(1.0)*pz))+((cj4*x4590))+(((0.0648043305514941)*x4567))+(((-0.27144)*x4563))+(((0.0648043305514941)*x4565))+(((-0.27144)*x4570))+(((0.29)*cj1))+(((-0.0185150129489311)*x4572))+((x4567*x4591))+(((-1.0)*x4590))+((x4565*x4591)));
evalcond[4]=((((-1.0)*(1.0)*px))+((x4573*x4591))+(((0.0098)*sj0))+(((0.27144)*x4581))+((cj4*x4592))+(((0.0648043305514941)*x4575))+(((-0.0185150129489311)*x4580))+(((0.0185150129489311)*x4579))+(((-0.27144)*x4578))+(((-1.0)*x4592))+(((-1.0)*cj0*x4593))+(((0.0648043305514941)*x4573))+((x4575*x4591)));
evalcond[5]=((((0.0648043305514941)*x4582))+(((-1.0)*(1.0)*py))+(((0.27144)*x4589))+((x4582*x4591))+(((0.0648043305514941)*x4584))+((cj4*x4594))+(((-0.27144)*x4586))+(((0.0185150129489311)*x4587))+((x4584*x4591))+(((-0.0185150129489311)*x4588))+(((-1.0)*(0.0098)*cj0))+(((-1.0)*sj0*x4593))+(((-1.0)*x4594)));
evalcond[6]=(((r21*x4599))+((sj1*x4562))+((x4565*x4601))+(((-1.0)*r20*x4600))+((cj4*x4596))+((x4567*x4601))+((r22*x4597))+((x4567*x4598))+(((-1.0)*x4577))+((x4565*x4602))+((x4571*x4603))+((x4567*x4602))+(((-1.0)*x4572*x4603))+(((-1.0)*x4596))+((x4565*x4598)));
evalcond[7]=(((x4575*x4598))+((x4575*x4601))+(((-1.0)*x4580*x4603))+(((-1.0)*r00*x4600))+((x4575*x4602))+((r01*x4599))+((cj0*x4563))+((x4573*x4602))+((x4573*x4601))+((cj0*x4570))+((x4573*x4598))+((r02*x4597))+((cj4*x4604))+(((-1.0)*x4604))+((x4579*x4603)));
evalcond[8]=(((sj0*x4563))+(((-1.0)*r10*x4600))+((x4582*x4601))+((cj4*x4605))+(((-1.0)*x4605))+((r11*x4599))+(((-1.0)*x4588*x4603))+((x4584*x4602))+((x4582*x4598))+((x4582*x4602))+((x4584*x4598))+((x4587*x4603))+((r12*x4597))+((x4584*x4601))+((sj0*x4570)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4606=((0.250000349687704)*r02);
IkReal x4607=((0.250000349687704)*cj0*r22);
IkReal x4608=((0.749999650312296)*cj4*r02);
IkReal x4609=((0.433012903784321)*cj1);
IkReal x4610=(cj5*r01);
IkReal x4611=(x4609*x4610);
IkReal x4612=(r00*sj5);
IkReal x4613=(x4609*x4612);
IkReal x4614=((0.749999650312296)*cj0*cj4*r22);
IkReal x4615=(cj5*r21);
IkReal x4616=((0.433012903784321)*cj0*sj1);
IkReal x4617=(x4615*x4616);
IkReal x4618=(r20*sj5);
IkReal x4619=(x4616*x4618);
IkReal x4620=(cj5*r00);
IkReal x4621=((0.866025201892125)*cj1*sj4);
IkReal x4622=(r01*sj5);
IkReal x4623=(cj5*r20);
IkReal x4624=((0.866025201892125)*cj0*sj1*sj4);
IkReal x4625=(r21*sj5);
IkReal x4626=((0.433012903784321)*sj1);
IkReal x4627=(x4610*x4626);
IkReal x4628=(x4612*x4626);
IkReal x4629=((0.433012903784321)*cj0*cj1);
IkReal x4630=(x4615*x4629);
IkReal x4631=(x4618*x4629);
IkReal x4632=((0.866025201892125)*sj1*sj4);
IkReal x4633=((0.866025201892125)*cj0*cj1*sj4);
CheckValue<IkReal> x4634 = IKatan2WithCheck(IkReal((((cj4*x4611))+(((-1.0)*x4613))+(((-1.0)*x4624*x4625))+((sj1*x4607))+(((-1.0)*x4617))+((x4623*x4624))+((cj4*x4619))+((x4620*x4621))+(((-1.0)*x4611))+((sj1*x4614))+((cj4*x4613))+((cj4*x4617))+((cj1*x4606))+(((-1.0)*x4619))+((cj1*x4608))+(((-1.0)*x4621*x4622)))),IkReal((((cj1*x4614))+x4627+x4628+((x4623*x4633))+(((-1.0)*sj1*x4606))+(((-1.0)*x4625*x4633))+(((-1.0)*cj4*x4628))+(((-1.0)*sj1*x4608))+(((-1.0)*cj4*x4627))+((cj4*x4630))+((cj4*x4631))+((cj1*x4607))+(((-1.0)*x4630))+(((-1.0)*x4631))+((x4622*x4632))+(((-1.0)*x4620*x4632)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4634.valid){
continue;
}
CheckValue<IkReal> x4635=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4635.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4634.value)+(((1.5707963267949)*(x4635.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4636=IKcos(j2);
IkReal x4637=(cj1*x4636);
IkReal x4638=((0.749999650312296)*cj4);
IkReal x4639=(cj5*r21);
IkReal x4640=((0.433012903784321)*x4639);
IkReal x4641=(r20*sj5);
IkReal x4642=((0.433012903784321)*x4641);
IkReal x4643=IKsin(j2);
IkReal x4644=(sj1*x4643);
IkReal x4645=(cj5*r20*sj4);
IkReal x4646=(r21*sj4*sj5);
IkReal x4647=(cj5*r01);
IkReal x4648=((0.433012903784321)*x4647);
IkReal x4649=(r00*sj5);
IkReal x4650=((0.433012903784321)*x4649);
IkReal x4651=(cj1*x4643);
IkReal x4652=(cj0*x4651);
IkReal x4653=(cj5*r00*sj4);
IkReal x4654=(r01*sj4*sj5);
IkReal x4655=(cj0*sj1*x4636);
IkReal x4656=(cj5*r11);
IkReal x4657=((0.433012903784321)*x4656);
IkReal x4658=(r10*sj5);
IkReal x4659=((0.433012903784321)*x4658);
IkReal x4660=(sj0*x4651);
IkReal x4661=(cj5*r10*sj4);
IkReal x4662=(r11*sj4*sj5);
IkReal x4663=(sj0*sj1*x4636);
IkReal x4664=((0.0160344678271334)*r22);
IkReal x4665=((0.00925751294893567)*cj4);
IkReal x4666=((0.0160344678271334)*r02);
IkReal x4667=((0.29)*sj1);
IkReal x4668=((0.0160344678271334)*r12);
IkReal x4669=((0.433012903784321)*sj3);
IkReal x4670=(r22*x4669);
IkReal x4671=((0.866025201892125)*cj3*sj4);
IkReal x4672=((0.749999650312296)*sj3);
IkReal x4673=(cj3*cj4*sj5);
IkReal x4674=((1.0)*cj3*cj4*cj5);
IkReal x4675=((0.500000349687582)*cj3*sj4);
IkReal x4676=((0.250000349687704)*cj4*sj3);
IkReal x4677=((0.500000349687582)*sj3);
IkReal x4678=(r02*x4669);
IkReal x4679=(r12*x4669);
evalcond[0]=((((-1.0)*cj4*x4642))+(((-0.866025201892125)*x4645))+x4640+x4644+x4642+(((-1.0)*cj4*x4640))+(((0.866025201892125)*x4646))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x4638))+x4637);
evalcond[1]=((((-1.0)*cj4*x4648))+x4652+x4650+(((0.866025201892125)*x4654))+x4648+(((-1.0)*r02*x4638))+(((-1.0)*x4655))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x4650))+(((-0.866025201892125)*x4653)));
evalcond[2]=((((-1.0)*cj4*x4657))+x4659+x4657+(((-1.0)*cj4*x4659))+(((-1.0)*x4663))+x4660+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x4638))+(((-0.866025201892125)*x4661))+(((0.866025201892125)*x4662)));
evalcond[3]=((((-1.0)*x4664))+(((0.0648043305514941)*x4639))+(((-1.0)*(1.0)*pz))+(((0.0185150129489311)*x4645))+((cj4*x4664))+(((0.0648043305514941)*x4641))+(((-0.0185150129489311)*x4646))+(((0.29)*cj1))+((x4641*x4665))+((x4639*x4665))+(((-0.27144)*x4644))+(((-0.27144)*x4637)));
evalcond[4]=((((-1.0)*(1.0)*px))+((cj4*x4666))+(((0.0648043305514941)*x4649))+(((0.0098)*sj0))+((x4649*x4665))+(((-0.27144)*x4652))+(((0.0185150129489311)*x4653))+(((-1.0)*cj0*x4667))+(((-1.0)*x4666))+(((0.27144)*x4655))+((x4647*x4665))+(((-0.0185150129489311)*x4654))+(((0.0648043305514941)*x4647)));
evalcond[5]=((((0.27144)*x4663))+((x4658*x4665))+(((-1.0)*(1.0)*py))+(((0.0185150129489311)*x4661))+((cj4*x4668))+(((0.0648043305514941)*x4656))+(((0.0648043305514941)*x4658))+(((-0.27144)*x4660))+((x4656*x4665))+(((-0.0185150129489311)*x4662))+(((-1.0)*(0.0098)*cj0))+(((-1.0)*sj0*x4667))+(((-1.0)*x4668)));
evalcond[6]=(((x4641*x4672))+(((-1.0)*x4646*x4677))+((x4641*x4675))+((x4641*x4676))+((cj4*x4670))+((x4645*x4677))+(((-1.0)*r20*x4674))+((r22*x4671))+((x4639*x4675))+((x4639*x4676))+((r21*x4673))+((x4639*x4672))+((sj1*x4636))+(((-1.0)*x4670))+(((-1.0)*x4651)));
evalcond[7]=((((-1.0)*x4678))+((r02*x4671))+((x4647*x4676))+((x4647*x4675))+((x4653*x4677))+((cj0*x4644))+((x4647*x4672))+((x4649*x4672))+(((-1.0)*r00*x4674))+((cj4*x4678))+((x4649*x4676))+((x4649*x4675))+((cj0*x4637))+(((-1.0)*x4654*x4677))+((r01*x4673)));
evalcond[8]=((((-1.0)*r10*x4674))+((r11*x4673))+(((-1.0)*x4679))+((r12*x4671))+((sj0*x4637))+((x4658*x4672))+(((-1.0)*x4662*x4677))+((sj0*x4644))+((x4661*x4677))+((x4658*x4675))+((x4658*x4676))+((x4656*x4675))+((cj4*x4679))+((x4656*x4676))+((x4656*x4672)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4680=((0.433012903784321)*sj5);
IkReal x4681=((0.866025201892125)*sj4);
IkReal x4682=((0.433012903784321)*cj5);
IkReal x4683=((0.433012903784321)*cj0*r22);
IkReal x4684=((0.749999650312296)*cj0);
IkReal x4685=(cj5*r21);
IkReal x4686=(r20*sj5);
IkReal x4687=((0.250000349687704)*cj0*cj4);
IkReal x4688=(cj5*r20);
IkReal x4689=((0.500000349687582)*cj0*sj4);
IkReal x4690=(r21*sj5);
CheckValue<IkReal> x4691=IKPowWithIntegerCheck(IKsign((((r00*((((cj5*x4681))+(((-1.0)*x4680))+((cj4*x4680))))))+((r02*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r01*(((((-1.0)*x4682))+(((-1.0)*sj5*x4681))+((cj4*x4682)))))))),-1);
if(!x4691.valid){
continue;
}
CheckValue<IkReal> x4692 = IKatan2WithCheck(IkReal((((x4688*x4689))+((x4685*x4687))+((x4684*x4685))+(((-1.0)*x4683))+((x4686*x4687))+(((-1.0)*x4689*x4690))+((cj4*x4683))+((x4684*x4686)))),IkReal((((x4686*x4689))+((cj0*r22*x4681))+(((-1.0)*cj0*cj4*x4688))+((cj0*cj4*x4690))+((x4685*x4689)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4692.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4691.value)))+(x4692.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x4693=IKcos(j3);
IkReal x4694=((0.433012903784321)*x4693);
IkReal x4695=(r22*x4694);
IkReal x4696=((0.749999650312296)*cj5*x4693);
IkReal x4697=((0.749999650312296)*sj5*x4693);
IkReal x4698=IKsin(j3);
IkReal x4699=((0.866025201892125)*sj4*x4698);
IkReal x4700=(cj4*sj5*x4698);
IkReal x4701=((1.0)*cj4*cj5*x4698);
IkReal x4702=((0.250000349687704)*cj4*cj5*x4693);
IkReal x4703=((0.250000349687704)*cj4*sj5*x4693);
IkReal x4704=((0.500000349687582)*cj5*sj4*x4693);
IkReal x4705=((0.500000349687582)*cj5*sj4*x4698);
IkReal x4706=((0.500000349687582)*sj4*sj5*x4698);
IkReal x4707=((0.500000349687582)*sj4*sj5*x4693);
IkReal x4708=(r12*x4694);
IkReal x4709=(r02*x4694);
evalcond[0]=(((r21*x4707))+(((-1.0)*cj4*x4695))+(((-1.0)*r20*x4697))+((r22*x4699))+((r20*x4706))+x4695+(((-1.0)*r21*x4702))+(((-1.0)*r21*x4696))+(((-1.0)*r20*x4704))+(((-1.0)*r20*x4703))+((r21*x4700))+(((-1.0)*r20*x4701))+((r21*x4705)));
evalcond[1]=((((-1.0)*cj4*x4708))+x4708+cj0+(((-1.0)*r11*x4696))+((r10*x4706))+((r11*x4700))+(((-1.0)*r10*x4697))+(((-1.0)*r10*x4703))+(((-1.0)*r10*x4704))+((r11*x4707))+(((-1.0)*r11*x4702))+(((-1.0)*r10*x4701))+((r11*x4705))+((r12*x4699)));
evalcond[2]=(((r02*x4699))+(((-1.0)*r01*x4696))+(((-1.0)*(1.0)*sj0))+(((-1.0)*r01*x4702))+((r01*x4707))+(((-1.0)*cj4*x4709))+((r01*x4700))+(((-1.0)*r00*x4697))+((r00*x4706))+x4709+(((-1.0)*r00*x4704))+(((-1.0)*r00*x4703))+(((-1.0)*r00*x4701))+((r01*x4705)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4710=((0.646708404322884)*cj4);
IkReal x4711=((0.62876328674038)*cj5);
IkReal x4712=((0.62876328674038)*sj5);
IkReal x4713=((0.373377619497519)*cj4*cj5);
IkReal x4714=((0.373377619497519)*cj4*sj5);
IkReal x4715=((0.746754716733336)*cj5*sj4);
IkReal x4716=((0.746754716733336)*sj4*sj5);
if( IKabs((((r10*x4712))+(((-1.0)*r10*x4714))+(((-1.0)*r12*x4710))+(((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r11*x4713))+((r11*x4711))+(((-1.0)*(3.44827586206897)*py))+((r11*x4716))+(((-1.0)*r10*x4715)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+((r20*x4715))+((r22*x4710))+((r20*x4714))+(((0.289291595677116)*r22))+(((-1.0)*r21*x4711))+(((-1.0)*r21*x4716))+((r21*x4713))+(((-1.0)*r20*x4712)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x4712))+(((-1.0)*r10*x4714))+(((-1.0)*r12*x4710))+(((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r11*x4713))+((r11*x4711))+(((-1.0)*(3.44827586206897)*py))+((r11*x4716))+(((-1.0)*r10*x4715))))+IKsqr(((((3.44827586206897)*pz))+((r20*x4715))+((r22*x4710))+((r20*x4714))+(((0.289291595677116)*r22))+(((-1.0)*r21*x4711))+(((-1.0)*r21*x4716))+((r21*x4713))+(((-1.0)*r20*x4712))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r10*x4712))+(((-1.0)*r10*x4714))+(((-1.0)*r12*x4710))+(((-1.0)*(0.289291595677116)*r12))+(((-1.0)*r11*x4713))+((r11*x4711))+(((-1.0)*(3.44827586206897)*py))+((r11*x4716))+(((-1.0)*r10*x4715))), ((((3.44827586206897)*pz))+((r20*x4715))+((r22*x4710))+((r20*x4714))+(((0.289291595677116)*r22))+(((-1.0)*r21*x4711))+(((-1.0)*r21*x4716))+((r21*x4713))+(((-1.0)*r20*x4712))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4717=((0.187545437253636)*cj4);
IkReal x4718=(cj5*r21);
IkReal x4719=(r20*sj5);
IkReal x4720=((0.29)*(IKcos(j1)));
IkReal x4721=(cj4*cj5*r21);
IkReal x4722=(cj4*r20*sj5);
IkReal x4723=(cj5*r20*sj4);
IkReal x4724=(r21*sj4*sj5);
IkReal x4725=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*py)));
IkReal x4726=(cj5*r11);
IkReal x4727=(r10*sj5);
IkReal x4728=(cj4*cj5*r11);
IkReal x4729=(cj4*r10*sj5);
IkReal x4730=(cj5*r10*sj4);
IkReal x4731=(r11*sj4*sj5);
IkReal x4732=((0.0160344678271334)*r12);
IkReal x4733=((0.117537022603216)*sj3);
IkReal x4734=(r22*x4733);
IkReal x4735=((0.235073880801598)*cj3*sj4);
IkReal x4736=((0.20357990508077)*sj3);
IkReal x4737=((0.27144)*cj3*cj4*cj5);
IkReal x4738=((0.27144)*cj3*cj4*sj5);
IkReal x4739=((0.135720094919197)*cj3*sj4);
IkReal x4740=((0.0678600949192303)*sj3);
IkReal x4741=((0.135720094919197)*sj3);
IkReal x4742=((0.0160344678271334)*r22);
IkReal x4743=(r12*x4733);
evalcond[0]=((((-0.18234135315471)*x4718))+((r22*x4717))+(((0.216558867852667)*x4723))+(((-0.216558867852667)*x4724))+(((-1.0)*x4720))+pz+(((0.10827950965428)*x4722))+(((-0.18234135315471)*x4719))+(((0.0838945627463637)*r22))+(((0.10827950965428)*x4721)));
evalcond[1]=((((-1.0)*r12*x4717))+(((-0.216558867852667)*x4730))+(((-1.0)*(0.0838945627463637)*r12))+(((0.18234135315471)*x4726))+(((-0.10827950965428)*x4729))+(((0.18234135315471)*x4727))+(((-0.10827950965428)*x4728))+(((0.216558867852667)*x4731))+x4725);
evalcond[2]=((((0.0648043305514941)*x4726))+(((-1.0)*x4723*x4741))+(((0.0185150129489311)*x4730))+(((-1.0)*r22*x4735))+(((0.0648043305514941)*x4727))+(((-1.0)*x4718*x4736))+((r20*x4737))+(((0.00925751294893567)*x4728))+((cj4*x4732))+(((-1.0)*r21*x4738))+(((-1.0)*x4732))+(((-1.0)*cj4*x4734))+((x4724*x4741))+(((0.00925751294893567)*x4729))+(((-1.0)*x4718*x4739))+(((-1.0)*x4721*x4740))+(((-0.0185150129489311)*x4731))+(((-1.0)*x4719*x4736))+x4734+(((-1.0)*x4719*x4739))+x4725+(((-1.0)*x4722*x4740)));
evalcond[3]=(((r11*x4738))+(((-1.0)*r10*x4737))+((x4730*x4741))+(((-1.0)*x4742))+((x4728*x4740))+(((-1.0)*x4743))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x4718))+((r12*x4735))+(((0.00925751294893567)*x4721))+(((0.0185150129489311)*x4723))+(((-1.0)*x4731*x4741))+((cj4*x4742))+((x4729*x4740))+((x4727*x4739))+((cj4*x4743))+(((0.0648043305514941)*x4719))+(((0.00925751294893567)*x4722))+((x4726*x4736))+(((-0.0185150129489311)*x4724))+((x4727*x4736))+x4720+((x4726*x4739)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4744=((0.250000349687704)*cj1);
IkReal x4745=((0.250000349687704)*sj1);
IkReal x4746=((0.749999650312296)*cj1*cj4);
IkReal x4747=((0.433012903784321)*cj1*cj5);
IkReal x4748=(r11*x4747);
IkReal x4749=((0.433012903784321)*cj1*sj5);
IkReal x4750=(r10*x4749);
IkReal x4751=((0.749999650312296)*cj4*sj1);
IkReal x4752=((0.433012903784321)*cj5*sj1);
IkReal x4753=(r21*x4752);
IkReal x4754=((0.433012903784321)*sj1*sj5);
IkReal x4755=(r20*x4754);
IkReal x4756=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4757=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4758=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4759=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4760=(r21*x4747);
IkReal x4761=(r20*x4749);
IkReal x4762=(r11*x4752);
IkReal x4763=(r10*x4754);
if( IKabs((((r12*x4744))+(((-1.0)*x4753))+((cj4*x4753))+((r22*x4745))+((r12*x4746))+(((-1.0)*x4748))+(((-1.0)*x4750))+((cj4*x4750))+((r10*x4756))+(((-1.0)*r11*x4757))+(((-1.0)*x4755))+(((-1.0)*r21*x4759))+((r22*x4751))+((cj4*x4755))+((cj4*x4748))+((r20*x4758)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x4761))+(((-1.0)*cj4*x4763))+(((-1.0)*r10*x4758))+((cj4*x4760))+((r20*x4756))+x4763+x4762+((cj4*x4761))+(((-1.0)*cj4*x4762))+(((-1.0)*x4760))+((r11*x4759))+(((-1.0)*r21*x4757))+(((-1.0)*r12*x4751))+(((-1.0)*r12*x4745))+((r22*x4744))+((r22*x4746)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x4744))+(((-1.0)*x4753))+((cj4*x4753))+((r22*x4745))+((r12*x4746))+(((-1.0)*x4748))+(((-1.0)*x4750))+((cj4*x4750))+((r10*x4756))+(((-1.0)*r11*x4757))+(((-1.0)*x4755))+(((-1.0)*r21*x4759))+((r22*x4751))+((cj4*x4755))+((cj4*x4748))+((r20*x4758))))+IKsqr(((((-1.0)*x4761))+(((-1.0)*cj4*x4763))+(((-1.0)*r10*x4758))+((cj4*x4760))+((r20*x4756))+x4763+x4762+((cj4*x4761))+(((-1.0)*cj4*x4762))+(((-1.0)*x4760))+((r11*x4759))+(((-1.0)*r21*x4757))+(((-1.0)*r12*x4751))+(((-1.0)*r12*x4745))+((r22*x4744))+((r22*x4746))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r12*x4744))+(((-1.0)*x4753))+((cj4*x4753))+((r22*x4745))+((r12*x4746))+(((-1.0)*x4748))+(((-1.0)*x4750))+((cj4*x4750))+((r10*x4756))+(((-1.0)*r11*x4757))+(((-1.0)*x4755))+(((-1.0)*r21*x4759))+((r22*x4751))+((cj4*x4755))+((cj4*x4748))+((r20*x4758))), ((((-1.0)*x4761))+(((-1.0)*cj4*x4763))+(((-1.0)*r10*x4758))+((cj4*x4760))+((r20*x4756))+x4763+x4762+((cj4*x4761))+(((-1.0)*cj4*x4762))+(((-1.0)*x4760))+((r11*x4759))+(((-1.0)*r21*x4757))+(((-1.0)*r12*x4751))+(((-1.0)*r12*x4745))+((r22*x4744))+((r22*x4746))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4764=IKcos(j2);
IkReal x4765=(cj1*x4764);
IkReal x4766=IKsin(j2);
IkReal x4767=(sj1*x4766);
IkReal x4768=(x4767+x4765);
IkReal x4769=((0.749999650312296)*cj4);
IkReal x4770=(cj5*r21);
IkReal x4771=((0.433012903784321)*x4770);
IkReal x4772=(r20*sj5);
IkReal x4773=((0.433012903784321)*x4772);
IkReal x4774=(cj5*r20*sj4);
IkReal x4775=(r21*sj4*sj5);
IkReal x4776=(cj1*x4766);
IkReal x4777=(cj5*r11);
IkReal x4778=((0.433012903784321)*x4777);
IkReal x4779=(r10*sj5);
IkReal x4780=((0.433012903784321)*x4779);
IkReal x4781=(sj1*x4764);
IkReal x4782=(cj5*r10*sj4);
IkReal x4783=(r11*sj4*sj5);
IkReal x4784=((0.0160344678271334)*r22);
IkReal x4785=((0.00925751294893567)*cj4);
IkReal x4786=((0.0160344678271334)*r12);
IkReal x4787=((0.433012903784321)*sj3);
IkReal x4788=(r12*x4787);
IkReal x4789=((0.866025201892125)*cj3*sj4);
IkReal x4790=((0.749999650312296)*sj3);
IkReal x4791=(cj3*cj4*sj5);
IkReal x4792=((1.0)*cj3*cj4*cj5);
IkReal x4793=((0.500000349687582)*cj3*sj4);
IkReal x4794=((0.250000349687704)*cj4*sj3);
IkReal x4795=((0.500000349687582)*sj3);
IkReal x4796=(r22*x4787);
evalcond[0]=((((-1.0)*cj4*x4773))+(((0.866025201892125)*x4775))+x4768+(((-1.0)*r22*x4769))+x4773+x4771+(((-1.0)*cj4*x4771))+(((-1.0)*(0.250000349687704)*r22))+(((-0.866025201892125)*x4774)));
evalcond[1]=((((-1.0)*x4781))+(((-1.0)*(0.250000349687704)*r12))+(((-0.866025201892125)*x4782))+x4780+(((-1.0)*cj4*x4778))+(((-1.0)*r12*x4769))+(((-1.0)*cj4*x4780))+x4776+x4778+(((0.866025201892125)*x4783)));
evalcond[2]=((((-1.0)*x4784))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x4765))+(((0.29)*cj1))+(((0.0648043305514941)*x4772))+(((0.0185150129489311)*x4774))+(((0.0648043305514941)*x4770))+((x4772*x4785))+(((-0.27144)*x4767))+((x4770*x4785))+(((-0.0185150129489311)*x4775))+((cj4*x4784)));
evalcond[3]=((((0.0648043305514941)*x4779))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((-0.27144)*x4776))+((cj4*x4786))+((x4779*x4785))+(((0.27144)*x4781))+(((-1.0)*x4786))+(((-0.0185150129489311)*x4783))+((x4777*x4785))+(((0.0648043305514941)*x4777))+(((0.0185150129489311)*x4782)));
evalcond[4]=(((x4777*x4794))+((x4782*x4795))+x4768+((x4777*x4793))+((r12*x4789))+((r11*x4791))+((x4779*x4790))+((cj4*x4788))+((x4779*x4794))+(((-1.0)*r10*x4792))+(((-1.0)*x4788))+((x4777*x4790))+((x4779*x4793))+(((-1.0)*x4783*x4795)));
evalcond[5]=(((x4770*x4793))+(((-1.0)*x4796))+((x4772*x4790))+x4781+((r21*x4791))+((x4772*x4793))+((x4774*x4795))+(((-1.0)*x4775*x4795))+((x4770*x4790))+((r22*x4789))+((x4772*x4794))+((cj4*x4796))+(((-1.0)*x4776))+((x4770*x4794))+(((-1.0)*r20*x4792)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4797=((0.646708404322884)*cj4);
IkReal x4798=((0.62876328674038)*cj5);
IkReal x4799=((0.62876328674038)*sj5);
IkReal x4800=((0.373377619497519)*cj4*cj5);
IkReal x4801=((0.373377619497519)*cj4*sj5);
IkReal x4802=((0.746754716733336)*cj5*sj4);
IkReal x4803=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r10*x4799))+((r10*x4801))+((r10*x4802))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+(((-1.0)*r11*x4798))+((r12*x4797))+((r11*x4800))+(((-1.0)*r11*x4803)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x4803))+(((3.44827586206897)*pz))+((r22*x4797))+(((-1.0)*r21*x4798))+((r20*x4801))+(((-1.0)*r20*x4799))+((r21*x4800))+((r20*x4802))+(((0.289291595677116)*r22)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x4799))+((r10*x4801))+((r10*x4802))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+(((-1.0)*r11*x4798))+((r12*x4797))+((r11*x4800))+(((-1.0)*r11*x4803))))+IKsqr(((((-1.0)*r21*x4803))+(((3.44827586206897)*pz))+((r22*x4797))+(((-1.0)*r21*x4798))+((r20*x4801))+(((-1.0)*r20*x4799))+((r21*x4800))+((r20*x4802))+(((0.289291595677116)*r22))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r10*x4799))+((r10*x4801))+((r10*x4802))+(((3.44827586206897)*py))+(((0.289291595677116)*r12))+(((-1.0)*r11*x4798))+((r12*x4797))+((r11*x4800))+(((-1.0)*r11*x4803))), ((((-1.0)*r21*x4803))+(((3.44827586206897)*pz))+((r22*x4797))+(((-1.0)*r21*x4798))+((r20*x4801))+(((-1.0)*r20*x4799))+((r21*x4800))+((r20*x4802))+(((0.289291595677116)*r22))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4804=((0.187545437253636)*cj4);
IkReal x4805=(cj5*r11);
IkReal x4806=(r10*sj5);
IkReal x4807=((0.29)*(IKsin(j1)));
IkReal x4808=(cj4*cj5*r11);
IkReal x4809=(cj4*r10*sj5);
IkReal x4810=(cj5*r10*sj4);
IkReal x4811=(r11*sj4*sj5);
IkReal x4812=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x4813=(cj5*r21);
IkReal x4814=(r20*sj5);
IkReal x4815=(cj4*cj5*r21);
IkReal x4816=(cj4*r20*sj5);
IkReal x4817=(cj5*r20*sj4);
IkReal x4818=(r21*sj4*sj5);
IkReal x4819=((0.0160344678271334)*r22);
IkReal x4820=((0.117537022603216)*sj3);
IkReal x4821=(r12*x4820);
IkReal x4822=((0.235073880801598)*cj3*sj4);
IkReal x4823=((0.20357990508077)*sj3);
IkReal x4824=((0.27144)*cj3*cj4*cj5);
IkReal x4825=((0.27144)*cj3*cj4*sj5);
IkReal x4826=((0.135720094919197)*cj3*sj4);
IkReal x4827=((0.0678600949192303)*sj3);
IkReal x4828=((0.135720094919197)*sj3);
IkReal x4829=((0.0160344678271334)*r12);
IkReal x4830=(r22*x4820);
evalcond[0]=((((-0.18234135315471)*x4805))+((r12*x4804))+(((-0.18234135315471)*x4806))+(((0.216558867852667)*x4810))+(((-1.0)*x4807))+(((0.0838945627463637)*r12))+(((0.10827950965428)*x4808))+py+(((-0.216558867852667)*x4811))+(((0.10827950965428)*x4809)));
evalcond[1]=((((-0.216558867852667)*x4818))+(((-0.18234135315471)*x4814))+(((0.216558867852667)*x4817))+((r22*x4804))+x4812+(((0.10827950965428)*x4815))+(((0.10827950965428)*x4816))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x4813)));
evalcond[2]=(((r12*x4822))+((cj4*x4821))+(((-0.0648043305514941)*x4813))+(((-1.0)*x4811*x4828))+(((-0.00925751294893567)*x4816))+((r11*x4825))+(((-0.00925751294893567)*x4815))+(((-0.0185150129489311)*x4817))+(((-0.0648043305514941)*x4814))+(((0.0185150129489311)*x4818))+((x4809*x4827))+((x4806*x4826))+((x4810*x4828))+(((-1.0)*x4821))+(((-1.0)*cj4*x4819))+x4819+x4812+(((-1.0)*r10*x4824))+((x4805*x4823))+((x4808*x4827))+((x4805*x4826))+((x4806*x4823)));
evalcond[3]=(((x4814*x4823))+(((0.0648043305514941)*x4805))+((cj4*x4830))+(((-1.0)*(1.0)*py))+(((0.0648043305514941)*x4806))+(((-1.0)*x4818*x4828))+((x4816*x4827))+x4807+((r21*x4825))+((x4815*x4827))+((x4813*x4826))+(((-1.0)*x4829))+((cj4*x4829))+(((0.00925751294893567)*x4809))+(((-0.0185150129489311)*x4811))+(((-1.0)*x4830))+(((-1.0)*r20*x4824))+(((0.0185150129489311)*x4810))+((x4814*x4826))+((r22*x4822))+((x4817*x4828))+((x4813*x4823))+(((0.00925751294893567)*x4808)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4831=((0.250000349687704)*cj1);
IkReal x4832=((0.250000349687704)*sj1);
IkReal x4833=((0.749999650312296)*cj1*cj4);
IkReal x4834=((0.433012903784321)*cj1*cj5);
IkReal x4835=(r11*x4834);
IkReal x4836=((0.433012903784321)*cj1*sj5);
IkReal x4837=(r10*x4836);
IkReal x4838=((0.749999650312296)*cj4*sj1);
IkReal x4839=((0.433012903784321)*cj5*sj1);
IkReal x4840=(r21*x4839);
IkReal x4841=((0.433012903784321)*sj1*sj5);
IkReal x4842=(r20*x4841);
IkReal x4843=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4844=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4845=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4846=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4847=(r21*x4834);
IkReal x4848=(r20*x4836);
IkReal x4849=(r11*x4839);
IkReal x4850=(r10*x4841);
if( IKabs(((((-1.0)*r12*x4833))+((r22*x4832))+(((-1.0)*x4842))+((cj4*x4842))+x4837+x4835+(((-1.0)*r10*x4843))+((r22*x4838))+(((-1.0)*cj4*x4837))+((r11*x4844))+((r20*x4845))+(((-1.0)*cj4*x4835))+(((-1.0)*r12*x4831))+(((-1.0)*x4840))+(((-1.0)*r21*x4846))+((cj4*x4840)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x4846))+((cj4*x4850))+((r10*x4845))+(((-1.0)*r21*x4844))+((r12*x4832))+(((-1.0)*x4848))+((cj4*x4848))+((r12*x4838))+((r20*x4843))+(((-1.0)*x4850))+((r22*x4833))+((cj4*x4849))+(((-1.0)*x4849))+((r22*x4831))+((cj4*x4847))+(((-1.0)*x4847)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r12*x4833))+((r22*x4832))+(((-1.0)*x4842))+((cj4*x4842))+x4837+x4835+(((-1.0)*r10*x4843))+((r22*x4838))+(((-1.0)*cj4*x4837))+((r11*x4844))+((r20*x4845))+(((-1.0)*cj4*x4835))+(((-1.0)*r12*x4831))+(((-1.0)*x4840))+(((-1.0)*r21*x4846))+((cj4*x4840))))+IKsqr(((((-1.0)*r11*x4846))+((cj4*x4850))+((r10*x4845))+(((-1.0)*r21*x4844))+((r12*x4832))+(((-1.0)*x4848))+((cj4*x4848))+((r12*x4838))+((r20*x4843))+(((-1.0)*x4850))+((r22*x4833))+((cj4*x4849))+(((-1.0)*x4849))+((r22*x4831))+((cj4*x4847))+(((-1.0)*x4847))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r12*x4833))+((r22*x4832))+(((-1.0)*x4842))+((cj4*x4842))+x4837+x4835+(((-1.0)*r10*x4843))+((r22*x4838))+(((-1.0)*cj4*x4837))+((r11*x4844))+((r20*x4845))+(((-1.0)*cj4*x4835))+(((-1.0)*r12*x4831))+(((-1.0)*x4840))+(((-1.0)*r21*x4846))+((cj4*x4840))), ((((-1.0)*r11*x4846))+((cj4*x4850))+((r10*x4845))+(((-1.0)*r21*x4844))+((r12*x4832))+(((-1.0)*x4848))+((cj4*x4848))+((r12*x4838))+((r20*x4843))+(((-1.0)*x4850))+((r22*x4833))+((cj4*x4849))+(((-1.0)*x4849))+((r22*x4831))+((cj4*x4847))+(((-1.0)*x4847))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4851=IKcos(j2);
IkReal x4852=(cj1*x4851);
IkReal x4853=((0.749999650312296)*cj4);
IkReal x4854=(cj5*r21);
IkReal x4855=((0.433012903784321)*x4854);
IkReal x4856=(r20*sj5);
IkReal x4857=((0.433012903784321)*x4856);
IkReal x4858=IKsin(j2);
IkReal x4859=(sj1*x4858);
IkReal x4860=(cj5*r20*sj4);
IkReal x4861=(r21*sj4*sj5);
IkReal x4862=(sj1*x4851);
IkReal x4863=(cj1*x4858);
IkReal x4864=((((-1.0)*x4863))+x4862);
IkReal x4865=(cj5*r11);
IkReal x4866=((0.433012903784321)*x4865);
IkReal x4867=(r10*sj5);
IkReal x4868=((0.433012903784321)*x4867);
IkReal x4869=(cj5*r10*sj4);
IkReal x4870=(r11*sj4*sj5);
IkReal x4871=((0.0160344678271334)*r22);
IkReal x4872=((0.00925751294893567)*cj4);
IkReal x4873=((0.0160344678271334)*r12);
IkReal x4874=((0.433012903784321)*sj3);
IkReal x4875=(r22*x4874);
IkReal x4876=((0.866025201892125)*cj3*sj4);
IkReal x4877=((0.749999650312296)*sj3);
IkReal x4878=(cj3*cj4*sj5);
IkReal x4879=((1.0)*cj3*cj4*cj5);
IkReal x4880=((0.500000349687582)*cj3*sj4);
IkReal x4881=((0.250000349687704)*cj4*sj3);
IkReal x4882=((0.500000349687582)*sj3);
IkReal x4883=(r12*x4874);
evalcond[0]=(x4855+x4857+x4852+x4859+(((-0.866025201892125)*x4860))+(((-1.0)*r22*x4853))+(((0.866025201892125)*x4861))+(((-1.0)*cj4*x4855))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x4857)));
evalcond[1]=((((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x4870))+(((-1.0)*cj4*x4866))+x4864+x4866+x4868+(((-1.0)*r12*x4853))+(((-0.866025201892125)*x4869))+(((-1.0)*cj4*x4868)));
evalcond[2]=(((x4854*x4872))+(((-0.27144)*x4859))+(((-1.0)*(1.0)*pz))+((x4856*x4872))+(((0.29)*cj1))+(((-0.27144)*x4852))+(((-1.0)*x4871))+(((0.0648043305514941)*x4856))+((cj4*x4871))+(((0.0185150129489311)*x4860))+(((-0.0185150129489311)*x4861))+(((0.0648043305514941)*x4854)));
evalcond[3]=(((x4867*x4872))+(((0.0648043305514941)*x4867))+(((-1.0)*(1.0)*py))+(((0.27144)*x4863))+((x4865*x4872))+(((0.0648043305514941)*x4865))+((cj4*x4873))+(((-1.0)*x4873))+(((0.0185150129489311)*x4869))+(((-0.0185150129489311)*x4870))+(((0.29)*sj1))+(((-0.27144)*x4862)));
evalcond[4]=(((cj4*x4875))+(((-1.0)*x4875))+((r22*x4876))+((x4856*x4877))+(((-1.0)*r20*x4879))+x4864+((x4854*x4877))+((x4856*x4880))+(((-1.0)*x4861*x4882))+((x4856*x4881))+((r21*x4878))+((x4860*x4882))+((x4854*x4881))+((x4854*x4880)));
evalcond[5]=(((x4869*x4882))+((x4867*x4881))+((x4867*x4880))+(((-1.0)*x4883))+((x4865*x4880))+((x4865*x4881))+((x4865*x4877))+((x4867*x4877))+(((-1.0)*x4859))+((r11*x4878))+((cj4*x4883))+(((-1.0)*r10*x4879))+(((-1.0)*x4870*x4882))+(((-1.0)*x4852))+((r12*x4876)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4884=((0.646708404322884)*cj4);
IkReal x4885=((0.62876328674038)*cj5);
IkReal x4886=((0.62876328674038)*sj5);
IkReal x4887=((0.373377619497519)*cj4*cj5);
IkReal x4888=((0.373377619497519)*cj4*sj5);
IkReal x4889=((0.746754716733336)*cj5*sj4);
IkReal x4890=((0.746754716733336)*sj4*sj5);
if( IKabs((((r00*x4886))+(((-1.0)*r00*x4888))+((r01*x4885))+(((-1.0)*r01*x4887))+(((-1.0)*r00*x4889))+(((-1.0)*r02*x4884))+((r01*x4890))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((3.44827586206897)*pz))+((r22*x4884))+(((-1.0)*r20*x4886))+((r20*x4888))+(((0.289291595677116)*r22))+(((-1.0)*r21*x4885))+(((-1.0)*r21*x4890))+((r20*x4889))+((r21*x4887)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x4886))+(((-1.0)*r00*x4888))+((r01*x4885))+(((-1.0)*r01*x4887))+(((-1.0)*r00*x4889))+(((-1.0)*r02*x4884))+((r01*x4890))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))))+IKsqr(((((3.44827586206897)*pz))+((r22*x4884))+(((-1.0)*r20*x4886))+((r20*x4888))+(((0.289291595677116)*r22))+(((-1.0)*r21*x4885))+(((-1.0)*r21*x4890))+((r20*x4889))+((r21*x4887))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*x4886))+(((-1.0)*r00*x4888))+((r01*x4885))+(((-1.0)*r01*x4887))+(((-1.0)*r00*x4889))+(((-1.0)*r02*x4884))+((r01*x4890))+(((-1.0)*(3.44827586206897)*px))+(((-1.0)*(0.289291595677116)*r02))), ((((3.44827586206897)*pz))+((r22*x4884))+(((-1.0)*r20*x4886))+((r20*x4888))+(((0.289291595677116)*r22))+(((-1.0)*r21*x4885))+(((-1.0)*r21*x4890))+((r20*x4889))+((r21*x4887))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4891=((0.187545437253636)*cj4);
IkReal x4892=(cj5*r21);
IkReal x4893=(r20*sj5);
IkReal x4894=((0.29)*(IKcos(j1)));
IkReal x4895=(cj4*cj5*r21);
IkReal x4896=(cj4*r20*sj5);
IkReal x4897=(cj5*r20*sj4);
IkReal x4898=(r21*sj4*sj5);
IkReal x4899=((((-1.0)*(0.29)*(IKsin(j1))))+(((-1.0)*(1.0)*px)));
IkReal x4900=(cj5*r01);
IkReal x4901=(r00*sj5);
IkReal x4902=(cj4*cj5*r01);
IkReal x4903=(cj4*r00*sj5);
IkReal x4904=(cj5*r00*sj4);
IkReal x4905=(r01*sj4*sj5);
IkReal x4906=((0.0160344678271334)*r02);
IkReal x4907=((0.117537022603216)*sj3);
IkReal x4908=(r22*x4907);
IkReal x4909=((0.235073880801598)*cj3*sj4);
IkReal x4910=((0.20357990508077)*sj3);
IkReal x4911=((0.27144)*cj3*cj4*cj5);
IkReal x4912=((0.27144)*cj3*cj4*sj5);
IkReal x4913=((0.135720094919197)*cj3*sj4);
IkReal x4914=((0.0678600949192303)*sj3);
IkReal x4915=((0.135720094919197)*sj3);
IkReal x4916=((0.0160344678271334)*r22);
IkReal x4917=(r02*x4907);
evalcond[0]=(((r22*x4891))+(((-1.0)*x4894))+(((-0.216558867852667)*x4898))+pz+(((-0.18234135315471)*x4893))+(((0.10827950965428)*x4895))+(((0.10827950965428)*x4896))+(((-0.18234135315471)*x4892))+(((0.216558867852667)*x4897))+(((0.0838945627463637)*r22)));
evalcond[1]=(x4899+(((0.216558867852667)*x4905))+(((-1.0)*(0.0838945627463637)*r02))+(((-0.10827950965428)*x4903))+(((0.18234135315471)*x4901))+(((-0.10827950965428)*x4902))+(((-0.216558867852667)*x4904))+(((0.18234135315471)*x4900))+(((-1.0)*r02*x4891)));
evalcond[2]=((((0.00925751294893567)*x4902))+x4908+(((-1.0)*x4906))+(((-1.0)*r21*x4912))+((cj4*x4906))+(((-1.0)*r22*x4909))+(((-1.0)*x4897*x4915))+x4899+(((-1.0)*x4895*x4914))+(((0.0648043305514941)*x4901))+(((0.0185150129489311)*x4904))+(((-1.0)*x4892*x4913))+(((-1.0)*x4893*x4913))+(((0.0648043305514941)*x4900))+(((0.00925751294893567)*x4903))+(((-1.0)*x4896*x4914))+(((-1.0)*cj4*x4908))+(((-1.0)*x4892*x4910))+(((-0.0185150129489311)*x4905))+(((-1.0)*x4893*x4910))+((r20*x4911))+((x4898*x4915)));
evalcond[3]=(((r01*x4912))+((x4901*x4913))+x4894+(((-1.0)*x4916))+(((0.0648043305514941)*x4893))+(((-1.0)*(1.0)*pz))+((r02*x4909))+((x4900*x4910))+((x4902*x4914))+(((-1.0)*r00*x4911))+(((-1.0)*x4917))+(((-0.0185150129489311)*x4898))+((x4904*x4915))+((cj4*x4916))+((cj4*x4917))+(((0.00925751294893567)*x4896))+((x4901*x4910))+(((-1.0)*x4905*x4915))+((x4903*x4914))+(((0.00925751294893567)*x4895))+(((0.0185150129489311)*x4897))+(((0.0648043305514941)*x4892))+((x4900*x4913)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4918=((0.250000349687704)*cj1);
IkReal x4919=((0.250000349687704)*sj1);
IkReal x4920=((0.749999650312296)*cj1*cj4);
IkReal x4921=((0.433012903784321)*cj1*cj5);
IkReal x4922=(r01*x4921);
IkReal x4923=((0.433012903784321)*cj1*sj5);
IkReal x4924=(r00*x4923);
IkReal x4925=((0.749999650312296)*cj4*sj1);
IkReal x4926=((0.433012903784321)*cj5*sj1);
IkReal x4927=(r21*x4926);
IkReal x4928=((0.433012903784321)*sj1*sj5);
IkReal x4929=(r20*x4928);
IkReal x4930=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4931=((0.866025201892125)*cj1*sj4*sj5);
IkReal x4932=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4933=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4934=(r21*x4921);
IkReal x4935=(r20*x4923);
IkReal x4936=(r01*x4926);
IkReal x4937=(r00*x4928);
if( IKabs(((((-1.0)*x4929))+((cj4*x4927))+((r02*x4918))+((cj4*x4924))+((cj4*x4922))+((r00*x4930))+((r22*x4925))+((r22*x4919))+((r02*x4920))+((cj4*x4929))+((r20*x4932))+(((-1.0)*x4927))+(((-1.0)*r01*x4931))+(((-1.0)*r21*x4933))+(((-1.0)*x4924))+(((-1.0)*x4922)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x4918))+(((-1.0)*x4935))+(((-1.0)*cj4*x4937))+((cj4*x4935))+(((-1.0)*cj4*x4936))+(((-1.0)*r02*x4925))+((r01*x4933))+(((-1.0)*x4934))+(((-1.0)*r00*x4932))+((r22*x4920))+((cj4*x4934))+(((-1.0)*r21*x4931))+(((-1.0)*r02*x4919))+x4936+x4937+((r20*x4930)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4929))+((cj4*x4927))+((r02*x4918))+((cj4*x4924))+((cj4*x4922))+((r00*x4930))+((r22*x4925))+((r22*x4919))+((r02*x4920))+((cj4*x4929))+((r20*x4932))+(((-1.0)*x4927))+(((-1.0)*r01*x4931))+(((-1.0)*r21*x4933))+(((-1.0)*x4924))+(((-1.0)*x4922))))+IKsqr((((r22*x4918))+(((-1.0)*x4935))+(((-1.0)*cj4*x4937))+((cj4*x4935))+(((-1.0)*cj4*x4936))+(((-1.0)*r02*x4925))+((r01*x4933))+(((-1.0)*x4934))+(((-1.0)*r00*x4932))+((r22*x4920))+((cj4*x4934))+(((-1.0)*r21*x4931))+(((-1.0)*r02*x4919))+x4936+x4937+((r20*x4930))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4929))+((cj4*x4927))+((r02*x4918))+((cj4*x4924))+((cj4*x4922))+((r00*x4930))+((r22*x4925))+((r22*x4919))+((r02*x4920))+((cj4*x4929))+((r20*x4932))+(((-1.0)*x4927))+(((-1.0)*r01*x4931))+(((-1.0)*r21*x4933))+(((-1.0)*x4924))+(((-1.0)*x4922))), (((r22*x4918))+(((-1.0)*x4935))+(((-1.0)*cj4*x4937))+((cj4*x4935))+(((-1.0)*cj4*x4936))+(((-1.0)*r02*x4925))+((r01*x4933))+(((-1.0)*x4934))+(((-1.0)*r00*x4932))+((r22*x4920))+((cj4*x4934))+(((-1.0)*r21*x4931))+(((-1.0)*r02*x4919))+x4936+x4937+((r20*x4930))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4938=IKcos(j2);
IkReal x4939=(cj1*x4938);
IkReal x4940=IKsin(j2);
IkReal x4941=(sj1*x4940);
IkReal x4942=(x4941+x4939);
IkReal x4943=((0.749999650312296)*cj4);
IkReal x4944=(cj5*r21);
IkReal x4945=((0.433012903784321)*x4944);
IkReal x4946=(r20*sj5);
IkReal x4947=((0.433012903784321)*x4946);
IkReal x4948=(cj5*r20*sj4);
IkReal x4949=(r21*sj4*sj5);
IkReal x4950=(cj1*x4940);
IkReal x4951=(cj5*r01);
IkReal x4952=((0.433012903784321)*x4951);
IkReal x4953=(r00*sj5);
IkReal x4954=((0.433012903784321)*x4953);
IkReal x4955=(sj1*x4938);
IkReal x4956=(cj5*r00*sj4);
IkReal x4957=(r01*sj4*sj5);
IkReal x4958=((0.0160344678271334)*r22);
IkReal x4959=((0.00925751294893567)*cj4);
IkReal x4960=((0.0160344678271334)*r02);
IkReal x4961=((0.433012903784321)*sj3);
IkReal x4962=(r02*x4961);
IkReal x4963=((0.866025201892125)*cj3*sj4);
IkReal x4964=((0.749999650312296)*sj3);
IkReal x4965=(cj3*cj4*sj5);
IkReal x4966=((1.0)*cj3*cj4*cj5);
IkReal x4967=((0.500000349687582)*cj3*sj4);
IkReal x4968=((0.250000349687704)*cj4*sj3);
IkReal x4969=((0.500000349687582)*sj3);
IkReal x4970=(r22*x4961);
evalcond[0]=((((-1.0)*r22*x4943))+(((0.866025201892125)*x4949))+(((-0.866025201892125)*x4948))+(((-1.0)*cj4*x4947))+x4945+x4947+x4942+(((-1.0)*cj4*x4945))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*cj4*x4954))+x4950+x4954+x4952+(((-1.0)*x4955))+(((-1.0)*(0.250000349687704)*r02))+(((0.866025201892125)*x4957))+(((-0.866025201892125)*x4956))+(((-1.0)*cj4*x4952))+(((-1.0)*r02*x4943)));
evalcond[2]=((((0.0648043305514941)*x4944))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x4946))+(((-1.0)*x4958))+((x4946*x4959))+(((-0.0185150129489311)*x4949))+(((0.29)*cj1))+(((-0.27144)*x4939))+(((0.0185150129489311)*x4948))+((x4944*x4959))+((cj4*x4958))+(((-0.27144)*x4941)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((-1.0)*(0.29)*sj1))+(((-0.0185150129489311)*x4957))+(((0.0648043305514941)*x4953))+(((0.27144)*x4955))+((cj4*x4960))+(((-0.27144)*x4950))+((x4951*x4959))+(((0.0648043305514941)*x4951))+(((-1.0)*x4960))+(((0.0185150129489311)*x4956))+((x4953*x4959)));
evalcond[4]=(((r01*x4965))+((x4951*x4967))+(((-1.0)*x4957*x4969))+((x4953*x4967))+((cj4*x4962))+((x4953*x4964))+((x4951*x4964))+((r02*x4963))+((x4953*x4968))+x4942+(((-1.0)*x4962))+(((-1.0)*r00*x4966))+((x4956*x4969))+((x4951*x4968)));
evalcond[5]=(((r22*x4963))+((r21*x4965))+x4955+((x4946*x4967))+(((-1.0)*x4949*x4969))+((x4944*x4968))+(((-1.0)*x4950))+((x4946*x4964))+((x4944*x4964))+(((-1.0)*x4970))+((cj4*x4970))+((x4944*x4967))+(((-1.0)*r20*x4966))+((x4948*x4969))+((x4946*x4968)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4971=((0.646708404322884)*cj4);
IkReal x4972=((0.62876328674038)*cj5);
IkReal x4973=((0.62876328674038)*sj5);
IkReal x4974=((0.373377619497519)*cj4*cj5);
IkReal x4975=((0.373377619497519)*cj4*sj5);
IkReal x4976=((0.746754716733336)*cj5*sj4);
IkReal x4977=((0.746754716733336)*sj4*sj5);
if( IKabs(((((-1.0)*r01*x4972))+(((0.289291595677116)*r02))+(((-1.0)*r01*x4977))+(((3.44827586206897)*px))+((r01*x4974))+((r00*x4975))+((r02*x4971))+((r00*x4976))+(((-1.0)*r00*x4973)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x4977))+((r21*x4974))+(((-1.0)*r21*x4972))+(((3.44827586206897)*pz))+(((-1.0)*r20*x4973))+((r20*x4975))+((r20*x4976))+((r22*x4971))+(((0.289291595677116)*r22)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*x4972))+(((0.289291595677116)*r02))+(((-1.0)*r01*x4977))+(((3.44827586206897)*px))+((r01*x4974))+((r00*x4975))+((r02*x4971))+((r00*x4976))+(((-1.0)*r00*x4973))))+IKsqr(((((-1.0)*r21*x4977))+((r21*x4974))+(((-1.0)*r21*x4972))+(((3.44827586206897)*pz))+(((-1.0)*r20*x4973))+((r20*x4975))+((r20*x4976))+((r22*x4971))+(((0.289291595677116)*r22))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r01*x4972))+(((0.289291595677116)*r02))+(((-1.0)*r01*x4977))+(((3.44827586206897)*px))+((r01*x4974))+((r00*x4975))+((r02*x4971))+((r00*x4976))+(((-1.0)*r00*x4973))), ((((-1.0)*r21*x4977))+((r21*x4974))+(((-1.0)*r21*x4972))+(((3.44827586206897)*pz))+(((-1.0)*r20*x4973))+((r20*x4975))+((r20*x4976))+((r22*x4971))+(((0.289291595677116)*r22))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4978=((0.187545437253636)*cj4);
IkReal x4979=(cj5*r01);
IkReal x4980=(r00*sj5);
IkReal x4981=((0.29)*(IKsin(j1)));
IkReal x4982=(cj4*cj5*r01);
IkReal x4983=(cj4*r00*sj5);
IkReal x4984=(cj5*r00*sj4);
IkReal x4985=(r01*sj4*sj5);
IkReal x4986=(pz+(((-1.0)*(0.29)*(IKcos(j1)))));
IkReal x4987=(cj5*r21);
IkReal x4988=(r20*sj5);
IkReal x4989=(cj4*cj5*r21);
IkReal x4990=(cj4*r20*sj5);
IkReal x4991=(cj5*r20*sj4);
IkReal x4992=(r21*sj4*sj5);
IkReal x4993=((0.0160344678271334)*r22);
IkReal x4994=((0.117537022603216)*sj3);
IkReal x4995=(r02*x4994);
IkReal x4996=((0.235073880801598)*cj3*sj4);
IkReal x4997=((0.20357990508077)*sj3);
IkReal x4998=((0.27144)*cj3*cj4*cj5);
IkReal x4999=((0.27144)*cj3*cj4*sj5);
IkReal x5000=((0.135720094919197)*cj3*sj4);
IkReal x5001=((0.0678600949192303)*sj3);
IkReal x5002=((0.135720094919197)*sj3);
IkReal x5003=((0.0160344678271334)*r02);
IkReal x5004=(r22*x4994);
evalcond[0]=((((-0.18234135315471)*x4979))+(((-1.0)*x4981))+(((0.216558867852667)*x4984))+px+(((0.10827950965428)*x4982))+(((-0.216558867852667)*x4985))+(((0.0838945627463637)*r02))+(((-0.18234135315471)*x4980))+(((0.10827950965428)*x4983))+((r02*x4978)));
evalcond[1]=(x4986+(((-0.18234135315471)*x4988))+(((0.10827950965428)*x4989))+(((-0.18234135315471)*x4987))+((r22*x4978))+(((0.10827950965428)*x4990))+(((0.216558867852667)*x4991))+(((0.0838945627463637)*r22))+(((-0.216558867852667)*x4992)));
evalcond[2]=((((-0.0648043305514941)*x4988))+((cj4*x4995))+(((-1.0)*cj4*x4993))+x4993+x4986+(((-0.0185150129489311)*x4991))+((x4980*x5000))+((x4983*x5001))+((r01*x4999))+((x4979*x4997))+(((-0.00925751294893567)*x4990))+(((-1.0)*x4985*x5002))+((x4982*x5001))+(((0.0185150129489311)*x4992))+((x4979*x5000))+(((-1.0)*x4995))+(((-0.0648043305514941)*x4987))+(((-0.00925751294893567)*x4989))+((x4980*x4997))+((x4984*x5002))+((r02*x4996))+(((-1.0)*r00*x4998)));
evalcond[3]=((((-1.0)*r20*x4998))+((x4989*x5001))+(((-1.0)*(1.0)*px))+((r21*x4999))+(((0.00925751294893567)*x4983))+((x4987*x4997))+((x4988*x4997))+((x4991*x5002))+x4981+(((0.0648043305514941)*x4979))+((cj4*x5004))+(((-1.0)*x5004))+(((0.00925751294893567)*x4982))+((x4990*x5001))+(((0.0185150129489311)*x4984))+(((-1.0)*x4992*x5002))+((x4988*x5000))+((r22*x4996))+((x4987*x5000))+(((-1.0)*x5003))+((cj4*x5003))+(((-0.0185150129489311)*x4985))+(((0.0648043305514941)*x4980)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5005=((0.250000349687704)*cj1);
IkReal x5006=((0.250000349687704)*sj1);
IkReal x5007=((0.749999650312296)*cj1*cj4);
IkReal x5008=((0.433012903784321)*cj1*cj5);
IkReal x5009=(r01*x5008);
IkReal x5010=((0.433012903784321)*cj1*sj5);
IkReal x5011=(r00*x5010);
IkReal x5012=((0.749999650312296)*cj4*sj1);
IkReal x5013=((0.433012903784321)*cj5*sj1);
IkReal x5014=(r21*x5013);
IkReal x5015=((0.433012903784321)*sj1*sj5);
IkReal x5016=(r20*x5015);
IkReal x5017=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5018=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5019=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5020=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5021=(r21*x5008);
IkReal x5022=(r20*x5010);
IkReal x5023=(r01*x5013);
IkReal x5024=(r00*x5015);
if( IKabs(((((-1.0)*r02*x5005))+((r20*x5019))+(((-1.0)*x5014))+((r22*x5006))+((cj4*x5016))+((r22*x5012))+(((-1.0)*r00*x5017))+((r01*x5018))+((cj4*x5014))+(((-1.0)*r02*x5007))+x5011+(((-1.0)*x5016))+(((-1.0)*r21*x5020))+(((-1.0)*cj4*x5011))+(((-1.0)*cj4*x5009))+x5009)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x5020))+((cj4*x5021))+((r00*x5019))+(((-1.0)*x5021))+((r22*x5005))+((r20*x5017))+((cj4*x5022))+(((-1.0)*x5022))+((cj4*x5024))+(((-1.0)*x5024))+((cj4*x5023))+(((-1.0)*x5023))+((r22*x5007))+(((-1.0)*r21*x5018))+((r02*x5006))+((r02*x5012)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r02*x5005))+((r20*x5019))+(((-1.0)*x5014))+((r22*x5006))+((cj4*x5016))+((r22*x5012))+(((-1.0)*r00*x5017))+((r01*x5018))+((cj4*x5014))+(((-1.0)*r02*x5007))+x5011+(((-1.0)*x5016))+(((-1.0)*r21*x5020))+(((-1.0)*cj4*x5011))+(((-1.0)*cj4*x5009))+x5009))+IKsqr(((((-1.0)*r01*x5020))+((cj4*x5021))+((r00*x5019))+(((-1.0)*x5021))+((r22*x5005))+((r20*x5017))+((cj4*x5022))+(((-1.0)*x5022))+((cj4*x5024))+(((-1.0)*x5024))+((cj4*x5023))+(((-1.0)*x5023))+((r22*x5007))+(((-1.0)*r21*x5018))+((r02*x5006))+((r02*x5012))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r02*x5005))+((r20*x5019))+(((-1.0)*x5014))+((r22*x5006))+((cj4*x5016))+((r22*x5012))+(((-1.0)*r00*x5017))+((r01*x5018))+((cj4*x5014))+(((-1.0)*r02*x5007))+x5011+(((-1.0)*x5016))+(((-1.0)*r21*x5020))+(((-1.0)*cj4*x5011))+(((-1.0)*cj4*x5009))+x5009), ((((-1.0)*r01*x5020))+((cj4*x5021))+((r00*x5019))+(((-1.0)*x5021))+((r22*x5005))+((r20*x5017))+((cj4*x5022))+(((-1.0)*x5022))+((cj4*x5024))+(((-1.0)*x5024))+((cj4*x5023))+(((-1.0)*x5023))+((r22*x5007))+(((-1.0)*r21*x5018))+((r02*x5006))+((r02*x5012))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5025=IKcos(j2);
IkReal x5026=(cj1*x5025);
IkReal x5027=((0.749999650312296)*cj4);
IkReal x5028=(cj5*r21);
IkReal x5029=((0.433012903784321)*x5028);
IkReal x5030=(r20*sj5);
IkReal x5031=((0.433012903784321)*x5030);
IkReal x5032=IKsin(j2);
IkReal x5033=(sj1*x5032);
IkReal x5034=(cj5*r20*sj4);
IkReal x5035=(r21*sj4*sj5);
IkReal x5036=(sj1*x5025);
IkReal x5037=(cj1*x5032);
IkReal x5038=((((-1.0)*x5037))+x5036);
IkReal x5039=(cj5*r01);
IkReal x5040=((0.433012903784321)*x5039);
IkReal x5041=(r00*sj5);
IkReal x5042=((0.433012903784321)*x5041);
IkReal x5043=(cj5*r00*sj4);
IkReal x5044=(r01*sj4*sj5);
IkReal x5045=((0.0160344678271334)*r22);
IkReal x5046=((0.00925751294893567)*cj4);
IkReal x5047=((0.0160344678271334)*r02);
IkReal x5048=((0.433012903784321)*sj3);
IkReal x5049=(r22*x5048);
IkReal x5050=((0.866025201892125)*cj3*sj4);
IkReal x5051=((0.749999650312296)*sj3);
IkReal x5052=(cj3*cj4*sj5);
IkReal x5053=((1.0)*cj3*cj4*cj5);
IkReal x5054=((0.500000349687582)*cj3*sj4);
IkReal x5055=((0.250000349687704)*cj4*sj3);
IkReal x5056=((0.500000349687582)*sj3);
IkReal x5057=(r02*x5048);
evalcond[0]=((((-1.0)*cj4*x5031))+x5026+x5029+(((-1.0)*cj4*x5029))+(((-1.0)*r22*x5027))+(((-0.866025201892125)*x5034))+(((0.866025201892125)*x5035))+(((-1.0)*(0.250000349687704)*r22))+x5031+x5033);
evalcond[1]=((((-1.0)*r02*x5027))+x5040+x5042+(((0.866025201892125)*x5044))+(((-1.0)*cj4*x5040))+(((-0.866025201892125)*x5043))+(((-1.0)*cj4*x5042))+(((-1.0)*(0.250000349687704)*r02))+x5038);
evalcond[2]=((((0.0648043305514941)*x5028))+(((-1.0)*(1.0)*pz))+(((-1.0)*x5045))+((cj4*x5045))+(((0.29)*cj1))+(((-0.27144)*x5026))+((x5028*x5046))+(((0.0648043305514941)*x5030))+((x5030*x5046))+(((0.0185150129489311)*x5034))+(((-0.0185150129489311)*x5035))+(((-0.27144)*x5033)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((-1.0)*x5047))+((cj4*x5047))+(((0.0648043305514941)*x5041))+(((-0.0185150129489311)*x5044))+(((0.27144)*x5037))+(((0.0185150129489311)*x5043))+((x5041*x5046))+(((0.0648043305514941)*x5039))+(((0.29)*sj1))+((x5039*x5046))+(((-0.27144)*x5036)));
evalcond[4]=(((x5030*x5051))+(((-1.0)*x5035*x5056))+((r22*x5050))+((x5028*x5051))+((x5028*x5055))+((x5030*x5055))+((x5030*x5054))+((x5034*x5056))+(((-1.0)*r20*x5053))+((x5028*x5054))+((r21*x5052))+((cj4*x5049))+(((-1.0)*x5049))+x5038);
evalcond[5]=((((-1.0)*x5026))+(((-1.0)*x5044*x5056))+(((-1.0)*x5057))+((x5039*x5051))+((x5041*x5054))+((r01*x5052))+((x5043*x5056))+(((-1.0)*x5033))+((cj4*x5057))+((x5041*x5051))+((x5039*x5054))+((x5041*x5055))+((r02*x5050))+(((-1.0)*r00*x5053))+((x5039*x5055)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x5058=(cj0*r02);
IkReal x5059=((0.18234135315471)*cj0);
IkReal x5060=(cj5*r01);
IkReal x5061=(r00*sj5);
IkReal x5062=((0.10827950965428)*cj0*cj4);
IkReal x5063=((0.216558867852667)*cj0*sj4);
IkReal x5064=(cj5*r21);
IkReal x5065=(r20*sj5);
IkReal x5066=((0.373377619497519)*cj4);
IkReal x5067=((0.746754716733336)*sj4);
CheckValue<IkReal> x5068=IKPowWithIntegerCheck(cj0,-2);
if(!x5068.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x5068.value)*((((x5059*x5060))+((x5059*x5061))+(((0.0098)*cj0*sj0))+((r01*sj5*x5063))+(((-1.0)*x5060*x5062))+(((-0.0838945627463637)*x5058))+(((-0.187545437253636)*cj4*x5058))+(((-1.0)*cj5*r00*x5063))+(((-1.0)*(1.0)*cj0*px))+(((-1.0)*x5061*x5062)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.62876328674038)*x5065))+(((3.44827586206897)*pz))+(((-0.62876328674038)*x5064))+(((-1.0)*r21*sj5*x5067))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x5065*x5066))+((x5064*x5066))+((cj5*r20*x5067)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x5068.value)*((((x5059*x5060))+((x5059*x5061))+(((0.0098)*cj0*sj0))+((r01*sj5*x5063))+(((-1.0)*x5060*x5062))+(((-0.0838945627463637)*x5058))+(((-0.187545437253636)*cj4*x5058))+(((-1.0)*cj5*r00*x5063))+(((-1.0)*(1.0)*cj0*px))+(((-1.0)*x5061*x5062))))))+IKsqr(((((-0.62876328674038)*x5065))+(((3.44827586206897)*pz))+(((-0.62876328674038)*x5064))+(((-1.0)*r21*sj5*x5067))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x5065*x5066))+((x5064*x5066))+((cj5*r20*x5067))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x5068.value)*((((x5059*x5060))+((x5059*x5061))+(((0.0098)*cj0*sj0))+((r01*sj5*x5063))+(((-1.0)*x5060*x5062))+(((-0.0838945627463637)*x5058))+(((-0.187545437253636)*cj4*x5058))+(((-1.0)*cj5*r00*x5063))+(((-1.0)*(1.0)*cj0*px))+(((-1.0)*x5061*x5062))))), ((((-0.62876328674038)*x5065))+(((3.44827586206897)*pz))+(((-0.62876328674038)*x5064))+(((-1.0)*r21*sj5*x5067))+(((0.289291595677116)*r22))+(((0.646708404322884)*cj4*r22))+((x5065*x5066))+((x5064*x5066))+((cj5*r20*x5067))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x5069=((0.187545437253636)*cj4);
IkReal x5070=((0.18234135315471)*cj5);
IkReal x5071=((0.18234135315471)*sj5);
IkReal x5072=((0.29)*(IKcos(j1)));
IkReal x5073=((0.10827950965428)*cj4*cj5);
IkReal x5074=((0.10827950965428)*cj4*sj5);
IkReal x5075=((0.216558867852667)*cj5*sj4);
IkReal x5076=((0.216558867852667)*sj4*sj5);
IkReal x5077=((0.0098)*cj0);
IkReal x5078=(sj0*x5077);
IkReal x5079=((1.0)*py);
IkReal x5080=(r12*sj0);
IkReal x5081=(r11*sj0);
IkReal x5082=(r10*sj0);
IkReal x5083=(cj5*r11);
IkReal x5084=((0.10827950965428)*cj4*sj0);
IkReal x5085=(r10*sj5);
IkReal x5086=sj0*sj0;
IkReal x5087=((0.29)*(IKsin(j1)));
IkReal x5088=((1.0)*px);
IkReal x5089=(cj0*r02);
IkReal x5090=(cj0*r01);
IkReal x5091=(cj0*r00);
IkReal x5092=cj0*cj0;
IkReal x5093=((1.0)*pz);
IkReal x5094=((0.117537022603216)*sj3);
IkReal x5095=(r12*x5094);
IkReal x5096=((0.0160344678271334)*r22);
IkReal x5097=(sj0*x5096);
IkReal x5098=((0.235073880801598)*cj3*sj4);
IkReal x5099=((0.20357990508077)*sj3);
IkReal x5100=((0.0648043305514941)*cj5*r21);
IkReal x5101=((0.0648043305514941)*r20*sj5);
IkReal x5102=(cj5*r10);
IkReal x5103=((0.27144)*cj3*cj4);
IkReal x5104=(r11*sj5);
IkReal x5105=((0.135720094919197)*cj3*sj4);
IkReal x5106=((0.0678600949192303)*cj4*sj3);
IkReal x5107=(cj5*r21);
IkReal x5108=((0.00925751294893567)*cj4*sj0);
IkReal x5109=(r20*sj5);
IkReal x5110=((0.135720094919197)*sj3*sj4);
IkReal x5111=((0.0185150129489311)*cj5*r20*sj4);
IkReal x5112=((0.0185150129489311)*r21*sj4*sj5);
IkReal x5113=(cj0*x5096);
IkReal x5114=(r02*x5094);
IkReal x5115=(cj5*r01);
IkReal x5116=(r00*sj5);
IkReal x5117=((0.00925751294893567)*cj0*cj4);
IkReal x5118=(r01*sj5);
IkReal x5119=(cj5*r00*sj4);
IkReal x5120=((0.0160344678271334)*r12);
IkReal x5121=((0.0648043305514941)*cj5);
IkReal x5122=(r11*x5121);
IkReal x5123=((0.0648043305514941)*sj5);
IkReal x5124=(r10*x5123);
IkReal x5125=((0.00925751294893567)*cj4);
IkReal x5126=(x5083*x5125);
IkReal x5127=(x5085*x5125);
IkReal x5128=((0.0185150129489311)*cj5*sj4);
IkReal x5129=(r10*x5128);
IkReal x5130=((0.0185150129489311)*sj4*sj5);
IkReal x5131=(r11*x5130);
IkReal x5132=((0.117537022603216)*r22*sj3);
IkReal x5133=(sj0*x5132);
IkReal x5134=((0.235073880801598)*cj3*r22*sj4);
IkReal x5135=((0.20357990508077)*sj0*sj3);
IkReal x5136=(cj5*r20);
IkReal x5137=((0.27144)*cj3*cj4*sj0);
IkReal x5138=(r21*sj5);
IkReal x5139=((0.135720094919197)*cj3*sj0*sj4);
IkReal x5140=((0.0678600949192303)*cj4*sj0*sj3);
IkReal x5141=((0.135720094919197)*sj0*sj3*sj4);
IkReal x5142=((0.0160344678271334)*r02);
IkReal x5143=(cj4*x5142);
IkReal x5144=(r01*x5121);
IkReal x5145=(r00*x5123);
IkReal x5146=(cj0*x5087);
IkReal x5147=(cj0*x5132);
IkReal x5148=(x5115*x5125);
IkReal x5149=(x5116*x5125);
IkReal x5150=(r00*x5128);
IkReal x5151=(r01*x5130);
IkReal x5152=((0.20357990508077)*cj0*sj3);
IkReal x5153=((0.27144)*cj0*cj3*cj4);
IkReal x5154=((0.135720094919197)*cj0*cj3*sj4);
IkReal x5155=((0.0678600949192303)*cj0*cj4*sj3);
IkReal x5156=((0.135720094919197)*cj0*sj3*sj4);
IkReal x5157=(cj0*r12);
IkReal x5158=((0.20357990508077)*cj4);
IkReal x5159=((0.117537022603216)*cj0);
IkReal x5160=(x5083*x5159);
IkReal x5161=(x5085*x5159);
IkReal x5162=((-1.0)*sj0*x5146);
IkReal x5163=((0.235073880801598)*cj0*sj4);
IkReal x5164=(cj0*x5120);
IkReal x5165=(r02*sj0);
IkReal x5166=((0.117537022603216)*sj0);
IkReal x5167=(x5115*x5166);
IkReal x5168=(x5116*x5166);
IkReal x5169=((0.235073880801598)*sj0);
evalcond[0]=((((-1.0)*x5072))+pz+((r20*x5074))+((r21*x5073))+(((-1.0)*r21*x5070))+(((-1.0)*r21*x5076))+((r20*x5075))+(((-1.0)*r20*x5071))+((r22*x5069))+(((0.0838945627463637)*r22)));
evalcond[1]=(((x5070*x5081))+((x5076*x5081))+(((-1.0)*x5069*x5080))+(((-1.0)*x5086*x5087))+(((-1.0)*x5084*x5085))+(((-1.0)*x5083*x5084))+(((-1.0)*x5078))+((x5071*x5082))+(((-1.0)*x5075*x5082))+(((-1.0)*sj0*x5079))+(((-0.0838945627463637)*x5080)));
evalcond[2]=((((-0.0838945627463637)*x5089))+(((-1.0)*x5087*x5092))+(((-1.0)*x5074*x5091))+(((-1.0)*cj0*x5088))+x5078+((x5071*x5091))+(((-1.0)*x5069*x5089))+(((-1.0)*x5073*x5090))+((x5076*x5090))+((x5070*x5090))+(((-1.0)*x5075*x5091)));
evalcond[3]=(((x5085*x5105))+((x5083*x5105))+(((-1.0)*sj0*x5093))+((x5083*x5106))+((sj0*x5111))+((cj4*x5095))+((sj0*x5101))+((x5103*x5104))+((x5108*x5109))+((x5083*x5099))+(((-1.0)*x5097))+((x5102*x5110))+((x5107*x5108))+((x5085*x5099))+((sj0*x5072))+((r12*x5098))+((sj0*x5100))+(((-1.0)*x5104*x5110))+(((-1.0)*x5095))+(((-1.0)*x5102*x5103))+((x5085*x5106))+(((-1.0)*sj0*x5112))+((cj4*x5097)));
evalcond[4]=(((x5109*x5117))+((x5103*x5118))+((x5106*x5115))+((x5105*x5115))+((cj4*x5113))+((x5099*x5115))+(((-1.0)*cj0*x5093))+(((-1.0)*x5114))+(((-1.0)*x5110*x5118))+((cj0*x5111))+((x5105*x5116))+(((-1.0)*cj0*x5112))+((cj4*x5114))+((cj0*x5100))+(((0.135720094919197)*sj3*x5119))+(((-1.0)*cj5*r00*x5103))+((x5106*x5116))+((cj0*x5101))+((cj0*x5072))+(((-1.0)*x5113))+((x5107*x5117))+((x5099*x5116))+((r02*x5098)));
evalcond[5]=((((-1.0)*sj0*x5134))+(((-1.0)*x5109*x5139))+(((-1.0)*sj0*x5087))+(((-1.0)*x5079))+(((-1.0)*x5131))+(((-1.0)*x5136*x5141))+((cj4*x5120))+(((-1.0)*x5077))+x5133+(((-1.0)*x5109*x5135))+(((-1.0)*x5107*x5140))+(((-1.0)*x5107*x5135))+x5122+x5124+x5129+x5127+x5126+((x5136*x5137))+((x5138*x5141))+(((-1.0)*x5109*x5140))+(((-1.0)*x5137*x5138))+(((-1.0)*cj4*x5133))+(((-1.0)*x5107*x5139))+(((-1.0)*x5120)));
evalcond[6]=(((x5136*x5153))+(((-1.0)*x5151))+(((-1.0)*x5138*x5153))+(((0.0098)*sj0))+x5143+x5148+x5149+x5144+x5145+x5147+(((-1.0)*x5107*x5154))+(((-1.0)*x5136*x5156))+(((-1.0)*cj0*x5134))+(((-1.0)*x5107*x5152))+x5150+(((-1.0)*x5107*x5155))+((x5138*x5156))+(((-1.0)*x5109*x5152))+(((-1.0)*x5088))+(((-1.0)*x5142))+(((-1.0)*x5146))+(((-1.0)*x5109*x5155))+(((-1.0)*cj4*x5147))+(((-1.0)*x5109*x5154)));
evalcond[7]=((((-1.0)*cj4*x5161))+(((-1.0)*cj4*x5160))+((sj0*x5149))+((sj0*x5144))+(((-1.0)*x5102*x5163))+((sj0*x5150))+((sj0*x5145))+(((0.0098)*x5086))+(((-0.0678600949192303)*x5157))+x5162+x5160+x5161+(((-1.0)*sj0*x5142))+(((-1.0)*sj0*x5151))+((sj0*x5143))+(((-1.0)*x5157*x5158))+(((-1.0)*sj0*x5088))+((x5104*x5163))+((sj0*x5148)));
evalcond[8]=((((-0.0678600949192303)*x5165))+((cj0*x5126))+(((-1.0)*cj4*x5167))+((cj0*x5127))+(((-1.0)*cj4*x5168))+(((-1.0)*cj0*x5079))+x5168+x5162+x5167+(((-1.0)*cj0*x5131))+((cj0*x5124))+(((-0.0098)*x5092))+(((-1.0)*x5164))+((cj4*x5164))+((cj0*x5129))+(((-1.0)*x5158*x5165))+((r01*sj4*sj5*x5169))+((cj0*x5122))+(((-1.0)*x5119*x5169)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5170=((0.250000349687704)*cj1);
IkReal x5171=((0.250000349687704)*sj1);
IkReal x5172=((0.749999650312296)*cj1*cj4);
IkReal x5173=((0.433012903784321)*cj1*cj5);
IkReal x5174=(r01*x5173);
IkReal x5175=((0.433012903784321)*cj1*sj5);
IkReal x5176=(r00*x5175);
IkReal x5177=((0.749999650312296)*cj4*sj1);
IkReal x5178=((0.433012903784321)*cj5*sj1);
IkReal x5179=(r21*x5178);
IkReal x5180=((0.433012903784321)*sj1*sj5);
IkReal x5181=(r20*x5180);
IkReal x5182=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5183=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5184=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5185=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5186=(r21*x5173);
IkReal x5187=(r20*x5175);
IkReal x5188=(r01*x5178);
IkReal x5189=(r00*x5180);
if( IKabs((((cj4*x5176))+((cj4*x5174))+((cj4*x5181))+(((-1.0)*x5181))+((cj4*x5179))+(((-1.0)*x5176))+((r22*x5171))+(((-1.0)*r21*x5185))+((r22*x5177))+((r02*x5172))+((r02*x5170))+(((-1.0)*x5174))+((r00*x5182))+((r20*x5184))+(((-1.0)*x5179))+(((-1.0)*r01*x5183)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x5170))+((r22*x5172))+(((-1.0)*x5186))+((cj4*x5186))+((r01*x5185))+((cj4*x5187))+(((-1.0)*cj4*x5188))+x5189+x5188+(((-1.0)*r02*x5171))+(((-1.0)*r00*x5184))+(((-1.0)*r21*x5183))+(((-1.0)*x5187))+((r20*x5182))+(((-1.0)*r02*x5177))+(((-1.0)*cj4*x5189)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x5176))+((cj4*x5174))+((cj4*x5181))+(((-1.0)*x5181))+((cj4*x5179))+(((-1.0)*x5176))+((r22*x5171))+(((-1.0)*r21*x5185))+((r22*x5177))+((r02*x5172))+((r02*x5170))+(((-1.0)*x5174))+((r00*x5182))+((r20*x5184))+(((-1.0)*x5179))+(((-1.0)*r01*x5183))))+IKsqr((((r22*x5170))+((r22*x5172))+(((-1.0)*x5186))+((cj4*x5186))+((r01*x5185))+((cj4*x5187))+(((-1.0)*cj4*x5188))+x5189+x5188+(((-1.0)*r02*x5171))+(((-1.0)*r00*x5184))+(((-1.0)*r21*x5183))+(((-1.0)*x5187))+((r20*x5182))+(((-1.0)*r02*x5177))+(((-1.0)*cj4*x5189))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x5176))+((cj4*x5174))+((cj4*x5181))+(((-1.0)*x5181))+((cj4*x5179))+(((-1.0)*x5176))+((r22*x5171))+(((-1.0)*r21*x5185))+((r22*x5177))+((r02*x5172))+((r02*x5170))+(((-1.0)*x5174))+((r00*x5182))+((r20*x5184))+(((-1.0)*x5179))+(((-1.0)*r01*x5183))), (((r22*x5170))+((r22*x5172))+(((-1.0)*x5186))+((cj4*x5186))+((r01*x5185))+((cj4*x5187))+(((-1.0)*cj4*x5188))+x5189+x5188+(((-1.0)*r02*x5171))+(((-1.0)*r00*x5184))+(((-1.0)*r21*x5183))+(((-1.0)*x5187))+((r20*x5182))+(((-1.0)*r02*x5177))+(((-1.0)*cj4*x5189))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5190=IKcos(j2);
IkReal x5191=(cj1*x5190);
IkReal x5192=IKsin(j2);
IkReal x5193=(sj1*x5192);
IkReal x5194=(x5193+x5191);
IkReal x5195=((0.749999650312296)*cj4);
IkReal x5196=(cj5*r21);
IkReal x5197=((0.433012903784321)*x5196);
IkReal x5198=(r20*sj5);
IkReal x5199=((0.433012903784321)*x5198);
IkReal x5200=(cj5*r20*sj4);
IkReal x5201=(r21*sj4*sj5);
IkReal x5202=(cj1*x5192);
IkReal x5203=(cj5*r01);
IkReal x5204=((0.433012903784321)*x5203);
IkReal x5205=(r00*sj5);
IkReal x5206=((0.433012903784321)*x5205);
IkReal x5207=(sj1*x5190);
IkReal x5208=(cj5*r00*sj4);
IkReal x5209=(r01*sj4*sj5);
IkReal x5210=((0.0160344678271334)*r22);
IkReal x5211=((0.00925751294893567)*cj4);
IkReal x5212=((0.0160344678271334)*r02);
IkReal x5213=((0.433012903784321)*sj3);
IkReal x5214=(r02*x5213);
IkReal x5215=((0.866025201892125)*cj3*sj4);
IkReal x5216=((0.749999650312296)*sj3);
IkReal x5217=(cj3*cj4*sj5);
IkReal x5218=((1.0)*cj3*cj4*cj5);
IkReal x5219=((0.500000349687582)*cj3*sj4);
IkReal x5220=((0.250000349687704)*cj4*sj3);
IkReal x5221=((0.500000349687582)*sj3);
IkReal x5222=(r22*x5213);
evalcond[0]=((((-1.0)*cj4*x5197))+x5194+x5197+x5199+(((-0.866025201892125)*x5200))+(((-1.0)*cj4*x5199))+(((-1.0)*r22*x5195))+(((0.866025201892125)*x5201))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-1.0)*r02*x5195))+(((0.866025201892125)*x5209))+(((-1.0)*x5207))+(((-0.866025201892125)*x5208))+(((-1.0)*cj4*x5206))+(((-1.0)*cj4*x5204))+(((-1.0)*(0.250000349687704)*r02))+x5206+x5204+x5202);
evalcond[2]=((((-1.0)*x5210))+(((0.0648043305514941)*x5196))+((cj4*x5210))+(((-0.27144)*x5191))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x5198))+((x5196*x5211))+(((0.0185150129489311)*x5200))+(((0.29)*cj1))+((x5198*x5211))+(((-0.0185150129489311)*x5201))+(((-0.27144)*x5193)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((-1.0)*(0.29)*sj1))+(((0.0648043305514941)*x5203))+(((-0.0185150129489311)*x5209))+(((0.0648043305514941)*x5205))+((x5203*x5211))+((x5205*x5211))+(((0.0185150129489311)*x5208))+(((-0.27144)*x5202))+(((-1.0)*x5212))+(((0.27144)*x5207))+((cj4*x5212)));
evalcond[4]=(x5194+((x5203*x5216))+((x5205*x5216))+((r01*x5217))+((x5205*x5219))+((x5205*x5220))+(((-1.0)*x5209*x5221))+((x5203*x5220))+((r02*x5215))+(((-1.0)*r00*x5218))+((x5208*x5221))+(((-1.0)*x5214))+((cj4*x5214))+((x5203*x5219)));
evalcond[5]=(((x5198*x5216))+((x5196*x5216))+((x5198*x5219))+((x5196*x5220))+(((-1.0)*x5201*x5221))+((x5200*x5221))+((r21*x5217))+((x5196*x5219))+x5207+(((-1.0)*x5202))+(((-1.0)*r20*x5218))+(((-1.0)*x5222))+((cj4*x5222))+((r22*x5215))+((x5198*x5220)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5223=((0.250000349687704)*cj1);
IkReal x5224=((0.250000349687704)*sj1);
IkReal x5225=((0.749999650312296)*cj1*cj4);
IkReal x5226=((0.433012903784321)*cj1*cj5);
IkReal x5227=(r01*x5226);
IkReal x5228=((0.433012903784321)*cj1*sj5);
IkReal x5229=(r00*x5228);
IkReal x5230=((0.749999650312296)*cj4*sj1);
IkReal x5231=((0.433012903784321)*cj5*sj1);
IkReal x5232=(r21*x5231);
IkReal x5233=((0.433012903784321)*sj1*sj5);
IkReal x5234=(r20*x5233);
IkReal x5235=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5236=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5237=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5238=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5239=(r21*x5226);
IkReal x5240=(r20*x5228);
IkReal x5241=(r01*x5231);
IkReal x5242=(r00*x5233);
if( IKabs(((((-1.0)*r02*x5223))+x5227+x5229+((r22*x5224))+(((-1.0)*x5232))+((r01*x5236))+((cj4*x5234))+((r20*x5237))+(((-1.0)*r21*x5238))+(((-1.0)*cj4*x5227))+((r22*x5230))+(((-1.0)*r00*x5235))+((cj4*x5232))+(((-1.0)*r02*x5225))+(((-1.0)*cj4*x5229))+(((-1.0)*x5234)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x5223))+((r02*x5230))+(((-1.0)*x5242))+(((-1.0)*r01*x5238))+(((-1.0)*r21*x5236))+(((-1.0)*x5241))+(((-1.0)*x5240))+((cj4*x5239))+((r02*x5224))+((cj4*x5242))+((r22*x5225))+((r00*x5237))+((cj4*x5241))+((cj4*x5240))+(((-1.0)*x5239))+((r20*x5235)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r02*x5223))+x5227+x5229+((r22*x5224))+(((-1.0)*x5232))+((r01*x5236))+((cj4*x5234))+((r20*x5237))+(((-1.0)*r21*x5238))+(((-1.0)*cj4*x5227))+((r22*x5230))+(((-1.0)*r00*x5235))+((cj4*x5232))+(((-1.0)*r02*x5225))+(((-1.0)*cj4*x5229))+(((-1.0)*x5234))))+IKsqr((((r22*x5223))+((r02*x5230))+(((-1.0)*x5242))+(((-1.0)*r01*x5238))+(((-1.0)*r21*x5236))+(((-1.0)*x5241))+(((-1.0)*x5240))+((cj4*x5239))+((r02*x5224))+((cj4*x5242))+((r22*x5225))+((r00*x5237))+((cj4*x5241))+((cj4*x5240))+(((-1.0)*x5239))+((r20*x5235))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r02*x5223))+x5227+x5229+((r22*x5224))+(((-1.0)*x5232))+((r01*x5236))+((cj4*x5234))+((r20*x5237))+(((-1.0)*r21*x5238))+(((-1.0)*cj4*x5227))+((r22*x5230))+(((-1.0)*r00*x5235))+((cj4*x5232))+(((-1.0)*r02*x5225))+(((-1.0)*cj4*x5229))+(((-1.0)*x5234))), (((r22*x5223))+((r02*x5230))+(((-1.0)*x5242))+(((-1.0)*r01*x5238))+(((-1.0)*r21*x5236))+(((-1.0)*x5241))+(((-1.0)*x5240))+((cj4*x5239))+((r02*x5224))+((cj4*x5242))+((r22*x5225))+((r00*x5237))+((cj4*x5241))+((cj4*x5240))+(((-1.0)*x5239))+((r20*x5235))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5243=IKcos(j2);
IkReal x5244=(cj1*x5243);
IkReal x5245=((0.749999650312296)*cj4);
IkReal x5246=(cj5*r21);
IkReal x5247=((0.433012903784321)*x5246);
IkReal x5248=(r20*sj5);
IkReal x5249=((0.433012903784321)*x5248);
IkReal x5250=IKsin(j2);
IkReal x5251=(sj1*x5250);
IkReal x5252=(cj5*r20*sj4);
IkReal x5253=(r21*sj4*sj5);
IkReal x5254=(sj1*x5243);
IkReal x5255=(cj1*x5250);
IkReal x5256=((((-1.0)*x5255))+x5254);
IkReal x5257=(cj5*r01);
IkReal x5258=((0.433012903784321)*x5257);
IkReal x5259=(r00*sj5);
IkReal x5260=((0.433012903784321)*x5259);
IkReal x5261=(cj5*r00*sj4);
IkReal x5262=(r01*sj4*sj5);
IkReal x5263=((0.0160344678271334)*r22);
IkReal x5264=((0.00925751294893567)*cj4);
IkReal x5265=((0.0160344678271334)*r02);
IkReal x5266=((0.433012903784321)*sj3);
IkReal x5267=(r22*x5266);
IkReal x5268=((0.866025201892125)*cj3*sj4);
IkReal x5269=((0.749999650312296)*sj3);
IkReal x5270=(cj3*cj4*sj5);
IkReal x5271=((1.0)*cj3*cj4*cj5);
IkReal x5272=((0.500000349687582)*cj3*sj4);
IkReal x5273=((0.250000349687704)*cj4*sj3);
IkReal x5274=((0.500000349687582)*sj3);
IkReal x5275=(r02*x5266);
evalcond[0]=((((-1.0)*cj4*x5247))+(((-0.866025201892125)*x5252))+x5251+x5249+x5244+x5247+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x5249))+(((0.866025201892125)*x5253))+(((-1.0)*r22*x5245)));
evalcond[1]=(x5260+(((-1.0)*r02*x5245))+x5258+x5256+(((0.866025201892125)*x5262))+(((-0.866025201892125)*x5261))+(((-1.0)*cj4*x5260))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x5258)));
evalcond[2]=((((-0.27144)*x5251))+((x5246*x5264))+(((-1.0)*(1.0)*pz))+(((-1.0)*x5263))+(((0.29)*cj1))+(((0.0648043305514941)*x5246))+((x5248*x5264))+(((-0.27144)*x5244))+(((-0.0185150129489311)*x5253))+((cj4*x5263))+(((0.0185150129489311)*x5252))+(((0.0648043305514941)*x5248)));
evalcond[3]=((((-1.0)*(1.0)*px))+(((0.0648043305514941)*x5259))+((x5259*x5264))+((cj4*x5265))+(((0.0185150129489311)*x5261))+(((-0.0185150129489311)*x5262))+(((-1.0)*x5265))+(((-0.27144)*x5254))+((x5257*x5264))+(((0.0648043305514941)*x5257))+(((0.27144)*x5255))+(((0.29)*sj1)));
evalcond[4]=((((-1.0)*x5253*x5274))+(((-1.0)*x5267))+((x5246*x5273))+((x5248*x5273))+((r22*x5268))+((x5248*x5269))+x5256+((x5252*x5274))+((cj4*x5267))+((r21*x5270))+((x5246*x5272))+(((-1.0)*r20*x5271))+((x5248*x5272))+((x5246*x5269)));
evalcond[5]=((((-1.0)*x5262*x5274))+((x5257*x5269))+((r02*x5268))+(((-1.0)*x5244))+((x5259*x5269))+(((-1.0)*r00*x5271))+((x5257*x5272))+((x5261*x5274))+((r01*x5270))+((x5259*x5273))+((x5257*x5273))+((cj4*x5275))+(((-1.0)*x5275))+((x5259*x5272))+(((-1.0)*x5251)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5276=((0.250000349687704)*cj1);
IkReal x5277=((0.250000349687704)*sj1);
IkReal x5278=((0.749999650312296)*cj1*cj4);
IkReal x5279=((0.433012903784321)*cj1*cj5);
IkReal x5280=(r11*x5279);
IkReal x5281=((0.433012903784321)*cj1*sj5);
IkReal x5282=(r10*x5281);
IkReal x5283=((0.749999650312296)*cj4*sj1);
IkReal x5284=((0.433012903784321)*cj5*sj1);
IkReal x5285=(r21*x5284);
IkReal x5286=((0.433012903784321)*sj1*sj5);
IkReal x5287=(r20*x5286);
IkReal x5288=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5289=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5290=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5291=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5292=(r21*x5279);
IkReal x5293=(r20*x5281);
IkReal x5294=(r11*x5284);
IkReal x5295=(r10*x5286);
if( IKabs((((cj4*x5287))+(((-1.0)*x5280))+((r22*x5277))+((r20*x5290))+(((-1.0)*x5285))+(((-1.0)*x5282))+(((-1.0)*r21*x5291))+((r12*x5276))+(((-1.0)*x5287))+((r10*x5288))+(((-1.0)*r11*x5289))+((r12*x5278))+((cj4*x5280))+((r22*x5283))+((cj4*x5285))+((cj4*x5282)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r12*x5283))+((cj4*x5292))+((r11*x5291))+(((-1.0)*cj4*x5295))+x5294+x5295+(((-1.0)*cj4*x5294))+(((-1.0)*x5293))+(((-1.0)*r10*x5290))+((r20*x5288))+((r22*x5278))+(((-1.0)*x5292))+(((-1.0)*r21*x5289))+(((-1.0)*r12*x5277))+((cj4*x5293))+((r22*x5276)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x5287))+(((-1.0)*x5280))+((r22*x5277))+((r20*x5290))+(((-1.0)*x5285))+(((-1.0)*x5282))+(((-1.0)*r21*x5291))+((r12*x5276))+(((-1.0)*x5287))+((r10*x5288))+(((-1.0)*r11*x5289))+((r12*x5278))+((cj4*x5280))+((r22*x5283))+((cj4*x5285))+((cj4*x5282))))+IKsqr(((((-1.0)*r12*x5283))+((cj4*x5292))+((r11*x5291))+(((-1.0)*cj4*x5295))+x5294+x5295+(((-1.0)*cj4*x5294))+(((-1.0)*x5293))+(((-1.0)*r10*x5290))+((r20*x5288))+((r22*x5278))+(((-1.0)*x5292))+(((-1.0)*r21*x5289))+(((-1.0)*r12*x5277))+((cj4*x5293))+((r22*x5276))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x5287))+(((-1.0)*x5280))+((r22*x5277))+((r20*x5290))+(((-1.0)*x5285))+(((-1.0)*x5282))+(((-1.0)*r21*x5291))+((r12*x5276))+(((-1.0)*x5287))+((r10*x5288))+(((-1.0)*r11*x5289))+((r12*x5278))+((cj4*x5280))+((r22*x5283))+((cj4*x5285))+((cj4*x5282))), ((((-1.0)*r12*x5283))+((cj4*x5292))+((r11*x5291))+(((-1.0)*cj4*x5295))+x5294+x5295+(((-1.0)*cj4*x5294))+(((-1.0)*x5293))+(((-1.0)*r10*x5290))+((r20*x5288))+((r22*x5278))+(((-1.0)*x5292))+(((-1.0)*r21*x5289))+(((-1.0)*r12*x5277))+((cj4*x5293))+((r22*x5276))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5296=IKcos(j2);
IkReal x5297=(cj1*x5296);
IkReal x5298=IKsin(j2);
IkReal x5299=(sj1*x5298);
IkReal x5300=(x5297+x5299);
IkReal x5301=((0.749999650312296)*cj4);
IkReal x5302=(cj5*r21);
IkReal x5303=((0.433012903784321)*x5302);
IkReal x5304=(r20*sj5);
IkReal x5305=((0.433012903784321)*x5304);
IkReal x5306=(cj5*r20*sj4);
IkReal x5307=(r21*sj4*sj5);
IkReal x5308=(cj1*x5298);
IkReal x5309=(cj5*r11);
IkReal x5310=((0.433012903784321)*x5309);
IkReal x5311=(r10*sj5);
IkReal x5312=((0.433012903784321)*x5311);
IkReal x5313=(sj1*x5296);
IkReal x5314=(cj5*r10*sj4);
IkReal x5315=(r11*sj4*sj5);
IkReal x5316=((0.0160344678271334)*r22);
IkReal x5317=((0.00925751294893567)*cj4);
IkReal x5318=((0.0160344678271334)*r12);
IkReal x5319=((0.433012903784321)*sj3);
IkReal x5320=(r12*x5319);
IkReal x5321=((0.866025201892125)*cj3*sj4);
IkReal x5322=((0.749999650312296)*sj3);
IkReal x5323=(cj3*cj4*sj5);
IkReal x5324=((1.0)*cj3*cj4*cj5);
IkReal x5325=((0.500000349687582)*cj3*sj4);
IkReal x5326=((0.250000349687704)*cj4*sj3);
IkReal x5327=((0.500000349687582)*sj3);
IkReal x5328=(r22*x5319);
evalcond[0]=((((-1.0)*r22*x5301))+x5305+x5303+x5300+(((-0.866025201892125)*x5306))+(((-1.0)*cj4*x5303))+(((-1.0)*(0.250000349687704)*r22))+(((0.866025201892125)*x5307))+(((-1.0)*cj4*x5305)));
evalcond[1]=((((-1.0)*x5313))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x5301))+x5308+x5310+x5312+(((0.866025201892125)*x5315))+(((-0.866025201892125)*x5314))+(((-1.0)*cj4*x5312))+(((-1.0)*cj4*x5310)));
evalcond[2]=((((-1.0)*x5316))+(((0.0185150129489311)*x5306))+(((-0.0185150129489311)*x5307))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x5297))+((x5302*x5317))+(((0.0648043305514941)*x5302))+(((-0.27144)*x5299))+(((0.0648043305514941)*x5304))+(((0.29)*cj1))+((x5304*x5317))+((cj4*x5316)));
evalcond[3]=(((x5311*x5317))+(((-1.0)*x5318))+(((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((0.27144)*x5313))+(((0.0185150129489311)*x5314))+((x5309*x5317))+(((-0.27144)*x5308))+(((-0.0185150129489311)*x5315))+(((0.0648043305514941)*x5309))+((cj4*x5318))+(((0.0648043305514941)*x5311)));
evalcond[4]=((((-1.0)*r10*x5324))+((x5311*x5326))+(((-1.0)*x5315*x5327))+((x5311*x5322))+((x5309*x5325))+((x5309*x5326))+((x5314*x5327))+(((-1.0)*x5320))+((r11*x5323))+((r12*x5321))+((cj4*x5320))+x5300+((x5311*x5325))+((x5309*x5322)));
evalcond[5]=(((x5304*x5325))+((r21*x5323))+((x5302*x5326))+((x5302*x5325))+((x5302*x5322))+((r22*x5321))+(((-1.0)*x5308))+x5313+((x5304*x5322))+((x5304*x5326))+((x5306*x5327))+(((-1.0)*x5307*x5327))+(((-1.0)*x5328))+((cj4*x5328))+(((-1.0)*r20*x5324)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5329=((0.250000349687704)*cj1);
IkReal x5330=((0.250000349687704)*sj1);
IkReal x5331=((0.749999650312296)*cj1*cj4);
IkReal x5332=((0.433012903784321)*cj1*cj5);
IkReal x5333=(r11*x5332);
IkReal x5334=((0.433012903784321)*cj1*sj5);
IkReal x5335=(r10*x5334);
IkReal x5336=((0.749999650312296)*cj4*sj1);
IkReal x5337=((0.433012903784321)*cj5*sj1);
IkReal x5338=(r21*x5337);
IkReal x5339=((0.433012903784321)*sj1*sj5);
IkReal x5340=(r20*x5339);
IkReal x5341=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5342=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5343=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5344=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5345=(r21*x5332);
IkReal x5346=(r20*x5334);
IkReal x5347=(r11*x5337);
IkReal x5348=(r10*x5339);
if( IKabs(((((-1.0)*cj4*x5333))+(((-1.0)*cj4*x5335))+((cj4*x5340))+((cj4*x5338))+((r22*x5330))+(((-1.0)*x5338))+((r11*x5342))+x5333+x5335+(((-1.0)*r21*x5344))+((r22*x5336))+(((-1.0)*r10*x5341))+(((-1.0)*x5340))+(((-1.0)*r12*x5331))+(((-1.0)*r12*x5329))+((r20*x5343)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x5331))+(((-1.0)*r21*x5342))+(((-1.0)*x5346))+(((-1.0)*x5348))+((r10*x5343))+((cj4*x5345))+((r12*x5330))+((cj4*x5347))+((r20*x5341))+(((-1.0)*x5345))+(((-1.0)*x5347))+((r22*x5329))+((cj4*x5346))+((r12*x5336))+(((-1.0)*r11*x5344))+((cj4*x5348)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj4*x5333))+(((-1.0)*cj4*x5335))+((cj4*x5340))+((cj4*x5338))+((r22*x5330))+(((-1.0)*x5338))+((r11*x5342))+x5333+x5335+(((-1.0)*r21*x5344))+((r22*x5336))+(((-1.0)*r10*x5341))+(((-1.0)*x5340))+(((-1.0)*r12*x5331))+(((-1.0)*r12*x5329))+((r20*x5343))))+IKsqr((((r22*x5331))+(((-1.0)*r21*x5342))+(((-1.0)*x5346))+(((-1.0)*x5348))+((r10*x5343))+((cj4*x5345))+((r12*x5330))+((cj4*x5347))+((r20*x5341))+(((-1.0)*x5345))+(((-1.0)*x5347))+((r22*x5329))+((cj4*x5346))+((r12*x5336))+(((-1.0)*r11*x5344))+((cj4*x5348))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj4*x5333))+(((-1.0)*cj4*x5335))+((cj4*x5340))+((cj4*x5338))+((r22*x5330))+(((-1.0)*x5338))+((r11*x5342))+x5333+x5335+(((-1.0)*r21*x5344))+((r22*x5336))+(((-1.0)*r10*x5341))+(((-1.0)*x5340))+(((-1.0)*r12*x5331))+(((-1.0)*r12*x5329))+((r20*x5343))), (((r22*x5331))+(((-1.0)*r21*x5342))+(((-1.0)*x5346))+(((-1.0)*x5348))+((r10*x5343))+((cj4*x5345))+((r12*x5330))+((cj4*x5347))+((r20*x5341))+(((-1.0)*x5345))+(((-1.0)*x5347))+((r22*x5329))+((cj4*x5346))+((r12*x5336))+(((-1.0)*r11*x5344))+((cj4*x5348))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5349=IKcos(j2);
IkReal x5350=(cj1*x5349);
IkReal x5351=((0.749999650312296)*cj4);
IkReal x5352=(cj5*r21);
IkReal x5353=((0.433012903784321)*x5352);
IkReal x5354=(r20*sj5);
IkReal x5355=((0.433012903784321)*x5354);
IkReal x5356=IKsin(j2);
IkReal x5357=(sj1*x5356);
IkReal x5358=(cj5*r20*sj4);
IkReal x5359=(r21*sj4*sj5);
IkReal x5360=(sj1*x5349);
IkReal x5361=(cj1*x5356);
IkReal x5362=(x5360+(((-1.0)*x5361)));
IkReal x5363=(cj5*r11);
IkReal x5364=((0.433012903784321)*x5363);
IkReal x5365=(r10*sj5);
IkReal x5366=((0.433012903784321)*x5365);
IkReal x5367=(cj5*r10*sj4);
IkReal x5368=(r11*sj4*sj5);
IkReal x5369=((0.0160344678271334)*r22);
IkReal x5370=((0.00925751294893567)*cj4);
IkReal x5371=((0.0160344678271334)*r12);
IkReal x5372=((0.433012903784321)*sj3);
IkReal x5373=(r22*x5372);
IkReal x5374=((0.866025201892125)*cj3*sj4);
IkReal x5375=((0.749999650312296)*sj3);
IkReal x5376=(cj3*cj4*sj5);
IkReal x5377=((1.0)*cj3*cj4*cj5);
IkReal x5378=((0.500000349687582)*cj3*sj4);
IkReal x5379=((0.250000349687704)*cj4*sj3);
IkReal x5380=((0.500000349687582)*sj3);
IkReal x5381=(r12*x5372);
evalcond[0]=((((-0.866025201892125)*x5358))+(((-1.0)*r22*x5351))+(((-1.0)*cj4*x5355))+x5350+x5353+x5355+x5357+(((0.866025201892125)*x5359))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x5353)));
evalcond[1]=((((0.866025201892125)*x5368))+(((-0.866025201892125)*x5367))+(((-1.0)*(0.250000349687704)*r12))+x5366+x5364+x5362+(((-1.0)*cj4*x5366))+(((-1.0)*cj4*x5364))+(((-1.0)*r12*x5351)));
evalcond[2]=((((0.0648043305514941)*x5352))+(((0.0185150129489311)*x5358))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x5350))+((x5352*x5370))+((x5354*x5370))+((cj4*x5369))+(((-1.0)*x5369))+(((0.29)*cj1))+(((-0.0185150129489311)*x5359))+(((0.0648043305514941)*x5354))+(((-0.27144)*x5357)));
evalcond[3]=((((-1.0)*(1.0)*py))+(((0.0648043305514941)*x5365))+(((-0.27144)*x5360))+(((-1.0)*x5371))+(((0.27144)*x5361))+((x5365*x5370))+(((-0.0185150129489311)*x5368))+((x5363*x5370))+((cj4*x5371))+(((0.0648043305514941)*x5363))+(((0.0185150129489311)*x5367))+(((0.29)*sj1)));
evalcond[4]=(((x5352*x5375))+(((-1.0)*x5373))+((x5358*x5380))+x5362+(((-1.0)*x5359*x5380))+((x5354*x5379))+((x5352*x5379))+((x5354*x5378))+((cj4*x5373))+((r22*x5374))+((x5352*x5378))+(((-1.0)*r20*x5377))+((r21*x5376))+((x5354*x5375)));
evalcond[5]=(((x5365*x5378))+((x5363*x5375))+((x5363*x5378))+((x5365*x5379))+(((-1.0)*r10*x5377))+((x5367*x5380))+((x5363*x5379))+((r11*x5376))+((r12*x5374))+(((-1.0)*x5357))+(((-1.0)*x5381))+((cj4*x5381))+(((-1.0)*x5350))+(((-1.0)*x5368*x5380))+((x5365*x5375)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5382=((0.250000349687704)*r12);
IkReal x5383=((0.749999650312296)*cj4*r12);
IkReal x5384=((0.433012903784321)*cj1);
IkReal x5385=(cj5*r11);
IkReal x5386=(x5384*x5385);
IkReal x5387=(r10*sj5);
IkReal x5388=(x5384*x5387);
IkReal x5389=((0.250000349687704)*r22*sj0);
IkReal x5390=(cj5*r10);
IkReal x5391=((0.866025201892125)*cj1*sj4);
IkReal x5392=(r11*sj5);
IkReal x5393=((0.749999650312296)*cj4*r22*sj0);
IkReal x5394=(cj5*r21);
IkReal x5395=((0.433012903784321)*sj0*sj1);
IkReal x5396=(x5394*x5395);
IkReal x5397=(r20*sj5);
IkReal x5398=(x5395*x5397);
IkReal x5399=(cj5*r20);
IkReal x5400=((0.866025201892125)*sj0*sj1*sj4);
IkReal x5401=(r21*sj5);
IkReal x5402=((0.433012903784321)*sj1);
IkReal x5403=(x5385*x5402);
IkReal x5404=(x5387*x5402);
IkReal x5405=((0.433012903784321)*cj1*sj0);
IkReal x5406=(x5394*x5405);
IkReal x5407=(x5397*x5405);
IkReal x5408=((0.866025201892125)*sj1*sj4);
IkReal x5409=((0.866025201892125)*cj1*sj0*sj4);
CheckValue<IkReal> x5410 = IKatan2WithCheck(IkReal(((((-1.0)*x5398))+((cj4*x5398))+(((-1.0)*x5396))+((sj1*x5393))+((sj1*x5389))+((cj4*x5396))+(((-1.0)*x5388))+((cj4*x5388))+((cj1*x5382))+((x5399*x5400))+(((-1.0)*x5400*x5401))+(((-1.0)*x5386))+((cj4*x5386))+(((-1.0)*x5391*x5392))+((x5390*x5391))+((cj1*x5383)))),IkReal((((cj1*x5389))+(((-1.0)*sj1*x5383))+(((-1.0)*x5390*x5408))+(((-1.0)*cj4*x5404))+((cj1*x5393))+(((-1.0)*sj1*x5382))+((x5399*x5409))+x5403+x5404+(((-1.0)*x5406))+((cj4*x5406))+((cj4*x5407))+(((-1.0)*x5407))+(((-1.0)*cj4*x5403))+(((-1.0)*x5401*x5409))+((x5392*x5408)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5410.valid){
continue;
}
CheckValue<IkReal> x5411=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x5411.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x5410.value)+(((1.5707963267949)*(x5411.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x5412=IKcos(j2);
IkReal x5413=(cj1*x5412);
IkReal x5414=((0.749999650312296)*cj4);
IkReal x5415=(cj5*r21);
IkReal x5416=((0.433012903784321)*x5415);
IkReal x5417=(r20*sj5);
IkReal x5418=((0.433012903784321)*x5417);
IkReal x5419=IKsin(j2);
IkReal x5420=(sj1*x5419);
IkReal x5421=(cj5*r20*sj4);
IkReal x5422=(r21*sj4*sj5);
IkReal x5423=(cj5*r01);
IkReal x5424=((0.433012903784321)*x5423);
IkReal x5425=(r00*sj5);
IkReal x5426=((0.433012903784321)*x5425);
IkReal x5427=(cj1*x5419);
IkReal x5428=(cj0*x5427);
IkReal x5429=(cj5*r00*sj4);
IkReal x5430=(r01*sj4*sj5);
IkReal x5431=(cj0*sj1*x5412);
IkReal x5432=(cj5*r11);
IkReal x5433=((0.433012903784321)*x5432);
IkReal x5434=(r10*sj5);
IkReal x5435=((0.433012903784321)*x5434);
IkReal x5436=(sj0*x5427);
IkReal x5437=(cj5*r10*sj4);
IkReal x5438=(r11*sj4*sj5);
IkReal x5439=(sj0*sj1*x5412);
IkReal x5440=((0.0160344678271334)*r22);
IkReal x5441=((0.00925751294893567)*cj4);
IkReal x5442=((0.0160344678271334)*r02);
IkReal x5443=((0.29)*sj1);
IkReal x5444=((0.0160344678271334)*r12);
IkReal x5445=((0.433012903784321)*sj3);
IkReal x5446=(r22*x5445);
IkReal x5447=((0.866025201892125)*cj3*sj4);
IkReal x5448=((0.749999650312296)*sj3);
IkReal x5449=(cj3*cj4*sj5);
IkReal x5450=((1.0)*cj3*cj4*cj5);
IkReal x5451=((0.500000349687582)*cj3*sj4);
IkReal x5452=((0.250000349687704)*cj4*sj3);
IkReal x5453=((0.500000349687582)*sj3);
IkReal x5454=(r02*x5445);
IkReal x5455=(r12*x5445);
evalcond[0]=(x5418+x5416+x5413+(((0.866025201892125)*x5422))+(((-1.0)*r22*x5414))+(((-1.0)*cj4*x5416))+x5420+(((-0.866025201892125)*x5421))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x5418)));
evalcond[1]=((((-1.0)*r02*x5414))+(((-1.0)*cj4*x5426))+(((-1.0)*cj4*x5424))+(((-0.866025201892125)*x5429))+x5428+x5426+x5424+(((-1.0)*(0.250000349687704)*r02))+(((0.866025201892125)*x5430))+(((-1.0)*x5431)));
evalcond[2]=(x5433+x5435+x5436+(((-1.0)*r12*x5414))+(((-1.0)*x5439))+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x5438))+(((-1.0)*cj4*x5433))+(((-1.0)*cj4*x5435))+(((-0.866025201892125)*x5437)));
evalcond[3]=(((cj4*x5440))+(((-1.0)*(1.0)*pz))+(((0.29)*cj1))+(((0.0185150129489311)*x5421))+((x5415*x5441))+(((-1.0)*x5440))+(((0.0648043305514941)*x5417))+((x5417*x5441))+(((-0.27144)*x5413))+(((-0.27144)*x5420))+(((0.0648043305514941)*x5415))+(((-0.0185150129489311)*x5422)));
evalcond[4]=((((-0.27144)*x5428))+(((-1.0)*(1.0)*px))+(((-0.0185150129489311)*x5430))+(((0.0098)*sj0))+(((0.0185150129489311)*x5429))+((cj4*x5442))+(((0.0648043305514941)*x5423))+(((0.0648043305514941)*x5425))+((x5425*x5441))+(((-1.0)*cj0*x5443))+((x5423*x5441))+(((-1.0)*x5442))+(((0.27144)*x5431)));
evalcond[5]=(((x5434*x5441))+(((-1.0)*(1.0)*py))+(((0.27144)*x5439))+((cj4*x5444))+(((-1.0)*sj0*x5443))+(((-0.27144)*x5436))+(((-0.0185150129489311)*x5438))+(((0.0185150129489311)*x5437))+(((-1.0)*x5444))+(((-1.0)*(0.0098)*cj0))+((x5432*x5441))+(((0.0648043305514941)*x5434))+(((0.0648043305514941)*x5432)));
evalcond[6]=(((x5417*x5452))+(((-1.0)*r20*x5450))+(((-1.0)*x5422*x5453))+((x5415*x5448))+(((-1.0)*x5427))+((x5417*x5448))+(((-1.0)*x5446))+((x5417*x5451))+((x5415*x5451))+((x5421*x5453))+((cj4*x5446))+((x5415*x5452))+((sj1*x5412))+((r21*x5449))+((r22*x5447)));
evalcond[7]=((((-1.0)*x5430*x5453))+((x5425*x5451))+((cj4*x5454))+((x5423*x5448))+((x5423*x5452))+((r02*x5447))+((cj0*x5413))+((r01*x5449))+(((-1.0)*r00*x5450))+((x5423*x5451))+((cj0*x5420))+((x5425*x5452))+((x5425*x5448))+((x5429*x5453))+(((-1.0)*x5454)));
evalcond[8]=(((x5432*x5451))+((r11*x5449))+(((-1.0)*x5438*x5453))+((sj0*x5413))+(((-1.0)*x5455))+((x5434*x5452))+((x5432*x5452))+((sj0*x5420))+((x5432*x5448))+((x5434*x5448))+((cj4*x5455))+((x5437*x5453))+(((-1.0)*r10*x5450))+((x5434*x5451))+((r12*x5447)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5456=((0.250000349687704)*r02);
IkReal x5457=((0.250000349687704)*cj0*r22);
IkReal x5458=((0.749999650312296)*cj4*r02);
IkReal x5459=((0.433012903784321)*cj1);
IkReal x5460=(cj5*r01);
IkReal x5461=(x5459*x5460);
IkReal x5462=(r00*sj5);
IkReal x5463=(x5459*x5462);
IkReal x5464=((0.749999650312296)*cj0*cj4*r22);
IkReal x5465=(cj5*r21);
IkReal x5466=((0.433012903784321)*cj0*sj1);
IkReal x5467=(x5465*x5466);
IkReal x5468=(r20*sj5);
IkReal x5469=(x5466*x5468);
IkReal x5470=(cj5*r00);
IkReal x5471=((0.866025201892125)*cj1*sj4);
IkReal x5472=(r01*sj5);
IkReal x5473=(cj5*r20);
IkReal x5474=((0.866025201892125)*cj0*sj1*sj4);
IkReal x5475=(r21*sj5);
IkReal x5476=((0.433012903784321)*sj1);
IkReal x5477=(x5460*x5476);
IkReal x5478=(x5462*x5476);
IkReal x5479=((0.433012903784321)*cj0*cj1);
IkReal x5480=(x5465*x5479);
IkReal x5481=(x5468*x5479);
IkReal x5482=((0.866025201892125)*sj1*sj4);
IkReal x5483=((0.866025201892125)*cj0*cj1*sj4);
CheckValue<IkReal> x5484 = IKatan2WithCheck(IkReal(((((-1.0)*x5467))+((cj4*x5467))+((cj1*x5456))+(((-1.0)*x5461))+((cj4*x5461))+((x5470*x5471))+((sj1*x5457))+(((-1.0)*x5471*x5472))+(((-1.0)*x5469))+((cj4*x5469))+((cj1*x5458))+((x5473*x5474))+((cj4*x5463))+(((-1.0)*x5474*x5475))+(((-1.0)*x5463))+((sj1*x5464)))),IkReal(((((-1.0)*x5470*x5482))+((x5472*x5482))+((cj1*x5464))+(((-1.0)*sj1*x5458))+((x5473*x5483))+(((-1.0)*cj4*x5478))+(((-1.0)*cj4*x5477))+(((-1.0)*x5480))+(((-1.0)*x5481))+(((-1.0)*sj1*x5456))+((cj4*x5480))+(((-1.0)*x5475*x5483))+((cj4*x5481))+x5478+x5477+((cj1*x5457)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5484.valid){
continue;
}
CheckValue<IkReal> x5485=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x5485.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x5484.value)+(((1.5707963267949)*(x5485.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x5486=IKcos(j2);
IkReal x5487=(cj1*x5486);
IkReal x5488=((0.749999650312296)*cj4);
IkReal x5489=(cj5*r21);
IkReal x5490=((0.433012903784321)*x5489);
IkReal x5491=(r20*sj5);
IkReal x5492=((0.433012903784321)*x5491);
IkReal x5493=IKsin(j2);
IkReal x5494=(sj1*x5493);
IkReal x5495=(cj5*r20*sj4);
IkReal x5496=(r21*sj4*sj5);
IkReal x5497=(cj5*r01);
IkReal x5498=((0.433012903784321)*x5497);
IkReal x5499=(r00*sj5);
IkReal x5500=((0.433012903784321)*x5499);
IkReal x5501=(cj1*x5493);
IkReal x5502=(cj0*x5501);
IkReal x5503=(cj5*r00*sj4);
IkReal x5504=(r01*sj4*sj5);
IkReal x5505=(cj0*sj1*x5486);
IkReal x5506=(cj5*r11);
IkReal x5507=((0.433012903784321)*x5506);
IkReal x5508=(r10*sj5);
IkReal x5509=((0.433012903784321)*x5508);
IkReal x5510=(sj0*x5501);
IkReal x5511=(cj5*r10*sj4);
IkReal x5512=(r11*sj4*sj5);
IkReal x5513=(sj0*sj1*x5486);
IkReal x5514=((0.0160344678271334)*r22);
IkReal x5515=((0.00925751294893567)*cj4);
IkReal x5516=((0.0160344678271334)*r02);
IkReal x5517=((0.29)*sj1);
IkReal x5518=((0.0160344678271334)*r12);
IkReal x5519=((0.433012903784321)*sj3);
IkReal x5520=(r22*x5519);
IkReal x5521=((0.866025201892125)*cj3*sj4);
IkReal x5522=((0.749999650312296)*sj3);
IkReal x5523=(cj3*cj4*sj5);
IkReal x5524=((1.0)*cj3*cj4*cj5);
IkReal x5525=((0.500000349687582)*cj3*sj4);
IkReal x5526=((0.250000349687704)*cj4*sj3);
IkReal x5527=((0.500000349687582)*sj3);
IkReal x5528=(r02*x5519);
IkReal x5529=(r12*x5519);
evalcond[0]=((((-0.866025201892125)*x5495))+(((0.866025201892125)*x5496))+x5492+x5494+x5490+x5487+(((-1.0)*cj4*x5490))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*r22*x5488))+(((-1.0)*cj4*x5492)));
evalcond[1]=((((-1.0)*r02*x5488))+x5502+x5500+(((-1.0)*cj4*x5498))+x5498+(((-0.866025201892125)*x5503))+(((-1.0)*cj4*x5500))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*x5505))+(((0.866025201892125)*x5504)));
evalcond[2]=((((-1.0)*x5513))+x5507+x5509+(((-1.0)*cj4*x5507))+x5510+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x5488))+(((-0.866025201892125)*x5511))+(((0.866025201892125)*x5512))+(((-1.0)*cj4*x5509)));
evalcond[3]=((((0.0648043305514941)*x5489))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x5487))+(((-1.0)*x5514))+(((0.29)*cj1))+(((-0.27144)*x5494))+((x5491*x5515))+(((-0.0185150129489311)*x5496))+(((0.0648043305514941)*x5491))+((x5489*x5515))+((cj4*x5514))+(((0.0185150129489311)*x5495)));
evalcond[4]=((((-1.0)*(1.0)*px))+(((-0.27144)*x5502))+(((0.0098)*sj0))+(((0.0648043305514941)*x5499))+(((-1.0)*cj0*x5517))+(((0.0185150129489311)*x5503))+((cj4*x5516))+(((0.0648043305514941)*x5497))+((x5499*x5515))+(((-0.0185150129489311)*x5504))+(((0.27144)*x5505))+(((-1.0)*x5516))+((x5497*x5515)));
evalcond[5]=((((0.0185150129489311)*x5511))+(((0.0648043305514941)*x5506))+(((-1.0)*(1.0)*py))+(((0.27144)*x5513))+(((-0.0185150129489311)*x5512))+(((-1.0)*x5518))+(((-1.0)*sj0*x5517))+((x5508*x5515))+(((-1.0)*(0.0098)*cj0))+(((-0.27144)*x5510))+((cj4*x5518))+(((0.0648043305514941)*x5508))+((x5506*x5515)));
evalcond[6]=((((-1.0)*x5501))+(((-1.0)*x5520))+(((-1.0)*r20*x5524))+((x5495*x5527))+(((-1.0)*x5496*x5527))+((cj4*x5520))+((x5491*x5526))+((sj1*x5486))+((r22*x5521))+((r21*x5523))+((x5489*x5522))+((x5491*x5522))+((x5489*x5525))+((x5491*x5525))+((x5489*x5526)));
evalcond[7]=(((r02*x5521))+((x5499*x5525))+(((-1.0)*x5504*x5527))+(((-1.0)*r00*x5524))+((r01*x5523))+((x5497*x5525))+(((-1.0)*x5528))+((x5497*x5522))+((cj0*x5487))+((x5503*x5527))+((x5499*x5526))+((cj4*x5528))+((x5499*x5522))+((x5497*x5526))+((cj0*x5494)));
evalcond[8]=((((-1.0)*r10*x5524))+((cj4*x5529))+((r12*x5521))+((x5508*x5525))+((r11*x5523))+((x5506*x5522))+((x5508*x5522))+(((-1.0)*x5512*x5527))+(((-1.0)*x5529))+((sj0*x5487))+((x5511*x5527))+((x5506*x5525))+((sj0*x5494))+((x5508*x5526))+((x5506*x5526)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x5530=(r12*sj0);
IkReal x5531=((0.18234135315471)*sj0);
IkReal x5532=(cj5*r11);
IkReal x5533=(r10*sj5);
IkReal x5534=((0.10827950965428)*cj4*sj0);
IkReal x5535=((0.216558867852667)*sj0*sj4);
IkReal x5536=(cj5*r21);
IkReal x5537=(r20*sj5);
IkReal x5538=((0.373377619497519)*cj4);
IkReal x5539=((0.746754716733336)*sj4);
CheckValue<IkReal> x5540=IKPowWithIntegerCheck(sj0,-2);
if(!x5540.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x5540.value)*(((((-1.0)*x5532*x5534))+((x5531*x5532))+(((-0.0838945627463637)*x5530))+((r11*sj5*x5535))+((x5531*x5533))+(((-1.0)*(1.0)*py*sj0))+(((-1.0)*x5533*x5534))+(((-1.0)*(0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x5530))+(((-1.0)*cj5*r10*x5535)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x5539))+(((3.44827586206897)*pz))+(((-0.62876328674038)*x5537))+((x5537*x5538))+(((-0.62876328674038)*x5536))+((x5536*x5538))+(((0.289291595677116)*r22))+(((-1.0)*r21*sj5*x5539))+(((0.646708404322884)*cj4*r22)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x5540.value)*(((((-1.0)*x5532*x5534))+((x5531*x5532))+(((-0.0838945627463637)*x5530))+((r11*sj5*x5535))+((x5531*x5533))+(((-1.0)*(1.0)*py*sj0))+(((-1.0)*x5533*x5534))+(((-1.0)*(0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x5530))+(((-1.0)*cj5*r10*x5535))))))+IKsqr((((cj5*r20*x5539))+(((3.44827586206897)*pz))+(((-0.62876328674038)*x5537))+((x5537*x5538))+(((-0.62876328674038)*x5536))+((x5536*x5538))+(((0.289291595677116)*r22))+(((-1.0)*r21*sj5*x5539))+(((0.646708404322884)*cj4*r22))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x5540.value)*(((((-1.0)*x5532*x5534))+((x5531*x5532))+(((-0.0838945627463637)*x5530))+((r11*sj5*x5535))+((x5531*x5533))+(((-1.0)*(1.0)*py*sj0))+(((-1.0)*x5533*x5534))+(((-1.0)*(0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x5530))+(((-1.0)*cj5*r10*x5535))))), (((cj5*r20*x5539))+(((3.44827586206897)*pz))+(((-0.62876328674038)*x5537))+((x5537*x5538))+(((-0.62876328674038)*x5536))+((x5536*x5538))+(((0.289291595677116)*r22))+(((-1.0)*r21*sj5*x5539))+(((0.646708404322884)*cj4*r22))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x5541=((0.187545437253636)*cj4);
IkReal x5542=((0.18234135315471)*cj5);
IkReal x5543=((0.18234135315471)*sj5);
IkReal x5544=((0.29)*(IKcos(j1)));
IkReal x5545=((0.10827950965428)*cj4*cj5);
IkReal x5546=((0.10827950965428)*cj4*sj5);
IkReal x5547=((0.216558867852667)*cj5*sj4);
IkReal x5548=((0.216558867852667)*sj4*sj5);
IkReal x5549=((0.0098)*cj0);
IkReal x5550=(sj0*x5549);
IkReal x5551=((1.0)*py);
IkReal x5552=(r12*sj0);
IkReal x5553=(r11*sj0);
IkReal x5554=(r10*sj0);
IkReal x5555=(cj5*r11);
IkReal x5556=((0.10827950965428)*cj4*sj0);
IkReal x5557=(r10*sj5);
IkReal x5558=sj0*sj0;
IkReal x5559=((0.29)*(IKsin(j1)));
IkReal x5560=((1.0)*px);
IkReal x5561=(cj0*r02);
IkReal x5562=(cj0*r01);
IkReal x5563=(cj0*r00);
IkReal x5564=cj0*cj0;
IkReal x5565=((1.0)*pz);
IkReal x5566=((0.117537022603216)*sj3);
IkReal x5567=(r12*x5566);
IkReal x5568=((0.0160344678271334)*r22);
IkReal x5569=(sj0*x5568);
IkReal x5570=((0.235073880801598)*cj3*sj4);
IkReal x5571=((0.20357990508077)*sj3);
IkReal x5572=((0.0648043305514941)*cj5*r21);
IkReal x5573=((0.0648043305514941)*r20*sj5);
IkReal x5574=(cj5*r10);
IkReal x5575=((0.27144)*cj3*cj4);
IkReal x5576=(r11*sj5);
IkReal x5577=((0.135720094919197)*cj3*sj4);
IkReal x5578=((0.0678600949192303)*cj4*sj3);
IkReal x5579=(cj5*r21);
IkReal x5580=((0.00925751294893567)*cj4*sj0);
IkReal x5581=(r20*sj5);
IkReal x5582=((0.135720094919197)*sj3*sj4);
IkReal x5583=((0.0185150129489311)*cj5*r20*sj4);
IkReal x5584=((0.0185150129489311)*r21*sj4*sj5);
IkReal x5585=(cj0*x5568);
IkReal x5586=(r02*x5566);
IkReal x5587=(cj5*r01);
IkReal x5588=(r00*sj5);
IkReal x5589=((0.00925751294893567)*cj0*cj4);
IkReal x5590=(r01*sj5);
IkReal x5591=(cj5*r00*sj4);
IkReal x5592=((0.0160344678271334)*r12);
IkReal x5593=((0.0648043305514941)*cj5);
IkReal x5594=(r11*x5593);
IkReal x5595=((0.0648043305514941)*sj5);
IkReal x5596=(r10*x5595);
IkReal x5597=((0.00925751294893567)*cj4);
IkReal x5598=(x5555*x5597);
IkReal x5599=(x5557*x5597);
IkReal x5600=((0.0185150129489311)*cj5*sj4);
IkReal x5601=(r10*x5600);
IkReal x5602=((0.0185150129489311)*sj4*sj5);
IkReal x5603=(r11*x5602);
IkReal x5604=((0.117537022603216)*r22*sj3);
IkReal x5605=(sj0*x5604);
IkReal x5606=((0.235073880801598)*cj3*r22*sj4);
IkReal x5607=((0.20357990508077)*sj0*sj3);
IkReal x5608=(cj5*r20);
IkReal x5609=((0.27144)*cj3*cj4*sj0);
IkReal x5610=(r21*sj5);
IkReal x5611=((0.135720094919197)*cj3*sj0*sj4);
IkReal x5612=((0.0678600949192303)*cj4*sj0*sj3);
IkReal x5613=((0.135720094919197)*sj0*sj3*sj4);
IkReal x5614=((0.0160344678271334)*r02);
IkReal x5615=(cj4*x5614);
IkReal x5616=(r01*x5593);
IkReal x5617=(r00*x5595);
IkReal x5618=(cj0*x5559);
IkReal x5619=(cj0*x5604);
IkReal x5620=(x5587*x5597);
IkReal x5621=(x5588*x5597);
IkReal x5622=(r00*x5600);
IkReal x5623=(r01*x5602);
IkReal x5624=((0.20357990508077)*cj0*sj3);
IkReal x5625=((0.27144)*cj0*cj3*cj4);
IkReal x5626=((0.135720094919197)*cj0*cj3*sj4);
IkReal x5627=((0.0678600949192303)*cj0*cj4*sj3);
IkReal x5628=((0.135720094919197)*cj0*sj3*sj4);
IkReal x5629=(cj0*r12);
IkReal x5630=((0.20357990508077)*cj4);
IkReal x5631=((0.117537022603216)*cj0);
IkReal x5632=(x5555*x5631);
IkReal x5633=(x5557*x5631);
IkReal x5634=((-1.0)*sj0*x5618);
IkReal x5635=((0.235073880801598)*cj0*sj4);
IkReal x5636=(cj0*x5592);
IkReal x5637=(r02*sj0);
IkReal x5638=((0.117537022603216)*sj0);
IkReal x5639=(x5587*x5638);
IkReal x5640=(x5588*x5638);
IkReal x5641=((0.235073880801598)*sj0);
evalcond[0]=(((r21*x5545))+(((-1.0)*x5544))+(((-1.0)*r21*x5542))+(((-1.0)*r20*x5543))+pz+((r22*x5541))+((r20*x5546))+(((0.0838945627463637)*r22))+(((-1.0)*r21*x5548))+((r20*x5547)));
evalcond[1]=(((x5543*x5554))+(((-1.0)*x5556*x5557))+(((-1.0)*x5550))+(((-1.0)*x5558*x5559))+((x5548*x5553))+(((-1.0)*x5541*x5552))+((x5542*x5553))+(((-0.0838945627463637)*x5552))+(((-1.0)*sj0*x5551))+(((-1.0)*x5555*x5556))+(((-1.0)*x5547*x5554)));
evalcond[2]=((((-1.0)*cj0*x5560))+(((-0.0838945627463637)*x5561))+(((-1.0)*x5546*x5563))+(((-1.0)*x5559*x5564))+(((-1.0)*x5547*x5563))+((x5548*x5562))+(((-1.0)*x5541*x5561))+((x5542*x5562))+x5550+(((-1.0)*x5545*x5562))+((x5543*x5563)));
evalcond[3]=(((x5580*x5581))+((cj4*x5567))+((cj4*x5569))+(((-1.0)*sj0*x5565))+(((-1.0)*sj0*x5584))+((x5557*x5577))+((x5579*x5580))+((sj0*x5544))+((x5557*x5571))+((sj0*x5583))+((x5574*x5582))+(((-1.0)*x5576*x5582))+((r12*x5570))+((x5555*x5571))+((sj0*x5573))+(((-1.0)*x5574*x5575))+((x5555*x5577))+(((-1.0)*x5567))+((x5575*x5576))+(((-1.0)*x5569))+((sj0*x5572))+((x5557*x5578))+((x5555*x5578)));
evalcond[4]=(((cj0*x5572))+(((-1.0)*cj0*x5565))+((cj0*x5583))+((x5578*x5587))+((x5577*x5588))+((cj4*x5586))+((x5571*x5587))+((cj4*x5585))+(((-1.0)*cj5*r00*x5575))+((x5571*x5588))+((cj0*x5544))+(((0.135720094919197)*sj3*x5591))+((x5581*x5589))+(((-1.0)*x5582*x5590))+(((-1.0)*cj0*x5584))+((x5575*x5590))+((cj0*x5573))+((x5578*x5588))+(((-1.0)*x5586))+((x5579*x5589))+((x5577*x5587))+(((-1.0)*x5585))+((r02*x5570)));
evalcond[5]=(x5605+x5601+((x5610*x5613))+(((-1.0)*sj0*x5606))+(((-1.0)*x5581*x5612))+((x5608*x5609))+(((-1.0)*x5579*x5611))+(((-1.0)*x5603))+(((-1.0)*x5581*x5611))+(((-1.0)*sj0*x5559))+(((-1.0)*x5608*x5613))+(((-1.0)*x5609*x5610))+(((-1.0)*x5551))+((cj4*x5592))+(((-1.0)*x5592))+(((-1.0)*x5549))+x5599+x5598+x5596+x5594+(((-1.0)*x5579*x5607))+(((-1.0)*x5581*x5607))+(((-1.0)*x5579*x5612))+(((-1.0)*cj4*x5605)));
evalcond[6]=((((0.0098)*sj0))+x5621+x5620+x5622+x5616+x5617+x5615+x5619+(((-1.0)*x5579*x5626))+(((-1.0)*x5579*x5627))+(((-1.0)*x5581*x5624))+(((-1.0)*x5608*x5628))+(((-1.0)*x5614))+(((-1.0)*x5560))+(((-1.0)*x5623))+(((-1.0)*x5610*x5625))+(((-1.0)*cj0*x5606))+((x5608*x5625))+(((-1.0)*x5618))+((x5610*x5628))+(((-1.0)*x5581*x5627))+(((-1.0)*x5581*x5626))+(((-1.0)*x5579*x5624))+(((-1.0)*cj4*x5619)));
evalcond[7]=((((-1.0)*x5629*x5630))+(((-0.0678600949192303)*x5629))+(((-1.0)*cj4*x5632))+((sj0*x5622))+x5633+x5634+x5632+((sj0*x5620))+((sj0*x5615))+(((0.0098)*x5558))+(((-1.0)*x5574*x5635))+((sj0*x5621))+(((-1.0)*sj0*x5560))+((x5576*x5635))+(((-1.0)*cj4*x5633))+(((-1.0)*sj0*x5614))+((sj0*x5616))+(((-1.0)*sj0*x5623))+((sj0*x5617)));
evalcond[8]=(((cj0*x5596))+(((-1.0)*cj0*x5603))+x5634+x5639+(((-1.0)*x5591*x5641))+((cj4*x5636))+(((-1.0)*x5636))+(((-1.0)*cj0*x5551))+(((-1.0)*cj4*x5639))+((cj0*x5594))+((cj0*x5598))+((cj0*x5601))+(((-0.0678600949192303)*x5637))+((cj0*x5599))+(((-0.0098)*x5564))+(((-1.0)*x5630*x5637))+x5640+((r01*sj4*sj5*x5641))+(((-1.0)*cj4*x5640)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5642=((0.250000349687704)*cj1);
IkReal x5643=((0.250000349687704)*sj1);
IkReal x5644=((0.749999650312296)*cj1*cj4);
IkReal x5645=((0.433012903784321)*cj1*cj5);
IkReal x5646=(r01*x5645);
IkReal x5647=((0.433012903784321)*cj1*sj5);
IkReal x5648=(r00*x5647);
IkReal x5649=((0.749999650312296)*cj4*sj1);
IkReal x5650=((0.433012903784321)*cj5*sj1);
IkReal x5651=(r21*x5650);
IkReal x5652=((0.433012903784321)*sj1*sj5);
IkReal x5653=(r20*x5652);
IkReal x5654=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5655=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5656=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5657=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5658=(r21*x5645);
IkReal x5659=(r20*x5647);
IkReal x5660=(r01*x5650);
IkReal x5661=(r00*x5652);
if( IKabs((((cj4*x5651))+((r22*x5649))+((cj4*x5653))+(((-1.0)*r01*x5655))+((r00*x5654))+((cj4*x5646))+((r22*x5643))+((r02*x5642))+(((-1.0)*x5646))+(((-1.0)*x5651))+(((-1.0)*x5653))+(((-1.0)*r21*x5657))+((cj4*x5648))+(((-1.0)*x5648))+((r20*x5656))+((r02*x5644)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x5642))+(((-1.0)*r21*x5655))+(((-1.0)*r00*x5656))+((r20*x5654))+((cj4*x5658))+((r22*x5644))+(((-1.0)*cj4*x5661))+(((-1.0)*r02*x5649))+(((-1.0)*r02*x5643))+((r01*x5657))+(((-1.0)*cj4*x5660))+((cj4*x5659))+(((-1.0)*x5658))+x5661+x5660+(((-1.0)*x5659)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x5651))+((r22*x5649))+((cj4*x5653))+(((-1.0)*r01*x5655))+((r00*x5654))+((cj4*x5646))+((r22*x5643))+((r02*x5642))+(((-1.0)*x5646))+(((-1.0)*x5651))+(((-1.0)*x5653))+(((-1.0)*r21*x5657))+((cj4*x5648))+(((-1.0)*x5648))+((r20*x5656))+((r02*x5644))))+IKsqr((((r22*x5642))+(((-1.0)*r21*x5655))+(((-1.0)*r00*x5656))+((r20*x5654))+((cj4*x5658))+((r22*x5644))+(((-1.0)*cj4*x5661))+(((-1.0)*r02*x5649))+(((-1.0)*r02*x5643))+((r01*x5657))+(((-1.0)*cj4*x5660))+((cj4*x5659))+(((-1.0)*x5658))+x5661+x5660+(((-1.0)*x5659))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x5651))+((r22*x5649))+((cj4*x5653))+(((-1.0)*r01*x5655))+((r00*x5654))+((cj4*x5646))+((r22*x5643))+((r02*x5642))+(((-1.0)*x5646))+(((-1.0)*x5651))+(((-1.0)*x5653))+(((-1.0)*r21*x5657))+((cj4*x5648))+(((-1.0)*x5648))+((r20*x5656))+((r02*x5644))), (((r22*x5642))+(((-1.0)*r21*x5655))+(((-1.0)*r00*x5656))+((r20*x5654))+((cj4*x5658))+((r22*x5644))+(((-1.0)*cj4*x5661))+(((-1.0)*r02*x5649))+(((-1.0)*r02*x5643))+((r01*x5657))+(((-1.0)*cj4*x5660))+((cj4*x5659))+(((-1.0)*x5658))+x5661+x5660+(((-1.0)*x5659))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5662=IKcos(j2);
IkReal x5663=(cj1*x5662);
IkReal x5664=IKsin(j2);
IkReal x5665=(sj1*x5664);
IkReal x5666=(x5665+x5663);
IkReal x5667=((0.749999650312296)*cj4);
IkReal x5668=(cj5*r21);
IkReal x5669=((0.433012903784321)*x5668);
IkReal x5670=(r20*sj5);
IkReal x5671=((0.433012903784321)*x5670);
IkReal x5672=(cj5*r20*sj4);
IkReal x5673=(r21*sj4*sj5);
IkReal x5674=(cj1*x5664);
IkReal x5675=(cj5*r01);
IkReal x5676=((0.433012903784321)*x5675);
IkReal x5677=(r00*sj5);
IkReal x5678=((0.433012903784321)*x5677);
IkReal x5679=(sj1*x5662);
IkReal x5680=(cj5*r00*sj4);
IkReal x5681=(r01*sj4*sj5);
IkReal x5682=((0.0160344678271334)*r22);
IkReal x5683=((0.00925751294893567)*cj4);
IkReal x5684=((0.0160344678271334)*r02);
IkReal x5685=((0.433012903784321)*sj3);
IkReal x5686=(r02*x5685);
IkReal x5687=((0.866025201892125)*cj3*sj4);
IkReal x5688=((0.749999650312296)*sj3);
IkReal x5689=(cj3*cj4*sj5);
IkReal x5690=((1.0)*cj3*cj4*cj5);
IkReal x5691=((0.500000349687582)*cj3*sj4);
IkReal x5692=((0.250000349687704)*cj4*sj3);
IkReal x5693=((0.500000349687582)*sj3);
IkReal x5694=(r22*x5685);
evalcond[0]=(x5671+(((-0.866025201892125)*x5672))+(((0.866025201892125)*x5673))+(((-1.0)*cj4*x5671))+(((-1.0)*r22*x5667))+(((-1.0)*cj4*x5669))+(((-1.0)*(0.250000349687704)*r22))+x5669+x5666);
evalcond[1]=((((-1.0)*r02*x5667))+(((-0.866025201892125)*x5680))+x5678+x5676+x5674+(((-1.0)*cj4*x5678))+(((-1.0)*x5679))+(((0.866025201892125)*x5681))+(((-1.0)*cj4*x5676))+(((-1.0)*(0.250000349687704)*r02)));
evalcond[2]=((((-0.27144)*x5665))+((x5668*x5683))+(((-1.0)*(1.0)*pz))+(((-0.0185150129489311)*x5673))+(((0.0648043305514941)*x5670))+((x5670*x5683))+(((-0.27144)*x5663))+(((0.29)*cj1))+(((0.0648043305514941)*x5668))+((cj4*x5682))+(((-1.0)*x5682))+(((0.0185150129489311)*x5672)));
evalcond[3]=((((-1.0)*(1.0)*px))+((x5677*x5683))+(((-1.0)*(0.29)*sj1))+((x5675*x5683))+(((0.0648043305514941)*x5677))+(((0.0648043305514941)*x5675))+(((-0.0185150129489311)*x5681))+(((0.0185150129489311)*x5680))+((cj4*x5684))+(((0.27144)*x5679))+(((-1.0)*x5684))+(((-0.27144)*x5674)));
evalcond[4]=(((x5675*x5691))+(((-1.0)*r00*x5690))+(((-1.0)*x5681*x5693))+((x5677*x5691))+((r02*x5687))+(((-1.0)*x5686))+((cj4*x5686))+((x5677*x5688))+((x5675*x5692))+((x5677*x5692))+((x5680*x5693))+((r01*x5689))+x5666+((x5675*x5688)));
evalcond[5]=(((x5670*x5691))+(((-1.0)*x5674))+x5679+((x5670*x5688))+((r22*x5687))+((x5672*x5693))+((cj4*x5694))+((x5670*x5692))+((x5668*x5688))+((r21*x5689))+((x5668*x5692))+(((-1.0)*r20*x5690))+(((-1.0)*x5694))+((x5668*x5691))+(((-1.0)*x5673*x5693)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5695=((0.250000349687704)*cj1);
IkReal x5696=((0.250000349687704)*sj1);
IkReal x5697=((0.749999650312296)*cj1*cj4);
IkReal x5698=((0.433012903784321)*cj1*cj5);
IkReal x5699=(r01*x5698);
IkReal x5700=((0.433012903784321)*cj1*sj5);
IkReal x5701=(r00*x5700);
IkReal x5702=((0.749999650312296)*cj4*sj1);
IkReal x5703=((0.433012903784321)*cj5*sj1);
IkReal x5704=(r21*x5703);
IkReal x5705=((0.433012903784321)*sj1*sj5);
IkReal x5706=(r20*x5705);
IkReal x5707=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5708=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5709=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5710=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5711=(r21*x5698);
IkReal x5712=(r20*x5700);
IkReal x5713=(r01*x5703);
IkReal x5714=(r00*x5705);
if( IKabs(((((-1.0)*x5706))+((r22*x5696))+((r22*x5702))+(((-1.0)*cj4*x5699))+((cj4*x5704))+x5699+((r01*x5708))+(((-1.0)*r02*x5697))+(((-1.0)*x5704))+x5701+(((-1.0)*r02*x5695))+(((-1.0)*r00*x5707))+((cj4*x5706))+((r20*x5709))+(((-1.0)*cj4*x5701))+(((-1.0)*r21*x5710)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x5714))+(((-1.0)*x5711))+((cj4*x5712))+((r00*x5709))+((r02*x5702))+(((-1.0)*r21*x5708))+((r22*x5697))+((cj4*x5713))+((cj4*x5714))+((r20*x5707))+(((-1.0)*x5712))+((cj4*x5711))+((r02*x5696))+((r22*x5695))+(((-1.0)*r01*x5710))+(((-1.0)*x5713)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x5706))+((r22*x5696))+((r22*x5702))+(((-1.0)*cj4*x5699))+((cj4*x5704))+x5699+((r01*x5708))+(((-1.0)*r02*x5697))+(((-1.0)*x5704))+x5701+(((-1.0)*r02*x5695))+(((-1.0)*r00*x5707))+((cj4*x5706))+((r20*x5709))+(((-1.0)*cj4*x5701))+(((-1.0)*r21*x5710))))+IKsqr(((((-1.0)*x5714))+(((-1.0)*x5711))+((cj4*x5712))+((r00*x5709))+((r02*x5702))+(((-1.0)*r21*x5708))+((r22*x5697))+((cj4*x5713))+((cj4*x5714))+((r20*x5707))+(((-1.0)*x5712))+((cj4*x5711))+((r02*x5696))+((r22*x5695))+(((-1.0)*r01*x5710))+(((-1.0)*x5713))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x5706))+((r22*x5696))+((r22*x5702))+(((-1.0)*cj4*x5699))+((cj4*x5704))+x5699+((r01*x5708))+(((-1.0)*r02*x5697))+(((-1.0)*x5704))+x5701+(((-1.0)*r02*x5695))+(((-1.0)*r00*x5707))+((cj4*x5706))+((r20*x5709))+(((-1.0)*cj4*x5701))+(((-1.0)*r21*x5710))), ((((-1.0)*x5714))+(((-1.0)*x5711))+((cj4*x5712))+((r00*x5709))+((r02*x5702))+(((-1.0)*r21*x5708))+((r22*x5697))+((cj4*x5713))+((cj4*x5714))+((r20*x5707))+(((-1.0)*x5712))+((cj4*x5711))+((r02*x5696))+((r22*x5695))+(((-1.0)*r01*x5710))+(((-1.0)*x5713))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5715=IKcos(j2);
IkReal x5716=(cj1*x5715);
IkReal x5717=((0.749999650312296)*cj4);
IkReal x5718=(cj5*r21);
IkReal x5719=((0.433012903784321)*x5718);
IkReal x5720=(r20*sj5);
IkReal x5721=((0.433012903784321)*x5720);
IkReal x5722=IKsin(j2);
IkReal x5723=(sj1*x5722);
IkReal x5724=(cj5*r20*sj4);
IkReal x5725=(r21*sj4*sj5);
IkReal x5726=(sj1*x5715);
IkReal x5727=(cj1*x5722);
IkReal x5728=(x5726+(((-1.0)*x5727)));
IkReal x5729=(cj5*r01);
IkReal x5730=((0.433012903784321)*x5729);
IkReal x5731=(r00*sj5);
IkReal x5732=((0.433012903784321)*x5731);
IkReal x5733=(cj5*r00*sj4);
IkReal x5734=(r01*sj4*sj5);
IkReal x5735=((0.0160344678271334)*r22);
IkReal x5736=((0.00925751294893567)*cj4);
IkReal x5737=((0.0160344678271334)*r02);
IkReal x5738=((0.433012903784321)*sj3);
IkReal x5739=(r22*x5738);
IkReal x5740=((0.866025201892125)*cj3*sj4);
IkReal x5741=((0.749999650312296)*sj3);
IkReal x5742=(cj3*cj4*sj5);
IkReal x5743=((1.0)*cj3*cj4*cj5);
IkReal x5744=((0.500000349687582)*cj3*sj4);
IkReal x5745=((0.250000349687704)*cj4*sj3);
IkReal x5746=((0.500000349687582)*sj3);
IkReal x5747=(r02*x5738);
evalcond[0]=((((-1.0)*r22*x5717))+(((-1.0)*cj4*x5721))+(((0.866025201892125)*x5725))+(((-0.866025201892125)*x5724))+x5721+x5723+x5716+x5719+(((-1.0)*cj4*x5719))+(((-1.0)*(0.250000349687704)*r22)));
evalcond[1]=((((-0.866025201892125)*x5733))+(((0.866025201892125)*x5734))+(((-1.0)*cj4*x5732))+x5728+(((-1.0)*r02*x5717))+(((-1.0)*(0.250000349687704)*r02))+x5730+x5732+(((-1.0)*cj4*x5730)));
evalcond[2]=((((-0.27144)*x5723))+(((-1.0)*(1.0)*pz))+((x5720*x5736))+(((-0.27144)*x5716))+(((0.0185150129489311)*x5724))+(((0.29)*cj1))+((cj4*x5735))+(((0.0648043305514941)*x5718))+(((-1.0)*x5735))+(((-0.0185150129489311)*x5725))+(((0.0648043305514941)*x5720))+((x5718*x5736)));
evalcond[3]=((((-1.0)*(1.0)*px))+((cj4*x5737))+(((-0.0185150129489311)*x5734))+(((-0.27144)*x5726))+((x5729*x5736))+(((-1.0)*x5737))+(((0.0648043305514941)*x5729))+(((0.0648043305514941)*x5731))+(((0.27144)*x5727))+(((0.0185150129489311)*x5733))+(((0.29)*sj1))+((x5731*x5736)));
evalcond[4]=((((-1.0)*x5739))+(((-1.0)*x5725*x5746))+((x5718*x5744))+x5728+((r22*x5740))+((x5718*x5741))+((x5720*x5745))+((r21*x5742))+((x5724*x5746))+(((-1.0)*r20*x5743))+((cj4*x5739))+((x5720*x5741))+((x5718*x5745))+((x5720*x5744)));
evalcond[5]=(((x5731*x5745))+((cj4*x5747))+((x5733*x5746))+((x5729*x5744))+(((-1.0)*x5734*x5746))+((x5731*x5741))+((x5731*x5744))+((r02*x5740))+(((-1.0)*x5716))+((x5729*x5741))+(((-1.0)*x5723))+((r01*x5742))+((x5729*x5745))+(((-1.0)*r00*x5743))+(((-1.0)*x5747)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5748=((0.250000349687704)*cj1);
IkReal x5749=((0.250000349687704)*sj1);
IkReal x5750=((0.749999650312296)*cj1*cj4);
IkReal x5751=((0.433012903784321)*cj1*cj5);
IkReal x5752=(r11*x5751);
IkReal x5753=((0.433012903784321)*cj1*sj5);
IkReal x5754=(r10*x5753);
IkReal x5755=((0.749999650312296)*cj4*sj1);
IkReal x5756=((0.433012903784321)*cj5*sj1);
IkReal x5757=(r21*x5756);
IkReal x5758=((0.433012903784321)*sj1*sj5);
IkReal x5759=(r20*x5758);
IkReal x5760=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5761=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5762=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5763=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5764=(r21*x5751);
IkReal x5765=(r20*x5753);
IkReal x5766=(r11*x5756);
IkReal x5767=(r10*x5758);
if( IKabs((((r22*x5749))+((r12*x5750))+((cj4*x5759))+((cj4*x5757))+(((-1.0)*x5759))+(((-1.0)*x5757))+((r20*x5762))+((r12*x5748))+((r10*x5760))+(((-1.0)*r11*x5761))+((r22*x5755))+((cj4*x5754))+((cj4*x5752))+(((-1.0)*x5754))+(((-1.0)*r21*x5763))+(((-1.0)*x5752)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x5748))+((r20*x5760))+(((-1.0)*r12*x5755))+(((-1.0)*cj4*x5766))+x5767+x5766+(((-1.0)*r21*x5761))+(((-1.0)*r12*x5749))+((r11*x5763))+(((-1.0)*x5765))+(((-1.0)*cj4*x5767))+((cj4*x5765))+((r22*x5750))+(((-1.0)*r10*x5762))+((cj4*x5764))+(((-1.0)*x5764)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x5749))+((r12*x5750))+((cj4*x5759))+((cj4*x5757))+(((-1.0)*x5759))+(((-1.0)*x5757))+((r20*x5762))+((r12*x5748))+((r10*x5760))+(((-1.0)*r11*x5761))+((r22*x5755))+((cj4*x5754))+((cj4*x5752))+(((-1.0)*x5754))+(((-1.0)*r21*x5763))+(((-1.0)*x5752))))+IKsqr((((r22*x5748))+((r20*x5760))+(((-1.0)*r12*x5755))+(((-1.0)*cj4*x5766))+x5767+x5766+(((-1.0)*r21*x5761))+(((-1.0)*r12*x5749))+((r11*x5763))+(((-1.0)*x5765))+(((-1.0)*cj4*x5767))+((cj4*x5765))+((r22*x5750))+(((-1.0)*r10*x5762))+((cj4*x5764))+(((-1.0)*x5764))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x5749))+((r12*x5750))+((cj4*x5759))+((cj4*x5757))+(((-1.0)*x5759))+(((-1.0)*x5757))+((r20*x5762))+((r12*x5748))+((r10*x5760))+(((-1.0)*r11*x5761))+((r22*x5755))+((cj4*x5754))+((cj4*x5752))+(((-1.0)*x5754))+(((-1.0)*r21*x5763))+(((-1.0)*x5752))), (((r22*x5748))+((r20*x5760))+(((-1.0)*r12*x5755))+(((-1.0)*cj4*x5766))+x5767+x5766+(((-1.0)*r21*x5761))+(((-1.0)*r12*x5749))+((r11*x5763))+(((-1.0)*x5765))+(((-1.0)*cj4*x5767))+((cj4*x5765))+((r22*x5750))+(((-1.0)*r10*x5762))+((cj4*x5764))+(((-1.0)*x5764))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5768=IKcos(j2);
IkReal x5769=(cj1*x5768);
IkReal x5770=IKsin(j2);
IkReal x5771=(sj1*x5770);
IkReal x5772=(x5769+x5771);
IkReal x5773=((0.749999650312296)*cj4);
IkReal x5774=(cj5*r21);
IkReal x5775=((0.433012903784321)*x5774);
IkReal x5776=(r20*sj5);
IkReal x5777=((0.433012903784321)*x5776);
IkReal x5778=(cj5*r20*sj4);
IkReal x5779=(r21*sj4*sj5);
IkReal x5780=(cj1*x5770);
IkReal x5781=(cj5*r11);
IkReal x5782=((0.433012903784321)*x5781);
IkReal x5783=(r10*sj5);
IkReal x5784=((0.433012903784321)*x5783);
IkReal x5785=(sj1*x5768);
IkReal x5786=(cj5*r10*sj4);
IkReal x5787=(r11*sj4*sj5);
IkReal x5788=((0.0160344678271334)*r22);
IkReal x5789=((0.00925751294893567)*cj4);
IkReal x5790=((0.0160344678271334)*r12);
IkReal x5791=((0.433012903784321)*sj3);
IkReal x5792=(r12*x5791);
IkReal x5793=((0.866025201892125)*cj3*sj4);
IkReal x5794=((0.749999650312296)*sj3);
IkReal x5795=(cj3*cj4*sj5);
IkReal x5796=((1.0)*cj3*cj4*cj5);
IkReal x5797=((0.500000349687582)*cj3*sj4);
IkReal x5798=((0.250000349687704)*cj4*sj3);
IkReal x5799=((0.500000349687582)*sj3);
IkReal x5800=(r22*x5791);
evalcond[0]=((((-1.0)*cj4*x5775))+(((0.866025201892125)*x5779))+(((-1.0)*r22*x5773))+x5772+x5777+x5775+(((-0.866025201892125)*x5778))+(((-1.0)*(0.250000349687704)*r22))+(((-1.0)*cj4*x5777)));
evalcond[1]=((((-1.0)*cj4*x5784))+(((0.866025201892125)*x5787))+(((-1.0)*(0.250000349687704)*r12))+x5782+x5784+x5780+(((-1.0)*x5785))+(((-1.0)*cj4*x5782))+(((-0.866025201892125)*x5786))+(((-1.0)*r12*x5773)));
evalcond[2]=((((0.0185150129489311)*x5778))+(((-1.0)*(1.0)*pz))+(((0.0648043305514941)*x5774))+(((-1.0)*x5788))+(((0.29)*cj1))+((cj4*x5788))+(((0.0648043305514941)*x5776))+((x5776*x5789))+(((-0.0185150129489311)*x5779))+((x5774*x5789))+(((-0.27144)*x5771))+(((-0.27144)*x5769)));
evalcond[3]=((((-1.0)*(1.0)*py))+(((-1.0)*(0.29)*sj1))+(((0.0185150129489311)*x5786))+((cj4*x5790))+(((-1.0)*x5790))+((x5781*x5789))+(((-0.0185150129489311)*x5787))+(((0.0648043305514941)*x5781))+((x5783*x5789))+(((0.0648043305514941)*x5783))+(((0.27144)*x5785))+(((-0.27144)*x5780)));
evalcond[4]=(((x5783*x5794))+((r12*x5793))+((x5781*x5794))+((r11*x5795))+((x5783*x5797))+x5772+((x5786*x5799))+(((-1.0)*r10*x5796))+((cj4*x5792))+(((-1.0)*x5792))+(((-1.0)*x5787*x5799))+((x5781*x5797))+((x5783*x5798))+((x5781*x5798)));
evalcond[5]=(((x5774*x5797))+((x5774*x5798))+((x5776*x5794))+x5785+((r21*x5795))+(((-1.0)*x5780))+((x5774*x5794))+((x5776*x5798))+((cj4*x5800))+((x5776*x5797))+(((-1.0)*x5800))+(((-1.0)*r20*x5796))+((x5778*x5799))+(((-1.0)*x5779*x5799))+((r22*x5793)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5801=((0.250000349687704)*cj1);
IkReal x5802=((0.250000349687704)*sj1);
IkReal x5803=((0.749999650312296)*cj1*cj4);
IkReal x5804=((0.433012903784321)*cj1*cj5);
IkReal x5805=(r11*x5804);
IkReal x5806=((0.433012903784321)*cj1*sj5);
IkReal x5807=(r10*x5806);
IkReal x5808=((0.749999650312296)*cj4*sj1);
IkReal x5809=((0.433012903784321)*cj5*sj1);
IkReal x5810=(r21*x5809);
IkReal x5811=((0.433012903784321)*sj1*sj5);
IkReal x5812=(r20*x5811);
IkReal x5813=((0.866025201892125)*cj1*cj5*sj4);
IkReal x5814=((0.866025201892125)*cj1*sj4*sj5);
IkReal x5815=((0.866025201892125)*cj5*sj1*sj4);
IkReal x5816=((0.866025201892125)*sj1*sj4*sj5);
IkReal x5817=(r21*x5804);
IkReal x5818=(r20*x5806);
IkReal x5819=(r11*x5809);
IkReal x5820=(r10*x5811);
if( IKabs((((cj4*x5812))+(((-1.0)*x5810))+(((-1.0)*cj4*x5807))+(((-1.0)*x5812))+((r22*x5802))+((r20*x5815))+(((-1.0)*cj4*x5805))+(((-1.0)*r12*x5803))+((r22*x5808))+(((-1.0)*r10*x5813))+((r11*x5814))+(((-1.0)*r12*x5801))+((cj4*x5810))+(((-1.0)*r21*x5816))+x5807+x5805)) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x5813))+(((-1.0)*r21*x5814))+((r10*x5815))+((r22*x5803))+((r12*x5802))+(((-1.0)*r11*x5816))+((cj4*x5818))+((cj4*x5817))+((cj4*x5819))+((r12*x5808))+(((-1.0)*x5818))+(((-1.0)*x5817))+(((-1.0)*x5819))+(((-1.0)*x5820))+((r22*x5801))+((cj4*x5820)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x5812))+(((-1.0)*x5810))+(((-1.0)*cj4*x5807))+(((-1.0)*x5812))+((r22*x5802))+((r20*x5815))+(((-1.0)*cj4*x5805))+(((-1.0)*r12*x5803))+((r22*x5808))+(((-1.0)*r10*x5813))+((r11*x5814))+(((-1.0)*r12*x5801))+((cj4*x5810))+(((-1.0)*r21*x5816))+x5807+x5805))+IKsqr((((r20*x5813))+(((-1.0)*r21*x5814))+((r10*x5815))+((r22*x5803))+((r12*x5802))+(((-1.0)*r11*x5816))+((cj4*x5818))+((cj4*x5817))+((cj4*x5819))+((r12*x5808))+(((-1.0)*x5818))+(((-1.0)*x5817))+(((-1.0)*x5819))+(((-1.0)*x5820))+((r22*x5801))+((cj4*x5820))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x5812))+(((-1.0)*x5810))+(((-1.0)*cj4*x5807))+(((-1.0)*x5812))+((r22*x5802))+((r20*x5815))+(((-1.0)*cj4*x5805))+(((-1.0)*r12*x5803))+((r22*x5808))+(((-1.0)*r10*x5813))+((r11*x5814))+(((-1.0)*r12*x5801))+((cj4*x5810))+(((-1.0)*r21*x5816))+x5807+x5805), (((r20*x5813))+(((-1.0)*r21*x5814))+((r10*x5815))+((r22*x5803))+((r12*x5802))+(((-1.0)*r11*x5816))+((cj4*x5818))+((cj4*x5817))+((cj4*x5819))+((r12*x5808))+(((-1.0)*x5818))+(((-1.0)*x5817))+(((-1.0)*x5819))+(((-1.0)*x5820))+((r22*x5801))+((cj4*x5820))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5821=IKcos(j2);
IkReal x5822=(cj1*x5821);
IkReal x5823=((0.749999650312296)*cj4);
IkReal x5824=(cj5*r21);
IkReal x5825=((0.433012903784321)*x5824);
IkReal x5826=(r20*sj5);
IkReal x5827=((0.433012903784321)*x5826);
IkReal x5828=IKsin(j2);
IkReal x5829=(sj1*x5828);
IkReal x5830=(cj5*r20*sj4);
IkReal x5831=(r21*sj4*sj5);
IkReal x5832=(sj1*x5821);
IkReal x5833=(cj1*x5828);
IkReal x5834=((((-1.0)*x5833))+x5832);
IkReal x5835=(cj5*r11);
IkReal x5836=((0.433012903784321)*x5835);
IkReal x5837=(r10*sj5);
IkReal x5838=((0.433012903784321)*x5837);
IkReal x5839=(cj5*r10*sj4);
IkReal x5840=(r11*sj4*sj5);
IkReal x5841=((0.0160344678271334)*r22);
IkReal x5842=((0.00925751294893567)*cj4);
IkReal x5843=((0.0160344678271334)*r12);
IkReal x5844=((0.433012903784321)*sj3);
IkReal x5845=(r22*x5844);
IkReal x5846=((0.866025201892125)*cj3*sj4);
IkReal x5847=((0.749999650312296)*sj3);
IkReal x5848=(cj3*cj4*sj5);
IkReal x5849=((1.0)*cj3*cj4*cj5);
IkReal x5850=((0.500000349687582)*cj3*sj4);
IkReal x5851=((0.250000349687704)*cj4*sj3);
IkReal x5852=((0.500000349687582)*sj3);
IkReal x5853=(r12*x5844);
evalcond[0]=((((0.866025201892125)*x5831))+(((-1.0)*r22*x5823))+(((-1.0)*(0.250000349687704)*r22))+(((-0.866025201892125)*x5830))+(((-1.0)*cj4*x5827))+x5829+x5827+x5822+x5825+(((-1.0)*cj4*x5825)));
evalcond[1]=((((-1.0)*cj4*x5836))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x5823))+(((-1.0)*cj4*x5838))+(((0.866025201892125)*x5840))+(((-0.866025201892125)*x5839))+x5838+x5834+x5836);
evalcond[2]=((((0.0185150129489311)*x5830))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x5829))+(((-0.0185150129489311)*x5831))+(((-1.0)*x5841))+(((0.29)*cj1))+((x5826*x5842))+(((-0.27144)*x5822))+((x5824*x5842))+(((0.0648043305514941)*x5824))+(((0.0648043305514941)*x5826))+((cj4*x5841)));
evalcond[3]=((((0.27144)*x5833))+(((0.0648043305514941)*x5835))+(((0.0185150129489311)*x5839))+(((-1.0)*(1.0)*py))+((x5837*x5842))+(((-1.0)*x5843))+(((-0.27144)*x5832))+(((-0.0185150129489311)*x5840))+((x5835*x5842))+((cj4*x5843))+(((0.0648043305514941)*x5837))+(((0.29)*sj1)));
evalcond[4]=(((x5824*x5850))+((r22*x5846))+((x5826*x5851))+(((-1.0)*r20*x5849))+((x5826*x5847))+((x5826*x5850))+((cj4*x5845))+((r21*x5848))+((x5830*x5852))+(((-1.0)*x5831*x5852))+((x5824*x5847))+((x5824*x5851))+(((-1.0)*x5845))+x5834);
evalcond[5]=(((x5837*x5847))+(((-1.0)*x5822))+((x5835*x5850))+((r12*x5846))+(((-1.0)*x5840*x5852))+(((-1.0)*x5829))+((x5835*x5851))+((x5837*x5851))+((x5835*x5847))+(((-1.0)*x5853))+((x5837*x5850))+((r11*x5848))+((cj4*x5853))+(((-1.0)*r10*x5849))+((x5839*x5852)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5854=((0.250000349687704)*r12);
IkReal x5855=((0.749999650312296)*cj4*r12);
IkReal x5856=((0.433012903784321)*cj1);
IkReal x5857=(cj5*r11);
IkReal x5858=(x5856*x5857);
IkReal x5859=(r10*sj5);
IkReal x5860=(x5856*x5859);
IkReal x5861=((0.250000349687704)*r22*sj0);
IkReal x5862=(cj5*r10);
IkReal x5863=((0.866025201892125)*cj1*sj4);
IkReal x5864=(r11*sj5);
IkReal x5865=((0.749999650312296)*cj4*r22*sj0);
IkReal x5866=(cj5*r21);
IkReal x5867=((0.433012903784321)*sj0*sj1);
IkReal x5868=(x5866*x5867);
IkReal x5869=(r20*sj5);
IkReal x5870=(x5867*x5869);
IkReal x5871=(cj5*r20);
IkReal x5872=((0.866025201892125)*sj0*sj1*sj4);
IkReal x5873=(r21*sj5);
IkReal x5874=((0.433012903784321)*sj1);
IkReal x5875=(x5857*x5874);
IkReal x5876=(x5859*x5874);
IkReal x5877=((0.433012903784321)*cj1*sj0);
IkReal x5878=(x5866*x5877);
IkReal x5879=(x5869*x5877);
IkReal x5880=((0.866025201892125)*sj1*sj4);
IkReal x5881=((0.866025201892125)*cj1*sj0*sj4);
CheckValue<IkReal> x5882 = IKatan2WithCheck(IkReal((((sj1*x5861))+(((-1.0)*x5872*x5873))+(((-1.0)*x5860))+((cj4*x5870))+(((-1.0)*x5870))+((sj1*x5865))+((cj1*x5854))+((cj4*x5868))+((x5862*x5863))+((cj4*x5860))+((cj1*x5855))+(((-1.0)*x5858))+((cj4*x5858))+(((-1.0)*x5863*x5864))+(((-1.0)*x5868))+((x5871*x5872)))),IkReal((((x5871*x5881))+(((-1.0)*x5873*x5881))+(((-1.0)*sj1*x5854))+((cj1*x5861))+x5876+x5875+(((-1.0)*cj4*x5876))+(((-1.0)*cj4*x5875))+((cj4*x5879))+(((-1.0)*x5879))+(((-1.0)*x5878))+((cj4*x5878))+((cj1*x5865))+((x5864*x5880))+(((-1.0)*x5862*x5880))+(((-1.0)*sj1*x5855)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5882.valid){
continue;
}
CheckValue<IkReal> x5883=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x5883.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x5882.value)+(((1.5707963267949)*(x5883.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x5884=IKcos(j2);
IkReal x5885=(cj1*x5884);
IkReal x5886=((0.749999650312296)*cj4);
IkReal x5887=(cj5*r21);
IkReal x5888=((0.433012903784321)*x5887);
IkReal x5889=(r20*sj5);
IkReal x5890=((0.433012903784321)*x5889);
IkReal x5891=IKsin(j2);
IkReal x5892=(sj1*x5891);
IkReal x5893=(cj5*r20*sj4);
IkReal x5894=(r21*sj4*sj5);
IkReal x5895=(cj5*r01);
IkReal x5896=((0.433012903784321)*x5895);
IkReal x5897=(r00*sj5);
IkReal x5898=((0.433012903784321)*x5897);
IkReal x5899=(cj1*x5891);
IkReal x5900=(cj0*x5899);
IkReal x5901=(cj5*r00*sj4);
IkReal x5902=(r01*sj4*sj5);
IkReal x5903=(cj0*sj1*x5884);
IkReal x5904=(cj5*r11);
IkReal x5905=((0.433012903784321)*x5904);
IkReal x5906=(r10*sj5);
IkReal x5907=((0.433012903784321)*x5906);
IkReal x5908=(sj0*x5899);
IkReal x5909=(cj5*r10*sj4);
IkReal x5910=(r11*sj4*sj5);
IkReal x5911=(sj0*sj1*x5884);
IkReal x5912=((0.0160344678271334)*r22);
IkReal x5913=((0.00925751294893567)*cj4);
IkReal x5914=((0.0160344678271334)*r02);
IkReal x5915=((0.29)*sj1);
IkReal x5916=((0.0160344678271334)*r12);
IkReal x5917=((0.433012903784321)*sj3);
IkReal x5918=(r22*x5917);
IkReal x5919=((0.866025201892125)*cj3*sj4);
IkReal x5920=((0.749999650312296)*sj3);
IkReal x5921=(cj3*cj4*sj5);
IkReal x5922=((1.0)*cj3*cj4*cj5);
IkReal x5923=((0.500000349687582)*cj3*sj4);
IkReal x5924=((0.250000349687704)*cj4*sj3);
IkReal x5925=((0.500000349687582)*sj3);
IkReal x5926=(r02*x5917);
IkReal x5927=(r12*x5917);
evalcond[0]=((((-1.0)*cj4*x5890))+(((-1.0)*cj4*x5888))+x5888+x5885+(((0.866025201892125)*x5894))+(((-1.0)*r22*x5886))+(((-1.0)*(0.250000349687704)*r22))+x5892+x5890+(((-0.866025201892125)*x5893)));
evalcond[1]=(x5900+(((-1.0)*cj4*x5898))+(((-1.0)*x5903))+(((-1.0)*cj4*x5896))+(((0.866025201892125)*x5902))+(((-1.0)*r02*x5886))+(((-0.866025201892125)*x5901))+(((-1.0)*(0.250000349687704)*r02))+x5898+x5896);
evalcond[2]=((((-0.866025201892125)*x5909))+x5908+x5905+x5907+(((0.866025201892125)*x5910))+(((-1.0)*cj4*x5907))+(((-1.0)*(0.250000349687704)*r12))+(((-1.0)*r12*x5886))+(((-1.0)*cj4*x5905))+(((-1.0)*x5911)));
evalcond[3]=((((-0.27144)*x5892))+(((-0.0185150129489311)*x5894))+((x5889*x5913))+(((0.0648043305514941)*x5887))+(((0.0185150129489311)*x5893))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x5885))+(((0.0648043305514941)*x5889))+(((0.29)*cj1))+((cj4*x5912))+(((-1.0)*x5912))+((x5887*x5913)));
evalcond[4]=((((-1.0)*(1.0)*px))+(((0.0185150129489311)*x5901))+((cj4*x5914))+(((-1.0)*x5914))+(((0.0098)*sj0))+((x5897*x5913))+(((-0.0185150129489311)*x5902))+(((0.0648043305514941)*x5897))+(((0.27144)*x5903))+(((-1.0)*cj0*x5915))+(((0.0648043305514941)*x5895))+(((-0.27144)*x5900))+((x5895*x5913)));
evalcond[5]=((((-1.0)*(1.0)*py))+(((-0.27144)*x5908))+((cj4*x5916))+(((-1.0)*x5916))+(((0.27144)*x5911))+(((0.0185150129489311)*x5909))+(((0.0648043305514941)*x5906))+(((0.0648043305514941)*x5904))+((x5906*x5913))+(((-1.0)*(0.0098)*cj0))+(((-0.0185150129489311)*x5910))+((x5904*x5913))+(((-1.0)*sj0*x5915)));
evalcond[6]=(((r22*x5919))+((x5887*x5920))+((x5887*x5923))+(((-1.0)*x5899))+(((-1.0)*r20*x5922))+((r21*x5921))+((cj4*x5918))+((x5889*x5920))+(((-1.0)*x5918))+(((-1.0)*x5894*x5925))+((x5889*x5924))+((x5887*x5924))+((sj1*x5884))+((x5893*x5925))+((x5889*x5923)));
evalcond[7]=(((x5897*x5924))+((cj0*x5885))+((x5897*x5920))+(((-1.0)*x5926))+((r02*x5919))+((r01*x5921))+((cj0*x5892))+((x5895*x5924))+(((-1.0)*r00*x5922))+(((-1.0)*x5902*x5925))+((x5901*x5925))+((x5897*x5923))+((x5895*x5920))+((cj4*x5926))+((x5895*x5923)));
evalcond[8]=(((x5904*x5920))+((sj0*x5885))+(((-1.0)*x5927))+((r11*x5921))+((r12*x5919))+((x5909*x5925))+((x5904*x5923))+(((-1.0)*r10*x5922))+((sj0*x5892))+((x5906*x5923))+((cj4*x5927))+((x5906*x5920))+(((-1.0)*x5910*x5925))+((x5904*x5924))+((x5906*x5924)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5928=((0.250000349687704)*r02);
IkReal x5929=((0.250000349687704)*cj0*r22);
IkReal x5930=((0.749999650312296)*cj4*r02);
IkReal x5931=((0.433012903784321)*cj1);
IkReal x5932=(cj5*r01);
IkReal x5933=(x5931*x5932);
IkReal x5934=(r00*sj5);
IkReal x5935=(x5931*x5934);
IkReal x5936=((0.749999650312296)*cj0*cj4*r22);
IkReal x5937=(cj5*r21);
IkReal x5938=((0.433012903784321)*cj0*sj1);
IkReal x5939=(x5937*x5938);
IkReal x5940=(r20*sj5);
IkReal x5941=(x5938*x5940);
IkReal x5942=(cj5*r00);
IkReal x5943=((0.866025201892125)*cj1*sj4);
IkReal x5944=(r01*sj5);
IkReal x5945=(cj5*r20);
IkReal x5946=((0.866025201892125)*cj0*sj1*sj4);
IkReal x5947=(r21*sj5);
IkReal x5948=((0.433012903784321)*sj1);
IkReal x5949=(x5932*x5948);
IkReal x5950=(x5934*x5948);
IkReal x5951=((0.433012903784321)*cj0*cj1);
IkReal x5952=(x5937*x5951);
IkReal x5953=(x5940*x5951);
IkReal x5954=((0.866025201892125)*sj1*sj4);
IkReal x5955=((0.866025201892125)*cj0*cj1*sj4);
CheckValue<IkReal> x5956 = IKatan2WithCheck(IkReal(((((-1.0)*x5943*x5944))+(((-1.0)*x5939))+((cj4*x5935))+((x5942*x5943))+(((-1.0)*x5935))+(((-1.0)*x5946*x5947))+((sj1*x5936))+((cj1*x5928))+((sj1*x5929))+((x5945*x5946))+((cj4*x5933))+((cj1*x5930))+(((-1.0)*x5941))+((cj4*x5941))+(((-1.0)*x5933))+((cj4*x5939)))),IkReal((((x5945*x5955))+((cj1*x5936))+((cj4*x5953))+(((-1.0)*cj4*x5949))+(((-1.0)*x5942*x5954))+((x5944*x5954))+((cj1*x5929))+(((-1.0)*x5952))+(((-1.0)*x5947*x5955))+x5949+(((-1.0)*sj1*x5928))+(((-1.0)*x5953))+x5950+((cj4*x5952))+(((-1.0)*sj1*x5930))+(((-1.0)*cj4*x5950)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5956.valid){
continue;
}
CheckValue<IkReal> x5957=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x5957.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x5956.value)+(((1.5707963267949)*(x5957.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x5958=IKcos(j2);
IkReal x5959=(cj1*x5958);
IkReal x5960=((0.749999650312296)*cj4);
IkReal x5961=(cj5*r21);
IkReal x5962=((0.433012903784321)*x5961);
IkReal x5963=(r20*sj5);
IkReal x5964=((0.433012903784321)*x5963);
IkReal x5965=IKsin(j2);
IkReal x5966=(sj1*x5965);
IkReal x5967=(cj5*r20*sj4);
IkReal x5968=(r21*sj4*sj5);
IkReal x5969=(cj5*r01);
IkReal x5970=((0.433012903784321)*x5969);
IkReal x5971=(r00*sj5);
IkReal x5972=((0.433012903784321)*x5971);
IkReal x5973=(cj1*x5965);
IkReal x5974=(cj0*x5973);
IkReal x5975=(cj5*r00*sj4);
IkReal x5976=(r01*sj4*sj5);
IkReal x5977=(cj0*sj1*x5958);
IkReal x5978=(cj5*r11);
IkReal x5979=((0.433012903784321)*x5978);
IkReal x5980=(r10*sj5);
IkReal x5981=((0.433012903784321)*x5980);
IkReal x5982=(sj0*x5973);
IkReal x5983=(cj5*r10*sj4);
IkReal x5984=(r11*sj4*sj5);
IkReal x5985=(sj0*sj1*x5958);
IkReal x5986=((0.0160344678271334)*r22);
IkReal x5987=((0.00925751294893567)*cj4);
IkReal x5988=((0.0160344678271334)*r02);
IkReal x5989=((0.29)*sj1);
IkReal x5990=((0.0160344678271334)*r12);
IkReal x5991=((0.433012903784321)*sj3);
IkReal x5992=(r22*x5991);
IkReal x5993=((0.866025201892125)*cj3*sj4);
IkReal x5994=((0.749999650312296)*sj3);
IkReal x5995=(cj3*cj4*sj5);
IkReal x5996=((1.0)*cj3*cj4*cj5);
IkReal x5997=((0.500000349687582)*cj3*sj4);
IkReal x5998=((0.250000349687704)*cj4*sj3);
IkReal x5999=((0.500000349687582)*sj3);
IkReal x6000=(r02*x5991);
IkReal x6001=(r12*x5991);
evalcond[0]=((((0.866025201892125)*x5968))+x5962+x5966+x5964+(((-1.0)*cj4*x5962))+(((-1.0)*r22*x5960))+x5959+(((-1.0)*(0.250000349687704)*r22))+(((-0.866025201892125)*x5967))+(((-1.0)*cj4*x5964)));
evalcond[1]=((((-0.866025201892125)*x5975))+(((-1.0)*cj4*x5970))+(((-1.0)*x5977))+(((-1.0)*r02*x5960))+x5974+x5972+x5970+(((0.866025201892125)*x5976))+(((-1.0)*(0.250000349687704)*r02))+(((-1.0)*cj4*x5972)));
evalcond[2]=((((-0.866025201892125)*x5983))+(((-1.0)*(0.250000349687704)*r12))+(((0.866025201892125)*x5984))+x5979+x5982+x5981+(((-1.0)*cj4*x5981))+(((-1.0)*x5985))+(((-1.0)*cj4*x5979))+(((-1.0)*r12*x5960)));
evalcond[3]=((((0.0648043305514941)*x5963))+(((-0.27144)*x5959))+(((-1.0)*(1.0)*pz))+(((-0.27144)*x5966))+((x5961*x5987))+(((0.0185150129489311)*x5967))+((cj4*x5986))+(((-0.0185150129489311)*x5968))+(((0.29)*cj1))+(((-1.0)*x5986))+(((0.0648043305514941)*x5961))+((x5963*x5987)));
evalcond[4]=((((-1.0)*(1.0)*px))+(((0.0098)*sj0))+(((0.27144)*x5977))+(((0.0185150129489311)*x5975))+(((-1.0)*cj0*x5989))+((cj4*x5988))+((x5969*x5987))+(((-0.0185150129489311)*x5976))+(((0.0648043305514941)*x5971))+(((-1.0)*x5988))+(((0.0648043305514941)*x5969))+(((-0.27144)*x5974))+((x5971*x5987)));
evalcond[5]=(((cj4*x5990))+(((-1.0)*(1.0)*py))+(((0.27144)*x5985))+(((0.0185150129489311)*x5983))+(((-1.0)*x5990))+(((-1.0)*sj0*x5989))+(((-0.27144)*x5982))+(((-0.0185150129489311)*x5984))+(((0.0648043305514941)*x5978))+((x5978*x5987))+((x5980*x5987))+(((-1.0)*(0.0098)*cj0))+(((0.0648043305514941)*x5980)));
evalcond[6]=((((-1.0)*x5973))+(((-1.0)*x5992))+((x5961*x5997))+((x5963*x5998))+((x5967*x5999))+((x5963*x5997))+((x5961*x5998))+((x5963*x5994))+(((-1.0)*x5968*x5999))+((x5961*x5994))+((r22*x5993))+((sj1*x5958))+((cj4*x5992))+((r21*x5995))+(((-1.0)*r20*x5996)));
evalcond[7]=(((x5969*x5998))+((x5971*x5994))+((x5975*x5999))+(((-1.0)*x6000))+((cj4*x6000))+(((-1.0)*r00*x5996))+((cj0*x5959))+((cj0*x5966))+((x5969*x5997))+((x5971*x5997))+((x5969*x5994))+((x5971*x5998))+((r02*x5993))+(((-1.0)*x5976*x5999))+((r01*x5995)));
evalcond[8]=((((-1.0)*x5984*x5999))+((x5978*x5998))+((x5980*x5997))+((x5983*x5999))+((sj0*x5959))+((x5980*x5994))+((sj0*x5966))+((cj4*x6001))+(((-1.0)*x6001))+((r12*x5993))+((x5978*x5997))+(((-1.0)*r10*x5996))+((x5980*x5998))+((x5978*x5994))+((r11*x5995)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}
// [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1)] (original are [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)])
static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    // HACK should be 1e-5*norm
    IkReal tol = 1e-2*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        // HACK should be tol*100
        if( IKabs(wi[i]) < 5e-5 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - m1n6s300 (990eb25a3f67d408502e977a054f4a68)>"; }

IKFAST_API const char* GetIkFastVersion() { return "0x10000049"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
